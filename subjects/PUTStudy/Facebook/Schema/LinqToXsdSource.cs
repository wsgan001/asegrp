//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace facebook.Schema {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.IO;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Linq;
    using Microsoft.Xml.Schema.Linq;
    
    
    /// <summary>
    /// <para>
    /// Regular expression: (connect_registerUsers_response_elt*)*
    /// </para>
    /// </summary>
    public partial class connect_registerUsers_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XSimpleList<string> connect_registerUsers_response_eltField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator connect_registerUsers_response(XElement xe) { return XTypedServices.ToXTypedElement<connect_registerUsers_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static connect_registerUsers_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (connect_registerUsers_response_elt*)*
        /// </para>
        /// </summary>
        public connect_registerUsers_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (connect_registerUsers_response_elt*)*
        /// </para>
        /// </summary>
        public IList<string> connect_registerUsers_response_elt {
            get {
                if ((this.connect_registerUsers_response_eltField == null)) {
                    this.connect_registerUsers_response_eltField = new XSimpleList<string>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, XName.Get("connect_registerUsers_response_elt", "http://api.facebook.com/1.0/"));
                }
                return this.connect_registerUsers_response_eltField;
            }
            set {
                if ((value == null)) {
                    this.connect_registerUsers_response_eltField = null;
                }
                else {
                    if ((this.connect_registerUsers_response_eltField == null)) {
                        this.connect_registerUsers_response_eltField = XSimpleList<string>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, value, XName.Get("connect_registerUsers_response_elt", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<System.String>(this.connect_registerUsers_response_eltField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("connect_registerUsers_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static connect_registerUsers_response Load(string xmlFile) {
            return XTypedServices.Load<connect_registerUsers_response>(xmlFile);
        }
        
        public static connect_registerUsers_response Parse(string xml) {
            return XTypedServices.Parse<connect_registerUsers_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<connect_registerUsers_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("connect_registerUsers_response_elt", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (connect_unregisterUsers_response_elt*)*
    /// </para>
    /// </summary>
    public partial class connect_unregisterUsers_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XSimpleList<string> connect_unregisterUsers_response_eltField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator connect_unregisterUsers_response(XElement xe) { return XTypedServices.ToXTypedElement<connect_unregisterUsers_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static connect_unregisterUsers_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (connect_unregisterUsers_response_elt*)*
        /// </para>
        /// </summary>
        public connect_unregisterUsers_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (connect_unregisterUsers_response_elt*)*
        /// </para>
        /// </summary>
        public IList<string> connect_unregisterUsers_response_elt {
            get {
                if ((this.connect_unregisterUsers_response_eltField == null)) {
                    this.connect_unregisterUsers_response_eltField = new XSimpleList<string>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, XName.Get("connect_unregisterUsers_response_elt", "http://api.facebook.com/1.0/"));
                }
                return this.connect_unregisterUsers_response_eltField;
            }
            set {
                if ((value == null)) {
                    this.connect_unregisterUsers_response_eltField = null;
                }
                else {
                    if ((this.connect_unregisterUsers_response_eltField == null)) {
                        this.connect_unregisterUsers_response_eltField = XSimpleList<string>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, value, XName.Get("connect_unregisterUsers_response_elt", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<System.String>(this.connect_unregisterUsers_response_eltField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("connect_unregisterUsers_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static connect_unregisterUsers_response Load(string xmlFile) {
            return XTypedServices.Load<connect_unregisterUsers_response>(xmlFile);
        }
        
        public static connect_unregisterUsers_response Parse(string xml) {
            return XTypedServices.Parse<connect_unregisterUsers_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<connect_unregisterUsers_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("connect_unregisterUsers_response_elt", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (facebookevent*)*
    /// </para>
    /// </summary>
    public partial class events_get_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<facebookevent> facebookeventField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator events_get_response(XElement xe) { return XTypedServices.ToXTypedElement<events_get_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static events_get_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (facebookevent*)*
        /// </para>
        /// </summary>
        public events_get_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (facebookevent*)*
        /// </para>
        /// </summary>
        public IList<facebookevent> facebookevent {
            get {
                if ((this.facebookeventField == null)) {
                    this.facebookeventField = new XTypedList<facebookevent>(this, LinqToXsdTypeManager.Instance, XName.Get("event", "http://api.facebook.com/1.0/"));
                }
                return this.facebookeventField;
            }
            set {
                if ((value == null)) {
                    this.facebookeventField = null;
                }
                else {
                    if ((this.facebookeventField == null)) {
                        this.facebookeventField = XTypedList<facebookevent>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("event", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<facebookevent>(this.facebookeventField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("events_get_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static events_get_response Load(string xmlFile) {
            return XTypedServices.Load<events_get_response>(xmlFile);
        }
        
        public static events_get_response Parse(string xml) {
            return XTypedServices.Parse<events_get_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<events_get_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("event", "http://api.facebook.com/1.0/"), typeof(facebookevent));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (friend_info*)*
    /// </para>
    /// </summary>
    public partial class friends_areFriends_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<friend_info> friend_infoField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator friends_areFriends_response(XElement xe) { return XTypedServices.ToXTypedElement<friends_areFriends_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static friends_areFriends_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (friend_info*)*
        /// </para>
        /// </summary>
        public friends_areFriends_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (friend_info*)*
        /// </para>
        /// </summary>
        public IList<friend_info> friend_info {
            get {
                if ((this.friend_infoField == null)) {
                    this.friend_infoField = new XTypedList<friend_info>(this, LinqToXsdTypeManager.Instance, XName.Get("friend_info", "http://api.facebook.com/1.0/"));
                }
                return this.friend_infoField;
            }
            set {
                if ((value == null)) {
                    this.friend_infoField = null;
                }
                else {
                    if ((this.friend_infoField == null)) {
                        this.friend_infoField = XTypedList<friend_info>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("friend_info", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<friend_info>(this.friend_infoField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("friends_areFriends_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static friends_areFriends_response Load(string xmlFile) {
            return XTypedServices.Load<friends_areFriends_response>(xmlFile);
        }
        
        public static friends_areFriends_response Parse(string xml) {
            return XTypedServices.Parse<friends_areFriends_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<friends_areFriends_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("friend_info", "http://api.facebook.com/1.0/"), typeof(friend_info));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (uid*)*
    /// </para>
    /// </summary>
    public partial class friends_get_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XSimpleList<long> uidField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator friends_get_response(XElement xe) { return XTypedServices.ToXTypedElement<friends_get_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static friends_get_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (uid*)*
        /// </para>
        /// </summary>
        public friends_get_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (uid*)*
        /// </para>
        /// </summary>
        public IList<long> uid {
            get {
                if ((this.uidField == null)) {
                    this.uidField = new XSimpleList<long>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, XName.Get("uid", "http://api.facebook.com/1.0/"));
                }
                return this.uidField;
            }
            set {
                if ((value == null)) {
                    this.uidField = null;
                }
                else {
                    if ((this.uidField == null)) {
                        this.uidField = XSimpleList<long>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, value, XName.Get("uid", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<System.Int64>(this.uidField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("friends_get_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static friends_get_response Load(string xmlFile) {
            return XTypedServices.Load<friends_get_response>(xmlFile);
        }
        
        public static friends_get_response Parse(string xml) {
            return XTypedServices.Parse<friends_get_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<friends_get_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("uid", "http://api.facebook.com/1.0/"), typeof(long));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (uid*)*
    /// </para>
    /// </summary>
    public partial class friends_getAppUsers_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XSimpleList<long> uidField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator friends_getAppUsers_response(XElement xe) { return XTypedServices.ToXTypedElement<friends_getAppUsers_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static friends_getAppUsers_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (uid*)*
        /// </para>
        /// </summary>
        public friends_getAppUsers_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (uid*)*
        /// </para>
        /// </summary>
        public IList<long> uid {
            get {
                if ((this.uidField == null)) {
                    this.uidField = new XSimpleList<long>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, XName.Get("uid", "http://api.facebook.com/1.0/"));
                }
                return this.uidField;
            }
            set {
                if ((value == null)) {
                    this.uidField = null;
                }
                else {
                    if ((this.uidField == null)) {
                        this.uidField = XSimpleList<long>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, value, XName.Get("uid", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<System.Int64>(this.uidField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("friends_getAppUsers_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static friends_getAppUsers_response Load(string xmlFile) {
            return XTypedServices.Load<friends_getAppUsers_response>(xmlFile);
        }
        
        public static friends_getAppUsers_response Parse(string xml) {
            return XTypedServices.Parse<friends_getAppUsers_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<friends_getAppUsers_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("uid", "http://api.facebook.com/1.0/"), typeof(long));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (friendlist*)*
    /// </para>
    /// </summary>
    public partial class friends_getLists_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<friendlist> friendlistField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator friends_getLists_response(XElement xe) { return XTypedServices.ToXTypedElement<friends_getLists_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static friends_getLists_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (friendlist*)*
        /// </para>
        /// </summary>
        public friends_getLists_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (friendlist*)*
        /// </para>
        /// </summary>
        public IList<friendlist> friendlist {
            get {
                if ((this.friendlistField == null)) {
                    this.friendlistField = new XTypedList<friendlist>(this, LinqToXsdTypeManager.Instance, XName.Get("friendlist", "http://api.facebook.com/1.0/"));
                }
                return this.friendlistField;
            }
            set {
                if ((value == null)) {
                    this.friendlistField = null;
                }
                else {
                    if ((this.friendlistField == null)) {
                        this.friendlistField = XTypedList<friendlist>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("friendlist", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<friendlist>(this.friendlistField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("friends_getLists_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static friends_getLists_response Load(string xmlFile) {
            return XTypedServices.Load<friends_getLists_response>(xmlFile);
        }
        
        public static friends_getLists_response Parse(string xml) {
            return XTypedServices.Parse<friends_getLists_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<friends_getLists_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("friendlist", "http://api.facebook.com/1.0/"), typeof(friendlist));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (group*)*
    /// </para>
    /// </summary>
    public partial class groups_get_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<group> groupField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator groups_get_response(XElement xe) { return XTypedServices.ToXTypedElement<groups_get_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static groups_get_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (group*)*
        /// </para>
        /// </summary>
        public groups_get_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (group*)*
        /// </para>
        /// </summary>
        public IList<group> group {
            get {
                if ((this.groupField == null)) {
                    this.groupField = new XTypedList<group>(this, LinqToXsdTypeManager.Instance, XName.Get("group", "http://api.facebook.com/1.0/"));
                }
                return this.groupField;
            }
            set {
                if ((value == null)) {
                    this.groupField = null;
                }
                else {
                    if ((this.groupField == null)) {
                        this.groupField = XTypedList<group>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("group", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<group>(this.groupField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("groups_get_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static groups_get_response Load(string xmlFile) {
            return XTypedServices.Load<groups_get_response>(xmlFile);
        }
        
        public static groups_get_response Parse(string xml) {
            return XTypedServices.Parse<groups_get_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<groups_get_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("group", "http://api.facebook.com/1.0/"), typeof(group));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (privacy_canSee_response_elt*)*
    /// </para>
    /// </summary>
    public partial class privacy_canSee_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XSimpleList<bool> privacy_canSee_response_eltField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator privacy_canSee_response(XElement xe) { return XTypedServices.ToXTypedElement<privacy_canSee_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static privacy_canSee_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (privacy_canSee_response_elt*)*
        /// </para>
        /// </summary>
        public privacy_canSee_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (privacy_canSee_response_elt*)*
        /// </para>
        /// </summary>
        public IList<bool> privacy_canSee_response_elt {
            get {
                if ((this.privacy_canSee_response_eltField == null)) {
                    this.privacy_canSee_response_eltField = new XSimpleList<bool>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype, XName.Get("privacy_canSee_response_elt", "http://api.facebook.com/1.0/"));
                }
                return this.privacy_canSee_response_eltField;
            }
            set {
                if ((value == null)) {
                    this.privacy_canSee_response_eltField = null;
                }
                else {
                    if ((this.privacy_canSee_response_eltField == null)) {
                        this.privacy_canSee_response_eltField = XSimpleList<bool>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype, value, XName.Get("privacy_canSee_response_elt", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<System.Boolean>(this.privacy_canSee_response_eltField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("privacy_canSee_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static privacy_canSee_response Load(string xmlFile) {
            return XTypedServices.Load<privacy_canSee_response>(xmlFile);
        }
        
        public static privacy_canSee_response Parse(string xml) {
            return XTypedServices.Parse<privacy_canSee_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<privacy_canSee_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("privacy_canSee_response_elt", "http://api.facebook.com/1.0/"), typeof(bool));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (cookie*)*
    /// </para>
    /// </summary>
    public partial class data_getCookies_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<cookie> cookieField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator data_getCookies_response(XElement xe) { return XTypedServices.ToXTypedElement<data_getCookies_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static data_getCookies_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (cookie*)*
        /// </para>
        /// </summary>
        public data_getCookies_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (cookie*)*
        /// </para>
        /// </summary>
        public IList<cookie> cookie {
            get {
                if ((this.cookieField == null)) {
                    this.cookieField = new XTypedList<cookie>(this, LinqToXsdTypeManager.Instance, XName.Get("cookie", "http://api.facebook.com/1.0/"));
                }
                return this.cookieField;
            }
            set {
                if ((value == null)) {
                    this.cookieField = null;
                }
                else {
                    if ((this.cookieField == null)) {
                        this.cookieField = XTypedList<cookie>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("cookie", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<cookie>(this.cookieField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_getCookies_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_getCookies_response Load(string xmlFile) {
            return XTypedServices.Load<data_getCookies_response>(xmlFile);
        }
        
        public static data_getCookies_response Parse(string xml) {
            return XTypedServices.Parse<data_getCookies_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_getCookies_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("cookie", "http://api.facebook.com/1.0/"), typeof(cookie));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (permissions_checkGrantedApiAccess_response_elt*)*
    /// </para>
    /// </summary>
    public partial class permissions_checkGrantedApiAccess_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XSimpleList<string> permissions_checkGrantedApiAccess_response_eltField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator permissions_checkGrantedApiAccess_response(XElement xe) { return XTypedServices.ToXTypedElement<permissions_checkGrantedApiAccess_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static permissions_checkGrantedApiAccess_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (permissions_checkGrantedApiAccess_response_elt*)*
        /// </para>
        /// </summary>
        public permissions_checkGrantedApiAccess_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (permissions_checkGrantedApiAccess_response_elt*)*
        /// </para>
        /// </summary>
        public IList<string> permissions_checkGrantedApiAccess_response_elt {
            get {
                if ((this.permissions_checkGrantedApiAccess_response_eltField == null)) {
                    this.permissions_checkGrantedApiAccess_response_eltField = new XSimpleList<string>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, XName.Get("permissions_checkGrantedApiAccess_response_elt", "http://api.facebook.com/1.0/"));
                }
                return this.permissions_checkGrantedApiAccess_response_eltField;
            }
            set {
                if ((value == null)) {
                    this.permissions_checkGrantedApiAccess_response_eltField = null;
                }
                else {
                    if ((this.permissions_checkGrantedApiAccess_response_eltField == null)) {
                        this.permissions_checkGrantedApiAccess_response_eltField = XSimpleList<string>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, value, XName.Get("permissions_checkGrantedApiAccess_response_elt", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<System.String>(this.permissions_checkGrantedApiAccess_response_eltField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("permissions_checkGrantedApiAccess_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static permissions_checkGrantedApiAccess_response Load(string xmlFile) {
            return XTypedServices.Load<permissions_checkGrantedApiAccess_response>(xmlFile);
        }
        
        public static permissions_checkGrantedApiAccess_response Parse(string xml) {
            return XTypedServices.Parse<permissions_checkGrantedApiAccess_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<permissions_checkGrantedApiAccess_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("permissions_checkGrantedApiAccess_response_elt", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (permissions_checkAvailableApiAccess_response_elt*)*
    /// </para>
    /// </summary>
    public partial class permissions_checkAvailableApiAccess_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XSimpleList<string> permissions_checkAvailableApiAccess_response_eltField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator permissions_checkAvailableApiAccess_response(XElement xe) { return XTypedServices.ToXTypedElement<permissions_checkAvailableApiAccess_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static permissions_checkAvailableApiAccess_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (permissions_checkAvailableApiAccess_response_elt*)*
        /// </para>
        /// </summary>
        public permissions_checkAvailableApiAccess_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (permissions_checkAvailableApiAccess_response_elt*)*
        /// </para>
        /// </summary>
        public IList<string> permissions_checkAvailableApiAccess_response_elt {
            get {
                if ((this.permissions_checkAvailableApiAccess_response_eltField == null)) {
                    this.permissions_checkAvailableApiAccess_response_eltField = new XSimpleList<string>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, XName.Get("permissions_checkAvailableApiAccess_response_elt", "http://api.facebook.com/1.0/"));
                }
                return this.permissions_checkAvailableApiAccess_response_eltField;
            }
            set {
                if ((value == null)) {
                    this.permissions_checkAvailableApiAccess_response_eltField = null;
                }
                else {
                    if ((this.permissions_checkAvailableApiAccess_response_eltField == null)) {
                        this.permissions_checkAvailableApiAccess_response_eltField = XSimpleList<string>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, value, XName.Get("permissions_checkAvailableApiAccess_response_elt", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<System.String>(this.permissions_checkAvailableApiAccess_response_eltField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("permissions_checkAvailableApiAccess_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static permissions_checkAvailableApiAccess_response Load(string xmlFile) {
            return XTypedServices.Load<permissions_checkAvailableApiAccess_response>(xmlFile);
        }
        
        public static permissions_checkAvailableApiAccess_response Parse(string xml) {
            return XTypedServices.Parse<permissions_checkAvailableApiAccess_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<permissions_checkAvailableApiAccess_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("permissions_checkAvailableApiAccess_response_elt", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (fbpayments_getOrders_response_elt*)*
    /// </para>
    /// </summary>
    public partial class fbpayments_getOrders_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XSimpleList<long> fbpayments_getOrders_response_eltField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator fbpayments_getOrders_response(XElement xe) { return XTypedServices.ToXTypedElement<fbpayments_getOrders_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static fbpayments_getOrders_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (fbpayments_getOrders_response_elt*)*
        /// </para>
        /// </summary>
        public fbpayments_getOrders_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fbpayments_getOrders_response_elt*)*
        /// </para>
        /// </summary>
        public IList<long> fbpayments_getOrders_response_elt {
            get {
                if ((this.fbpayments_getOrders_response_eltField == null)) {
                    this.fbpayments_getOrders_response_eltField = new XSimpleList<long>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, XName.Get("fbpayments_getOrders_response_elt", "http://api.facebook.com/1.0/"));
                }
                return this.fbpayments_getOrders_response_eltField;
            }
            set {
                if ((value == null)) {
                    this.fbpayments_getOrders_response_eltField = null;
                }
                else {
                    if ((this.fbpayments_getOrders_response_eltField == null)) {
                        this.fbpayments_getOrders_response_eltField = XSimpleList<long>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, value, XName.Get("fbpayments_getOrders_response_elt", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<System.Int64>(this.fbpayments_getOrders_response_eltField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("fbpayments_getOrders_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static fbpayments_getOrders_response Load(string xmlFile) {
            return XTypedServices.Load<fbpayments_getOrders_response>(xmlFile);
        }
        
        public static fbpayments_getOrders_response Parse(string xml) {
            return XTypedServices.Parse<fbpayments_getOrders_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<fbpayments_getOrders_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("fbpayments_getOrders_response_elt", "http://api.facebook.com/1.0/"), typeof(long));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (marketplace_category*)*
    /// </para>
    /// </summary>
    public partial class marketplace_getCategories_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XSimpleList<string> marketplace_categoryField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator marketplace_getCategories_response(XElement xe) { return XTypedServices.ToXTypedElement<marketplace_getCategories_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static marketplace_getCategories_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (marketplace_category*)*
        /// </para>
        /// </summary>
        public marketplace_getCategories_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (marketplace_category*)*
        /// </para>
        /// </summary>
        public IList<string> marketplace_category {
            get {
                if ((this.marketplace_categoryField == null)) {
                    this.marketplace_categoryField = new XSimpleList<string>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, XName.Get("marketplace_category", "http://api.facebook.com/1.0/"));
                }
                return this.marketplace_categoryField;
            }
            set {
                if ((value == null)) {
                    this.marketplace_categoryField = null;
                }
                else {
                    if ((this.marketplace_categoryField == null)) {
                        this.marketplace_categoryField = XSimpleList<string>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, value, XName.Get("marketplace_category", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<System.String>(this.marketplace_categoryField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("marketplace_getCategories_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static marketplace_getCategories_response Load(string xmlFile) {
            return XTypedServices.Load<marketplace_getCategories_response>(xmlFile);
        }
        
        public static marketplace_getCategories_response Parse(string xml) {
            return XTypedServices.Parse<marketplace_getCategories_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<marketplace_getCategories_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("marketplace_category", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (marketplace_subcategory*)*
    /// </para>
    /// </summary>
    public partial class marketplace_getSubCategories_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XSimpleList<string> marketplace_subcategoryField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator marketplace_getSubCategories_response(XElement xe) { return XTypedServices.ToXTypedElement<marketplace_getSubCategories_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static marketplace_getSubCategories_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (marketplace_subcategory*)*
        /// </para>
        /// </summary>
        public marketplace_getSubCategories_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (marketplace_subcategory*)*
        /// </para>
        /// </summary>
        public IList<string> marketplace_subcategory {
            get {
                if ((this.marketplace_subcategoryField == null)) {
                    this.marketplace_subcategoryField = new XSimpleList<string>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, XName.Get("marketplace_subcategory", "http://api.facebook.com/1.0/"));
                }
                return this.marketplace_subcategoryField;
            }
            set {
                if ((value == null)) {
                    this.marketplace_subcategoryField = null;
                }
                else {
                    if ((this.marketplace_subcategoryField == null)) {
                        this.marketplace_subcategoryField = XSimpleList<string>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, value, XName.Get("marketplace_subcategory", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<System.String>(this.marketplace_subcategoryField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("marketplace_getSubCategories_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static marketplace_getSubCategories_response Load(string xmlFile) {
            return XTypedServices.Load<marketplace_getSubCategories_response>(xmlFile);
        }
        
        public static marketplace_getSubCategories_response Parse(string xml) {
            return XTypedServices.Parse<marketplace_getSubCategories_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<marketplace_getSubCategories_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("marketplace_subcategory", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (listing*)*
    /// </para>
    /// </summary>
    public partial class marketplace_getListings_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<listing> listingField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator marketplace_getListings_response(XElement xe) { return XTypedServices.ToXTypedElement<marketplace_getListings_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static marketplace_getListings_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (listing*)*
        /// </para>
        /// </summary>
        public marketplace_getListings_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (listing*)*
        /// </para>
        /// </summary>
        public IList<listing> listing {
            get {
                if ((this.listingField == null)) {
                    this.listingField = new XTypedList<listing>(this, LinqToXsdTypeManager.Instance, XName.Get("listing", "http://api.facebook.com/1.0/"));
                }
                return this.listingField;
            }
            set {
                if ((value == null)) {
                    this.listingField = null;
                }
                else {
                    if ((this.listingField == null)) {
                        this.listingField = XTypedList<listing>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("listing", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<listing>(this.listingField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("marketplace_getListings_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static marketplace_getListings_response Load(string xmlFile) {
            return XTypedServices.Load<marketplace_getListings_response>(xmlFile);
        }
        
        public static marketplace_getListings_response Parse(string xml) {
            return XTypedServices.Parse<marketplace_getListings_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<marketplace_getListings_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("listing", "http://api.facebook.com/1.0/"), typeof(listing));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (listing*)*
    /// </para>
    /// </summary>
    public partial class marketplace_search_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<listing> listingField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator marketplace_search_response(XElement xe) { return XTypedServices.ToXTypedElement<marketplace_search_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static marketplace_search_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (listing*)*
        /// </para>
        /// </summary>
        public marketplace_search_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (listing*)*
        /// </para>
        /// </summary>
        public IList<listing> listing {
            get {
                if ((this.listingField == null)) {
                    this.listingField = new XTypedList<listing>(this, LinqToXsdTypeManager.Instance, XName.Get("listing", "http://api.facebook.com/1.0/"));
                }
                return this.listingField;
            }
            set {
                if ((value == null)) {
                    this.listingField = null;
                }
                else {
                    if ((this.listingField == null)) {
                        this.listingField = XTypedList<listing>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("listing", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<listing>(this.listingField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("marketplace_search_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static marketplace_search_response Load(string xmlFile) {
            return XTypedServices.Load<marketplace_search_response>(xmlFile);
        }
        
        public static marketplace_search_response Parse(string xml) {
            return XTypedServices.Parse<marketplace_search_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<marketplace_search_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("listing", "http://api.facebook.com/1.0/"), typeof(listing));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (photo*)*
    /// </para>
    /// </summary>
    public partial class photos_get_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<photo> photoField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator photos_get_response(XElement xe) { return XTypedServices.ToXTypedElement<photos_get_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static photos_get_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (photo*)*
        /// </para>
        /// </summary>
        public photos_get_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (photo*)*
        /// </para>
        /// </summary>
        public IList<photo> photo {
            get {
                if ((this.photoField == null)) {
                    this.photoField = new XTypedList<photo>(this, LinqToXsdTypeManager.Instance, XName.Get("photo", "http://api.facebook.com/1.0/"));
                }
                return this.photoField;
            }
            set {
                if ((value == null)) {
                    this.photoField = null;
                }
                else {
                    if ((this.photoField == null)) {
                        this.photoField = XTypedList<photo>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("photo", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<photo>(this.photoField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("photos_get_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static photos_get_response Load(string xmlFile) {
            return XTypedServices.Load<photos_get_response>(xmlFile);
        }
        
        public static photos_get_response Parse(string xml) {
            return XTypedServices.Parse<photos_get_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<photos_get_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("photo", "http://api.facebook.com/1.0/"), typeof(photo));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (album*)*
    /// </para>
    /// </summary>
    public partial class photos_getAlbums_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<album> albumField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator photos_getAlbums_response(XElement xe) { return XTypedServices.ToXTypedElement<photos_getAlbums_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static photos_getAlbums_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (album*)*
        /// </para>
        /// </summary>
        public photos_getAlbums_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (album*)*
        /// </para>
        /// </summary>
        public IList<album> album {
            get {
                if ((this.albumField == null)) {
                    this.albumField = new XTypedList<album>(this, LinqToXsdTypeManager.Instance, XName.Get("album", "http://api.facebook.com/1.0/"));
                }
                return this.albumField;
            }
            set {
                if ((value == null)) {
                    this.albumField = null;
                }
                else {
                    if ((this.albumField == null)) {
                        this.albumField = XTypedList<album>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("album", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<album>(this.albumField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("photos_getAlbums_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static photos_getAlbums_response Load(string xmlFile) {
            return XTypedServices.Load<photos_getAlbums_response>(xmlFile);
        }
        
        public static photos_getAlbums_response Parse(string xml) {
            return XTypedServices.Parse<photos_getAlbums_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<photos_getAlbums_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("album", "http://api.facebook.com/1.0/"), typeof(album));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (photo_tag*)*
    /// </para>
    /// </summary>
    public partial class photos_getTags_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<photo_tag> photo_tagField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator photos_getTags_response(XElement xe) { return XTypedServices.ToXTypedElement<photos_getTags_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static photos_getTags_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (photo_tag*)*
        /// </para>
        /// </summary>
        public photos_getTags_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (photo_tag*)*
        /// </para>
        /// </summary>
        public IList<photo_tag> photo_tag {
            get {
                if ((this.photo_tagField == null)) {
                    this.photo_tagField = new XTypedList<photo_tag>(this, LinqToXsdTypeManager.Instance, XName.Get("photo_tag", "http://api.facebook.com/1.0/"));
                }
                return this.photo_tagField;
            }
            set {
                if ((value == null)) {
                    this.photo_tagField = null;
                }
                else {
                    if ((this.photo_tagField == null)) {
                        this.photo_tagField = XTypedList<photo_tag>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("photo_tag", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<photo_tag>(this.photo_tagField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("photos_getTags_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static photos_getTags_response Load(string xmlFile) {
            return XTypedServices.Load<photos_getTags_response>(xmlFile);
        }
        
        public static photos_getTags_response Parse(string xml) {
            return XTypedServices.Parse<photos_getTags_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<photos_getTags_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("photo_tag", "http://api.facebook.com/1.0/"), typeof(photo_tag));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (id_map*)*
    /// </para>
    /// </summary>
    public partial class update_decodeIDs_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<id_map> id_mapField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator update_decodeIDs_response(XElement xe) { return XTypedServices.ToXTypedElement<update_decodeIDs_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static update_decodeIDs_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (id_map*)*
        /// </para>
        /// </summary>
        public update_decodeIDs_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (id_map*)*
        /// </para>
        /// </summary>
        public IList<id_map> id_map {
            get {
                if ((this.id_mapField == null)) {
                    this.id_mapField = new XTypedList<id_map>(this, LinqToXsdTypeManager.Instance, XName.Get("id_map", "http://api.facebook.com/1.0/"));
                }
                return this.id_mapField;
            }
            set {
                if ((value == null)) {
                    this.id_mapField = null;
                }
                else {
                    if ((this.id_mapField == null)) {
                        this.id_mapField = XTypedList<id_map>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("id_map", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<id_map>(this.id_mapField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("update_decodeIDs_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static update_decodeIDs_response Load(string xmlFile) {
            return XTypedServices.Load<update_decodeIDs_response>(xmlFile);
        }
        
        public static update_decodeIDs_response Parse(string xml) {
            return XTypedServices.Parse<update_decodeIDs_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<update_decodeIDs_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("id_map", "http://api.facebook.com/1.0/"), typeof(id_map));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (user*)*
    /// </para>
    /// </summary>
    public partial class users_getInfo_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<user> userField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator users_getInfo_response(XElement xe) { return XTypedServices.ToXTypedElement<users_getInfo_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static users_getInfo_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (user*)*
        /// </para>
        /// </summary>
        public users_getInfo_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (user*)*
        /// </para>
        /// </summary>
        public IList<user> user {
            get {
                if ((this.userField == null)) {
                    this.userField = new XTypedList<user>(this, LinqToXsdTypeManager.Instance, XName.Get("user", "http://api.facebook.com/1.0/"));
                }
                return this.userField;
            }
            set {
                if ((value == null)) {
                    this.userField = null;
                }
                else {
                    if ((this.userField == null)) {
                        this.userField = XTypedList<user>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("user", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<user>(this.userField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("users_getInfo_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static users_getInfo_response Load(string xmlFile) {
            return XTypedServices.Load<users_getInfo_response>(xmlFile);
        }
        
        public static users_getInfo_response Parse(string xml) {
            return XTypedServices.Parse<users_getInfo_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<users_getInfo_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("user", "http://api.facebook.com/1.0/"), typeof(user));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (user*)*
    /// </para>
    /// </summary>
    public partial class users_getStandardInfo_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<user> userField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator users_getStandardInfo_response(XElement xe) { return XTypedServices.ToXTypedElement<users_getStandardInfo_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static users_getStandardInfo_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (user*)*
        /// </para>
        /// </summary>
        public users_getStandardInfo_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (user*)*
        /// </para>
        /// </summary>
        public IList<user> user {
            get {
                if ((this.userField == null)) {
                    this.userField = new XTypedList<user>(this, LinqToXsdTypeManager.Instance, XName.Get("user", "http://api.facebook.com/1.0/"));
                }
                return this.userField;
            }
            set {
                if ((value == null)) {
                    this.userField = null;
                }
                else {
                    if ((this.userField == null)) {
                        this.userField = XTypedList<user>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("user", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<user>(this.userField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("users_getStandardInfo_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static users_getStandardInfo_response Load(string xmlFile) {
            return XTypedServices.Load<users_getStandardInfo_response>(xmlFile);
        }
        
        public static users_getStandardInfo_response Parse(string xml) {
            return XTypedServices.Parse<users_getStandardInfo_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<users_getStandardInfo_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("user", "http://api.facebook.com/1.0/"), typeof(user));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (page*)*
    /// </para>
    /// </summary>
    public partial class pages_getInfo_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<page> pageField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator pages_getInfo_response(XElement xe) { return XTypedServices.ToXTypedElement<pages_getInfo_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static pages_getInfo_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (page*)*
        /// </para>
        /// </summary>
        public pages_getInfo_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (page*)*
        /// </para>
        /// </summary>
        public IList<page> page {
            get {
                if ((this.pageField == null)) {
                    this.pageField = new XTypedList<page>(this, LinqToXsdTypeManager.Instance, XName.Get("page", "http://api.facebook.com/1.0/"));
                }
                return this.pageField;
            }
            set {
                if ((value == null)) {
                    this.pageField = null;
                }
                else {
                    if ((this.pageField == null)) {
                        this.pageField = XTypedList<page>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("page", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<page>(this.pageField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("pages_getInfo_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static pages_getInfo_response Load(string xmlFile) {
            return XTypedServices.Load<pages_getInfo_response>(xmlFile);
        }
        
        public static pages_getInfo_response Parse(string xml) {
            return XTypedServices.Parse<pages_getInfo_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<pages_getInfo_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("page", "http://api.facebook.com/1.0/"), typeof(page));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (preference*)*
    /// </para>
    /// </summary>
    public partial class data_getUserPreferences_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<preference> preferenceField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator data_getUserPreferences_response(XElement xe) { return XTypedServices.ToXTypedElement<data_getUserPreferences_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static data_getUserPreferences_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (preference*)*
        /// </para>
        /// </summary>
        public data_getUserPreferences_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (preference*)*
        /// </para>
        /// </summary>
        public IList<preference> preference {
            get {
                if ((this.preferenceField == null)) {
                    this.preferenceField = new XTypedList<preference>(this, LinqToXsdTypeManager.Instance, XName.Get("preference", "http://api.facebook.com/1.0/"));
                }
                return this.preferenceField;
            }
            set {
                if ((value == null)) {
                    this.preferenceField = null;
                }
                else {
                    if ((this.preferenceField == null)) {
                        this.preferenceField = XTypedList<preference>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("preference", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<preference>(this.preferenceField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_getUserPreferences_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_getUserPreferences_response Load(string xmlFile) {
            return XTypedServices.Load<data_getUserPreferences_response>(xmlFile);
        }
        
        public static data_getUserPreferences_response Parse(string xml) {
            return XTypedServices.Parse<data_getUserPreferences_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_getUserPreferences_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("preference", "http://api.facebook.com/1.0/"), typeof(preference));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (object_type_info*)*
    /// </para>
    /// </summary>
    public partial class data_getObjectTypes_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<object_type_info> object_type_infoField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator data_getObjectTypes_response(XElement xe) { return XTypedServices.ToXTypedElement<data_getObjectTypes_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static data_getObjectTypes_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (object_type_info*)*
        /// </para>
        /// </summary>
        public data_getObjectTypes_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (object_type_info*)*
        /// </para>
        /// </summary>
        public IList<object_type_info> object_type_info {
            get {
                if ((this.object_type_infoField == null)) {
                    this.object_type_infoField = new XTypedList<object_type_info>(this, LinqToXsdTypeManager.Instance, XName.Get("object_type_info", "http://api.facebook.com/1.0/"));
                }
                return this.object_type_infoField;
            }
            set {
                if ((value == null)) {
                    this.object_type_infoField = null;
                }
                else {
                    if ((this.object_type_infoField == null)) {
                        this.object_type_infoField = XTypedList<object_type_info>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("object_type_info", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<object_type_info>(this.object_type_infoField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_getObjectTypes_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_getObjectTypes_response Load(string xmlFile) {
            return XTypedServices.Load<data_getObjectTypes_response>(xmlFile);
        }
        
        public static data_getObjectTypes_response Parse(string xml) {
            return XTypedServices.Parse<data_getObjectTypes_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_getObjectTypes_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("object_type_info", "http://api.facebook.com/1.0/"), typeof(object_type_info));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (object_property_info*)*
    /// </para>
    /// </summary>
    public partial class data_getObjectType_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<object_property_info> object_property_infoField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator data_getObjectType_response(XElement xe) { return XTypedServices.ToXTypedElement<data_getObjectType_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static data_getObjectType_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (object_property_info*)*
        /// </para>
        /// </summary>
        public data_getObjectType_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (object_property_info*)*
        /// </para>
        /// </summary>
        public IList<object_property_info> object_property_info {
            get {
                if ((this.object_property_infoField == null)) {
                    this.object_property_infoField = new XTypedList<object_property_info>(this, LinqToXsdTypeManager.Instance, XName.Get("object_property_info", "http://api.facebook.com/1.0/"));
                }
                return this.object_property_infoField;
            }
            set {
                if ((value == null)) {
                    this.object_property_infoField = null;
                }
                else {
                    if ((this.object_property_infoField == null)) {
                        this.object_property_infoField = XTypedList<object_property_info>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("object_property_info", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<object_property_info>(this.object_property_infoField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_getObjectType_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_getObjectType_response Load(string xmlFile) {
            return XTypedServices.Load<data_getObjectType_response>(xmlFile);
        }
        
        public static data_getObjectType_response Parse(string xml) {
            return XTypedServices.Parse<data_getObjectType_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_getObjectType_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("object_property_info", "http://api.facebook.com/1.0/"), typeof(object_property_info));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (container*)*
    /// </para>
    /// </summary>
    public partial class data_getObjects_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<container> containerField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator data_getObjects_response(XElement xe) { return XTypedServices.ToXTypedElement<data_getObjects_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static data_getObjects_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (container*)*
        /// </para>
        /// </summary>
        public data_getObjects_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (container*)*
        /// </para>
        /// </summary>
        public IList<container> container {
            get {
                if ((this.containerField == null)) {
                    this.containerField = new XTypedList<container>(this, LinqToXsdTypeManager.Instance, XName.Get("container", "http://api.facebook.com/1.0/"));
                }
                return this.containerField;
            }
            set {
                if ((value == null)) {
                    this.containerField = null;
                }
                else {
                    if ((this.containerField == null)) {
                        this.containerField = XTypedList<container>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("container", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<container>(this.containerField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_getObjects_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_getObjects_response Load(string xmlFile) {
            return XTypedServices.Load<data_getObjects_response>(xmlFile);
        }
        
        public static data_getObjects_response Parse(string xml) {
            return XTypedServices.Parse<data_getObjects_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_getObjects_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("container", "http://api.facebook.com/1.0/"), typeof(container));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (object_assoc_info*)*
    /// </para>
    /// </summary>
    public partial class data_getAssociationDefinitions_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<object_assoc_info> object_assoc_infoField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator data_getAssociationDefinitions_response(XElement xe) { return XTypedServices.ToXTypedElement<data_getAssociationDefinitions_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static data_getAssociationDefinitions_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (object_assoc_info*)*
        /// </para>
        /// </summary>
        public data_getAssociationDefinitions_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (object_assoc_info*)*
        /// </para>
        /// </summary>
        public IList<object_assoc_info> object_assoc_info {
            get {
                if ((this.object_assoc_infoField == null)) {
                    this.object_assoc_infoField = new XTypedList<object_assoc_info>(this, LinqToXsdTypeManager.Instance, XName.Get("object_assoc_info", "http://api.facebook.com/1.0/"));
                }
                return this.object_assoc_infoField;
            }
            set {
                if ((value == null)) {
                    this.object_assoc_infoField = null;
                }
                else {
                    if ((this.object_assoc_infoField == null)) {
                        this.object_assoc_infoField = XTypedList<object_assoc_info>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("object_assoc_info", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<object_assoc_info>(this.object_assoc_infoField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_getAssociationDefinitions_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_getAssociationDefinitions_response Load(string xmlFile) {
            return XTypedServices.Load<data_getAssociationDefinitions_response>(xmlFile);
        }
        
        public static data_getAssociationDefinitions_response Parse(string xml) {
            return XTypedServices.Parse<data_getAssociationDefinitions_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_getAssociationDefinitions_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("object_assoc_info", "http://api.facebook.com/1.0/"), typeof(object_assoc_info));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (object_association*)*
    /// </para>
    /// </summary>
    public partial class data_getAssociatedObjects_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<object_association> object_associationField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator data_getAssociatedObjects_response(XElement xe) { return XTypedServices.ToXTypedElement<data_getAssociatedObjects_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static data_getAssociatedObjects_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (object_association*)*
        /// </para>
        /// </summary>
        public data_getAssociatedObjects_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (object_association*)*
        /// </para>
        /// </summary>
        public IList<object_association> object_association {
            get {
                if ((this.object_associationField == null)) {
                    this.object_associationField = new XTypedList<object_association>(this, LinqToXsdTypeManager.Instance, XName.Get("object_association", "http://api.facebook.com/1.0/"));
                }
                return this.object_associationField;
            }
            set {
                if ((value == null)) {
                    this.object_associationField = null;
                }
                else {
                    if ((this.object_associationField == null)) {
                        this.object_associationField = XTypedList<object_association>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("object_association", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<object_association>(this.object_associationField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_getAssociatedObjects_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_getAssociatedObjects_response Load(string xmlFile) {
            return XTypedServices.Load<data_getAssociatedObjects_response>(xmlFile);
        }
        
        public static data_getAssociatedObjects_response Parse(string xml) {
            return XTypedServices.Parse<data_getAssociatedObjects_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_getAssociatedObjects_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("object_association", "http://api.facebook.com/1.0/"), typeof(object_association));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (data_getAssociatedObjectCounts_response_elt*)*
    /// </para>
    /// </summary>
    public partial class data_getAssociatedObjectCounts_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XSimpleList<int> data_getAssociatedObjectCounts_response_eltField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator data_getAssociatedObjectCounts_response(XElement xe) { return XTypedServices.ToXTypedElement<data_getAssociatedObjectCounts_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static data_getAssociatedObjectCounts_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (data_getAssociatedObjectCounts_response_elt*)*
        /// </para>
        /// </summary>
        public data_getAssociatedObjectCounts_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (data_getAssociatedObjectCounts_response_elt*)*
        /// </para>
        /// </summary>
        public IList<int> data_getAssociatedObjectCounts_response_elt {
            get {
                if ((this.data_getAssociatedObjectCounts_response_eltField == null)) {
                    this.data_getAssociatedObjectCounts_response_eltField = new XSimpleList<int>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype, XName.Get("data_getAssociatedObjectCounts_response_elt", "http://api.facebook.com/1.0/"));
                }
                return this.data_getAssociatedObjectCounts_response_eltField;
            }
            set {
                if ((value == null)) {
                    this.data_getAssociatedObjectCounts_response_eltField = null;
                }
                else {
                    if ((this.data_getAssociatedObjectCounts_response_eltField == null)) {
                        this.data_getAssociatedObjectCounts_response_eltField = XSimpleList<int>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype, value, XName.Get("data_getAssociatedObjectCounts_response_elt", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<System.Int32>(this.data_getAssociatedObjectCounts_response_eltField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_getAssociatedObjectCounts_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_getAssociatedObjectCounts_response Load(string xmlFile) {
            return XTypedServices.Load<data_getAssociatedObjectCounts_response>(xmlFile);
        }
        
        public static data_getAssociatedObjectCounts_response Parse(string xml) {
            return XTypedServices.Parse<data_getAssociatedObjectCounts_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_getAssociatedObjectCounts_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("data_getAssociatedObjectCounts_response_elt", "http://api.facebook.com/1.0/"), typeof(int));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (object_association*)*
    /// </para>
    /// </summary>
    public partial class data_getAssociations_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<object_association> object_associationField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator data_getAssociations_response(XElement xe) { return XTypedServices.ToXTypedElement<data_getAssociations_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static data_getAssociations_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (object_association*)*
        /// </para>
        /// </summary>
        public data_getAssociations_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (object_association*)*
        /// </para>
        /// </summary>
        public IList<object_association> object_association {
            get {
                if ((this.object_associationField == null)) {
                    this.object_associationField = new XTypedList<object_association>(this, LinqToXsdTypeManager.Instance, XName.Get("object_association", "http://api.facebook.com/1.0/"));
                }
                return this.object_associationField;
            }
            set {
                if ((value == null)) {
                    this.object_associationField = null;
                }
                else {
                    if ((this.object_associationField == null)) {
                        this.object_associationField = XTypedList<object_association>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("object_association", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<object_association>(this.object_associationField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_getAssociations_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_getAssociations_response Load(string xmlFile) {
            return XTypedServices.Load<data_getAssociations_response>(xmlFile);
        }
        
        public static data_getAssociations_response Parse(string xml) {
            return XTypedServices.Parse<data_getAssociations_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_getAssociations_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("object_association", "http://api.facebook.com/1.0/"), typeof(object_association));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (template_bundle*)*
    /// </para>
    /// </summary>
    public partial class feed_getRegisteredTemplateBundles_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<template_bundle> template_bundleField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator feed_getRegisteredTemplateBundles_response(XElement xe) { return XTypedServices.ToXTypedElement<feed_getRegisteredTemplateBundles_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static feed_getRegisteredTemplateBundles_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (template_bundle*)*
        /// </para>
        /// </summary>
        public feed_getRegisteredTemplateBundles_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (template_bundle*)*
        /// </para>
        /// </summary>
        public IList<template_bundle> template_bundle {
            get {
                if ((this.template_bundleField == null)) {
                    this.template_bundleField = new XTypedList<template_bundle>(this, LinqToXsdTypeManager.Instance, XName.Get("template_bundle", "http://api.facebook.com/1.0/"));
                }
                return this.template_bundleField;
            }
            set {
                if ((value == null)) {
                    this.template_bundleField = null;
                }
                else {
                    if ((this.template_bundleField == null)) {
                        this.template_bundleField = XTypedList<template_bundle>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("template_bundle", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<template_bundle>(this.template_bundleField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("feed_getRegisteredTemplateBundles_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static feed_getRegisteredTemplateBundles_response Load(string xmlFile) {
            return XTypedServices.Load<feed_getRegisteredTemplateBundles_response>(xmlFile);
        }
        
        public static feed_getRegisteredTemplateBundles_response Parse(string xml) {
            return XTypedServices.Parse<feed_getRegisteredTemplateBundles_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<feed_getRegisteredTemplateBundles_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("template_bundle", "http://api.facebook.com/1.0/"), typeof(template_bundle));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (metrics*)*
    /// </para>
    /// </summary>
    public partial class admin_getMetrics_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<metrics> metricsField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator admin_getMetrics_response(XElement xe) { return XTypedServices.ToXTypedElement<admin_getMetrics_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static admin_getMetrics_response() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (metrics*)*
        /// </para>
        /// </summary>
        public admin_getMetrics_response() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metrics*)*
        /// </para>
        /// </summary>
        public IList<metrics> metrics {
            get {
                if ((this.metricsField == null)) {
                    this.metricsField = new XTypedList<metrics>(this, LinqToXsdTypeManager.Instance, XName.Get("metrics", "http://api.facebook.com/1.0/"));
                }
                return this.metricsField;
            }
            set {
                if ((value == null)) {
                    this.metricsField = null;
                }
                else {
                    if ((this.metricsField == null)) {
                        this.metricsField = XTypedList<metrics>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("metrics", "http://api.facebook.com/1.0/"));
                    }
                    else {
                        XTypedServices.SetList<metrics>(this.metricsField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Nullable<bool> list {
            get {
                XAttribute x = this.Attribute(XName.Get("list", ""));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("admin_getMetrics_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static admin_getMetrics_response Load(string xmlFile) {
            return XTypedServices.Load<admin_getMetrics_response>(xmlFile);
        }
        
        public static admin_getMetrics_response Parse(string xml) {
            return XTypedServices.Parse<admin_getMetrics_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<admin_getMetrics_response>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("metrics", "http://api.facebook.com/1.0/"), typeof(metrics));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public sealed class aid {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long), null);
        
        private aid() {
        }
    }
    
    public sealed class pid {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long), null);
        
        private pid() {
        }
    }
    
    public sealed class eid {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long), null);
        
        private eid() {
        }
    }
    
    public sealed class gid {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long), null);
        
        private gid() {
        }
    }
    
    public sealed class nid {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long), null);
        
        private nid() {
        }
    }
    
    public sealed class hsid {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int), null);
        
        private hsid() {
        }
    }
    
    public sealed class uid {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long), null);
        
        private uid() {
        }
    }
    
    public sealed class flid {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long), null);
        
        private flid() {
        }
    }
    
    public sealed class id {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long), null);
        
        private id() {
        }
    }
    
    public sealed class lid {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long), null);
        
        private lid() {
        }
    }
    
    public sealed class page_id {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long), null);
        
        private page_id() {
        }
    }
    
    public sealed class tbid {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long), null);
        
        private tbid() {
        }
    }
    
    public sealed class old_id_list {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private old_id_list() {
        }
    }
    
    public sealed class aid_list {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private aid_list() {
        }
    }
    
    public sealed class pid_list {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private pid_list() {
        }
    }
    
    public sealed class gid_list {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private gid_list() {
        }
    }
    
    public sealed class eid_list {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private eid_list() {
        }
    }
    
    public sealed class uid_list {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private uid_list() {
        }
    }
    
    public sealed class field_list {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private field_list() {
        }
    }
    
    public sealed class tag_list {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private tag_list() {
        }
    }
    
    public sealed class lid_list {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private lid_list() {
        }
    }
    
    public sealed class pageid_list {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private pageid_list() {
        }
    }
    
    public sealed class id_list {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private id_list() {
        }
    }
    
    public sealed class time {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int), null);
        
        private time() {
        }
    }
    
    public sealed class date {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private date() {
        }
    }
    
    public sealed class year {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int), null);
        
        private year() {
        }
    }
    
    public sealed class auth_token {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private auth_token() {
        }
    }
    
    public sealed class session_key {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private session_key() {
        }
    }
    
    public sealed class session_secret {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private session_secret() {
        }
    }
    
    public sealed class friend_link {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private friend_link() {
        }
    }
    
    public sealed class member_type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private member_type() {
        }
    }
    
    public sealed class old_id {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private old_id() {
        }
    }
    
    public sealed class marketplace_category {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private marketplace_category() {
        }
    }
    
    public sealed class marketplace_subcategory {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private marketplace_subcategory() {
        }
    }
    
    public sealed class json_string {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private json_string() {
        }
    }
    
    public sealed class concentration {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private concentration() {
        }
    }
    
    public sealed class sex {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private sex() {
        }
    }
    
    public sealed class seeking {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private seeking() {
        }
    }
    
    public sealed class one_line_story_template {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Microsoft.Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Microsoft.Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private one_line_story_template() {
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (message, time)
    /// </para>
    /// </summary>
    public partial class user_status : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator user_status(XElement xe) { return XTypedServices.ToXTypedElement<user_status>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static user_status() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("message", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("time", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (message, time)
        /// </para>
        /// </summary>
        public user_status() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (message, time)
        /// </para>
        /// </summary>
        public string message {
            get {
                XElement x = this.GetElement(XName.Get("message", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("message", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (message, time)
        /// </para>
        /// </summary>
        public int time {
            get {
                XElement x = this.GetElement(XName.Get("time", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("time", "http://api.facebook.com/1.0/"), value, "time", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("user_status", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<user_status>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("message", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("time", "http://api.facebook.com/1.0/"), typeof(int));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (old_id, new_id)
    /// </para>
    /// </summary>
    public partial class id_map : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator id_map(XElement xe) { return XTypedServices.ToXTypedElement<id_map>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static id_map() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("old_id", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("new_id", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (old_id, new_id)
        /// </para>
        /// </summary>
        public id_map() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (old_id, new_id)
        /// </para>
        /// </summary>
        public string old_id {
            get {
                XElement x = this.GetElement(XName.Get("old_id", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("old_id", "http://api.facebook.com/1.0/"), value, "old_id", global::facebook.Schema.old_id.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (old_id, new_id)
        /// </para>
        /// </summary>
        public long new_id {
            get {
                XElement x = this.GetElement(XName.Get("new_id", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("new_id", "http://api.facebook.com/1.0/"), value, "new_id", global::facebook.Schema.id.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("id_map", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<id_map>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("old_id", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("new_id", "http://api.facebook.com/1.0/"), typeof(long));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (key, value)
    /// </para>
    /// </summary>
    public partial class arg : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator arg(XElement xe) { return XTypedServices.ToXTypedElement<arg>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static arg() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("key", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("value", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (key, value)
        /// </para>
        /// </summary>
        public arg() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (key, value)
        /// </para>
        /// </summary>
        public string key {
            get {
                XElement x = this.GetElement(XName.Get("key", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("key", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (key, value)
        /// </para>
        /// </summary>
        public string value {
            get {
                XElement x = this.GetElement(XName.Get("value", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("value", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("arg", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<arg>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("key", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("value", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (error_code, error_msg, request_args)
    /// </para>
    /// </summary>
    public partial class FacebookApiException : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator FacebookApiException(XElement xe) { return XTypedServices.ToXTypedElement<FacebookApiException>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static FacebookApiException() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("error_code", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("error_msg", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("request_args", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (error_code, error_msg, request_args)
        /// </para>
        /// </summary>
        public FacebookApiException() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (error_code, error_msg, request_args)
        /// </para>
        /// </summary>
        public int error_code {
            get {
                XElement x = this.GetElement(XName.Get("error_code", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("error_code", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (error_code, error_msg, request_args)
        /// </para>
        /// </summary>
        public string error_msg {
            get {
                XElement x = this.GetElement(XName.Get("error_msg", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("error_msg", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (error_code, error_msg, request_args)
        /// </para>
        /// </summary>
        public request_argsLocalType request_args {
            get {
                XElement x = this.GetElement(XName.Get("request_args", "http://api.facebook.com/1.0/"));
                return ((request_argsLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("request_args", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("FacebookApiException", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<FacebookApiException>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("error_code", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("error_msg", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("request_args", "http://api.facebook.com/1.0/"), typeof(request_argsLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (arg*)*
        /// </para>
        /// </summary>
        public partial class request_argsLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<arg> argField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator request_argsLocalType(XElement xe) { return XTypedServices.ToXTypedElement<request_argsLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static request_argsLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (arg*)*
            /// </para>
            /// </summary>
            public request_argsLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (arg*)*
            /// </para>
            /// </summary>
            public IList<arg> arg {
                get {
                    if ((this.argField == null)) {
                        this.argField = new XTypedList<arg>(this, LinqToXsdTypeManager.Instance, XName.Get("arg", "http://api.facebook.com/1.0/"));
                    }
                    return this.argField;
                }
                set {
                    if ((value == null)) {
                        this.argField = null;
                    }
                    else {
                        if ((this.argField == null)) {
                            this.argField = XTypedList<arg>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("arg", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<arg>(this.argField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("request_args", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<request_argsLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("arg", "http://api.facebook.com/1.0/"), typeof(arg));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (session_key, uid, expires, secret?)
    /// </para>
    /// </summary>
    public partial class session_info : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator session_info(XElement xe) { return XTypedServices.ToXTypedElement<session_info>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static session_info() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("session_key", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("uid", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("expires", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("secret", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (session_key, uid, expires, secret?)
        /// </para>
        /// </summary>
        public session_info() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (session_key, uid, expires, secret?)
        /// </para>
        /// </summary>
        public string session_key {
            get {
                XElement x = this.GetElement(XName.Get("session_key", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("session_key", "http://api.facebook.com/1.0/"), value, "session_key", global::facebook.Schema.session_key.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (session_key, uid, expires, secret?)
        /// </para>
        /// </summary>
        public long uid {
            get {
                XElement x = this.GetElement(XName.Get("uid", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("uid", "http://api.facebook.com/1.0/"), value, "uid", global::facebook.Schema.uid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (session_key, uid, expires, secret?)
        /// </para>
        /// </summary>
        public int expires {
            get {
                XElement x = this.GetElement(XName.Get("expires", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("expires", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (session_key, uid, expires, secret?)
        /// </para>
        /// </summary>
        public string secret {
            get {
                XElement x = this.GetElement(XName.Get("secret", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("secret", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("session_info", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<session_info>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("session_key", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("uid", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("expires", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("secret", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (street?, city, state, country, zip?, latitude?, longitude?)
    /// </para>
    /// </summary>
    public partial class location : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator location(XElement xe) { return XTypedServices.ToXTypedElement<location>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static location() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("street", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("city", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("state", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("country", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("zip", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("latitude", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("longitude", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (street?, city, state, country, zip?, latitude?, longitude?)
        /// </para>
        /// </summary>
        public location() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (street?, city, state, country, zip?, latitude?, longitude?)
        /// </para>
        /// </summary>
        public string street {
            get {
                XElement x = this.GetElement(XName.Get("street", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("street", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (street?, city, state, country, zip?, latitude?, longitude?)
        /// </para>
        /// </summary>
        public string city {
            get {
                XElement x = this.GetElement(XName.Get("city", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("city", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (street?, city, state, country, zip?, latitude?, longitude?)
        /// </para>
        /// </summary>
        public string state {
            get {
                XElement x = this.GetElement(XName.Get("state", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("state", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (street?, city, state, country, zip?, latitude?, longitude?)
        /// </para>
        /// </summary>
        public string country {
            get {
                XElement x = this.GetElement(XName.Get("country", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("country", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (street?, city, state, country, zip?, latitude?, longitude?)
        /// </para>
        /// </summary>
        public string zip {
            get {
                XElement x = this.GetElement(XName.Get("zip", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("zip", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (street?, city, state, country, zip?, latitude?, longitude?)
        /// </para>
        /// </summary>
        public System.Nullable<decimal> latitude {
            get {
                XElement x = this.GetElement(XName.Get("latitude", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElement(XName.Get("latitude", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (street?, city, state, country, zip?, latitude?, longitude?)
        /// </para>
        /// </summary>
        public System.Nullable<decimal> longitude {
            get {
                XElement x = this.GetElement(XName.Get("longitude", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElement(XName.Get("longitude", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("location", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<location>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("street", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("city", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("state", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("country", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("zip", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("latitude", "http://api.facebook.com/1.0/"), typeof(decimal));
            localElementDictionary.Add(XName.Get("longitude", "http://api.facebook.com/1.0/"), typeof(decimal));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (email_hash, account_id?, account_url?)
    /// </para>
    /// </summary>
    public partial class connect_account_info : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator connect_account_info(XElement xe) { return XTypedServices.ToXTypedElement<connect_account_info>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static connect_account_info() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("email_hash", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("account_id", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("account_url", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (email_hash, account_id?, account_url?)
        /// </para>
        /// </summary>
        public connect_account_info() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (email_hash, account_id?, account_url?)
        /// </para>
        /// </summary>
        public string email_hash {
            get {
                XElement x = this.GetElement(XName.Get("email_hash", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("email_hash", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (email_hash, account_id?, account_url?)
        /// </para>
        /// </summary>
        public string account_id {
            get {
                XElement x = this.GetElement(XName.Get("account_id", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("account_id", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (email_hash, account_id?, account_url?)
        /// </para>
        /// </summary>
        public string account_url {
            get {
                XElement x = this.GetElement(XName.Get("account_url", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("account_url", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("connect_account_info", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<connect_account_info>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("email_hash", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("account_id", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("account_url", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (eid, name, tagline, nid, pic, pic_big, pic_small, host, description, event_type, event_subtype, start_time, end_time, creator, update_time, location, venue)
    /// </para>
    /// </summary>
    public partial class facebookevent : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator facebookevent(XElement xe) { return XTypedServices.ToXTypedElement<facebookevent>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static facebookevent() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("eid", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("name", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("tagline", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("nid", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("pic", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("pic_big", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("pic_small", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("host", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("description", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("event_type", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("event_subtype", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("start_time", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("end_time", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("creator", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("update_time", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("location", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("venue", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (eid, name, tagline, nid, pic, pic_big, pic_small, host, description, event_type, event_subtype, start_time, end_time, creator, update_time, location, venue)
        /// </para>
        /// </summary>
        public facebookevent() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (eid, name, tagline, nid, pic, pic_big, pic_small, host, description, event_type, event_subtype, start_time, end_time, creator, update_time, location, venue)
        /// </para>
        /// </summary>
        public long eid {
            get {
                XElement x = this.GetElement(XName.Get("eid", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("eid", "http://api.facebook.com/1.0/"), value, "eid", global::facebook.Schema.eid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (eid, name, tagline, nid, pic, pic_big, pic_small, host, description, event_type, event_subtype, start_time, end_time, creator, update_time, location, venue)
        /// </para>
        /// </summary>
        public string name {
            get {
                XElement x = this.GetElement(XName.Get("name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (eid, name, tagline, nid, pic, pic_big, pic_small, host, description, event_type, event_subtype, start_time, end_time, creator, update_time, location, venue)
        /// </para>
        /// </summary>
        public string tagline {
            get {
                XElement x = this.GetElement(XName.Get("tagline", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("tagline", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (eid, name, tagline, nid, pic, pic_big, pic_small, host, description, event_type, event_subtype, start_time, end_time, creator, update_time, location, venue)
        /// </para>
        /// </summary>
        public long nid {
            get {
                XElement x = this.GetElement(XName.Get("nid", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("nid", "http://api.facebook.com/1.0/"), value, "nid", global::facebook.Schema.nid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (eid, name, tagline, nid, pic, pic_big, pic_small, host, description, event_type, event_subtype, start_time, end_time, creator, update_time, location, venue)
        /// </para>
        /// </summary>
        public string pic {
            get {
                XElement x = this.GetElement(XName.Get("pic", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("pic", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (eid, name, tagline, nid, pic, pic_big, pic_small, host, description, event_type, event_subtype, start_time, end_time, creator, update_time, location, venue)
        /// </para>
        /// </summary>
        public string pic_big {
            get {
                XElement x = this.GetElement(XName.Get("pic_big", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("pic_big", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (eid, name, tagline, nid, pic, pic_big, pic_small, host, description, event_type, event_subtype, start_time, end_time, creator, update_time, location, venue)
        /// </para>
        /// </summary>
        public string pic_small {
            get {
                XElement x = this.GetElement(XName.Get("pic_small", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("pic_small", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (eid, name, tagline, nid, pic, pic_big, pic_small, host, description, event_type, event_subtype, start_time, end_time, creator, update_time, location, venue)
        /// </para>
        /// </summary>
        public string host {
            get {
                XElement x = this.GetElement(XName.Get("host", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("host", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (eid, name, tagline, nid, pic, pic_big, pic_small, host, description, event_type, event_subtype, start_time, end_time, creator, update_time, location, venue)
        /// </para>
        /// </summary>
        public string description {
            get {
                XElement x = this.GetElement(XName.Get("description", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("description", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (eid, name, tagline, nid, pic, pic_big, pic_small, host, description, event_type, event_subtype, start_time, end_time, creator, update_time, location, venue)
        /// </para>
        /// </summary>
        public string event_type {
            get {
                XElement x = this.GetElement(XName.Get("event_type", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("event_type", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (eid, name, tagline, nid, pic, pic_big, pic_small, host, description, event_type, event_subtype, start_time, end_time, creator, update_time, location, venue)
        /// </para>
        /// </summary>
        public string event_subtype {
            get {
                XElement x = this.GetElement(XName.Get("event_subtype", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("event_subtype", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (eid, name, tagline, nid, pic, pic_big, pic_small, host, description, event_type, event_subtype, start_time, end_time, creator, update_time, location, venue)
        /// </para>
        /// </summary>
        public int start_time {
            get {
                XElement x = this.GetElement(XName.Get("start_time", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("start_time", "http://api.facebook.com/1.0/"), value, "start_time", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (eid, name, tagline, nid, pic, pic_big, pic_small, host, description, event_type, event_subtype, start_time, end_time, creator, update_time, location, venue)
        /// </para>
        /// </summary>
        public int end_time {
            get {
                XElement x = this.GetElement(XName.Get("end_time", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("end_time", "http://api.facebook.com/1.0/"), value, "end_time", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (eid, name, tagline, nid, pic, pic_big, pic_small, host, description, event_type, event_subtype, start_time, end_time, creator, update_time, location, venue)
        /// </para>
        /// </summary>
        public long creator {
            get {
                XElement x = this.GetElement(XName.Get("creator", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("creator", "http://api.facebook.com/1.0/"), value, "creator", global::facebook.Schema.id.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (eid, name, tagline, nid, pic, pic_big, pic_small, host, description, event_type, event_subtype, start_time, end_time, creator, update_time, location, venue)
        /// </para>
        /// </summary>
        public int update_time {
            get {
                XElement x = this.GetElement(XName.Get("update_time", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("update_time", "http://api.facebook.com/1.0/"), value, "update_time", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (eid, name, tagline, nid, pic, pic_big, pic_small, host, description, event_type, event_subtype, start_time, end_time, creator, update_time, location, venue)
        /// </para>
        /// </summary>
        public string location {
            get {
                XElement x = this.GetElement(XName.Get("location", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("location", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (eid, name, tagline, nid, pic, pic_big, pic_small, host, description, event_type, event_subtype, start_time, end_time, creator, update_time, location, venue)
        /// </para>
        /// </summary>
        public location venue {
            get {
                XElement x = this.GetElement(XName.Get("venue", "http://api.facebook.com/1.0/"));
                return ((location)(x));
            }
            set {
                this.SetElement(XName.Get("venue", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("event", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<facebookevent>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("eid", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("tagline", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("nid", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("pic", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("pic_big", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("pic_small", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("host", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("description", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("event_type", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("event_subtype", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("start_time", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("end_time", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("creator", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("update_time", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("location", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("venue", "http://api.facebook.com/1.0/"), typeof(location));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (uid, oid, attending)
    /// </para>
    /// </summary>
    public partial class event_member : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator event_member(XElement xe) { return XTypedServices.ToXTypedElement<event_member>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static event_member() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("uid", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("oid", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("attending", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (uid, oid, attending)
        /// </para>
        /// </summary>
        public event_member() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (uid, oid, attending)
        /// </para>
        /// </summary>
        public long uid {
            get {
                XElement x = this.GetElement(XName.Get("uid", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("uid", "http://api.facebook.com/1.0/"), value, "uid", global::facebook.Schema.uid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (uid, oid, attending)
        /// </para>
        /// </summary>
        public long oid {
            get {
                XElement x = this.GetElement(XName.Get("oid", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("oid", "http://api.facebook.com/1.0/"), value, "oid", global::facebook.Schema.eid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (uid, oid, attending)
        /// </para>
        /// </summary>
        public string attending {
            get {
                XElement x = this.GetElement(XName.Get("attending", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("attending", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("event_member", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<event_member>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("uid", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("oid", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("attending", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (gid, name, nid, description, group_type, group_subtype, recent_news, pic, pic_big, pic_small, creator, update_time, office, website, venue)
    /// </para>
    /// </summary>
    public partial class group : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator group(XElement xe) { return XTypedServices.ToXTypedElement<group>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static group() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("gid", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("name", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("nid", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("description", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("group_type", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("group_subtype", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("recent_news", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("pic", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("pic_big", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("pic_small", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("creator", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("update_time", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("office", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("website", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("venue", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (gid, name, nid, description, group_type, group_subtype, recent_news, pic, pic_big, pic_small, creator, update_time, office, website, venue)
        /// </para>
        /// </summary>
        public group() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (gid, name, nid, description, group_type, group_subtype, recent_news, pic, pic_big, pic_small, creator, update_time, office, website, venue)
        /// </para>
        /// </summary>
        public long gid {
            get {
                XElement x = this.GetElement(XName.Get("gid", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("gid", "http://api.facebook.com/1.0/"), value, "gid", global::facebook.Schema.gid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (gid, name, nid, description, group_type, group_subtype, recent_news, pic, pic_big, pic_small, creator, update_time, office, website, venue)
        /// </para>
        /// </summary>
        public string name {
            get {
                XElement x = this.GetElement(XName.Get("name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (gid, name, nid, description, group_type, group_subtype, recent_news, pic, pic_big, pic_small, creator, update_time, office, website, venue)
        /// </para>
        /// </summary>
        public long nid {
            get {
                XElement x = this.GetElement(XName.Get("nid", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("nid", "http://api.facebook.com/1.0/"), value, "nid", global::facebook.Schema.nid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (gid, name, nid, description, group_type, group_subtype, recent_news, pic, pic_big, pic_small, creator, update_time, office, website, venue)
        /// </para>
        /// </summary>
        public string description {
            get {
                XElement x = this.GetElement(XName.Get("description", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("description", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (gid, name, nid, description, group_type, group_subtype, recent_news, pic, pic_big, pic_small, creator, update_time, office, website, venue)
        /// </para>
        /// </summary>
        public string group_type {
            get {
                XElement x = this.GetElement(XName.Get("group_type", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("group_type", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (gid, name, nid, description, group_type, group_subtype, recent_news, pic, pic_big, pic_small, creator, update_time, office, website, venue)
        /// </para>
        /// </summary>
        public string group_subtype {
            get {
                XElement x = this.GetElement(XName.Get("group_subtype", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("group_subtype", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (gid, name, nid, description, group_type, group_subtype, recent_news, pic, pic_big, pic_small, creator, update_time, office, website, venue)
        /// </para>
        /// </summary>
        public string recent_news {
            get {
                XElement x = this.GetElement(XName.Get("recent_news", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("recent_news", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (gid, name, nid, description, group_type, group_subtype, recent_news, pic, pic_big, pic_small, creator, update_time, office, website, venue)
        /// </para>
        /// </summary>
        public string pic {
            get {
                XElement x = this.GetElement(XName.Get("pic", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("pic", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (gid, name, nid, description, group_type, group_subtype, recent_news, pic, pic_big, pic_small, creator, update_time, office, website, venue)
        /// </para>
        /// </summary>
        public string pic_big {
            get {
                XElement x = this.GetElement(XName.Get("pic_big", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("pic_big", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (gid, name, nid, description, group_type, group_subtype, recent_news, pic, pic_big, pic_small, creator, update_time, office, website, venue)
        /// </para>
        /// </summary>
        public string pic_small {
            get {
                XElement x = this.GetElement(XName.Get("pic_small", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("pic_small", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (gid, name, nid, description, group_type, group_subtype, recent_news, pic, pic_big, pic_small, creator, update_time, office, website, venue)
        /// </para>
        /// </summary>
        public long creator {
            get {
                XElement x = this.GetElement(XName.Get("creator", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("creator", "http://api.facebook.com/1.0/"), value, "creator", global::facebook.Schema.uid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (gid, name, nid, description, group_type, group_subtype, recent_news, pic, pic_big, pic_small, creator, update_time, office, website, venue)
        /// </para>
        /// </summary>
        public int update_time {
            get {
                XElement x = this.GetElement(XName.Get("update_time", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("update_time", "http://api.facebook.com/1.0/"), value, "update_time", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (gid, name, nid, description, group_type, group_subtype, recent_news, pic, pic_big, pic_small, creator, update_time, office, website, venue)
        /// </para>
        /// </summary>
        public string office {
            get {
                XElement x = this.GetElement(XName.Get("office", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("office", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (gid, name, nid, description, group_type, group_subtype, recent_news, pic, pic_big, pic_small, creator, update_time, office, website, venue)
        /// </para>
        /// </summary>
        public string website {
            get {
                XElement x = this.GetElement(XName.Get("website", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("website", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (gid, name, nid, description, group_type, group_subtype, recent_news, pic, pic_big, pic_small, creator, update_time, office, website, venue)
        /// </para>
        /// </summary>
        public location venue {
            get {
                XElement x = this.GetElement(XName.Get("venue", "http://api.facebook.com/1.0/"));
                return ((location)(x));
            }
            set {
                this.SetElement(XName.Get("venue", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("group", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<group>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("gid", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("nid", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("description", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("group_type", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("group_subtype", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("recent_news", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("pic", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("pic_big", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("pic_small", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("creator", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("update_time", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("office", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("website", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("venue", "http://api.facebook.com/1.0/"), typeof(location));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (uid, gid, positions)
    /// </para>
    /// </summary>
    public partial class group_member : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator group_member(XElement xe) { return XTypedServices.ToXTypedElement<group_member>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static group_member() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("uid", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("gid", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("positions", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (uid, gid, positions)
        /// </para>
        /// </summary>
        public group_member() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (uid, gid, positions)
        /// </para>
        /// </summary>
        public long uid {
            get {
                XElement x = this.GetElement(XName.Get("uid", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("uid", "http://api.facebook.com/1.0/"), value, "uid", global::facebook.Schema.uid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (uid, gid, positions)
        /// </para>
        /// </summary>
        public long gid {
            get {
                XElement x = this.GetElement(XName.Get("gid", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("gid", "http://api.facebook.com/1.0/"), value, "gid", global::facebook.Schema.gid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (uid, gid, positions)
        /// </para>
        /// </summary>
        public positionsLocalType positions {
            get {
                XElement x = this.GetElement(XName.Get("positions", "http://api.facebook.com/1.0/"));
                return ((positionsLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("positions", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("group_member", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<group_member>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("uid", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("gid", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("positions", "http://api.facebook.com/1.0/"), typeof(positionsLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (member_type*)*
        /// </para>
        /// </summary>
        public partial class positionsLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XSimpleList<string> member_typeField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator positionsLocalType(XElement xe) { return XTypedServices.ToXTypedElement<positionsLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static positionsLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (member_type*)*
            /// </para>
            /// </summary>
            public positionsLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (member_type*)*
            /// </para>
            /// </summary>
            public IList<string> member_type {
                get {
                    if ((this.member_typeField == null)) {
                        this.member_typeField = new XSimpleList<string>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, XName.Get("member_type", "http://api.facebook.com/1.0/"));
                    }
                    return this.member_typeField;
                }
                set {
                    if ((value == null)) {
                        this.member_typeField = null;
                    }
                    else {
                        if ((this.member_typeField == null)) {
                            this.member_typeField = XSimpleList<string>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, value, XName.Get("member_type", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<System.String>(this.member_typeField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("positions", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<positionsLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("member_type", "http://api.facebook.com/1.0/"), typeof(string));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (members, admins, officers, not_replied)
    /// </para>
    /// </summary>
    public partial class group_members : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator group_members(XElement xe) { return XTypedServices.ToXTypedElement<group_members>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static group_members() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("members", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("admins", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("officers", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("not_replied", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (members, admins, officers, not_replied)
        /// </para>
        /// </summary>
        public group_members() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (members, admins, officers, not_replied)
        /// </para>
        /// </summary>
        public membersLocalType members {
            get {
                XElement x = this.GetElement(XName.Get("members", "http://api.facebook.com/1.0/"));
                return ((membersLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("members", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (members, admins, officers, not_replied)
        /// </para>
        /// </summary>
        public adminsLocalType admins {
            get {
                XElement x = this.GetElement(XName.Get("admins", "http://api.facebook.com/1.0/"));
                return ((adminsLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("admins", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (members, admins, officers, not_replied)
        /// </para>
        /// </summary>
        public officersLocalType officers {
            get {
                XElement x = this.GetElement(XName.Get("officers", "http://api.facebook.com/1.0/"));
                return ((officersLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("officers", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (members, admins, officers, not_replied)
        /// </para>
        /// </summary>
        public not_repliedLocalType not_replied {
            get {
                XElement x = this.GetElement(XName.Get("not_replied", "http://api.facebook.com/1.0/"));
                return ((not_repliedLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("not_replied", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("group_members", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<group_members>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("members", "http://api.facebook.com/1.0/"), typeof(membersLocalType));
            localElementDictionary.Add(XName.Get("admins", "http://api.facebook.com/1.0/"), typeof(adminsLocalType));
            localElementDictionary.Add(XName.Get("officers", "http://api.facebook.com/1.0/"), typeof(officersLocalType));
            localElementDictionary.Add(XName.Get("not_replied", "http://api.facebook.com/1.0/"), typeof(not_repliedLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (uid*)*
        /// </para>
        /// </summary>
        public partial class membersLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XSimpleList<long> uidField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator membersLocalType(XElement xe) { return XTypedServices.ToXTypedElement<membersLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static membersLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (uid*)*
            /// </para>
            /// </summary>
            public membersLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (uid*)*
            /// </para>
            /// </summary>
            public IList<long> uid {
                get {
                    if ((this.uidField == null)) {
                        this.uidField = new XSimpleList<long>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, XName.Get("uid", "http://api.facebook.com/1.0/"));
                    }
                    return this.uidField;
                }
                set {
                    if ((value == null)) {
                        this.uidField = null;
                    }
                    else {
                        if ((this.uidField == null)) {
                            this.uidField = XSimpleList<long>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, value, XName.Get("uid", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<System.Int64>(this.uidField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("members", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<membersLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("uid", "http://api.facebook.com/1.0/"), typeof(long));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (uid*)*
        /// </para>
        /// </summary>
        public partial class adminsLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XSimpleList<long> uidField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator adminsLocalType(XElement xe) { return XTypedServices.ToXTypedElement<adminsLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static adminsLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (uid*)*
            /// </para>
            /// </summary>
            public adminsLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (uid*)*
            /// </para>
            /// </summary>
            public IList<long> uid {
                get {
                    if ((this.uidField == null)) {
                        this.uidField = new XSimpleList<long>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, XName.Get("uid", "http://api.facebook.com/1.0/"));
                    }
                    return this.uidField;
                }
                set {
                    if ((value == null)) {
                        this.uidField = null;
                    }
                    else {
                        if ((this.uidField == null)) {
                            this.uidField = XSimpleList<long>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, value, XName.Get("uid", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<System.Int64>(this.uidField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("admins", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<adminsLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("uid", "http://api.facebook.com/1.0/"), typeof(long));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (uid*)*
        /// </para>
        /// </summary>
        public partial class officersLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XSimpleList<long> uidField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator officersLocalType(XElement xe) { return XTypedServices.ToXTypedElement<officersLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static officersLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (uid*)*
            /// </para>
            /// </summary>
            public officersLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (uid*)*
            /// </para>
            /// </summary>
            public IList<long> uid {
                get {
                    if ((this.uidField == null)) {
                        this.uidField = new XSimpleList<long>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, XName.Get("uid", "http://api.facebook.com/1.0/"));
                    }
                    return this.uidField;
                }
                set {
                    if ((value == null)) {
                        this.uidField = null;
                    }
                    else {
                        if ((this.uidField == null)) {
                            this.uidField = XSimpleList<long>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, value, XName.Get("uid", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<System.Int64>(this.uidField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("officers", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<officersLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("uid", "http://api.facebook.com/1.0/"), typeof(long));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (uid*)*
        /// </para>
        /// </summary>
        public partial class not_repliedLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XSimpleList<long> uidField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator not_repliedLocalType(XElement xe) { return XTypedServices.ToXTypedElement<not_repliedLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static not_repliedLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (uid*)*
            /// </para>
            /// </summary>
            public not_repliedLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (uid*)*
            /// </para>
            /// </summary>
            public IList<long> uid {
                get {
                    if ((this.uidField == null)) {
                        this.uidField = new XSimpleList<long>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, XName.Get("uid", "http://api.facebook.com/1.0/"));
                    }
                    return this.uidField;
                }
                set {
                    if ((value == null)) {
                        this.uidField = null;
                    }
                    else {
                        if ((this.uidField == null)) {
                            this.uidField = XSimpleList<long>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, value, XName.Get("uid", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<System.Int64>(this.uidField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("not_replied", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<not_repliedLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("uid", "http://api.facebook.com/1.0/"), typeof(long));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (attending, unsure, declined, not_replied)
    /// </para>
    /// </summary>
    public partial class event_members : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator event_members(XElement xe) { return XTypedServices.ToXTypedElement<event_members>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static event_members() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("attending", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("unsure", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("declined", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("not_replied", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (attending, unsure, declined, not_replied)
        /// </para>
        /// </summary>
        public event_members() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (attending, unsure, declined, not_replied)
        /// </para>
        /// </summary>
        public attendingLocalType attending {
            get {
                XElement x = this.GetElement(XName.Get("attending", "http://api.facebook.com/1.0/"));
                return ((attendingLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("attending", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (attending, unsure, declined, not_replied)
        /// </para>
        /// </summary>
        public unsureLocalType unsure {
            get {
                XElement x = this.GetElement(XName.Get("unsure", "http://api.facebook.com/1.0/"));
                return ((unsureLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("unsure", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (attending, unsure, declined, not_replied)
        /// </para>
        /// </summary>
        public declinedLocalType declined {
            get {
                XElement x = this.GetElement(XName.Get("declined", "http://api.facebook.com/1.0/"));
                return ((declinedLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("declined", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (attending, unsure, declined, not_replied)
        /// </para>
        /// </summary>
        public not_repliedLocalType not_replied {
            get {
                XElement x = this.GetElement(XName.Get("not_replied", "http://api.facebook.com/1.0/"));
                return ((not_repliedLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("not_replied", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("event_members", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<event_members>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("attending", "http://api.facebook.com/1.0/"), typeof(attendingLocalType));
            localElementDictionary.Add(XName.Get("unsure", "http://api.facebook.com/1.0/"), typeof(unsureLocalType));
            localElementDictionary.Add(XName.Get("declined", "http://api.facebook.com/1.0/"), typeof(declinedLocalType));
            localElementDictionary.Add(XName.Get("not_replied", "http://api.facebook.com/1.0/"), typeof(not_repliedLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (uid*)*
        /// </para>
        /// </summary>
        public partial class attendingLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XSimpleList<long> uidField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator attendingLocalType(XElement xe) { return XTypedServices.ToXTypedElement<attendingLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static attendingLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (uid*)*
            /// </para>
            /// </summary>
            public attendingLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (uid*)*
            /// </para>
            /// </summary>
            public IList<long> uid {
                get {
                    if ((this.uidField == null)) {
                        this.uidField = new XSimpleList<long>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, XName.Get("uid", "http://api.facebook.com/1.0/"));
                    }
                    return this.uidField;
                }
                set {
                    if ((value == null)) {
                        this.uidField = null;
                    }
                    else {
                        if ((this.uidField == null)) {
                            this.uidField = XSimpleList<long>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, value, XName.Get("uid", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<System.Int64>(this.uidField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("attending", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<attendingLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("uid", "http://api.facebook.com/1.0/"), typeof(long));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (uid*)*
        /// </para>
        /// </summary>
        public partial class unsureLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XSimpleList<long> uidField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator unsureLocalType(XElement xe) { return XTypedServices.ToXTypedElement<unsureLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static unsureLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (uid*)*
            /// </para>
            /// </summary>
            public unsureLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (uid*)*
            /// </para>
            /// </summary>
            public IList<long> uid {
                get {
                    if ((this.uidField == null)) {
                        this.uidField = new XSimpleList<long>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, XName.Get("uid", "http://api.facebook.com/1.0/"));
                    }
                    return this.uidField;
                }
                set {
                    if ((value == null)) {
                        this.uidField = null;
                    }
                    else {
                        if ((this.uidField == null)) {
                            this.uidField = XSimpleList<long>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, value, XName.Get("uid", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<System.Int64>(this.uidField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("unsure", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<unsureLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("uid", "http://api.facebook.com/1.0/"), typeof(long));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (uid*)*
        /// </para>
        /// </summary>
        public partial class declinedLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XSimpleList<long> uidField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator declinedLocalType(XElement xe) { return XTypedServices.ToXTypedElement<declinedLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static declinedLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (uid*)*
            /// </para>
            /// </summary>
            public declinedLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (uid*)*
            /// </para>
            /// </summary>
            public IList<long> uid {
                get {
                    if ((this.uidField == null)) {
                        this.uidField = new XSimpleList<long>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, XName.Get("uid", "http://api.facebook.com/1.0/"));
                    }
                    return this.uidField;
                }
                set {
                    if ((value == null)) {
                        this.uidField = null;
                    }
                    else {
                        if ((this.uidField == null)) {
                            this.uidField = XSimpleList<long>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, value, XName.Get("uid", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<System.Int64>(this.uidField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("declined", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<declinedLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("uid", "http://api.facebook.com/1.0/"), typeof(long));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (uid*)*
        /// </para>
        /// </summary>
        public partial class not_repliedLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XSimpleList<long> uidField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator not_repliedLocalType(XElement xe) { return XTypedServices.ToXTypedElement<not_repliedLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static not_repliedLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (uid*)*
            /// </para>
            /// </summary>
            public not_repliedLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (uid*)*
            /// </para>
            /// </summary>
            public IList<long> uid {
                get {
                    if ((this.uidField == null)) {
                        this.uidField = new XSimpleList<long>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, XName.Get("uid", "http://api.facebook.com/1.0/"));
                    }
                    return this.uidField;
                }
                set {
                    if ((value == null)) {
                        this.uidField = null;
                    }
                    else {
                        if ((this.uidField == null)) {
                            this.uidField = XSimpleList<long>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, value, XName.Get("uid", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<System.Int64>(this.uidField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("not_replied", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<not_repliedLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("uid", "http://api.facebook.com/1.0/"), typeof(long));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (unread, most_recent)
    /// </para>
    /// </summary>
    public partial class notification_count : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator notification_count(XElement xe) { return XTypedServices.ToXTypedElement<notification_count>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static notification_count() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("unread", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("most_recent", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (unread, most_recent)
        /// </para>
        /// </summary>
        public notification_count() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (unread, most_recent)
        /// </para>
        /// </summary>
        public int unread {
            get {
                XElement x = this.GetElement(XName.Get("unread", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("unread", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (unread, most_recent)
        /// </para>
        /// </summary>
        public int most_recent {
            get {
                XElement x = this.GetElement(XName.Get("most_recent", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("most_recent", "http://api.facebook.com/1.0/"), value, "most_recent", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("notification_count", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<notification_count>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("unread", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("most_recent", "http://api.facebook.com/1.0/"), typeof(int));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (messages, pokes, shares, friend_requests, group_invites, event_invites)
    /// </para>
    /// </summary>
    public partial class notifications : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator notifications(XElement xe) { return XTypedServices.ToXTypedElement<notifications>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static notifications() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("messages", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("pokes", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("shares", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("friend_requests", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("group_invites", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("event_invites", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (messages, pokes, shares, friend_requests, group_invites, event_invites)
        /// </para>
        /// </summary>
        public notifications() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (messages, pokes, shares, friend_requests, group_invites, event_invites)
        /// </para>
        /// </summary>
        public notification_count messages {
            get {
                XElement x = this.GetElement(XName.Get("messages", "http://api.facebook.com/1.0/"));
                return ((notification_count)(x));
            }
            set {
                this.SetElement(XName.Get("messages", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (messages, pokes, shares, friend_requests, group_invites, event_invites)
        /// </para>
        /// </summary>
        public notification_count pokes {
            get {
                XElement x = this.GetElement(XName.Get("pokes", "http://api.facebook.com/1.0/"));
                return ((notification_count)(x));
            }
            set {
                this.SetElement(XName.Get("pokes", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (messages, pokes, shares, friend_requests, group_invites, event_invites)
        /// </para>
        /// </summary>
        public notification_count shares {
            get {
                XElement x = this.GetElement(XName.Get("shares", "http://api.facebook.com/1.0/"));
                return ((notification_count)(x));
            }
            set {
                this.SetElement(XName.Get("shares", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (messages, pokes, shares, friend_requests, group_invites, event_invites)
        /// </para>
        /// </summary>
        public friend_requestsLocalType friend_requests {
            get {
                XElement x = this.GetElement(XName.Get("friend_requests", "http://api.facebook.com/1.0/"));
                return ((friend_requestsLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("friend_requests", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (messages, pokes, shares, friend_requests, group_invites, event_invites)
        /// </para>
        /// </summary>
        public group_invitesLocalType group_invites {
            get {
                XElement x = this.GetElement(XName.Get("group_invites", "http://api.facebook.com/1.0/"));
                return ((group_invitesLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("group_invites", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (messages, pokes, shares, friend_requests, group_invites, event_invites)
        /// </para>
        /// </summary>
        public event_invitesLocalType event_invites {
            get {
                XElement x = this.GetElement(XName.Get("event_invites", "http://api.facebook.com/1.0/"));
                return ((event_invitesLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("event_invites", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("notifications", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<notifications>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("messages", "http://api.facebook.com/1.0/"), typeof(notification_count));
            localElementDictionary.Add(XName.Get("pokes", "http://api.facebook.com/1.0/"), typeof(notification_count));
            localElementDictionary.Add(XName.Get("shares", "http://api.facebook.com/1.0/"), typeof(notification_count));
            localElementDictionary.Add(XName.Get("friend_requests", "http://api.facebook.com/1.0/"), typeof(friend_requestsLocalType));
            localElementDictionary.Add(XName.Get("group_invites", "http://api.facebook.com/1.0/"), typeof(group_invitesLocalType));
            localElementDictionary.Add(XName.Get("event_invites", "http://api.facebook.com/1.0/"), typeof(event_invitesLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (uid*)*
        /// </para>
        /// </summary>
        public partial class friend_requestsLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XSimpleList<long> uidField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator friend_requestsLocalType(XElement xe) { return XTypedServices.ToXTypedElement<friend_requestsLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static friend_requestsLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (uid*)*
            /// </para>
            /// </summary>
            public friend_requestsLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (uid*)*
            /// </para>
            /// </summary>
            public IList<long> uid {
                get {
                    if ((this.uidField == null)) {
                        this.uidField = new XSimpleList<long>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, XName.Get("uid", "http://api.facebook.com/1.0/"));
                    }
                    return this.uidField;
                }
                set {
                    if ((value == null)) {
                        this.uidField = null;
                    }
                    else {
                        if ((this.uidField == null)) {
                            this.uidField = XSimpleList<long>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, value, XName.Get("uid", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<System.Int64>(this.uidField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("friend_requests", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<friend_requestsLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("uid", "http://api.facebook.com/1.0/"), typeof(long));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (gid*)*
        /// </para>
        /// </summary>
        public partial class group_invitesLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XSimpleList<long> gidField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator group_invitesLocalType(XElement xe) { return XTypedServices.ToXTypedElement<group_invitesLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static group_invitesLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (gid*)*
            /// </para>
            /// </summary>
            public group_invitesLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (gid*)*
            /// </para>
            /// </summary>
            public IList<long> gid {
                get {
                    if ((this.gidField == null)) {
                        this.gidField = new XSimpleList<long>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, XName.Get("gid", "http://api.facebook.com/1.0/"));
                    }
                    return this.gidField;
                }
                set {
                    if ((value == null)) {
                        this.gidField = null;
                    }
                    else {
                        if ((this.gidField == null)) {
                            this.gidField = XSimpleList<long>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, value, XName.Get("gid", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<System.Int64>(this.gidField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("group_invites", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<group_invitesLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("gid", "http://api.facebook.com/1.0/"), typeof(long));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (eid*)*
        /// </para>
        /// </summary>
        public partial class event_invitesLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XSimpleList<long> eidField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator event_invitesLocalType(XElement xe) { return XTypedServices.ToXTypedElement<event_invitesLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static event_invitesLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (eid*)*
            /// </para>
            /// </summary>
            public event_invitesLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (eid*)*
            /// </para>
            /// </summary>
            public IList<long> eid {
                get {
                    if ((this.eidField == null)) {
                        this.eidField = new XSimpleList<long>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, XName.Get("eid", "http://api.facebook.com/1.0/"));
                    }
                    return this.eidField;
                }
                set {
                    if ((value == null)) {
                        this.eidField = null;
                    }
                    else {
                        if ((this.eidField == null)) {
                            this.eidField = XSimpleList<long>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, value, XName.Get("eid", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<System.Int64>(this.eidField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("event_invites", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<event_invitesLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("eid", "http://api.facebook.com/1.0/"), typeof(long));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
    /// </para>
    /// </summary>
    public partial class photo : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator photo(XElement xe) { return XTypedServices.ToXTypedElement<photo>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static photo() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("pid", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("aid", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("owner", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("src", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("src_big", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("src_small", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("link", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("caption", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("created", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("story_fbid", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public photo() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public long pid {
            get {
                XElement x = this.GetElement(XName.Get("pid", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("pid", "http://api.facebook.com/1.0/"), value, "pid", global::facebook.Schema.pid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public long aid {
            get {
                XElement x = this.GetElement(XName.Get("aid", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("aid", "http://api.facebook.com/1.0/"), value, "aid", global::facebook.Schema.aid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public long owner {
            get {
                XElement x = this.GetElement(XName.Get("owner", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("owner", "http://api.facebook.com/1.0/"), value, "owner", global::facebook.Schema.uid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public string src {
            get {
                XElement x = this.GetElement(XName.Get("src", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("src", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public string src_big {
            get {
                XElement x = this.GetElement(XName.Get("src_big", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("src_big", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public string src_small {
            get {
                XElement x = this.GetElement(XName.Get("src_small", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("src_small", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public string link {
            get {
                XElement x = this.GetElement(XName.Get("link", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("link", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public string caption {
            get {
                XElement x = this.GetElement(XName.Get("caption", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("caption", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public int created {
            get {
                XElement x = this.GetElement(XName.Get("created", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("created", "http://api.facebook.com/1.0/"), value, "created", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public long story_fbid {
            get {
                XElement x = this.GetElement(XName.Get("story_fbid", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("story_fbid", "http://api.facebook.com/1.0/"), value, "story_fbid", global::facebook.Schema.id.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("photo", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<photo>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("pid", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("aid", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("owner", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("src", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("src_big", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("src_small", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("link", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("caption", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("created", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("story_fbid", "http://api.facebook.com/1.0/"), typeof(long));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (pid, subject?, text?, xcoord, ycoord, created)
    /// </para>
    /// </summary>
    public partial class photo_tag : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator photo_tag(XElement xe) { return XTypedServices.ToXTypedElement<photo_tag>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static photo_tag() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("pid", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("subject", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("text", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("xcoord", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("ycoord", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("created", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (pid, subject?, text?, xcoord, ycoord, created)
        /// </para>
        /// </summary>
        public photo_tag() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, subject?, text?, xcoord, ycoord, created)
        /// </para>
        /// </summary>
        public long pid {
            get {
                XElement x = this.GetElement(XName.Get("pid", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("pid", "http://api.facebook.com/1.0/"), value, "pid", global::facebook.Schema.pid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (pid, subject?, text?, xcoord, ycoord, created)
        /// </para>
        /// </summary>
        public System.Nullable<long> subject {
            get {
                XElement x = this.GetElement(XName.Get("subject", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("subject", "http://api.facebook.com/1.0/"), value, "subject", global::facebook.Schema.uid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (pid, subject?, text?, xcoord, ycoord, created)
        /// </para>
        /// </summary>
        public string text {
            get {
                XElement x = this.GetElement(XName.Get("text", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("text", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, subject?, text?, xcoord, ycoord, created)
        /// </para>
        /// </summary>
        public decimal xcoord {
            get {
                XElement x = this.GetElement(XName.Get("xcoord", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElement(XName.Get("xcoord", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, subject?, text?, xcoord, ycoord, created)
        /// </para>
        /// </summary>
        public decimal ycoord {
            get {
                XElement x = this.GetElement(XName.Get("ycoord", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElement(XName.Get("ycoord", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, subject?, text?, xcoord, ycoord, created)
        /// </para>
        /// </summary>
        public int created {
            get {
                XElement x = this.GetElement(XName.Get("created", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("created", "http://api.facebook.com/1.0/"), value, "created", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("photo_tag", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<photo_tag>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("pid", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("subject", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("text", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("xcoord", "http://api.facebook.com/1.0/"), typeof(decimal));
            localElementDictionary.Add(XName.Get("ycoord", "http://api.facebook.com/1.0/"), typeof(decimal));
            localElementDictionary.Add(XName.Get("created", "http://api.facebook.com/1.0/"), typeof(int));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
    /// </para>
    /// </summary>
    public partial class album : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator album(XElement xe) { return XTypedServices.ToXTypedElement<album>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static album() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("aid", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("cover_pid", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("owner", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("name", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("created", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("modified", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("description", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("location", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("link", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("size", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public album() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public long aid {
            get {
                XElement x = this.GetElement(XName.Get("aid", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("aid", "http://api.facebook.com/1.0/"), value, "aid", global::facebook.Schema.aid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public long cover_pid {
            get {
                XElement x = this.GetElement(XName.Get("cover_pid", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("cover_pid", "http://api.facebook.com/1.0/"), value, "cover_pid", global::facebook.Schema.pid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public long owner {
            get {
                XElement x = this.GetElement(XName.Get("owner", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("owner", "http://api.facebook.com/1.0/"), value, "owner", global::facebook.Schema.uid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public string name {
            get {
                XElement x = this.GetElement(XName.Get("name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public int created {
            get {
                XElement x = this.GetElement(XName.Get("created", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("created", "http://api.facebook.com/1.0/"), value, "created", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public int modified {
            get {
                XElement x = this.GetElement(XName.Get("modified", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("modified", "http://api.facebook.com/1.0/"), value, "modified", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public string description {
            get {
                XElement x = this.GetElement(XName.Get("description", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("description", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public string location {
            get {
                XElement x = this.GetElement(XName.Get("location", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("location", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public string link {
            get {
                XElement x = this.GetElement(XName.Get("link", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("link", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public int size {
            get {
                XElement x = this.GetElement(XName.Get("size", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("size", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("album", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<album>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("aid", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("cover_pid", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("owner", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("created", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("modified", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("description", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("location", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("link", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("size", "http://api.facebook.com/1.0/"), typeof(int));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (nid, name, type, status, year)
    /// </para>
    /// </summary>
    public partial class affiliation : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator affiliation(XElement xe) { return XTypedServices.ToXTypedElement<affiliation>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static affiliation() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nid", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("name", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("type", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("status", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("year", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (nid, name, type, status, year)
        /// </para>
        /// </summary>
        public affiliation() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (nid, name, type, status, year)
        /// </para>
        /// </summary>
        public long nid {
            get {
                XElement x = this.GetElement(XName.Get("nid", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("nid", "http://api.facebook.com/1.0/"), value, "nid", global::facebook.Schema.nid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (nid, name, type, status, year)
        /// </para>
        /// </summary>
        public string name {
            get {
                XElement x = this.GetElement(XName.Get("name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (nid, name, type, status, year)
        /// </para>
        /// </summary>
        public string type {
            get {
                XElement x = this.GetElement(XName.Get("type", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("type", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (nid, name, type, status, year)
        /// </para>
        /// </summary>
        public string status {
            get {
                XElement x = this.GetElement(XName.Get("status", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("status", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (nid, name, type, status, year)
        /// </para>
        /// </summary>
        public int year {
            get {
                XElement x = this.GetElement(XName.Get("year", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("year", "http://api.facebook.com/1.0/"), value, "year", global::facebook.Schema.year.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("affiliation", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<affiliation>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("nid", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("type", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("status", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("year", "http://api.facebook.com/1.0/"), typeof(int));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (hs1_name, hs2_name, grad_year, hs1_id, hs2_id)
    /// </para>
    /// </summary>
    public partial class hs_info : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator hs_info(XElement xe) { return XTypedServices.ToXTypedElement<hs_info>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static hs_info() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("hs1_name", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("hs2_name", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("grad_year", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("hs1_id", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("hs2_id", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (hs1_name, hs2_name, grad_year, hs1_id, hs2_id)
        /// </para>
        /// </summary>
        public hs_info() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (hs1_name, hs2_name, grad_year, hs1_id, hs2_id)
        /// </para>
        /// </summary>
        public string hs1_name {
            get {
                XElement x = this.GetElement(XName.Get("hs1_name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("hs1_name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (hs1_name, hs2_name, grad_year, hs1_id, hs2_id)
        /// </para>
        /// </summary>
        public string hs2_name {
            get {
                XElement x = this.GetElement(XName.Get("hs2_name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("hs2_name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (hs1_name, hs2_name, grad_year, hs1_id, hs2_id)
        /// </para>
        /// </summary>
        public int grad_year {
            get {
                XElement x = this.GetElement(XName.Get("grad_year", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("grad_year", "http://api.facebook.com/1.0/"), value, "grad_year", global::facebook.Schema.year.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (hs1_name, hs2_name, grad_year, hs1_id, hs2_id)
        /// </para>
        /// </summary>
        public int hs1_id {
            get {
                XElement x = this.GetElement(XName.Get("hs1_id", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("hs1_id", "http://api.facebook.com/1.0/"), value, "hs1_id", global::facebook.Schema.hsid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (hs1_name, hs2_name, grad_year, hs1_id, hs2_id)
        /// </para>
        /// </summary>
        public int hs2_id {
            get {
                XElement x = this.GetElement(XName.Get("hs2_id", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("hs2_id", "http://api.facebook.com/1.0/"), value, "hs2_id", global::facebook.Schema.hsid.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("hs_info", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<hs_info>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("hs1_name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("hs2_name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("grad_year", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("hs1_id", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("hs2_id", "http://api.facebook.com/1.0/"), typeof(int));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (name, year, concentrations, degree)
    /// </para>
    /// </summary>
    public partial class education_info : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator education_info(XElement xe) { return XTypedServices.ToXTypedElement<education_info>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static education_info() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("name", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("year", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("concentrations", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("degree", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (name, year, concentrations, degree)
        /// </para>
        /// </summary>
        public education_info() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, year, concentrations, degree)
        /// </para>
        /// </summary>
        public string name {
            get {
                XElement x = this.GetElement(XName.Get("name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, year, concentrations, degree)
        /// </para>
        /// </summary>
        public int year {
            get {
                XElement x = this.GetElement(XName.Get("year", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("year", "http://api.facebook.com/1.0/"), value, "year", global::facebook.Schema.year.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, year, concentrations, degree)
        /// </para>
        /// </summary>
        public concentrationsLocalType concentrations {
            get {
                XElement x = this.GetElement(XName.Get("concentrations", "http://api.facebook.com/1.0/"));
                return ((concentrationsLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("concentrations", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, year, concentrations, degree)
        /// </para>
        /// </summary>
        public string degree {
            get {
                XElement x = this.GetElement(XName.Get("degree", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("degree", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("education_info", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<education_info>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("year", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("concentrations", "http://api.facebook.com/1.0/"), typeof(concentrationsLocalType));
            localElementDictionary.Add(XName.Get("degree", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (concentration*)*
        /// </para>
        /// </summary>
        public partial class concentrationsLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XSimpleList<string> concentrationField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator concentrationsLocalType(XElement xe) { return XTypedServices.ToXTypedElement<concentrationsLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static concentrationsLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (concentration*)*
            /// </para>
            /// </summary>
            public concentrationsLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (concentration*)*
            /// </para>
            /// </summary>
            public IList<string> concentration {
                get {
                    if ((this.concentrationField == null)) {
                        this.concentrationField = new XSimpleList<string>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, XName.Get("concentration", "http://api.facebook.com/1.0/"));
                    }
                    return this.concentrationField;
                }
                set {
                    if ((value == null)) {
                        this.concentrationField = null;
                    }
                    else {
                        if ((this.concentrationField == null)) {
                            this.concentrationField = XSimpleList<string>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, value, XName.Get("concentration", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<System.String>(this.concentrationField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("concentrations", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<concentrationsLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("concentration", "http://api.facebook.com/1.0/"), typeof(string));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (location, company_name, position, description, start_date, end_date)
    /// </para>
    /// </summary>
    public partial class work_info : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator work_info(XElement xe) { return XTypedServices.ToXTypedElement<work_info>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static work_info() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("location", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("company_name", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("position", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("description", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("start_date", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("end_date", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (location, company_name, position, description, start_date, end_date)
        /// </para>
        /// </summary>
        public work_info() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (location, company_name, position, description, start_date, end_date)
        /// </para>
        /// </summary>
        public location location {
            get {
                XElement x = this.GetElement(XName.Get("location", "http://api.facebook.com/1.0/"));
                return ((location)(x));
            }
            set {
                this.SetElement(XName.Get("location", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (location, company_name, position, description, start_date, end_date)
        /// </para>
        /// </summary>
        public string company_name {
            get {
                XElement x = this.GetElement(XName.Get("company_name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("company_name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (location, company_name, position, description, start_date, end_date)
        /// </para>
        /// </summary>
        public string position {
            get {
                XElement x = this.GetElement(XName.Get("position", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("position", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (location, company_name, position, description, start_date, end_date)
        /// </para>
        /// </summary>
        public string description {
            get {
                XElement x = this.GetElement(XName.Get("description", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("description", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (location, company_name, position, description, start_date, end_date)
        /// </para>
        /// </summary>
        public string start_date {
            get {
                XElement x = this.GetElement(XName.Get("start_date", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("start_date", "http://api.facebook.com/1.0/"), value, "start_date", global::facebook.Schema.date.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (location, company_name, position, description, start_date, end_date)
        /// </para>
        /// </summary>
        public string end_date {
            get {
                XElement x = this.GetElement(XName.Get("end_date", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("end_date", "http://api.facebook.com/1.0/"), value, "end_date", global::facebook.Schema.date.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("work_info", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<work_info>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("location", "http://api.facebook.com/1.0/"), typeof(location));
            localElementDictionary.Add(XName.Get("company_name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("position", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("description", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("start_date", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("end_date", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
    /// </para>
    /// </summary>
    public partial class user : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator user(XElement xe) { return XTypedServices.ToXTypedElement<user>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static user() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public user() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public string about_me {
            get {
                XElement x = this.GetElement(XName.Get("about_me", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("about_me", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public string activities {
            get {
                XElement x = this.GetElement(XName.Get("activities", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("activities", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public affiliationsLocalType affiliations {
            get {
                XElement x = this.GetElement(XName.Get("affiliations", "http://api.facebook.com/1.0/"));
                return ((affiliationsLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("affiliations", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public string birthday {
            get {
                XElement x = this.GetElement(XName.Get("birthday", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("birthday", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public string books {
            get {
                XElement x = this.GetElement(XName.Get("books", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("books", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public location current_location {
            get {
                XElement x = this.GetElement(XName.Get("current_location", "http://api.facebook.com/1.0/"));
                return ((location)(x));
            }
            set {
                this.SetElement(XName.Get("current_location", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public education_historyLocalType education_history {
            get {
                XElement x = this.GetElement(XName.Get("education_history", "http://api.facebook.com/1.0/"));
                return ((education_historyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("education_history", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public string first_name {
            get {
                XElement x = this.GetElement(XName.Get("first_name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("first_name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public location hometown_location {
            get {
                XElement x = this.GetElement(XName.Get("hometown_location", "http://api.facebook.com/1.0/"));
                return ((location)(x));
            }
            set {
                this.SetElement(XName.Get("hometown_location", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public hs_info hs_info {
            get {
                XElement x = this.GetElement(XName.Get("hs_info", "http://api.facebook.com/1.0/"));
                return ((hs_info)(x));
            }
            set {
                this.SetElement(XName.Get("hs_info", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public string interests {
            get {
                XElement x = this.GetElement(XName.Get("interests", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("interests", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public System.Nullable<bool> is_app_user {
            get {
                XElement x = this.GetElement(XName.Get("is_app_user", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("is_app_user", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public string last_name {
            get {
                XElement x = this.GetElement(XName.Get("last_name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("last_name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public meeting_forLocalType meeting_for {
            get {
                XElement x = this.GetElement(XName.Get("meeting_for", "http://api.facebook.com/1.0/"));
                return ((meeting_forLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("meeting_for", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public meeting_sexLocalType meeting_sex {
            get {
                XElement x = this.GetElement(XName.Get("meeting_sex", "http://api.facebook.com/1.0/"));
                return ((meeting_sexLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("meeting_sex", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public string movies {
            get {
                XElement x = this.GetElement(XName.Get("movies", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("movies", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public string music {
            get {
                XElement x = this.GetElement(XName.Get("music", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("music", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public string name {
            get {
                XElement x = this.GetElement(XName.Get("name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public System.Nullable<int> notes_count {
            get {
                XElement x = this.GetElement(XName.Get("notes_count", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("notes_count", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public string pic {
            get {
                XElement x = this.GetElement(XName.Get("pic", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("pic", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public string pic_big {
            get {
                XElement x = this.GetElement(XName.Get("pic_big", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("pic_big", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public string pic_small {
            get {
                XElement x = this.GetElement(XName.Get("pic_small", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("pic_small", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public string political {
            get {
                XElement x = this.GetElement(XName.Get("political", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("political", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public System.Nullable<int> profile_update_time {
            get {
                XElement x = this.GetElement(XName.Get("profile_update_time", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("profile_update_time", "http://api.facebook.com/1.0/"), value, "profile_update_time", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public string quotes {
            get {
                XElement x = this.GetElement(XName.Get("quotes", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("quotes", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public string relationship_status {
            get {
                XElement x = this.GetElement(XName.Get("relationship_status", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("relationship_status", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public string religion {
            get {
                XElement x = this.GetElement(XName.Get("religion", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("religion", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public string sex {
            get {
                XElement x = this.GetElement(XName.Get("sex", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("sex", "http://api.facebook.com/1.0/"), value, "sex", global::facebook.Schema.sex.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public System.Nullable<long> significant_other_id {
            get {
                XElement x = this.GetElement(XName.Get("significant_other_id", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("significant_other_id", "http://api.facebook.com/1.0/"), value, "significant_other_id", global::facebook.Schema.uid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public user_status status {
            get {
                XElement x = this.GetElement(XName.Get("status", "http://api.facebook.com/1.0/"));
                return ((user_status)(x));
            }
            set {
                this.SetElement(XName.Get("status", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public System.Nullable<decimal> timezone {
            get {
                XElement x = this.GetElement(XName.Get("timezone", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElement(XName.Get("timezone", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public string tv {
            get {
                XElement x = this.GetElement(XName.Get("tv", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("tv", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public System.Nullable<long> uid {
            get {
                XElement x = this.GetElement(XName.Get("uid", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("uid", "http://api.facebook.com/1.0/"), value, "uid", global::facebook.Schema.uid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public System.Nullable<int> wall_count {
            get {
                XElement x = this.GetElement(XName.Get("wall_count", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("wall_count", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public work_historyLocalType work_history {
            get {
                XElement x = this.GetElement(XName.Get("work_history", "http://api.facebook.com/1.0/"));
                return ((work_historyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("work_history", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public string pic_square {
            get {
                XElement x = this.GetElement(XName.Get("pic_square", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("pic_square", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public System.Nullable<bool> has_added_app {
            get {
                XElement x = this.GetElement(XName.Get("has_added_app", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("has_added_app", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (about_me?, activities?, affiliations?, birthday?, books?, current_location?, education_history?, first_name?, hometown_location?, hs_info?, interests?, is_app_user?, last_name?, meeting_for?, meeting_sex?, movies?, music?, name?, notes_count?, pic?, pic_big?, pic_small?, political?, profile_update_time?, quotes?, relationship_status?, religion?, sex?, significant_other_id?, status?, timezone?, tv?, uid?, wall_count?, work_history?, pic_square?, has_added_app?, email_hashes?)
        /// </para>
        /// </summary>
        public email_hashesLocalType email_hashes {
            get {
                XElement x = this.GetElement(XName.Get("email_hashes", "http://api.facebook.com/1.0/"));
                return ((email_hashesLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("email_hashes", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("user", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<user>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("about_me", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("activities", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("affiliations", "http://api.facebook.com/1.0/"), typeof(affiliationsLocalType));
            localElementDictionary.Add(XName.Get("birthday", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("books", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("current_location", "http://api.facebook.com/1.0/"), typeof(location));
            localElementDictionary.Add(XName.Get("education_history", "http://api.facebook.com/1.0/"), typeof(education_historyLocalType));
            localElementDictionary.Add(XName.Get("first_name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("hometown_location", "http://api.facebook.com/1.0/"), typeof(location));
            localElementDictionary.Add(XName.Get("hs_info", "http://api.facebook.com/1.0/"), typeof(hs_info));
            localElementDictionary.Add(XName.Get("interests", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("is_app_user", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("last_name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("meeting_for", "http://api.facebook.com/1.0/"), typeof(meeting_forLocalType));
            localElementDictionary.Add(XName.Get("meeting_sex", "http://api.facebook.com/1.0/"), typeof(meeting_sexLocalType));
            localElementDictionary.Add(XName.Get("movies", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("music", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("notes_count", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("pic", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("pic_big", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("pic_small", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("political", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("profile_update_time", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("quotes", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("relationship_status", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("religion", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("sex", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("significant_other_id", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("status", "http://api.facebook.com/1.0/"), typeof(user_status));
            localElementDictionary.Add(XName.Get("timezone", "http://api.facebook.com/1.0/"), typeof(decimal));
            localElementDictionary.Add(XName.Get("tv", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("uid", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("wall_count", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("work_history", "http://api.facebook.com/1.0/"), typeof(work_historyLocalType));
            localElementDictionary.Add(XName.Get("pic_square", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("has_added_app", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("email_hashes", "http://api.facebook.com/1.0/"), typeof(email_hashesLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (affiliation*)*
        /// </para>
        /// </summary>
        public partial class affiliationsLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<affiliation> affiliationField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator affiliationsLocalType(XElement xe) { return XTypedServices.ToXTypedElement<affiliationsLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static affiliationsLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (affiliation*)*
            /// </para>
            /// </summary>
            public affiliationsLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (affiliation*)*
            /// </para>
            /// </summary>
            public IList<affiliation> affiliation {
                get {
                    if ((this.affiliationField == null)) {
                        this.affiliationField = new XTypedList<affiliation>(this, LinqToXsdTypeManager.Instance, XName.Get("affiliation", "http://api.facebook.com/1.0/"));
                    }
                    return this.affiliationField;
                }
                set {
                    if ((value == null)) {
                        this.affiliationField = null;
                    }
                    else {
                        if ((this.affiliationField == null)) {
                            this.affiliationField = XTypedList<affiliation>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("affiliation", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<affiliation>(this.affiliationField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("affiliations", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<affiliationsLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("affiliation", "http://api.facebook.com/1.0/"), typeof(affiliation));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (education_info*)*
        /// </para>
        /// </summary>
        public partial class education_historyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<education_info> education_infoField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator education_historyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<education_historyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static education_historyLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (education_info*)*
            /// </para>
            /// </summary>
            public education_historyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (education_info*)*
            /// </para>
            /// </summary>
            public IList<education_info> education_info {
                get {
                    if ((this.education_infoField == null)) {
                        this.education_infoField = new XTypedList<education_info>(this, LinqToXsdTypeManager.Instance, XName.Get("education_info", "http://api.facebook.com/1.0/"));
                    }
                    return this.education_infoField;
                }
                set {
                    if ((value == null)) {
                        this.education_infoField = null;
                    }
                    else {
                        if ((this.education_infoField == null)) {
                            this.education_infoField = XTypedList<education_info>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("education_info", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<education_info>(this.education_infoField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("education_history", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<education_historyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("education_info", "http://api.facebook.com/1.0/"), typeof(education_info));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (seeking*)*
        /// </para>
        /// </summary>
        public partial class meeting_forLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XSimpleList<string> seekingField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator meeting_forLocalType(XElement xe) { return XTypedServices.ToXTypedElement<meeting_forLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static meeting_forLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (seeking*)*
            /// </para>
            /// </summary>
            public meeting_forLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (seeking*)*
            /// </para>
            /// </summary>
            public IList<string> seeking {
                get {
                    if ((this.seekingField == null)) {
                        this.seekingField = new XSimpleList<string>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, XName.Get("seeking", "http://api.facebook.com/1.0/"));
                    }
                    return this.seekingField;
                }
                set {
                    if ((value == null)) {
                        this.seekingField = null;
                    }
                    else {
                        if ((this.seekingField == null)) {
                            this.seekingField = XSimpleList<string>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, value, XName.Get("seeking", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<System.String>(this.seekingField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("meeting_for", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<meeting_forLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("seeking", "http://api.facebook.com/1.0/"), typeof(string));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (sex*)*
        /// </para>
        /// </summary>
        public partial class meeting_sexLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XSimpleList<string> sexField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator meeting_sexLocalType(XElement xe) { return XTypedServices.ToXTypedElement<meeting_sexLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static meeting_sexLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (sex*)*
            /// </para>
            /// </summary>
            public meeting_sexLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (sex*)*
            /// </para>
            /// </summary>
            public IList<string> sex {
                get {
                    if ((this.sexField == null)) {
                        this.sexField = new XSimpleList<string>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, XName.Get("sex", "http://api.facebook.com/1.0/"));
                    }
                    return this.sexField;
                }
                set {
                    if ((value == null)) {
                        this.sexField = null;
                    }
                    else {
                        if ((this.sexField == null)) {
                            this.sexField = XSimpleList<string>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, value, XName.Get("sex", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<System.String>(this.sexField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("meeting_sex", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<meeting_sexLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("sex", "http://api.facebook.com/1.0/"), typeof(string));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (work_info*)*
        /// </para>
        /// </summary>
        public partial class work_historyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<work_info> work_infoField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator work_historyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<work_historyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static work_historyLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (work_info*)*
            /// </para>
            /// </summary>
            public work_historyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (work_info*)*
            /// </para>
            /// </summary>
            public IList<work_info> work_info {
                get {
                    if ((this.work_infoField == null)) {
                        this.work_infoField = new XTypedList<work_info>(this, LinqToXsdTypeManager.Instance, XName.Get("work_info", "http://api.facebook.com/1.0/"));
                    }
                    return this.work_infoField;
                }
                set {
                    if ((value == null)) {
                        this.work_infoField = null;
                    }
                    else {
                        if ((this.work_infoField == null)) {
                            this.work_infoField = XTypedList<work_info>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("work_info", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<work_info>(this.work_infoField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("work_history", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<work_historyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("work_info", "http://api.facebook.com/1.0/"), typeof(work_info));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (email_hashes_elt*)*
        /// </para>
        /// </summary>
        public partial class email_hashesLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XSimpleList<string> email_hashes_eltField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator email_hashesLocalType(XElement xe) { return XTypedServices.ToXTypedElement<email_hashesLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static email_hashesLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (email_hashes_elt*)*
            /// </para>
            /// </summary>
            public email_hashesLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (email_hashes_elt*)*
            /// </para>
            /// </summary>
            public IList<string> email_hashes_elt {
                get {
                    if ((this.email_hashes_eltField == null)) {
                        this.email_hashes_eltField = new XSimpleList<string>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, XName.Get("email_hashes_elt", "http://api.facebook.com/1.0/"));
                    }
                    return this.email_hashes_eltField;
                }
                set {
                    if ((value == null)) {
                        this.email_hashes_eltField = null;
                    }
                    else {
                        if ((this.email_hashes_eltField == null)) {
                            this.email_hashes_eltField = XSimpleList<string>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, value, XName.Get("email_hashes_elt", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<System.String>(this.email_hashes_eltField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("email_hashes", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<email_hashesLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("email_hashes_elt", "http://api.facebook.com/1.0/"), typeof(string));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (uid1?, uid2?, are_friends?)
    /// </para>
    /// </summary>
    public partial class friend_info : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator friend_info(XElement xe) { return XTypedServices.ToXTypedElement<friend_info>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static friend_info() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (uid1?, uid2?, are_friends?)
        /// </para>
        /// </summary>
        public friend_info() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (uid1?, uid2?, are_friends?)
        /// </para>
        /// </summary>
        public System.Nullable<long> uid1 {
            get {
                XElement x = this.GetElement(XName.Get("uid1", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("uid1", "http://api.facebook.com/1.0/"), value, "uid1", global::facebook.Schema.uid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (uid1?, uid2?, are_friends?)
        /// </para>
        /// </summary>
        public System.Nullable<long> uid2 {
            get {
                XElement x = this.GetElement(XName.Get("uid2", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("uid2", "http://api.facebook.com/1.0/"), value, "uid2", global::facebook.Schema.uid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (uid1?, uid2?, are_friends?)
        /// </para>
        /// </summary>
        public System.Nullable<bool> are_friends {
            get {
                XElement x = this.GetElement(XName.Get("are_friends", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("are_friends", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("friend_info", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<friend_info>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("uid1", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("uid2", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("are_friends", "http://api.facebook.com/1.0/"), typeof(bool));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (flid, name, owner?)
    /// </para>
    /// </summary>
    public partial class friendlist : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator friendlist(XElement xe) { return XTypedServices.ToXTypedElement<friendlist>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static friendlist() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("flid", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("name", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("owner", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (flid, name, owner?)
        /// </para>
        /// </summary>
        public friendlist() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (flid, name, owner?)
        /// </para>
        /// </summary>
        public long flid {
            get {
                XElement x = this.GetElement(XName.Get("flid", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("flid", "http://api.facebook.com/1.0/"), value, "flid", global::facebook.Schema.flid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (flid, name, owner?)
        /// </para>
        /// </summary>
        public string name {
            get {
                XElement x = this.GetElement(XName.Get("name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (flid, name, owner?)
        /// </para>
        /// </summary>
        public System.Nullable<long> owner {
            get {
                XElement x = this.GetElement(XName.Get("owner", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("owner", "http://api.facebook.com/1.0/"), value, "owner", global::facebook.Schema.uid.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("friendlist", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<friendlist>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("flid", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("owner", "http://api.facebook.com/1.0/"), typeof(long));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (name, object_class)
    /// </para>
    /// </summary>
    public partial class object_type_info : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator object_type_info(XElement xe) { return XTypedServices.ToXTypedElement<object_type_info>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static object_type_info() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("name", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("object_class", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (name, object_class)
        /// </para>
        /// </summary>
        public object_type_info() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, object_class)
        /// </para>
        /// </summary>
        public string name {
            get {
                XElement x = this.GetElement(XName.Get("name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, object_class)
        /// </para>
        /// </summary>
        public int object_class {
            get {
                XElement x = this.GetElement(XName.Get("object_class", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("object_class", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("object_type_info", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<object_type_info>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("object_class", "http://api.facebook.com/1.0/"), typeof(int));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (name, data_type, index_type)
    /// </para>
    /// </summary>
    public partial class object_property_info : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator object_property_info(XElement xe) { return XTypedServices.ToXTypedElement<object_property_info>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static object_property_info() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("name", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("data_type", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("index_type", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (name, data_type, index_type)
        /// </para>
        /// </summary>
        public object_property_info() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, data_type, index_type)
        /// </para>
        /// </summary>
        public string name {
            get {
                XElement x = this.GetElement(XName.Get("name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, data_type, index_type)
        /// </para>
        /// </summary>
        public int data_type {
            get {
                XElement x = this.GetElement(XName.Get("data_type", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("data_type", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, data_type, index_type)
        /// </para>
        /// </summary>
        public int index_type {
            get {
                XElement x = this.GetElement(XName.Get("index_type", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("index_type", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("object_property_info", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<object_property_info>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("data_type", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("index_type", "http://api.facebook.com/1.0/"), typeof(int));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (alias, object_type, unique)
    /// </para>
    /// </summary>
    public partial class assoc_object_type : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator assoc_object_type(XElement xe) { return XTypedServices.ToXTypedElement<assoc_object_type>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static assoc_object_type() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("alias", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("object_type", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("unique", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (alias, object_type, unique)
        /// </para>
        /// </summary>
        public assoc_object_type() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (alias, object_type, unique)
        /// </para>
        /// </summary>
        public string alias {
            get {
                XElement x = this.GetElement(XName.Get("alias", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("alias", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (alias, object_type, unique)
        /// </para>
        /// </summary>
        public string object_type {
            get {
                XElement x = this.GetElement(XName.Get("object_type", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("object_type", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (alias, object_type, unique)
        /// </para>
        /// </summary>
        public bool unique {
            get {
                XElement x = this.GetElement(XName.Get("unique", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("unique", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("assoc_object_type", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<assoc_object_type>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("alias", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("object_type", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("unique", "http://api.facebook.com/1.0/"), typeof(bool));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (name, assoc_type, assoc_info1, assoc_info2)
    /// </para>
    /// </summary>
    public partial class object_assoc_info : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator object_assoc_info(XElement xe) { return XTypedServices.ToXTypedElement<object_assoc_info>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static object_assoc_info() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("name", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("assoc_type", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("assoc_info1", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("assoc_info2", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (name, assoc_type, assoc_info1, assoc_info2)
        /// </para>
        /// </summary>
        public object_assoc_info() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, assoc_type, assoc_info1, assoc_info2)
        /// </para>
        /// </summary>
        public string name {
            get {
                XElement x = this.GetElement(XName.Get("name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, assoc_type, assoc_info1, assoc_info2)
        /// </para>
        /// </summary>
        public int assoc_type {
            get {
                XElement x = this.GetElement(XName.Get("assoc_type", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("assoc_type", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, assoc_type, assoc_info1, assoc_info2)
        /// </para>
        /// </summary>
        public assoc_object_type assoc_info1 {
            get {
                XElement x = this.GetElement(XName.Get("assoc_info1", "http://api.facebook.com/1.0/"));
                return ((assoc_object_type)(x));
            }
            set {
                this.SetElement(XName.Get("assoc_info1", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, assoc_type, assoc_info1, assoc_info2)
        /// </para>
        /// </summary>
        public assoc_object_type assoc_info2 {
            get {
                XElement x = this.GetElement(XName.Get("assoc_info2", "http://api.facebook.com/1.0/"));
                return ((assoc_object_type)(x));
            }
            set {
                this.SetElement(XName.Get("assoc_info2", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("object_assoc_info", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<object_assoc_info>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("assoc_type", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("assoc_info1", "http://api.facebook.com/1.0/"), typeof(assoc_object_type));
            localElementDictionary.Add(XName.Get("assoc_info2", "http://api.facebook.com/1.0/"), typeof(assoc_object_type));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (name, id1, id2, data, time)
    /// </para>
    /// </summary>
    public partial class object_association : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator object_association(XElement xe) { return XTypedServices.ToXTypedElement<object_association>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static object_association() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("name", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("id1", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("id2", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("data", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("time", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (name, id1, id2, data, time)
        /// </para>
        /// </summary>
        public object_association() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, id1, id2, data, time)
        /// </para>
        /// </summary>
        public string name {
            get {
                XElement x = this.GetElement(XName.Get("name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, id1, id2, data, time)
        /// </para>
        /// </summary>
        public long id1 {
            get {
                XElement x = this.GetElement(XName.Get("id1", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElement(XName.Get("id1", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, id1, id2, data, time)
        /// </para>
        /// </summary>
        public long id2 {
            get {
                XElement x = this.GetElement(XName.Get("id2", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElement(XName.Get("id2", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, id1, id2, data, time)
        /// </para>
        /// </summary>
        public string data {
            get {
                XElement x = this.GetElement(XName.Get("data", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("data", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, id1, id2, data, time)
        /// </para>
        /// </summary>
        public int time {
            get {
                XElement x = this.GetElement(XName.Get("time", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("time", "http://api.facebook.com/1.0/"), value, "time", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("object_association", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<object_association>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("id1", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("id2", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("data", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("time", "http://api.facebook.com/1.0/"), typeof(int));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
    /// </para>
    /// </summary>
    public partial class listing : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator listing(XElement xe) { return XTypedServices.ToXTypedElement<listing>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static listing() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("listing_id", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("url", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("title", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("description", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("price", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("poster", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("update_time", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("category", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("subcategory", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("image_urls", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("condition", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("isbn", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("num_beds", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("num_maths", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("dogs", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("cats", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("smoking", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("square_footage", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("street", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("crossstreet", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("postal", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("rent", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("pay", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("full", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("intern", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("summer", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("nonprofit", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("pay_type", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public listing() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public long listing_id {
            get {
                XElement x = this.GetElement(XName.Get("listing_id", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("listing_id", "http://api.facebook.com/1.0/"), value, "listing_id", global::facebook.Schema.lid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string url {
            get {
                XElement x = this.GetElement(XName.Get("url", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("url", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string title {
            get {
                XElement x = this.GetElement(XName.Get("title", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("title", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string description {
            get {
                XElement x = this.GetElement(XName.Get("description", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("description", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public System.Nullable<decimal> price {
            get {
                XElement x = this.GetElement(XName.Get("price", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElement(XName.Get("price", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public long poster {
            get {
                XElement x = this.GetElement(XName.Get("poster", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("poster", "http://api.facebook.com/1.0/"), value, "poster", global::facebook.Schema.uid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public int update_time {
            get {
                XElement x = this.GetElement(XName.Get("update_time", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("update_time", "http://api.facebook.com/1.0/"), value, "update_time", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string category {
            get {
                XElement x = this.GetElement(XName.Get("category", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("category", "http://api.facebook.com/1.0/"), value, "category", global::facebook.Schema.marketplace_category.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string subcategory {
            get {
                XElement x = this.GetElement(XName.Get("subcategory", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("subcategory", "http://api.facebook.com/1.0/"), value, "subcategory", global::facebook.Schema.marketplace_subcategory.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public image_urlsLocalType image_urls {
            get {
                XElement x = this.GetElement(XName.Get("image_urls", "http://api.facebook.com/1.0/"));
                return ((image_urlsLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("image_urls", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public System.Nullable<int> condition {
            get {
                XElement x = this.GetElement(XName.Get("condition", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("condition", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string isbn {
            get {
                XElement x = this.GetElement(XName.Get("isbn", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("isbn", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string num_beds {
            get {
                XElement x = this.GetElement(XName.Get("num_beds", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("num_beds", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string num_maths {
            get {
                XElement x = this.GetElement(XName.Get("num_maths", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("num_maths", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string dogs {
            get {
                XElement x = this.GetElement(XName.Get("dogs", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("dogs", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string cats {
            get {
                XElement x = this.GetElement(XName.Get("cats", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("cats", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string smoking {
            get {
                XElement x = this.GetElement(XName.Get("smoking", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("smoking", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string square_footage {
            get {
                XElement x = this.GetElement(XName.Get("square_footage", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("square_footage", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string street {
            get {
                XElement x = this.GetElement(XName.Get("street", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("street", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string crossstreet {
            get {
                XElement x = this.GetElement(XName.Get("crossstreet", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("crossstreet", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string postal {
            get {
                XElement x = this.GetElement(XName.Get("postal", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("postal", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string rent {
            get {
                XElement x = this.GetElement(XName.Get("rent", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("rent", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string pay {
            get {
                XElement x = this.GetElement(XName.Get("pay", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("pay", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string full {
            get {
                XElement x = this.GetElement(XName.Get("full", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("full", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string intern {
            get {
                XElement x = this.GetElement(XName.Get("intern", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("intern", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string summer {
            get {
                XElement x = this.GetElement(XName.Get("summer", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("summer", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string nonprofit {
            get {
                XElement x = this.GetElement(XName.Get("nonprofit", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("nonprofit", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (listing_id, url, title, description, price?, poster, update_time, category, subcategory, image_urls?, condition?, isbn?, num_beds?, num_maths?, dogs?, cats?, smoking?, square_footage?, street?, crossstreet?, postal?, rent?, pay?, full?, intern?, summer?, nonprofit?, pay_type?)
        /// </para>
        /// </summary>
        public string pay_type {
            get {
                XElement x = this.GetElement(XName.Get("pay_type", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("pay_type", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("listing", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<listing>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("listing_id", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("url", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("title", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("description", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("price", "http://api.facebook.com/1.0/"), typeof(decimal));
            localElementDictionary.Add(XName.Get("poster", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("update_time", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("category", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("subcategory", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("image_urls", "http://api.facebook.com/1.0/"), typeof(image_urlsLocalType));
            localElementDictionary.Add(XName.Get("condition", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("isbn", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("num_beds", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("num_maths", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("dogs", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("cats", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("smoking", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("square_footage", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("street", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("crossstreet", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("postal", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("rent", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("pay", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("full", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("intern", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("summer", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("nonprofit", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("pay_type", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (image_urls_elt*)*
        /// </para>
        /// </summary>
        public partial class image_urlsLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XSimpleList<string> image_urls_eltField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator image_urlsLocalType(XElement xe) { return XTypedServices.ToXTypedElement<image_urlsLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static image_urlsLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (image_urls_elt*)*
            /// </para>
            /// </summary>
            public image_urlsLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (image_urls_elt*)*
            /// </para>
            /// </summary>
            public IList<string> image_urls_elt {
                get {
                    if ((this.image_urls_eltField == null)) {
                        this.image_urls_eltField = new XSimpleList<string>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, XName.Get("image_urls_elt", "http://api.facebook.com/1.0/"));
                    }
                    return this.image_urls_eltField;
                }
                set {
                    if ((value == null)) {
                        this.image_urls_eltField = null;
                    }
                    else {
                        if ((this.image_urls_eltField == null)) {
                            this.image_urls_eltField = XSimpleList<string>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, value, XName.Get("image_urls_elt", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<System.String>(this.image_urls_eltField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("image_urls", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<image_urlsLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("image_urls_elt", "http://api.facebook.com/1.0/"), typeof(string));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (pref_id, value)
    /// </para>
    /// </summary>
    public partial class preference : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator preference(XElement xe) { return XTypedServices.ToXTypedElement<preference>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static preference() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("pref_id", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("value", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (pref_id, value)
        /// </para>
        /// </summary>
        public preference() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pref_id, value)
        /// </para>
        /// </summary>
        public int pref_id {
            get {
                XElement x = this.GetElement(XName.Get("pref_id", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("pref_id", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pref_id, value)
        /// </para>
        /// </summary>
        public string value {
            get {
                XElement x = this.GetElement(XName.Get("value", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("value", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("preference", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<preference>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("pref_id", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("value", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
    /// </para>
    /// </summary>
    public partial class page_hours : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator page_hours(XElement xe) { return XTypedServices.ToXTypedElement<page_hours>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static page_hours() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("mon_1_open", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("mon_1_close", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("tue_1_open", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("tue_1_close", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("wed_1_open", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("thu_1_open", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("thu_1_close", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("fri_1_open", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("fri_1_close", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("sat_1_open", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("sat_1_close", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("sun_1_open", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("sun_1_close", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("mon_2_open", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("mon_2_close", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("tue_2_open", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("tue_2_close", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("wed_2_open", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("wed_2_close", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("thu_2_open", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("thu_2_close", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("fri_2_open", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("fri_2_close", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("sat_2_open", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("sat_2_close", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("sun_2_open", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("sun_2_close", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public page_hours() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int mon_1_open {
            get {
                XElement x = this.GetElement(XName.Get("mon_1_open", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("mon_1_open", "http://api.facebook.com/1.0/"), value, "mon_1_open", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int mon_1_close {
            get {
                XElement x = this.GetElement(XName.Get("mon_1_close", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("mon_1_close", "http://api.facebook.com/1.0/"), value, "mon_1_close", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int tue_1_open {
            get {
                XElement x = this.GetElement(XName.Get("tue_1_open", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("tue_1_open", "http://api.facebook.com/1.0/"), value, "tue_1_open", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int tue_1_close {
            get {
                XElement x = this.GetElement(XName.Get("tue_1_close", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("tue_1_close", "http://api.facebook.com/1.0/"), value, "tue_1_close", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int wed_1_open {
            get {
                XElement x = this.GetElement(XName.Get("wed_1_open", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("wed_1_open", "http://api.facebook.com/1.0/"), value, "wed_1_open", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int thu_1_open {
            get {
                XElement x = this.GetElement(XName.Get("thu_1_open", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("thu_1_open", "http://api.facebook.com/1.0/"), value, "thu_1_open", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int thu_1_close {
            get {
                XElement x = this.GetElement(XName.Get("thu_1_close", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("thu_1_close", "http://api.facebook.com/1.0/"), value, "thu_1_close", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int fri_1_open {
            get {
                XElement x = this.GetElement(XName.Get("fri_1_open", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("fri_1_open", "http://api.facebook.com/1.0/"), value, "fri_1_open", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int fri_1_close {
            get {
                XElement x = this.GetElement(XName.Get("fri_1_close", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("fri_1_close", "http://api.facebook.com/1.0/"), value, "fri_1_close", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int sat_1_open {
            get {
                XElement x = this.GetElement(XName.Get("sat_1_open", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("sat_1_open", "http://api.facebook.com/1.0/"), value, "sat_1_open", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int sat_1_close {
            get {
                XElement x = this.GetElement(XName.Get("sat_1_close", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("sat_1_close", "http://api.facebook.com/1.0/"), value, "sat_1_close", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int sun_1_open {
            get {
                XElement x = this.GetElement(XName.Get("sun_1_open", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("sun_1_open", "http://api.facebook.com/1.0/"), value, "sun_1_open", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int sun_1_close {
            get {
                XElement x = this.GetElement(XName.Get("sun_1_close", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("sun_1_close", "http://api.facebook.com/1.0/"), value, "sun_1_close", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int mon_2_open {
            get {
                XElement x = this.GetElement(XName.Get("mon_2_open", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("mon_2_open", "http://api.facebook.com/1.0/"), value, "mon_2_open", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int mon_2_close {
            get {
                XElement x = this.GetElement(XName.Get("mon_2_close", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("mon_2_close", "http://api.facebook.com/1.0/"), value, "mon_2_close", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int tue_2_open {
            get {
                XElement x = this.GetElement(XName.Get("tue_2_open", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("tue_2_open", "http://api.facebook.com/1.0/"), value, "tue_2_open", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int tue_2_close {
            get {
                XElement x = this.GetElement(XName.Get("tue_2_close", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("tue_2_close", "http://api.facebook.com/1.0/"), value, "tue_2_close", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int wed_2_open {
            get {
                XElement x = this.GetElement(XName.Get("wed_2_open", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("wed_2_open", "http://api.facebook.com/1.0/"), value, "wed_2_open", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int wed_2_close {
            get {
                XElement x = this.GetElement(XName.Get("wed_2_close", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("wed_2_close", "http://api.facebook.com/1.0/"), value, "wed_2_close", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int thu_2_open {
            get {
                XElement x = this.GetElement(XName.Get("thu_2_open", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("thu_2_open", "http://api.facebook.com/1.0/"), value, "thu_2_open", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int thu_2_close {
            get {
                XElement x = this.GetElement(XName.Get("thu_2_close", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("thu_2_close", "http://api.facebook.com/1.0/"), value, "thu_2_close", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int fri_2_open {
            get {
                XElement x = this.GetElement(XName.Get("fri_2_open", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("fri_2_open", "http://api.facebook.com/1.0/"), value, "fri_2_open", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int fri_2_close {
            get {
                XElement x = this.GetElement(XName.Get("fri_2_close", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("fri_2_close", "http://api.facebook.com/1.0/"), value, "fri_2_close", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int sat_2_open {
            get {
                XElement x = this.GetElement(XName.Get("sat_2_open", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("sat_2_open", "http://api.facebook.com/1.0/"), value, "sat_2_open", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int sat_2_close {
            get {
                XElement x = this.GetElement(XName.Get("sat_2_close", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("sat_2_close", "http://api.facebook.com/1.0/"), value, "sat_2_close", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int sun_2_open {
            get {
                XElement x = this.GetElement(XName.Get("sun_2_open", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("sun_2_open", "http://api.facebook.com/1.0/"), value, "sun_2_open", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (mon_1_open, mon_1_close, tue_1_open, tue_1_close, wed_1_open, thu_1_open, thu_1_close, fri_1_open, fri_1_close, sat_1_open, sat_1_close, sun_1_open, sun_1_close, mon_2_open, mon_2_close, tue_2_open, tue_2_close, wed_2_open, wed_2_close, thu_2_open, thu_2_close, fri_2_open, fri_2_close, sat_2_open, sat_2_close, sun_2_open, sun_2_close)
        /// </para>
        /// </summary>
        public int sun_2_close {
            get {
                XElement x = this.GetElement(XName.Get("sun_2_close", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("sun_2_close", "http://api.facebook.com/1.0/"), value, "sun_2_close", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("page_hours", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<page_hours>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("mon_1_open", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("mon_1_close", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("tue_1_open", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("tue_1_close", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("wed_1_open", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("thu_1_open", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("thu_1_close", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("fri_1_open", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("fri_1_close", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("sat_1_open", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("sat_1_close", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("sun_1_open", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("sun_1_close", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("mon_2_open", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("mon_2_close", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("tue_2_open", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("tue_2_close", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("wed_2_open", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("wed_2_close", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("thu_2_open", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("thu_2_close", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("fri_2_open", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("fri_2_close", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("sat_2_open", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("sat_2_close", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("sun_2_open", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("sun_2_close", "http://api.facebook.com/1.0/"), typeof(int));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (street, lot, valet)
    /// </para>
    /// </summary>
    public partial class page_parking : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator page_parking(XElement xe) { return XTypedServices.ToXTypedElement<page_parking>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static page_parking() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("street", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("lot", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("valet", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (street, lot, valet)
        /// </para>
        /// </summary>
        public page_parking() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (street, lot, valet)
        /// </para>
        /// </summary>
        public bool street {
            get {
                XElement x = this.GetElement(XName.Get("street", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("street", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (street, lot, valet)
        /// </para>
        /// </summary>
        public bool lot {
            get {
                XElement x = this.GetElement(XName.Get("lot", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("lot", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (street, lot, valet)
        /// </para>
        /// </summary>
        public bool valet {
            get {
                XElement x = this.GetElement(XName.Get("valet", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("valet", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("page_parking", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<page_parking>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("street", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("lot", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("valet", "http://api.facebook.com/1.0/"), typeof(bool));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (reserve, walkins, groups, kids, takeout, delivery, catering, waiter, outdoor)
    /// </para>
    /// </summary>
    public partial class page_restaurant_services : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator page_restaurant_services(XElement xe) { return XTypedServices.ToXTypedElement<page_restaurant_services>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static page_restaurant_services() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("reserve", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("walkins", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("groups", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("kids", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("takeout", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("delivery", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("catering", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("waiter", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("outdoor", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (reserve, walkins, groups, kids, takeout, delivery, catering, waiter, outdoor)
        /// </para>
        /// </summary>
        public page_restaurant_services() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (reserve, walkins, groups, kids, takeout, delivery, catering, waiter, outdoor)
        /// </para>
        /// </summary>
        public bool reserve {
            get {
                XElement x = this.GetElement(XName.Get("reserve", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("reserve", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (reserve, walkins, groups, kids, takeout, delivery, catering, waiter, outdoor)
        /// </para>
        /// </summary>
        public bool walkins {
            get {
                XElement x = this.GetElement(XName.Get("walkins", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("walkins", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (reserve, walkins, groups, kids, takeout, delivery, catering, waiter, outdoor)
        /// </para>
        /// </summary>
        public bool groups {
            get {
                XElement x = this.GetElement(XName.Get("groups", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("groups", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (reserve, walkins, groups, kids, takeout, delivery, catering, waiter, outdoor)
        /// </para>
        /// </summary>
        public bool kids {
            get {
                XElement x = this.GetElement(XName.Get("kids", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("kids", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (reserve, walkins, groups, kids, takeout, delivery, catering, waiter, outdoor)
        /// </para>
        /// </summary>
        public bool takeout {
            get {
                XElement x = this.GetElement(XName.Get("takeout", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("takeout", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (reserve, walkins, groups, kids, takeout, delivery, catering, waiter, outdoor)
        /// </para>
        /// </summary>
        public bool delivery {
            get {
                XElement x = this.GetElement(XName.Get("delivery", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("delivery", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (reserve, walkins, groups, kids, takeout, delivery, catering, waiter, outdoor)
        /// </para>
        /// </summary>
        public bool catering {
            get {
                XElement x = this.GetElement(XName.Get("catering", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("catering", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (reserve, walkins, groups, kids, takeout, delivery, catering, waiter, outdoor)
        /// </para>
        /// </summary>
        public bool waiter {
            get {
                XElement x = this.GetElement(XName.Get("waiter", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("waiter", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (reserve, walkins, groups, kids, takeout, delivery, catering, waiter, outdoor)
        /// </para>
        /// </summary>
        public bool outdoor {
            get {
                XElement x = this.GetElement(XName.Get("outdoor", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("outdoor", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("page_restaurant_services", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<page_restaurant_services>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("reserve", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("walkins", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("groups", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("kids", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("takeout", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("delivery", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("catering", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("waiter", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("outdoor", "http://api.facebook.com/1.0/"), typeof(bool));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (breakfast, lunch, dinner, coffee, drinks)
    /// </para>
    /// </summary>
    public partial class page_restaurant_specialties : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator page_restaurant_specialties(XElement xe) { return XTypedServices.ToXTypedElement<page_restaurant_specialties>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static page_restaurant_specialties() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("breakfast", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("lunch", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("dinner", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("coffee", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("drinks", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (breakfast, lunch, dinner, coffee, drinks)
        /// </para>
        /// </summary>
        public page_restaurant_specialties() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (breakfast, lunch, dinner, coffee, drinks)
        /// </para>
        /// </summary>
        public bool breakfast {
            get {
                XElement x = this.GetElement(XName.Get("breakfast", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("breakfast", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (breakfast, lunch, dinner, coffee, drinks)
        /// </para>
        /// </summary>
        public bool lunch {
            get {
                XElement x = this.GetElement(XName.Get("lunch", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("lunch", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (breakfast, lunch, dinner, coffee, drinks)
        /// </para>
        /// </summary>
        public bool dinner {
            get {
                XElement x = this.GetElement(XName.Get("dinner", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("dinner", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (breakfast, lunch, dinner, coffee, drinks)
        /// </para>
        /// </summary>
        public bool coffee {
            get {
                XElement x = this.GetElement(XName.Get("coffee", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("coffee", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (breakfast, lunch, dinner, coffee, drinks)
        /// </para>
        /// </summary>
        public bool drinks {
            get {
                XElement x = this.GetElement(XName.Get("drinks", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("drinks", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("page_restaurant_specialties", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<page_restaurant_specialties>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("breakfast", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("lunch", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("dinner", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("coffee", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("drinks", "http://api.facebook.com/1.0/"), typeof(bool));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (cash_only, visa, amex, mastercard, discover)
    /// </para>
    /// </summary>
    public partial class page_payment_options : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator page_payment_options(XElement xe) { return XTypedServices.ToXTypedElement<page_payment_options>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static page_payment_options() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("cash_only", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("visa", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("amex", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("mastercard", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("discover", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (cash_only, visa, amex, mastercard, discover)
        /// </para>
        /// </summary>
        public page_payment_options() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (cash_only, visa, amex, mastercard, discover)
        /// </para>
        /// </summary>
        public bool cash_only {
            get {
                XElement x = this.GetElement(XName.Get("cash_only", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("cash_only", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (cash_only, visa, amex, mastercard, discover)
        /// </para>
        /// </summary>
        public bool visa {
            get {
                XElement x = this.GetElement(XName.Get("visa", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("visa", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (cash_only, visa, amex, mastercard, discover)
        /// </para>
        /// </summary>
        public bool amex {
            get {
                XElement x = this.GetElement(XName.Get("amex", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("amex", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (cash_only, visa, amex, mastercard, discover)
        /// </para>
        /// </summary>
        public bool mastercard {
            get {
                XElement x = this.GetElement(XName.Get("mastercard", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("mastercard", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (cash_only, visa, amex, mastercard, discover)
        /// </para>
        /// </summary>
        public bool discover {
            get {
                XElement x = this.GetElement(XName.Get("discover", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("discover", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("page_payment_options", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<page_payment_options>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("cash_only", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("visa", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("amex", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("mastercard", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("discover", "http://api.facebook.com/1.0/"), typeof(bool));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
    /// </para>
    /// </summary>
    public partial class page : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator page(XElement xe) { return XTypedServices.ToXTypedElement<page>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static page() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public page() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public System.Nullable<long> page_id {
            get {
                XElement x = this.GetElement(XName.Get("page_id", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("page_id", "http://api.facebook.com/1.0/"), value, "page_id", global::facebook.Schema.page_id.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string name {
            get {
                XElement x = this.GetElement(XName.Get("name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string pic_small {
            get {
                XElement x = this.GetElement(XName.Get("pic_small", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("pic_small", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string pic_big {
            get {
                XElement x = this.GetElement(XName.Get("pic_big", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("pic_big", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string pic_square {
            get {
                XElement x = this.GetElement(XName.Get("pic_square", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("pic_square", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string pic {
            get {
                XElement x = this.GetElement(XName.Get("pic", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("pic", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string pic_large {
            get {
                XElement x = this.GetElement(XName.Get("pic_large", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("pic_large", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string page_url {
            get {
                XElement x = this.GetElement(XName.Get("page_url", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("page_url", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public user_status status {
            get {
                XElement x = this.GetElement(XName.Get("status", "http://api.facebook.com/1.0/"));
                return ((user_status)(x));
            }
            set {
                this.SetElement(XName.Get("status", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string type {
            get {
                XElement x = this.GetElement(XName.Get("type", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("type", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string website {
            get {
                XElement x = this.GetElement(XName.Get("website", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("website", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public System.Nullable<bool> has_added_app {
            get {
                XElement x = this.GetElement(XName.Get("has_added_app", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(XName.Get("has_added_app", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string founded {
            get {
                XElement x = this.GetElement(XName.Get("founded", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("founded", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string company_overview {
            get {
                XElement x = this.GetElement(XName.Get("company_overview", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("company_overview", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string mission {
            get {
                XElement x = this.GetElement(XName.Get("mission", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("mission", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string products {
            get {
                XElement x = this.GetElement(XName.Get("products", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("products", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public location location {
            get {
                XElement x = this.GetElement(XName.Get("location", "http://api.facebook.com/1.0/"));
                return ((location)(x));
            }
            set {
                this.SetElement(XName.Get("location", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public page_parking parking {
            get {
                XElement x = this.GetElement(XName.Get("parking", "http://api.facebook.com/1.0/"));
                return ((page_parking)(x));
            }
            set {
                this.SetElement(XName.Get("parking", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string public_transit {
            get {
                XElement x = this.GetElement(XName.Get("public_transit", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("public_transit", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public page_hours hours {
            get {
                XElement x = this.GetElement(XName.Get("hours", "http://api.facebook.com/1.0/"));
                return ((page_hours)(x));
            }
            set {
                this.SetElement(XName.Get("hours", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string attire {
            get {
                XElement x = this.GetElement(XName.Get("attire", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("attire", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string payment_options {
            get {
                XElement x = this.GetElement(XName.Get("payment_options", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("payment_options", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string culinary_team {
            get {
                XElement x = this.GetElement(XName.Get("culinary_team", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("culinary_team", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string general_manager {
            get {
                XElement x = this.GetElement(XName.Get("general_manager", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("general_manager", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string price_range {
            get {
                XElement x = this.GetElement(XName.Get("price_range", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("price_range", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public page_restaurant_services restaurant_services {
            get {
                XElement x = this.GetElement(XName.Get("restaurant_services", "http://api.facebook.com/1.0/"));
                return ((page_restaurant_services)(x));
            }
            set {
                this.SetElement(XName.Get("restaurant_services", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public page_restaurant_specialties restaurant_specialties {
            get {
                XElement x = this.GetElement(XName.Get("restaurant_specialties", "http://api.facebook.com/1.0/"));
                return ((page_restaurant_specialties)(x));
            }
            set {
                this.SetElement(XName.Get("restaurant_specialties", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string release_date {
            get {
                XElement x = this.GetElement(XName.Get("release_date", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("release_date", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string genre {
            get {
                XElement x = this.GetElement(XName.Get("genre", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("genre", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string starring {
            get {
                XElement x = this.GetElement(XName.Get("starring", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("starring", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string screenplay_by {
            get {
                XElement x = this.GetElement(XName.Get("screenplay_by", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("screenplay_by", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string directed_by {
            get {
                XElement x = this.GetElement(XName.Get("directed_by", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("directed_by", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string produced_by {
            get {
                XElement x = this.GetElement(XName.Get("produced_by", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("produced_by", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string studio {
            get {
                XElement x = this.GetElement(XName.Get("studio", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("studio", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string awards {
            get {
                XElement x = this.GetElement(XName.Get("awards", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("awards", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string plot_outline {
            get {
                XElement x = this.GetElement(XName.Get("plot_outline", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("plot_outline", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string network {
            get {
                XElement x = this.GetElement(XName.Get("network", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("network", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string season {
            get {
                XElement x = this.GetElement(XName.Get("season", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("season", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string schedule {
            get {
                XElement x = this.GetElement(XName.Get("schedule", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("schedule", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string written_by {
            get {
                XElement x = this.GetElement(XName.Get("written_by", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("written_by", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string band_members {
            get {
                XElement x = this.GetElement(XName.Get("band_members", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("band_members", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string hometown {
            get {
                XElement x = this.GetElement(XName.Get("hometown", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("hometown", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string current_location {
            get {
                XElement x = this.GetElement(XName.Get("current_location", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("current_location", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string record_label {
            get {
                XElement x = this.GetElement(XName.Get("record_label", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("record_label", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string booking_agent {
            get {
                XElement x = this.GetElement(XName.Get("booking_agent", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("booking_agent", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string artists_we_like {
            get {
                XElement x = this.GetElement(XName.Get("artists_we_like", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("artists_we_like", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string influences {
            get {
                XElement x = this.GetElement(XName.Get("influences", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("influences", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string band_interests {
            get {
                XElement x = this.GetElement(XName.Get("band_interests", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("band_interests", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string bio {
            get {
                XElement x = this.GetElement(XName.Get("bio", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("bio", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string affiliation {
            get {
                XElement x = this.GetElement(XName.Get("affiliation", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("affiliation", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string birthday {
            get {
                XElement x = this.GetElement(XName.Get("birthday", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("birthday", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string personal_info {
            get {
                XElement x = this.GetElement(XName.Get("personal_info", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("personal_info", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string personal_interests {
            get {
                XElement x = this.GetElement(XName.Get("personal_interests", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("personal_interests", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string members {
            get {
                XElement x = this.GetElement(XName.Get("members", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("members", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string built {
            get {
                XElement x = this.GetElement(XName.Get("built", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("built", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string features {
            get {
                XElement x = this.GetElement(XName.Get("features", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("features", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string mpg {
            get {
                XElement x = this.GetElement(XName.Get("mpg", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("mpg", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (page_id?, name?, pic_small?, pic_big?, pic_square?, pic?, pic_large?, page_url?, status?, type?, website?, has_added_app?, founded?, company_overview?, mission?, products?, location?, parking?, public_transit?, hours?, attire?, payment_options?, culinary_team?, general_manager?, price_range?, restaurant_services?, restaurant_specialties?, release_date?, genre?, starring?, screenplay_by?, directed_by?, produced_by?, studio?, awards?, plot_outline?, network?, season?, schedule?, written_by?, band_members?, hometown?, current_location?, record_label?, booking_agent?, artists_we_like?, influences?, band_interests?, bio?, affiliation?, birthday?, personal_info?, personal_interests?, members?, built?, features?, mpg?, general_info?)
        /// </para>
        /// </summary>
        public string general_info {
            get {
                XElement x = this.GetElement(XName.Get("general_info", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("general_info", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("page", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<page>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("page_id", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("pic_small", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("pic_big", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("pic_square", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("pic", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("pic_large", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("page_url", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("status", "http://api.facebook.com/1.0/"), typeof(user_status));
            localElementDictionary.Add(XName.Get("type", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("website", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("has_added_app", "http://api.facebook.com/1.0/"), typeof(bool));
            localElementDictionary.Add(XName.Get("founded", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("company_overview", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("mission", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("products", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("location", "http://api.facebook.com/1.0/"), typeof(location));
            localElementDictionary.Add(XName.Get("parking", "http://api.facebook.com/1.0/"), typeof(page_parking));
            localElementDictionary.Add(XName.Get("public_transit", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("hours", "http://api.facebook.com/1.0/"), typeof(page_hours));
            localElementDictionary.Add(XName.Get("attire", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("payment_options", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("culinary_team", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("general_manager", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("price_range", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("restaurant_services", "http://api.facebook.com/1.0/"), typeof(page_restaurant_services));
            localElementDictionary.Add(XName.Get("restaurant_specialties", "http://api.facebook.com/1.0/"), typeof(page_restaurant_specialties));
            localElementDictionary.Add(XName.Get("release_date", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("genre", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("starring", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("screenplay_by", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("directed_by", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("produced_by", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("studio", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("awards", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("plot_outline", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("network", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("season", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("schedule", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("written_by", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("band_members", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("hometown", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("current_location", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("record_label", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("booking_agent", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("artists_we_like", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("influences", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("band_interests", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("bio", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("affiliation", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("birthday", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("personal_info", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("personal_interests", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("members", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("built", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("features", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("mpg", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("general_info", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (uid, name, value, expires, path)
    /// </para>
    /// </summary>
    public partial class cookie : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator cookie(XElement xe) { return XTypedServices.ToXTypedElement<cookie>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static cookie() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("uid", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("name", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("value", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("expires", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("path", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (uid, name, value, expires, path)
        /// </para>
        /// </summary>
        public cookie() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (uid, name, value, expires, path)
        /// </para>
        /// </summary>
        public long uid {
            get {
                XElement x = this.GetElement(XName.Get("uid", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("uid", "http://api.facebook.com/1.0/"), value, "uid", global::facebook.Schema.uid.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (uid, name, value, expires, path)
        /// </para>
        /// </summary>
        public string name {
            get {
                XElement x = this.GetElement(XName.Get("name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (uid, name, value, expires, path)
        /// </para>
        /// </summary>
        public string value {
            get {
                XElement x = this.GetElement(XName.Get("value", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("value", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (uid, name, value, expires, path)
        /// </para>
        /// </summary>
        public int expires {
            get {
                XElement x = this.GetElement(XName.Get("expires", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("expires", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (uid, name, value, expires, path)
        /// </para>
        /// </summary>
        public string path {
            get {
                XElement x = this.GetElement(XName.Get("path", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("path", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("cookie", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<cookie>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("uid", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("value", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("expires", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("path", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (description, text)
    /// </para>
    /// </summary>
    public partial class phrase : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator phrase(XElement xe) { return XTypedServices.ToXTypedElement<phrase>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static phrase() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("description", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("text", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (description, text)
        /// </para>
        /// </summary>
        public phrase() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (description, text)
        /// </para>
        /// </summary>
        public string description {
            get {
                XElement x = this.GetElement(XName.Get("description", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("description", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (description, text)
        /// </para>
        /// </summary>
        public string text {
            get {
                XElement x = this.GetElement(XName.Get("text", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("text", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("phrase", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<phrase>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("description", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("text", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (uid, name)
    /// </para>
    /// </summary>
    public partial class developer_info : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator developer_info(XElement xe) { return XTypedServices.ToXTypedElement<developer_info>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static developer_info() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("uid", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("name", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (uid, name)
        /// </para>
        /// </summary>
        public developer_info() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (uid, name)
        /// </para>
        /// </summary>
        public int uid {
            get {
                XElement x = this.GetElement(XName.Get("uid", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("uid", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (uid, name)
        /// </para>
        /// </summary>
        public string name {
            get {
                XElement x = this.GetElement(XName.Get("name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("developer_info", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<developer_info>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("uid", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("name", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
    /// </para>
    /// </summary>
    public partial class app_info : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator app_info(XElement xe) { return XTypedServices.ToXTypedElement<app_info>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static app_info() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("app_id", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("api_key", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("canvas_name", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("display_name", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("icon_url", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("logo_url", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("developers", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("company_name", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("description", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("daily_active_users", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("weekly_active_users", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("monthly_active_users", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public app_info() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public long app_id {
            get {
                XElement x = this.GetElement(XName.Get("app_id", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElement(XName.Get("app_id", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public string api_key {
            get {
                XElement x = this.GetElement(XName.Get("api_key", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("api_key", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public string canvas_name {
            get {
                XElement x = this.GetElement(XName.Get("canvas_name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("canvas_name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public string display_name {
            get {
                XElement x = this.GetElement(XName.Get("display_name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("display_name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public string icon_url {
            get {
                XElement x = this.GetElement(XName.Get("icon_url", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("icon_url", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public string logo_url {
            get {
                XElement x = this.GetElement(XName.Get("logo_url", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("logo_url", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public developersLocalType developers {
            get {
                XElement x = this.GetElement(XName.Get("developers", "http://api.facebook.com/1.0/"));
                return ((developersLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("developers", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public string company_name {
            get {
                XElement x = this.GetElement(XName.Get("company_name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("company_name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public string description {
            get {
                XElement x = this.GetElement(XName.Get("description", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("description", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public int daily_active_users {
            get {
                XElement x = this.GetElement(XName.Get("daily_active_users", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("daily_active_users", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public int weekly_active_users {
            get {
                XElement x = this.GetElement(XName.Get("weekly_active_users", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("weekly_active_users", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public int monthly_active_users {
            get {
                XElement x = this.GetElement(XName.Get("monthly_active_users", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("monthly_active_users", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("app_info", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<app_info>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("app_id", "http://api.facebook.com/1.0/"), typeof(long));
            localElementDictionary.Add(XName.Get("api_key", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("canvas_name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("display_name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("icon_url", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("logo_url", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("developers", "http://api.facebook.com/1.0/"), typeof(developersLocalType));
            localElementDictionary.Add(XName.Get("company_name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("description", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("daily_active_users", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("weekly_active_users", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("monthly_active_users", "http://api.facebook.com/1.0/"), typeof(int));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (developer_info*)*
        /// </para>
        /// </summary>
        public partial class developersLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<developer_info> developer_infoField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator developersLocalType(XElement xe) { return XTypedServices.ToXTypedElement<developersLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static developersLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (developer_info*)*
            /// </para>
            /// </summary>
            public developersLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (developer_info*)*
            /// </para>
            /// </summary>
            public IList<developer_info> developer_info {
                get {
                    if ((this.developer_infoField == null)) {
                        this.developer_infoField = new XTypedList<developer_info>(this, LinqToXsdTypeManager.Instance, XName.Get("developer_info", "http://api.facebook.com/1.0/"));
                    }
                    return this.developer_infoField;
                }
                set {
                    if ((value == null)) {
                        this.developer_infoField = null;
                    }
                    else {
                        if ((this.developer_infoField == null)) {
                            this.developer_infoField = XTypedList<developer_info>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("developer_info", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<developer_info>(this.developer_infoField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("developers", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<developersLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("developer_info", "http://api.facebook.com/1.0/"), typeof(developer_info));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (end_time?, active_users?, api_calls?, unique_api_calls?, canvas_page_views?, unique_canvas_page_views?, canvas_http_request_time_avg?, canvas_fbml_render_time_avg?)
    /// </para>
    /// </summary>
    public partial class metrics : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
         public static explicit operator metrics(XElement xe) { return XTypedServices.ToXTypedElement<metrics>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static metrics() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (end_time?, active_users?, api_calls?, unique_api_calls?, canvas_page_views?, unique_canvas_page_views?, canvas_http_request_time_avg?, canvas_fbml_render_time_avg?)
        /// </para>
        /// </summary>
        public metrics() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (end_time?, active_users?, api_calls?, unique_api_calls?, canvas_page_views?, unique_canvas_page_views?, canvas_http_request_time_avg?, canvas_fbml_render_time_avg?)
        /// </para>
        /// </summary>
        public System.Nullable<int> end_time {
            get {
                XElement x = this.GetElement(XName.Get("end_time", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("end_time", "http://api.facebook.com/1.0/"), value, "end_time", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (end_time?, active_users?, api_calls?, unique_api_calls?, canvas_page_views?, unique_canvas_page_views?, canvas_http_request_time_avg?, canvas_fbml_render_time_avg?)
        /// </para>
        /// </summary>
        public System.Nullable<int> active_users {
            get {
                XElement x = this.GetElement(XName.Get("active_users", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("active_users", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (end_time?, active_users?, api_calls?, unique_api_calls?, canvas_page_views?, unique_canvas_page_views?, canvas_http_request_time_avg?, canvas_fbml_render_time_avg?)
        /// </para>
        /// </summary>
        public System.Nullable<int> api_calls {
            get {
                XElement x = this.GetElement(XName.Get("api_calls", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("api_calls", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (end_time?, active_users?, api_calls?, unique_api_calls?, canvas_page_views?, unique_canvas_page_views?, canvas_http_request_time_avg?, canvas_fbml_render_time_avg?)
        /// </para>
        /// </summary>
        public System.Nullable<int> unique_api_calls {
            get {
                XElement x = this.GetElement(XName.Get("unique_api_calls", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("unique_api_calls", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (end_time?, active_users?, api_calls?, unique_api_calls?, canvas_page_views?, unique_canvas_page_views?, canvas_http_request_time_avg?, canvas_fbml_render_time_avg?)
        /// </para>
        /// </summary>
        public System.Nullable<int> canvas_page_views {
            get {
                XElement x = this.GetElement(XName.Get("canvas_page_views", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("canvas_page_views", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (end_time?, active_users?, api_calls?, unique_api_calls?, canvas_page_views?, unique_canvas_page_views?, canvas_http_request_time_avg?, canvas_fbml_render_time_avg?)
        /// </para>
        /// </summary>
        public System.Nullable<int> unique_canvas_page_views {
            get {
                XElement x = this.GetElement(XName.Get("unique_canvas_page_views", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("unique_canvas_page_views", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (end_time?, active_users?, api_calls?, unique_api_calls?, canvas_page_views?, unique_canvas_page_views?, canvas_http_request_time_avg?, canvas_fbml_render_time_avg?)
        /// </para>
        /// </summary>
        public System.Nullable<int> canvas_http_request_time_avg {
            get {
                XElement x = this.GetElement(XName.Get("canvas_http_request_time_avg", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("canvas_http_request_time_avg", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (end_time?, active_users?, api_calls?, unique_api_calls?, canvas_page_views?, unique_canvas_page_views?, canvas_http_request_time_avg?, canvas_fbml_render_time_avg?)
        /// </para>
        /// </summary>
        public System.Nullable<int> canvas_fbml_render_time_avg {
            get {
                XElement x = this.GetElement(XName.Get("canvas_fbml_render_time_avg", "http://api.facebook.com/1.0/"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("canvas_fbml_render_time_avg", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("metrics", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<metrics>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("end_time", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("active_users", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("api_calls", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("unique_api_calls", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("canvas_page_views", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("unique_canvas_page_views", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("canvas_http_request_time_avg", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("canvas_fbml_render_time_avg", "http://api.facebook.com/1.0/"), typeof(int));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (template_title, template_body)
    /// </para>
    /// </summary>
    public partial class short_story_template : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator short_story_template(XElement xe) { return XTypedServices.ToXTypedElement<short_story_template>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static short_story_template() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("template_title", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("template_body", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (template_title, template_body)
        /// </para>
        /// </summary>
        public short_story_template() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (template_title, template_body)
        /// </para>
        /// </summary>
        public string template_title {
            get {
                XElement x = this.GetElement(XName.Get("template_title", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("template_title", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (template_title, template_body)
        /// </para>
        /// </summary>
        public string template_body {
            get {
                XElement x = this.GetElement(XName.Get("template_body", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("template_body", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("short_story_template", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<short_story_template>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("template_title", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("template_body", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (template_title, template_body)
    /// </para>
    /// </summary>
    public partial class full_story_template : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator full_story_template(XElement xe) { return XTypedServices.ToXTypedElement<full_story_template>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static full_story_template() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("template_title", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("template_body", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (template_title, template_body)
        /// </para>
        /// </summary>
        public full_story_template() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (template_title, template_body)
        /// </para>
        /// </summary>
        public string template_title {
            get {
                XElement x = this.GetElement(XName.Get("template_title", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("template_title", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (template_title, template_body)
        /// </para>
        /// </summary>
        public string template_body {
            get {
                XElement x = this.GetElement(XName.Get("template_body", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("template_body", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("full_story_template", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<full_story_template>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("template_title", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("template_body", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (text, href)
    /// </para>
    /// </summary>
    public partial class action_link : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator action_link(XElement xe) { return XTypedServices.ToXTypedElement<action_link>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static action_link() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("text", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("href", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (text, href)
        /// </para>
        /// </summary>
        public action_link() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (text, href)
        /// </para>
        /// </summary>
        public string text {
            get {
                XElement x = this.GetElement(XName.Get("text", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("text", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (text, href)
        /// </para>
        /// </summary>
        public string href {
            get {
                XElement x = this.GetElement(XName.Get("href", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("href", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("action_link", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<action_link>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("text", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("href", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (one_line_story_templates, short_story_templates, full_story_template, action_links, time_created, template_bundle_id)
    /// </para>
    /// </summary>
    public partial class template_bundle : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator template_bundle(XElement xe) { return XTypedServices.ToXTypedElement<template_bundle>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static template_bundle() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("one_line_story_templates", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("short_story_templates", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("full_story_template", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("action_links", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("time_created", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("template_bundle_id", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (one_line_story_templates, short_story_templates, full_story_template, action_links, time_created, template_bundle_id)
        /// </para>
        /// </summary>
        public template_bundle() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (one_line_story_templates, short_story_templates, full_story_template, action_links, time_created, template_bundle_id)
        /// </para>
        /// </summary>
        public one_line_story_templatesLocalType one_line_story_templates {
            get {
                XElement x = this.GetElement(XName.Get("one_line_story_templates", "http://api.facebook.com/1.0/"));
                return ((one_line_story_templatesLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("one_line_story_templates", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (one_line_story_templates, short_story_templates, full_story_template, action_links, time_created, template_bundle_id)
        /// </para>
        /// </summary>
        public short_story_templatesLocalType short_story_templates {
            get {
                XElement x = this.GetElement(XName.Get("short_story_templates", "http://api.facebook.com/1.0/"));
                return ((short_story_templatesLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("short_story_templates", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (one_line_story_templates, short_story_templates, full_story_template, action_links, time_created, template_bundle_id)
        /// </para>
        /// </summary>
        public full_story_template full_story_template {
            get {
                XElement x = this.GetElement(XName.Get("full_story_template", "http://api.facebook.com/1.0/"));
                return ((full_story_template)(x));
            }
            set {
                this.SetElement(XName.Get("full_story_template", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (one_line_story_templates, short_story_templates, full_story_template, action_links, time_created, template_bundle_id)
        /// </para>
        /// </summary>
        public action_linksLocalType action_links {
            get {
                XElement x = this.GetElement(XName.Get("action_links", "http://api.facebook.com/1.0/"));
                return ((action_linksLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("action_links", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (one_line_story_templates, short_story_templates, full_story_template, action_links, time_created, template_bundle_id)
        /// </para>
        /// </summary>
        public int time_created {
            get {
                XElement x = this.GetElement(XName.Get("time_created", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("time_created", "http://api.facebook.com/1.0/"), value, "time_created", global::facebook.Schema.time.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (one_line_story_templates, short_story_templates, full_story_template, action_links, time_created, template_bundle_id)
        /// </para>
        /// </summary>
        public long template_bundle_id {
            get {
                XElement x = this.GetElement(XName.Get("template_bundle_id", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElementWithValidation(XName.Get("template_bundle_id", "http://api.facebook.com/1.0/"), value, "template_bundle_id", global::facebook.Schema.tbid.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("template_bundle", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<template_bundle>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("one_line_story_templates", "http://api.facebook.com/1.0/"), typeof(one_line_story_templatesLocalType));
            localElementDictionary.Add(XName.Get("short_story_templates", "http://api.facebook.com/1.0/"), typeof(short_story_templatesLocalType));
            localElementDictionary.Add(XName.Get("full_story_template", "http://api.facebook.com/1.0/"), typeof(full_story_template));
            localElementDictionary.Add(XName.Get("action_links", "http://api.facebook.com/1.0/"), typeof(action_linksLocalType));
            localElementDictionary.Add(XName.Get("time_created", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("template_bundle_id", "http://api.facebook.com/1.0/"), typeof(long));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (one_line_story_template*)*
        /// </para>
        /// </summary>
        public partial class one_line_story_templatesLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XSimpleList<string> one_line_story_templateField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator one_line_story_templatesLocalType(XElement xe) { return XTypedServices.ToXTypedElement<one_line_story_templatesLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static one_line_story_templatesLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (one_line_story_template*)*
            /// </para>
            /// </summary>
            public one_line_story_templatesLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (one_line_story_template*)*
            /// </para>
            /// </summary>
            public IList<string> one_line_story_template {
                get {
                    if ((this.one_line_story_templateField == null)) {
                        this.one_line_story_templateField = new XSimpleList<string>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, XName.Get("one_line_story_template", "http://api.facebook.com/1.0/"));
                    }
                    return this.one_line_story_templateField;
                }
                set {
                    if ((value == null)) {
                        this.one_line_story_templateField = null;
                    }
                    else {
                        if ((this.one_line_story_templateField == null)) {
                            this.one_line_story_templateField = XSimpleList<string>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, value, XName.Get("one_line_story_template", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<System.String>(this.one_line_story_templateField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("one_line_story_templates", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<one_line_story_templatesLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("one_line_story_template", "http://api.facebook.com/1.0/"), typeof(string));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (short_story_template*)*
        /// </para>
        /// </summary>
        public partial class short_story_templatesLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<short_story_template> short_story_templateField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator short_story_templatesLocalType(XElement xe) { return XTypedServices.ToXTypedElement<short_story_templatesLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static short_story_templatesLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (short_story_template*)*
            /// </para>
            /// </summary>
            public short_story_templatesLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (short_story_template*)*
            /// </para>
            /// </summary>
            public IList<short_story_template> short_story_template {
                get {
                    if ((this.short_story_templateField == null)) {
                        this.short_story_templateField = new XTypedList<short_story_template>(this, LinqToXsdTypeManager.Instance, XName.Get("short_story_template", "http://api.facebook.com/1.0/"));
                    }
                    return this.short_story_templateField;
                }
                set {
                    if ((value == null)) {
                        this.short_story_templateField = null;
                    }
                    else {
                        if ((this.short_story_templateField == null)) {
                            this.short_story_templateField = XTypedList<short_story_template>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("short_story_template", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<short_story_template>(this.short_story_templateField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("short_story_templates", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<short_story_templatesLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("short_story_template", "http://api.facebook.com/1.0/"), typeof(short_story_template));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (action_link*)*
        /// </para>
        /// </summary>
        public partial class action_linksLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<action_link> action_linkField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator action_linksLocalType(XElement xe) { return XTypedServices.ToXTypedElement<action_linksLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static action_linksLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (action_link*)*
            /// </para>
            /// </summary>
            public action_linksLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (action_link*)*
            /// </para>
            /// </summary>
            public IList<action_link> action_link {
                get {
                    if ((this.action_linkField == null)) {
                        this.action_linkField = new XTypedList<action_link>(this, LinqToXsdTypeManager.Instance, XName.Get("action_link", "http://api.facebook.com/1.0/"));
                    }
                    return this.action_linkField;
                }
                set {
                    if ((value == null)) {
                        this.action_linkField = null;
                    }
                    else {
                        if ((this.action_linkField == null)) {
                            this.action_linkField = XTypedList<action_link>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("action_link", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<action_link>(this.action_linkField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("action_links", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<action_linksLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("action_link", "http://api.facebook.com/1.0/"), typeof(action_link));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (label, sublabel, description, link, image, meta)
    /// </para>
    /// </summary>
    public partial class info_item : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator info_item(XElement xe) { return XTypedServices.ToXTypedElement<info_item>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static info_item() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("label", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("sublabel", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("description", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("link", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("image", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("meta", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (label, sublabel, description, link, image, meta)
        /// </para>
        /// </summary>
        public info_item() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (label, sublabel, description, link, image, meta)
        /// </para>
        /// </summary>
        public string label {
            get {
                XElement x = this.GetElement(XName.Get("label", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("label", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (label, sublabel, description, link, image, meta)
        /// </para>
        /// </summary>
        public string sublabel {
            get {
                XElement x = this.GetElement(XName.Get("sublabel", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("sublabel", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (label, sublabel, description, link, image, meta)
        /// </para>
        /// </summary>
        public string description {
            get {
                XElement x = this.GetElement(XName.Get("description", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("description", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (label, sublabel, description, link, image, meta)
        /// </para>
        /// </summary>
        public string link {
            get {
                XElement x = this.GetElement(XName.Get("link", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("link", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (label, sublabel, description, link, image, meta)
        /// </para>
        /// </summary>
        public string image {
            get {
                XElement x = this.GetElement(XName.Get("image", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("image", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (label, sublabel, description, link, image, meta)
        /// </para>
        /// </summary>
        public string meta {
            get {
                XElement x = this.GetElement(XName.Get("meta", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("meta", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("info_item", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<info_item>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("label", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("sublabel", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("description", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("link", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("image", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("meta", "http://api.facebook.com/1.0/"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (field, items)
    /// </para>
    /// </summary>
    public partial class info_field : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator info_field(XElement xe) { return XTypedServices.ToXTypedElement<info_field>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static info_field() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("field", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("items", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (field, items)
        /// </para>
        /// </summary>
        public info_field() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (field, items)
        /// </para>
        /// </summary>
        public string field {
            get {
                XElement x = this.GetElement(XName.Get("field", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("field", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (field, items)
        /// </para>
        /// </summary>
        public itemsLocalType items {
            get {
                XElement x = this.GetElement(XName.Get("items", "http://api.facebook.com/1.0/"));
                return ((itemsLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("items", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("info_field", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<info_field>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("field", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("items", "http://api.facebook.com/1.0/"), typeof(itemsLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (info_item*)*
        /// </para>
        /// </summary>
        public partial class itemsLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<info_item> info_itemField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator itemsLocalType(XElement xe) { return XTypedServices.ToXTypedElement<itemsLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static itemsLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (info_item*)*
            /// </para>
            /// </summary>
            public itemsLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (info_item*)*
            /// </para>
            /// </summary>
            public IList<info_item> info_item {
                get {
                    if ((this.info_itemField == null)) {
                        this.info_itemField = new XTypedList<info_item>(this, LinqToXsdTypeManager.Instance, XName.Get("info_item", "http://api.facebook.com/1.0/"));
                    }
                    return this.info_itemField;
                }
                set {
                    if ((value == null)) {
                        this.info_itemField = null;
                    }
                    else {
                        if ((this.info_itemField == null)) {
                            this.info_itemField = XTypedList<info_item>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("info_item", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<info_item>(this.info_itemField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("items", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<itemsLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("info_item", "http://api.facebook.com/1.0/"), typeof(info_item));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (title, type, info_fields)
    /// </para>
    /// </summary>
    public partial class user_info : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator user_info(XElement xe) { return XTypedServices.ToXTypedElement<user_info>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static user_info() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("title", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("type", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("info_fields", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (title, type, info_fields)
        /// </para>
        /// </summary>
        public user_info() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (title, type, info_fields)
        /// </para>
        /// </summary>
        public string title {
            get {
                XElement x = this.GetElement(XName.Get("title", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("title", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (title, type, info_fields)
        /// </para>
        /// </summary>
        public int type {
            get {
                XElement x = this.GetElement(XName.Get("type", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("type", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (title, type, info_fields)
        /// </para>
        /// </summary>
        public info_fieldsLocalType info_fields {
            get {
                XElement x = this.GetElement(XName.Get("info_fields", "http://api.facebook.com/1.0/"));
                return ((info_fieldsLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("info_fields", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("user_info", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<user_info>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("title", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("type", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("info_fields", "http://api.facebook.com/1.0/"), typeof(info_fieldsLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (info_field*)*
        /// </para>
        /// </summary>
        public partial class info_fieldsLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<info_field> info_fieldField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
         public static explicit operator info_fieldsLocalType(XElement xe) { return XTypedServices.ToXTypedElement<info_fieldsLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static info_fieldsLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (info_field*)*
            /// </para>
            /// </summary>
            public info_fieldsLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional, repeating
            /// </para>
            /// <para>
            /// Regular expression: (info_field*)*
            /// </para>
            /// </summary>
            public IList<info_field> info_field {
                get {
                    if ((this.info_fieldField == null)) {
                        this.info_fieldField = new XTypedList<info_field>(this, LinqToXsdTypeManager.Instance, XName.Get("info_field", "http://api.facebook.com/1.0/"));
                    }
                    return this.info_fieldField;
                }
                set {
                    if ((value == null)) {
                        this.info_fieldField = null;
                    }
                    else {
                        if ((this.info_fieldField == null)) {
                            this.info_fieldField = XTypedList<info_field>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("info_field", "http://api.facebook.com/1.0/"));
                        }
                        else {
                            XTypedServices.SetList<info_field>(this.info_fieldField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// </summary>
            public System.Nullable<bool> list {
                get {
                    XAttribute x = this.Attribute(XName.Get("list", ""));
                    if ((x == null)) {
                        return null;
                    }
                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("list", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("info_fields", "http://api.facebook.com/1.0/");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<info_fieldsLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("info_field", "http://api.facebook.com/1.0/"), typeof(info_field));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (name, assoc_type, assoc_info1, assoc_info2)
    /// </para>
    /// </summary>
    public partial class container : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator container(XElement xe) { return XTypedServices.ToXTypedElement<container>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static container() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("name", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("assoc_type", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("assoc_info1", "http://api.facebook.com/1.0/")), new NamedContentModelEntity(XName.Get("assoc_info2", "http://api.facebook.com/1.0/")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (name, assoc_type, assoc_info1, assoc_info2)
        /// </para>
        /// </summary>
        public container() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, assoc_type, assoc_info1, assoc_info2)
        /// </para>
        /// </summary>
        public string name {
            get {
                XElement x = this.GetElement(XName.Get("name", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(XName.Get("name", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, assoc_type, assoc_info1, assoc_info2)
        /// </para>
        /// </summary>
        public int assoc_type {
            get {
                XElement x = this.GetElement(XName.Get("assoc_type", "http://api.facebook.com/1.0/"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(XName.Get("assoc_type", "http://api.facebook.com/1.0/"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, assoc_type, assoc_info1, assoc_info2)
        /// </para>
        /// </summary>
        public assoc_object_type assoc_info1 {
            get {
                XElement x = this.GetElement(XName.Get("assoc_info1", "http://api.facebook.com/1.0/"));
                return ((assoc_object_type)(x));
            }
            set {
                this.SetElement(XName.Get("assoc_info1", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, assoc_type, assoc_info1, assoc_info2)
        /// </para>
        /// </summary>
        public assoc_object_type assoc_info2 {
            get {
                XElement x = this.GetElement(XName.Get("assoc_info2", "http://api.facebook.com/1.0/"));
                return ((assoc_object_type)(x));
            }
            set {
                this.SetElement(XName.Get("assoc_info2", "http://api.facebook.com/1.0/"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("container", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<container>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("name", "http://api.facebook.com/1.0/"), typeof(string));
            localElementDictionary.Add(XName.Get("assoc_type", "http://api.facebook.com/1.0/"), typeof(int));
            localElementDictionary.Add(XName.Get("assoc_info1", "http://api.facebook.com/1.0/"), typeof(assoc_object_type));
            localElementDictionary.Add(XName.Get("assoc_info2", "http://api.facebook.com/1.0/"), typeof(assoc_object_type));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    public partial class auth_createToken_response : XTypedElement, IXMetaData {
        
         public static explicit operator auth_createToken_response(XElement xe) { return XTypedServices.ToXTypedElement<auth_createToken_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public auth_createToken_response() {
        }
        
        public auth_createToken_response(string content) {
            this.TypedValue = content;
        }
        
        public string TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetValueWithValidation(value, "TypedValue", global::facebook.Schema.auth_token.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("auth_createToken_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static auth_createToken_response Load(string xmlFile) {
            return XTypedServices.Load<auth_createToken_response>(xmlFile);
        }
        
        public static auth_createToken_response Parse(string xml) {
            return XTypedServices.Parse<auth_createToken_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<auth_createToken_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class auth_getSession_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private session_info ContentField;
        
         public static explicit operator auth_getSession_response(XElement xe) { return XTypedServices.ToXTypedElement<auth_getSession_response, session_info>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public auth_getSession_response() {
            SetInnerType(new session_info());
        }
        
        public auth_getSession_response(session_info content) {
            SetInnerType(content);
        }
        
        public override XElement Untyped {
            get {
                return base.Untyped;
            }
            set {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }
        
        public session_info Content {
            get {
                return ContentField;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (session_key, uid, expires, secret?)
        /// </para>
        /// </summary>
        public string session_key {
            get {
                return this.ContentField.session_key;
            }
            set {
                this.ContentField.session_key = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (session_key, uid, expires, secret?)
        /// </para>
        /// </summary>
        public long uid {
            get {
                return this.ContentField.uid;
            }
            set {
                this.ContentField.uid = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (session_key, uid, expires, secret?)
        /// </para>
        /// </summary>
        public int expires {
            get {
                return this.ContentField.expires;
            }
            set {
                this.ContentField.expires = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (session_key, uid, expires, secret?)
        /// </para>
        /// </summary>
        public string secret {
            get {
                return this.ContentField.secret;
            }
            set {
                this.ContentField.secret = value;
            }
        }
        
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }
        
        XTypedElement IXMetaData.Content {
            get {
                return this.Content;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("auth_getSession_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static auth_getSession_response Load(string xmlFile) {
            return XTypedServices.Load<auth_getSession_response, session_info>(xmlFile, LinqToXsdTypeManager.Instance);
        }
        
        public static auth_getSession_response Parse(string xml) {
            return XTypedServices.Parse<auth_getSession_response, session_info>(xml, LinqToXsdTypeManager.Instance);
        }
        
        public override XTypedElement Clone() {
            return new auth_getSession_response(((session_info)(this.Content.Clone())));
        }
        
        private void SetInnerType(session_info ContentField) {
            this.ContentField = ((session_info)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class auth_promoteSession_response : XTypedElement, IXMetaData {
        
         public static explicit operator auth_promoteSession_response(XElement xe) { return XTypedServices.ToXTypedElement<auth_promoteSession_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public auth_promoteSession_response() {
        }
        
        public auth_promoteSession_response(string content) {
            this.TypedValue = content;
        }
        
        public string TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetValueWithValidation(value, "TypedValue", global::facebook.Schema.session_secret.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("auth_promoteSession_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static auth_promoteSession_response Load(string xmlFile) {
            return XTypedServices.Load<auth_promoteSession_response>(xmlFile);
        }
        
        public static auth_promoteSession_response Parse(string xml) {
            return XTypedServices.Parse<auth_promoteSession_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<auth_promoteSession_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class auth_expireSession_response : XTypedElement, IXMetaData {
        
         public static explicit operator auth_expireSession_response(XElement xe) { return XTypedServices.ToXTypedElement<auth_expireSession_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public auth_expireSession_response() {
        }
        
        public auth_expireSession_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("auth_expireSession_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static auth_expireSession_response Load(string xmlFile) {
            return XTypedServices.Load<auth_expireSession_response>(xmlFile);
        }
        
        public static auth_expireSession_response Parse(string xml) {
            return XTypedServices.Parse<auth_expireSession_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<auth_expireSession_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class auth_revokeAuthorization_response : XTypedElement, IXMetaData {
        
         public static explicit operator auth_revokeAuthorization_response(XElement xe) { return XTypedServices.ToXTypedElement<auth_revokeAuthorization_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public auth_revokeAuthorization_response() {
        }
        
        public auth_revokeAuthorization_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("auth_revokeAuthorization_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static auth_revokeAuthorization_response Load(string xmlFile) {
            return XTypedServices.Load<auth_revokeAuthorization_response>(xmlFile);
        }
        
        public static auth_revokeAuthorization_response Parse(string xml) {
            return XTypedServices.Parse<auth_revokeAuthorization_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<auth_revokeAuthorization_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class connect_getUnconnectedFriendsCount_response : XTypedElement, IXMetaData {
        
         public static explicit operator connect_getUnconnectedFriendsCount_response(XElement xe) { return XTypedServices.ToXTypedElement<connect_getUnconnectedFriendsCount_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public connect_getUnconnectedFriendsCount_response() {
        }
        
        public connect_getUnconnectedFriendsCount_response(int content) {
            this.TypedValue = content;
        }
        
        public int TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("connect_getUnconnectedFriendsCount_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static connect_getUnconnectedFriendsCount_response Load(string xmlFile) {
            return XTypedServices.Load<connect_getUnconnectedFriendsCount_response>(xmlFile);
        }
        
        public static connect_getUnconnectedFriendsCount_response Parse(string xml) {
            return XTypedServices.Parse<connect_getUnconnectedFriendsCount_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<connect_getUnconnectedFriendsCount_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class events_getMembers_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private event_members ContentField;
        
         public static explicit operator events_getMembers_response(XElement xe) { return XTypedServices.ToXTypedElement<events_getMembers_response, event_members>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public events_getMembers_response() {
            SetInnerType(new event_members());
        }
        
        public events_getMembers_response(event_members content) {
            SetInnerType(content);
        }
        
        public override XElement Untyped {
            get {
                return base.Untyped;
            }
            set {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }
        
        public event_members Content {
            get {
                return ContentField;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (attending, unsure, declined, not_replied)
        /// </para>
        /// </summary>
        public facebook.Schema.event_members.attendingLocalType attending {
            get {
                return this.ContentField.attending;
            }
            set {
                this.ContentField.attending = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (attending, unsure, declined, not_replied)
        /// </para>
        /// </summary>
        public facebook.Schema.event_members.unsureLocalType unsure {
            get {
                return this.ContentField.unsure;
            }
            set {
                this.ContentField.unsure = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (attending, unsure, declined, not_replied)
        /// </para>
        /// </summary>
        public facebook.Schema.event_members.declinedLocalType declined {
            get {
                return this.ContentField.declined;
            }
            set {
                this.ContentField.declined = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (attending, unsure, declined, not_replied)
        /// </para>
        /// </summary>
        public facebook.Schema.event_members.not_repliedLocalType not_replied {
            get {
                return this.ContentField.not_replied;
            }
            set {
                this.ContentField.not_replied = value;
            }
        }
        
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }
        
        XTypedElement IXMetaData.Content {
            get {
                return this.Content;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("events_getMembers_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static events_getMembers_response Load(string xmlFile) {
            return XTypedServices.Load<events_getMembers_response, event_members>(xmlFile, LinqToXsdTypeManager.Instance);
        }
        
        public static events_getMembers_response Parse(string xml) {
            return XTypedServices.Parse<events_getMembers_response, event_members>(xml, LinqToXsdTypeManager.Instance);
        }
        
        public override XTypedElement Clone() {
            return new events_getMembers_response(((event_members)(this.Content.Clone())));
        }
        
        private void SetInnerType(event_members ContentField) {
            this.ContentField = ((event_members)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class events_rsvp_response : XTypedElement, IXMetaData {
        
         public static explicit operator events_rsvp_response(XElement xe) { return XTypedServices.ToXTypedElement<events_rsvp_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public events_rsvp_response() {
        }
        
        public events_rsvp_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("events_rsvp_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static events_rsvp_response Load(string xmlFile) {
            return XTypedServices.Load<events_rsvp_response>(xmlFile);
        }
        
        public static events_rsvp_response Parse(string xml) {
            return XTypedServices.Parse<events_rsvp_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<events_rsvp_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class events_create_response : XTypedElement, IXMetaData {
        
         public static explicit operator events_create_response(XElement xe) { return XTypedServices.ToXTypedElement<events_create_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public events_create_response() {
        }
        
        public events_create_response(long content) {
            this.TypedValue = content;
        }
        
        public long TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetValueWithValidation(value, "TypedValue", global::facebook.Schema.eid.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("events_create_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static events_create_response Load(string xmlFile) {
            return XTypedServices.Load<events_create_response>(xmlFile);
        }
        
        public static events_create_response Parse(string xml) {
            return XTypedServices.Parse<events_create_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<events_create_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class events_edit_response : XTypedElement, IXMetaData {
        
         public static explicit operator events_edit_response(XElement xe) { return XTypedServices.ToXTypedElement<events_edit_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public events_edit_response() {
        }
        
        public events_edit_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("events_edit_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static events_edit_response Load(string xmlFile) {
            return XTypedServices.Load<events_edit_response>(xmlFile);
        }
        
        public static events_edit_response Parse(string xml) {
            return XTypedServices.Parse<events_edit_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<events_edit_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class events_cancel_response : XTypedElement, IXMetaData {
        
         public static explicit operator events_cancel_response(XElement xe) { return XTypedServices.ToXTypedElement<events_cancel_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public events_cancel_response() {
        }
        
        public events_cancel_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("events_cancel_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static events_cancel_response Load(string xmlFile) {
            return XTypedServices.Load<events_cancel_response>(xmlFile);
        }
        
        public static events_cancel_response Parse(string xml) {
            return XTypedServices.Parse<events_cancel_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<events_cancel_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class fbml_setRefHandle_response : XTypedElement, IXMetaData {
        
         public static explicit operator fbml_setRefHandle_response(XElement xe) { return XTypedServices.ToXTypedElement<fbml_setRefHandle_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public fbml_setRefHandle_response() {
        }
        
        public fbml_setRefHandle_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("fbml_setRefHandle_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static fbml_setRefHandle_response Load(string xmlFile) {
            return XTypedServices.Load<fbml_setRefHandle_response>(xmlFile);
        }
        
        public static fbml_setRefHandle_response Parse(string xml) {
            return XTypedServices.Parse<fbml_setRefHandle_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<fbml_setRefHandle_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class fbml_refreshRefUrl_response : XTypedElement, IXMetaData {
        
         public static explicit operator fbml_refreshRefUrl_response(XElement xe) { return XTypedServices.ToXTypedElement<fbml_refreshRefUrl_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public fbml_refreshRefUrl_response() {
        }
        
        public fbml_refreshRefUrl_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("fbml_refreshRefUrl_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static fbml_refreshRefUrl_response Load(string xmlFile) {
            return XTypedServices.Load<fbml_refreshRefUrl_response>(xmlFile);
        }
        
        public static fbml_refreshRefUrl_response Parse(string xml) {
            return XTypedServices.Parse<fbml_refreshRefUrl_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<fbml_refreshRefUrl_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class fbml_refreshImgSrc_response : XTypedElement, IXMetaData {
        
         public static explicit operator fbml_refreshImgSrc_response(XElement xe) { return XTypedServices.ToXTypedElement<fbml_refreshImgSrc_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public fbml_refreshImgSrc_response() {
        }
        
        public fbml_refreshImgSrc_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("fbml_refreshImgSrc_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static fbml_refreshImgSrc_response Load(string xmlFile) {
            return XTypedServices.Load<fbml_refreshImgSrc_response>(xmlFile);
        }
        
        public static fbml_refreshImgSrc_response Parse(string xml) {
            return XTypedServices.Parse<fbml_refreshImgSrc_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<fbml_refreshImgSrc_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class fbml_uploadNativeStrings_response : XTypedElement, IXMetaData {
        
         public static explicit operator fbml_uploadNativeStrings_response(XElement xe) { return XTypedServices.ToXTypedElement<fbml_uploadNativeStrings_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public fbml_uploadNativeStrings_response() {
        }
        
        public fbml_uploadNativeStrings_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("fbml_uploadNativeStrings_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static fbml_uploadNativeStrings_response Load(string xmlFile) {
            return XTypedServices.Load<fbml_uploadNativeStrings_response>(xmlFile);
        }
        
        public static fbml_uploadNativeStrings_response Parse(string xml) {
            return XTypedServices.Parse<fbml_uploadNativeStrings_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<fbml_uploadNativeStrings_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class feed_publishStoryToUser_response : XTypedElement, IXMetaData {
        
         public static explicit operator feed_publishStoryToUser_response(XElement xe) { return XTypedServices.ToXTypedElement<feed_publishStoryToUser_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public feed_publishStoryToUser_response() {
        }
        
        public feed_publishStoryToUser_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("feed_publishStoryToUser_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static feed_publishStoryToUser_response Load(string xmlFile) {
            return XTypedServices.Load<feed_publishStoryToUser_response>(xmlFile);
        }
        
        public static feed_publishStoryToUser_response Parse(string xml) {
            return XTypedServices.Parse<feed_publishStoryToUser_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<feed_publishStoryToUser_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class feed_publishActionOfUser_response : XTypedElement, IXMetaData {
        
         public static explicit operator feed_publishActionOfUser_response(XElement xe) { return XTypedServices.ToXTypedElement<feed_publishActionOfUser_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public feed_publishActionOfUser_response() {
        }
        
        public feed_publishActionOfUser_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("feed_publishActionOfUser_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static feed_publishActionOfUser_response Load(string xmlFile) {
            return XTypedServices.Load<feed_publishActionOfUser_response>(xmlFile);
        }
        
        public static feed_publishActionOfUser_response Parse(string xml) {
            return XTypedServices.Parse<feed_publishActionOfUser_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<feed_publishActionOfUser_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class groups_getMembers_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private group_members ContentField;
        
         public static explicit operator groups_getMembers_response(XElement xe) { return XTypedServices.ToXTypedElement<groups_getMembers_response, group_members>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public groups_getMembers_response() {
            SetInnerType(new group_members());
        }
        
        public groups_getMembers_response(group_members content) {
            SetInnerType(content);
        }
        
        public override XElement Untyped {
            get {
                return base.Untyped;
            }
            set {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }
        
        public group_members Content {
            get {
                return ContentField;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (members, admins, officers, not_replied)
        /// </para>
        /// </summary>
        public facebook.Schema.group_members.membersLocalType members {
            get {
                return this.ContentField.members;
            }
            set {
                this.ContentField.members = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (members, admins, officers, not_replied)
        /// </para>
        /// </summary>
        public facebook.Schema.group_members.adminsLocalType admins {
            get {
                return this.ContentField.admins;
            }
            set {
                this.ContentField.admins = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (members, admins, officers, not_replied)
        /// </para>
        /// </summary>
        public facebook.Schema.group_members.officersLocalType officers {
            get {
                return this.ContentField.officers;
            }
            set {
                this.ContentField.officers = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (members, admins, officers, not_replied)
        /// </para>
        /// </summary>
        public facebook.Schema.group_members.not_repliedLocalType not_replied {
            get {
                return this.ContentField.not_replied;
            }
            set {
                this.ContentField.not_replied = value;
            }
        }
        
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }
        
        XTypedElement IXMetaData.Content {
            get {
                return this.Content;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("groups_getMembers_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static groups_getMembers_response Load(string xmlFile) {
            return XTypedServices.Load<groups_getMembers_response, group_members>(xmlFile, LinqToXsdTypeManager.Instance);
        }
        
        public static groups_getMembers_response Parse(string xml) {
            return XTypedServices.Parse<groups_getMembers_response, group_members>(xml, LinqToXsdTypeManager.Instance);
        }
        
        public override XTypedElement Clone() {
            return new groups_getMembers_response(((group_members)(this.Content.Clone())));
        }
        
        private void SetInnerType(group_members ContentField) {
            this.ContentField = ((group_members)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_setCookie_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_setCookie_response(XElement xe) { return XTypedServices.ToXTypedElement<data_setCookie_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_setCookie_response() {
        }
        
        public data_setCookie_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_setCookie_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_setCookie_response Load(string xmlFile) {
            return XTypedServices.Load<data_setCookie_response>(xmlFile);
        }
        
        public static data_setCookie_response Parse(string xml) {
            return XTypedServices.Parse<data_setCookie_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_setCookie_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class permissions_grantApiAccess_response : XTypedElement, IXMetaData {
        
         public static explicit operator permissions_grantApiAccess_response(XElement xe) { return XTypedServices.ToXTypedElement<permissions_grantApiAccess_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public permissions_grantApiAccess_response() {
        }
        
        public permissions_grantApiAccess_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("permissions_grantApiAccess_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static permissions_grantApiAccess_response Load(string xmlFile) {
            return XTypedServices.Load<permissions_grantApiAccess_response>(xmlFile);
        }
        
        public static permissions_grantApiAccess_response Parse(string xml) {
            return XTypedServices.Parse<permissions_grantApiAccess_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<permissions_grantApiAccess_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class permissions_revokeApiAccess_response : XTypedElement, IXMetaData {
        
         public static explicit operator permissions_revokeApiAccess_response(XElement xe) { return XTypedServices.ToXTypedElement<permissions_revokeApiAccess_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public permissions_revokeApiAccess_response() {
        }
        
        public permissions_revokeApiAccess_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("permissions_revokeApiAccess_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static permissions_revokeApiAccess_response Load(string xmlFile) {
            return XTypedServices.Load<permissions_revokeApiAccess_response>(xmlFile);
        }
        
        public static permissions_revokeApiAccess_response Parse(string xml) {
            return XTypedServices.Parse<permissions_revokeApiAccess_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<permissions_revokeApiAccess_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class fbpayments_setProperties_response : XTypedElement, IXMetaData {
        
         public static explicit operator fbpayments_setProperties_response(XElement xe) { return XTypedServices.ToXTypedElement<fbpayments_setProperties_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public fbpayments_setProperties_response() {
        }
        
        public fbpayments_setProperties_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("fbpayments_setProperties_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static fbpayments_setProperties_response Load(string xmlFile) {
            return XTypedServices.Load<fbpayments_setProperties_response>(xmlFile);
        }
        
        public static fbpayments_setProperties_response Parse(string xml) {
            return XTypedServices.Parse<fbpayments_setProperties_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<fbpayments_setProperties_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class fbpayments_getOrderDetails_response : XTypedElement, IXMetaData {
        
         public static explicit operator fbpayments_getOrderDetails_response(XElement xe) { return XTypedServices.ToXTypedElement<fbpayments_getOrderDetails_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public fbpayments_getOrderDetails_response() {
        }
        
        public fbpayments_getOrderDetails_response(string content) {
            this.TypedValue = content;
        }
        
        public string TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("fbpayments_getOrderDetails_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static fbpayments_getOrderDetails_response Load(string xmlFile) {
            return XTypedServices.Load<fbpayments_getOrderDetails_response>(xmlFile);
        }
        
        public static fbpayments_getOrderDetails_response Parse(string xml) {
            return XTypedServices.Parse<fbpayments_getOrderDetails_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<fbpayments_getOrderDetails_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class fbpayments_updateOrder_response : XTypedElement, IXMetaData {
        
         public static explicit operator fbpayments_updateOrder_response(XElement xe) { return XTypedServices.ToXTypedElement<fbpayments_updateOrder_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public fbpayments_updateOrder_response() {
        }
        
        public fbpayments_updateOrder_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("fbpayments_updateOrder_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static fbpayments_updateOrder_response Load(string xmlFile) {
            return XTypedServices.Load<fbpayments_updateOrder_response>(xmlFile);
        }
        
        public static fbpayments_updateOrder_response Parse(string xml) {
            return XTypedServices.Parse<fbpayments_updateOrder_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<fbpayments_updateOrder_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class marketplace_createListing_response : XTypedElement, IXMetaData {
        
         public static explicit operator marketplace_createListing_response(XElement xe) { return XTypedServices.ToXTypedElement<marketplace_createListing_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public marketplace_createListing_response() {
        }
        
        public marketplace_createListing_response(long content) {
            this.TypedValue = content;
        }
        
        public long TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetValueWithValidation(value, "TypedValue", global::facebook.Schema.lid.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("marketplace_createListing_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static marketplace_createListing_response Load(string xmlFile) {
            return XTypedServices.Load<marketplace_createListing_response>(xmlFile);
        }
        
        public static marketplace_createListing_response Parse(string xml) {
            return XTypedServices.Parse<marketplace_createListing_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<marketplace_createListing_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class marketplace_removeListing_response : XTypedElement, IXMetaData {
        
         public static explicit operator marketplace_removeListing_response(XElement xe) { return XTypedServices.ToXTypedElement<marketplace_removeListing_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public marketplace_removeListing_response() {
        }
        
        public marketplace_removeListing_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("marketplace_removeListing_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static marketplace_removeListing_response Load(string xmlFile) {
            return XTypedServices.Load<marketplace_removeListing_response>(xmlFile);
        }
        
        public static marketplace_removeListing_response Parse(string xml) {
            return XTypedServices.Parse<marketplace_removeListing_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<marketplace_removeListing_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class liveMessage_send_response : XTypedElement, IXMetaData {
        
         public static explicit operator liveMessage_send_response(XElement xe) { return XTypedServices.ToXTypedElement<liveMessage_send_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public liveMessage_send_response() {
        }
        
        public liveMessage_send_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("liveMessage_send_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static liveMessage_send_response Load(string xmlFile) {
            return XTypedServices.Load<liveMessage_send_response>(xmlFile);
        }
        
        public static liveMessage_send_response Parse(string xml) {
            return XTypedServices.Parse<liveMessage_send_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<liveMessage_send_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class notifications_get_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private notifications ContentField;
        
         public static explicit operator notifications_get_response(XElement xe) { return XTypedServices.ToXTypedElement<notifications_get_response, notifications>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public notifications_get_response() {
            SetInnerType(new notifications());
        }
        
        public notifications_get_response(notifications content) {
            SetInnerType(content);
        }
        
        public override XElement Untyped {
            get {
                return base.Untyped;
            }
            set {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }
        
        public notifications Content {
            get {
                return ContentField;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (messages, pokes, shares, friend_requests, group_invites, event_invites)
        /// </para>
        /// </summary>
        public notification_count messages {
            get {
                return this.ContentField.messages;
            }
            set {
                this.ContentField.messages = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (messages, pokes, shares, friend_requests, group_invites, event_invites)
        /// </para>
        /// </summary>
        public notification_count pokes {
            get {
                return this.ContentField.pokes;
            }
            set {
                this.ContentField.pokes = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (messages, pokes, shares, friend_requests, group_invites, event_invites)
        /// </para>
        /// </summary>
        public notification_count shares {
            get {
                return this.ContentField.shares;
            }
            set {
                this.ContentField.shares = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (messages, pokes, shares, friend_requests, group_invites, event_invites)
        /// </para>
        /// </summary>
        public facebook.Schema.notifications.friend_requestsLocalType friend_requests {
            get {
                return this.ContentField.friend_requests;
            }
            set {
                this.ContentField.friend_requests = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (messages, pokes, shares, friend_requests, group_invites, event_invites)
        /// </para>
        /// </summary>
        public facebook.Schema.notifications.group_invitesLocalType group_invites {
            get {
                return this.ContentField.group_invites;
            }
            set {
                this.ContentField.group_invites = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (messages, pokes, shares, friend_requests, group_invites, event_invites)
        /// </para>
        /// </summary>
        public facebook.Schema.notifications.event_invitesLocalType event_invites {
            get {
                return this.ContentField.event_invites;
            }
            set {
                this.ContentField.event_invites = value;
            }
        }
        
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }
        
        XTypedElement IXMetaData.Content {
            get {
                return this.Content;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("notifications_get_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static notifications_get_response Load(string xmlFile) {
            return XTypedServices.Load<notifications_get_response, notifications>(xmlFile, LinqToXsdTypeManager.Instance);
        }
        
        public static notifications_get_response Parse(string xml) {
            return XTypedServices.Parse<notifications_get_response, notifications>(xml, LinqToXsdTypeManager.Instance);
        }
        
        public override XTypedElement Clone() {
            return new notifications_get_response(((notifications)(this.Content.Clone())));
        }
        
        private void SetInnerType(notifications ContentField) {
            this.ContentField = ((notifications)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class notifications_send_response : XTypedElement, IXMetaData {
        
         public static explicit operator notifications_send_response(XElement xe) { return XTypedServices.ToXTypedElement<notifications_send_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public notifications_send_response() {
        }
        
        public notifications_send_response(string content) {
            this.TypedValue = content;
        }
        
        public string TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("notifications_send_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static notifications_send_response Load(string xmlFile) {
            return XTypedServices.Load<notifications_send_response>(xmlFile);
        }
        
        public static notifications_send_response Parse(string xml) {
            return XTypedServices.Parse<notifications_send_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<notifications_send_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class notifications_sendEmail_response : XTypedElement, IXMetaData {
        
         public static explicit operator notifications_sendEmail_response(XElement xe) { return XTypedServices.ToXTypedElement<notifications_sendEmail_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public notifications_sendEmail_response() {
        }
        
        public notifications_sendEmail_response(string content) {
            this.TypedValue = content;
        }
        
        public string TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetValueWithValidation(value, "TypedValue", global::facebook.Schema.uid_list.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("notifications_sendEmail_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static notifications_sendEmail_response Load(string xmlFile) {
            return XTypedServices.Load<notifications_sendEmail_response>(xmlFile);
        }
        
        public static notifications_sendEmail_response Parse(string xml) {
            return XTypedServices.Parse<notifications_sendEmail_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<notifications_sendEmail_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class photos_createAlbum_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private album ContentField;
        
         public static explicit operator photos_createAlbum_response(XElement xe) { return XTypedServices.ToXTypedElement<photos_createAlbum_response, album>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public photos_createAlbum_response() {
            SetInnerType(new album());
        }
        
        public photos_createAlbum_response(album content) {
            SetInnerType(content);
        }
        
        public override XElement Untyped {
            get {
                return base.Untyped;
            }
            set {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }
        
        public album Content {
            get {
                return ContentField;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public long aid {
            get {
                return this.ContentField.aid;
            }
            set {
                this.ContentField.aid = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public long cover_pid {
            get {
                return this.ContentField.cover_pid;
            }
            set {
                this.ContentField.cover_pid = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public long owner {
            get {
                return this.ContentField.owner;
            }
            set {
                this.ContentField.owner = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public string name {
            get {
                return this.ContentField.name;
            }
            set {
                this.ContentField.name = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public int created {
            get {
                return this.ContentField.created;
            }
            set {
                this.ContentField.created = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public int modified {
            get {
                return this.ContentField.modified;
            }
            set {
                this.ContentField.modified = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public string description {
            get {
                return this.ContentField.description;
            }
            set {
                this.ContentField.description = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public string location {
            get {
                return this.ContentField.location;
            }
            set {
                this.ContentField.location = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public string link {
            get {
                return this.ContentField.link;
            }
            set {
                this.ContentField.link = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aid, cover_pid, owner, name, created, modified, description, location, link, size)
        /// </para>
        /// </summary>
        public int size {
            get {
                return this.ContentField.size;
            }
            set {
                this.ContentField.size = value;
            }
        }
        
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }
        
        XTypedElement IXMetaData.Content {
            get {
                return this.Content;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("photos_createAlbum_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static photos_createAlbum_response Load(string xmlFile) {
            return XTypedServices.Load<photos_createAlbum_response, album>(xmlFile, LinqToXsdTypeManager.Instance);
        }
        
        public static photos_createAlbum_response Parse(string xml) {
            return XTypedServices.Parse<photos_createAlbum_response, album>(xml, LinqToXsdTypeManager.Instance);
        }
        
        public override XTypedElement Clone() {
            return new photos_createAlbum_response(((album)(this.Content.Clone())));
        }
        
        private void SetInnerType(album ContentField) {
            this.ContentField = ((album)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class photos_upload_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private photo ContentField;
        
         public static explicit operator photos_upload_response(XElement xe) { return XTypedServices.ToXTypedElement<photos_upload_response, photo>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public photos_upload_response() {
            SetInnerType(new photo());
        }
        
        public photos_upload_response(photo content) {
            SetInnerType(content);
        }
        
        public override XElement Untyped {
            get {
                return base.Untyped;
            }
            set {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }
        
        public photo Content {
            get {
                return ContentField;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public long pid {
            get {
                return this.ContentField.pid;
            }
            set {
                this.ContentField.pid = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public long aid {
            get {
                return this.ContentField.aid;
            }
            set {
                this.ContentField.aid = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public long owner {
            get {
                return this.ContentField.owner;
            }
            set {
                this.ContentField.owner = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public string src {
            get {
                return this.ContentField.src;
            }
            set {
                this.ContentField.src = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public string src_big {
            get {
                return this.ContentField.src_big;
            }
            set {
                this.ContentField.src_big = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public string src_small {
            get {
                return this.ContentField.src_small;
            }
            set {
                this.ContentField.src_small = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public string link {
            get {
                return this.ContentField.link;
            }
            set {
                this.ContentField.link = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public string caption {
            get {
                return this.ContentField.caption;
            }
            set {
                this.ContentField.caption = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public int created {
            get {
                return this.ContentField.created;
            }
            set {
                this.ContentField.created = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (pid, aid, owner, src, src_big, src_small, link, caption, created, story_fbid)
        /// </para>
        /// </summary>
        public long story_fbid {
            get {
                return this.ContentField.story_fbid;
            }
            set {
                this.ContentField.story_fbid = value;
            }
        }
        
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }
        
        XTypedElement IXMetaData.Content {
            get {
                return this.Content;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("photos_upload_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static photos_upload_response Load(string xmlFile) {
            return XTypedServices.Load<photos_upload_response, photo>(xmlFile, LinqToXsdTypeManager.Instance);
        }
        
        public static photos_upload_response Parse(string xml) {
            return XTypedServices.Parse<photos_upload_response, photo>(xml, LinqToXsdTypeManager.Instance);
        }
        
        public override XTypedElement Clone() {
            return new photos_upload_response(((photo)(this.Content.Clone())));
        }
        
        private void SetInnerType(photo ContentField) {
            this.ContentField = ((photo)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class photos_addTag_response : XTypedElement, IXMetaData {
        
         public static explicit operator photos_addTag_response(XElement xe) { return XTypedServices.ToXTypedElement<photos_addTag_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public photos_addTag_response() {
        }
        
        public photos_addTag_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("photos_addTag_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static photos_addTag_response Load(string xmlFile) {
            return XTypedServices.Load<photos_addTag_response>(xmlFile);
        }
        
        public static photos_addTag_response Parse(string xml) {
            return XTypedServices.Parse<photos_addTag_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<photos_addTag_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class profile_setFBML_response : XTypedElement, IXMetaData {
        
         public static explicit operator profile_setFBML_response(XElement xe) { return XTypedServices.ToXTypedElement<profile_setFBML_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public profile_setFBML_response() {
        }
        
        public profile_setFBML_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("profile_setFBML_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static profile_setFBML_response Load(string xmlFile) {
            return XTypedServices.Load<profile_setFBML_response>(xmlFile);
        }
        
        public static profile_setFBML_response Parse(string xml) {
            return XTypedServices.Parse<profile_setFBML_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<profile_setFBML_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class profile_getFBML_response : XTypedElement, IXMetaData {
        
         public static explicit operator profile_getFBML_response(XElement xe) { return XTypedServices.ToXTypedElement<profile_getFBML_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public profile_getFBML_response() {
        }
        
        public profile_getFBML_response(string content) {
            this.TypedValue = content;
        }
        
        public string TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("profile_getFBML_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static profile_getFBML_response Load(string xmlFile) {
            return XTypedServices.Load<profile_getFBML_response>(xmlFile);
        }
        
        public static profile_getFBML_response Parse(string xml) {
            return XTypedServices.Parse<profile_getFBML_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<profile_getFBML_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class profile_setInfo_response : XTypedElement, IXMetaData {
        
         public static explicit operator profile_setInfo_response(XElement xe) { return XTypedServices.ToXTypedElement<profile_setInfo_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public profile_setInfo_response() {
        }
        
        public profile_setInfo_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("profile_setInfo_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static profile_setInfo_response Load(string xmlFile) {
            return XTypedServices.Load<profile_setInfo_response>(xmlFile);
        }
        
        public static profile_setInfo_response Parse(string xml) {
            return XTypedServices.Parse<profile_setInfo_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<profile_setInfo_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class profile_getInfo_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private user_info ContentField;
        
         public static explicit operator profile_getInfo_response(XElement xe) { return XTypedServices.ToXTypedElement<profile_getInfo_response, user_info>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public profile_getInfo_response() {
            SetInnerType(new user_info());
        }
        
        public profile_getInfo_response(user_info content) {
            SetInnerType(content);
        }
        
        public override XElement Untyped {
            get {
                return base.Untyped;
            }
            set {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }
        
        public user_info Content {
            get {
                return ContentField;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (title, type, info_fields)
        /// </para>
        /// </summary>
        public string title {
            get {
                return this.ContentField.title;
            }
            set {
                this.ContentField.title = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (title, type, info_fields)
        /// </para>
        /// </summary>
        public int type {
            get {
                return this.ContentField.type;
            }
            set {
                this.ContentField.type = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (title, type, info_fields)
        /// </para>
        /// </summary>
        public facebook.Schema.user_info.info_fieldsLocalType info_fields {
            get {
                return this.ContentField.info_fields;
            }
            set {
                this.ContentField.info_fields = value;
            }
        }
        
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }
        
        XTypedElement IXMetaData.Content {
            get {
                return this.Content;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("profile_getInfo_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static profile_getInfo_response Load(string xmlFile) {
            return XTypedServices.Load<profile_getInfo_response, user_info>(xmlFile, LinqToXsdTypeManager.Instance);
        }
        
        public static profile_getInfo_response Parse(string xml) {
            return XTypedServices.Parse<profile_getInfo_response, user_info>(xml, LinqToXsdTypeManager.Instance);
        }
        
        public override XTypedElement Clone() {
            return new profile_getInfo_response(((user_info)(this.Content.Clone())));
        }
        
        private void SetInnerType(user_info ContentField) {
            this.ContentField = ((user_info)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class profile_setInfoOptions_response : XTypedElement, IXMetaData {
        
         public static explicit operator profile_setInfoOptions_response(XElement xe) { return XTypedServices.ToXTypedElement<profile_setInfoOptions_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public profile_setInfoOptions_response() {
        }
        
        public profile_setInfoOptions_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("profile_setInfoOptions_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static profile_setInfoOptions_response Load(string xmlFile) {
            return XTypedServices.Load<profile_setInfoOptions_response>(xmlFile);
        }
        
        public static profile_setInfoOptions_response Parse(string xml) {
            return XTypedServices.Parse<profile_setInfoOptions_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<profile_setInfoOptions_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class profile_getInfoOptions_response : XTypedElement, IXMetaData {
        
         public static explicit operator profile_getInfoOptions_response(XElement xe) { return XTypedServices.ToXTypedElement<profile_getInfoOptions_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public profile_getInfoOptions_response() {
        }
        
        public profile_getInfoOptions_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("profile_getInfoOptions_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static profile_getInfoOptions_response Load(string xmlFile) {
            return XTypedServices.Load<profile_getInfoOptions_response>(xmlFile);
        }
        
        public static profile_getInfoOptions_response Parse(string xml) {
            return XTypedServices.Parse<profile_getInfoOptions_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<profile_getInfoOptions_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class users_isAppUser_response : XTypedElement, IXMetaData {
        
         public static explicit operator users_isAppUser_response(XElement xe) { return XTypedServices.ToXTypedElement<users_isAppUser_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public users_isAppUser_response() {
        }
        
        public users_isAppUser_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("users_isAppUser_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static users_isAppUser_response Load(string xmlFile) {
            return XTypedServices.Load<users_isAppUser_response>(xmlFile);
        }
        
        public static users_isAppUser_response Parse(string xml) {
            return XTypedServices.Parse<users_isAppUser_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<users_isAppUser_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class users_isAppAdded_response : XTypedElement, IXMetaData {
        
         public static explicit operator users_isAppAdded_response(XElement xe) { return XTypedServices.ToXTypedElement<users_isAppAdded_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public users_isAppAdded_response() {
        }
        
        public users_isAppAdded_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("users_isAppAdded_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static users_isAppAdded_response Load(string xmlFile) {
            return XTypedServices.Load<users_isAppAdded_response>(xmlFile);
        }
        
        public static users_isAppAdded_response Parse(string xml) {
            return XTypedServices.Parse<users_isAppAdded_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<users_isAppAdded_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class users_hasAppPermission_response : XTypedElement, IXMetaData {
        
         public static explicit operator users_hasAppPermission_response(XElement xe) { return XTypedServices.ToXTypedElement<users_hasAppPermission_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public users_hasAppPermission_response() {
        }
        
        public users_hasAppPermission_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("users_hasAppPermission_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static users_hasAppPermission_response Load(string xmlFile) {
            return XTypedServices.Load<users_hasAppPermission_response>(xmlFile);
        }
        
        public static users_hasAppPermission_response Parse(string xml) {
            return XTypedServices.Parse<users_hasAppPermission_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<users_hasAppPermission_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class users_getLoggedInUser_response : XTypedElement, IXMetaData {
        
         public static explicit operator users_getLoggedInUser_response(XElement xe) { return XTypedServices.ToXTypedElement<users_getLoggedInUser_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public users_getLoggedInUser_response() {
        }
        
        public users_getLoggedInUser_response(long content) {
            this.TypedValue = content;
        }
        
        public long TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetValueWithValidation(value, "TypedValue", global::facebook.Schema.uid.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("users_getLoggedInUser_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static users_getLoggedInUser_response Load(string xmlFile) {
            return XTypedServices.Load<users_getLoggedInUser_response>(xmlFile);
        }
        
        public static users_getLoggedInUser_response Parse(string xml) {
            return XTypedServices.Parse<users_getLoggedInUser_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<users_getLoggedInUser_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class users_setStatus_response : XTypedElement, IXMetaData {
        
         public static explicit operator users_setStatus_response(XElement xe) { return XTypedServices.ToXTypedElement<users_setStatus_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public users_setStatus_response() {
        }
        
        public users_setStatus_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("users_setStatus_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static users_setStatus_response Load(string xmlFile) {
            return XTypedServices.Load<users_setStatus_response>(xmlFile);
        }
        
        public static users_setStatus_response Parse(string xml) {
            return XTypedServices.Parse<users_setStatus_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<users_setStatus_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class pages_isAdmin_response : XTypedElement, IXMetaData {
        
         public static explicit operator pages_isAdmin_response(XElement xe) { return XTypedServices.ToXTypedElement<pages_isAdmin_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public pages_isAdmin_response() {
        }
        
        public pages_isAdmin_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("pages_isAdmin_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static pages_isAdmin_response Load(string xmlFile) {
            return XTypedServices.Load<pages_isAdmin_response>(xmlFile);
        }
        
        public static pages_isAdmin_response Parse(string xml) {
            return XTypedServices.Parse<pages_isAdmin_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<pages_isAdmin_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class pages_isFan_response : XTypedElement, IXMetaData {
        
         public static explicit operator pages_isFan_response(XElement xe) { return XTypedServices.ToXTypedElement<pages_isFan_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public pages_isFan_response() {
        }
        
        public pages_isFan_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("pages_isFan_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static pages_isFan_response Load(string xmlFile) {
            return XTypedServices.Load<pages_isFan_response>(xmlFile);
        }
        
        public static pages_isFan_response Parse(string xml) {
            return XTypedServices.Parse<pages_isFan_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<pages_isFan_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class pages_isAppAdded_response : XTypedElement, IXMetaData {
        
         public static explicit operator pages_isAppAdded_response(XElement xe) { return XTypedServices.ToXTypedElement<pages_isAppAdded_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public pages_isAppAdded_response() {
        }
        
        public pages_isAppAdded_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("pages_isAppAdded_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static pages_isAppAdded_response Load(string xmlFile) {
            return XTypedServices.Load<pages_isAppAdded_response>(xmlFile);
        }
        
        public static pages_isAppAdded_response Parse(string xml) {
            return XTypedServices.Parse<pages_isAppAdded_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<pages_isAppAdded_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_setUserPreference_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_setUserPreference_response(XElement xe) { return XTypedServices.ToXTypedElement<data_setUserPreference_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_setUserPreference_response() {
        }
        
        public data_setUserPreference_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_setUserPreference_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_setUserPreference_response Load(string xmlFile) {
            return XTypedServices.Load<data_setUserPreference_response>(xmlFile);
        }
        
        public static data_setUserPreference_response Parse(string xml) {
            return XTypedServices.Parse<data_setUserPreference_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_setUserPreference_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_setUserPreferences_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_setUserPreferences_response(XElement xe) { return XTypedServices.ToXTypedElement<data_setUserPreferences_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_setUserPreferences_response() {
        }
        
        public data_setUserPreferences_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_setUserPreferences_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_setUserPreferences_response Load(string xmlFile) {
            return XTypedServices.Load<data_setUserPreferences_response>(xmlFile);
        }
        
        public static data_setUserPreferences_response Parse(string xml) {
            return XTypedServices.Parse<data_setUserPreferences_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_setUserPreferences_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_getUserPreference_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_getUserPreference_response(XElement xe) { return XTypedServices.ToXTypedElement<data_getUserPreference_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_getUserPreference_response() {
        }
        
        public data_getUserPreference_response(string content) {
            this.TypedValue = content;
        }
        
        public string TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_getUserPreference_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_getUserPreference_response Load(string xmlFile) {
            return XTypedServices.Load<data_getUserPreference_response>(xmlFile);
        }
        
        public static data_getUserPreference_response Parse(string xml) {
            return XTypedServices.Parse<data_getUserPreference_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_getUserPreference_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_createObjectType_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_createObjectType_response(XElement xe) { return XTypedServices.ToXTypedElement<data_createObjectType_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_createObjectType_response() {
        }
        
        public data_createObjectType_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_createObjectType_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_createObjectType_response Load(string xmlFile) {
            return XTypedServices.Load<data_createObjectType_response>(xmlFile);
        }
        
        public static data_createObjectType_response Parse(string xml) {
            return XTypedServices.Parse<data_createObjectType_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_createObjectType_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_dropObjectType_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_dropObjectType_response(XElement xe) { return XTypedServices.ToXTypedElement<data_dropObjectType_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_dropObjectType_response() {
        }
        
        public data_dropObjectType_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_dropObjectType_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_dropObjectType_response Load(string xmlFile) {
            return XTypedServices.Load<data_dropObjectType_response>(xmlFile);
        }
        
        public static data_dropObjectType_response Parse(string xml) {
            return XTypedServices.Parse<data_dropObjectType_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_dropObjectType_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_renameObjectType_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_renameObjectType_response(XElement xe) { return XTypedServices.ToXTypedElement<data_renameObjectType_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_renameObjectType_response() {
        }
        
        public data_renameObjectType_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_renameObjectType_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_renameObjectType_response Load(string xmlFile) {
            return XTypedServices.Load<data_renameObjectType_response>(xmlFile);
        }
        
        public static data_renameObjectType_response Parse(string xml) {
            return XTypedServices.Parse<data_renameObjectType_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_renameObjectType_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_defineObjectProperty_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_defineObjectProperty_response(XElement xe) { return XTypedServices.ToXTypedElement<data_defineObjectProperty_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_defineObjectProperty_response() {
        }
        
        public data_defineObjectProperty_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_defineObjectProperty_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_defineObjectProperty_response Load(string xmlFile) {
            return XTypedServices.Load<data_defineObjectProperty_response>(xmlFile);
        }
        
        public static data_defineObjectProperty_response Parse(string xml) {
            return XTypedServices.Parse<data_defineObjectProperty_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_defineObjectProperty_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_undefineObjectProperty_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_undefineObjectProperty_response(XElement xe) { return XTypedServices.ToXTypedElement<data_undefineObjectProperty_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_undefineObjectProperty_response() {
        }
        
        public data_undefineObjectProperty_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_undefineObjectProperty_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_undefineObjectProperty_response Load(string xmlFile) {
            return XTypedServices.Load<data_undefineObjectProperty_response>(xmlFile);
        }
        
        public static data_undefineObjectProperty_response Parse(string xml) {
            return XTypedServices.Parse<data_undefineObjectProperty_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_undefineObjectProperty_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_renameObjectProperty_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_renameObjectProperty_response(XElement xe) { return XTypedServices.ToXTypedElement<data_renameObjectProperty_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_renameObjectProperty_response() {
        }
        
        public data_renameObjectProperty_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_renameObjectProperty_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_renameObjectProperty_response Load(string xmlFile) {
            return XTypedServices.Load<data_renameObjectProperty_response>(xmlFile);
        }
        
        public static data_renameObjectProperty_response Parse(string xml) {
            return XTypedServices.Parse<data_renameObjectProperty_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_renameObjectProperty_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_createObject_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_createObject_response(XElement xe) { return XTypedServices.ToXTypedElement<data_createObject_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_createObject_response() {
        }
        
        public data_createObject_response(long content) {
            this.TypedValue = content;
        }
        
        public long TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_createObject_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_createObject_response Load(string xmlFile) {
            return XTypedServices.Load<data_createObject_response>(xmlFile);
        }
        
        public static data_createObject_response Parse(string xml) {
            return XTypedServices.Parse<data_createObject_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_createObject_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_updateObject_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_updateObject_response(XElement xe) { return XTypedServices.ToXTypedElement<data_updateObject_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_updateObject_response() {
        }
        
        public data_updateObject_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_updateObject_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_updateObject_response Load(string xmlFile) {
            return XTypedServices.Load<data_updateObject_response>(xmlFile);
        }
        
        public static data_updateObject_response Parse(string xml) {
            return XTypedServices.Parse<data_updateObject_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_updateObject_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_deleteObject_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_deleteObject_response(XElement xe) { return XTypedServices.ToXTypedElement<data_deleteObject_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_deleteObject_response() {
        }
        
        public data_deleteObject_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_deleteObject_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_deleteObject_response Load(string xmlFile) {
            return XTypedServices.Load<data_deleteObject_response>(xmlFile);
        }
        
        public static data_deleteObject_response Parse(string xml) {
            return XTypedServices.Parse<data_deleteObject_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_deleteObject_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_deleteObjects_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_deleteObjects_response(XElement xe) { return XTypedServices.ToXTypedElement<data_deleteObjects_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_deleteObjects_response() {
        }
        
        public data_deleteObjects_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_deleteObjects_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_deleteObjects_response Load(string xmlFile) {
            return XTypedServices.Load<data_deleteObjects_response>(xmlFile);
        }
        
        public static data_deleteObjects_response Parse(string xml) {
            return XTypedServices.Parse<data_deleteObjects_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_deleteObjects_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_getObject_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private container ContentField;
        
         public static explicit operator data_getObject_response(XElement xe) { return XTypedServices.ToXTypedElement<data_getObject_response, container>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_getObject_response() {
            SetInnerType(new container());
        }
        
        public data_getObject_response(container content) {
            SetInnerType(content);
        }
        
        public override XElement Untyped {
            get {
                return base.Untyped;
            }
            set {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }
        
        public container Content {
            get {
                return ContentField;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, assoc_type, assoc_info1, assoc_info2)
        /// </para>
        /// </summary>
        public string name {
            get {
                return this.ContentField.name;
            }
            set {
                this.ContentField.name = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, assoc_type, assoc_info1, assoc_info2)
        /// </para>
        /// </summary>
        public int assoc_type {
            get {
                return this.ContentField.assoc_type;
            }
            set {
                this.ContentField.assoc_type = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, assoc_type, assoc_info1, assoc_info2)
        /// </para>
        /// </summary>
        public assoc_object_type assoc_info1 {
            get {
                return this.ContentField.assoc_info1;
            }
            set {
                this.ContentField.assoc_info1 = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, assoc_type, assoc_info1, assoc_info2)
        /// </para>
        /// </summary>
        public assoc_object_type assoc_info2 {
            get {
                return this.ContentField.assoc_info2;
            }
            set {
                this.ContentField.assoc_info2 = value;
            }
        }
        
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }
        
        XTypedElement IXMetaData.Content {
            get {
                return this.Content;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_getObject_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_getObject_response Load(string xmlFile) {
            return XTypedServices.Load<data_getObject_response, container>(xmlFile, LinqToXsdTypeManager.Instance);
        }
        
        public static data_getObject_response Parse(string xml) {
            return XTypedServices.Parse<data_getObject_response, container>(xml, LinqToXsdTypeManager.Instance);
        }
        
        public override XTypedElement Clone() {
            return new data_getObject_response(((container)(this.Content.Clone())));
        }
        
        private void SetInnerType(container ContentField) {
            this.ContentField = ((container)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_getObjectProperty_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_getObjectProperty_response(XElement xe) { return XTypedServices.ToXTypedElement<data_getObjectProperty_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_getObjectProperty_response() {
        }
        
        public data_getObjectProperty_response(string content) {
            this.TypedValue = content;
        }
        
        public string TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_getObjectProperty_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_getObjectProperty_response Load(string xmlFile) {
            return XTypedServices.Load<data_getObjectProperty_response>(xmlFile);
        }
        
        public static data_getObjectProperty_response Parse(string xml) {
            return XTypedServices.Parse<data_getObjectProperty_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_getObjectProperty_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_setObjectProperty_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_setObjectProperty_response(XElement xe) { return XTypedServices.ToXTypedElement<data_setObjectProperty_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_setObjectProperty_response() {
        }
        
        public data_setObjectProperty_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_setObjectProperty_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_setObjectProperty_response Load(string xmlFile) {
            return XTypedServices.Load<data_setObjectProperty_response>(xmlFile);
        }
        
        public static data_setObjectProperty_response Parse(string xml) {
            return XTypedServices.Parse<data_setObjectProperty_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_setObjectProperty_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_getHashValue_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_getHashValue_response(XElement xe) { return XTypedServices.ToXTypedElement<data_getHashValue_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_getHashValue_response() {
        }
        
        public data_getHashValue_response(string content) {
            this.TypedValue = content;
        }
        
        public string TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_getHashValue_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_getHashValue_response Load(string xmlFile) {
            return XTypedServices.Load<data_getHashValue_response>(xmlFile);
        }
        
        public static data_getHashValue_response Parse(string xml) {
            return XTypedServices.Parse<data_getHashValue_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_getHashValue_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_setHashValue_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_setHashValue_response(XElement xe) { return XTypedServices.ToXTypedElement<data_setHashValue_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_setHashValue_response() {
        }
        
        public data_setHashValue_response(long content) {
            this.TypedValue = content;
        }
        
        public long TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_setHashValue_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_setHashValue_response Load(string xmlFile) {
            return XTypedServices.Load<data_setHashValue_response>(xmlFile);
        }
        
        public static data_setHashValue_response Parse(string xml) {
            return XTypedServices.Parse<data_setHashValue_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_setHashValue_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_incHashValue_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_incHashValue_response(XElement xe) { return XTypedServices.ToXTypedElement<data_incHashValue_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_incHashValue_response() {
        }
        
        public data_incHashValue_response(int content) {
            this.TypedValue = content;
        }
        
        public int TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_incHashValue_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_incHashValue_response Load(string xmlFile) {
            return XTypedServices.Load<data_incHashValue_response>(xmlFile);
        }
        
        public static data_incHashValue_response Parse(string xml) {
            return XTypedServices.Parse<data_incHashValue_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_incHashValue_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_removeHashKey_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_removeHashKey_response(XElement xe) { return XTypedServices.ToXTypedElement<data_removeHashKey_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_removeHashKey_response() {
        }
        
        public data_removeHashKey_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_removeHashKey_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_removeHashKey_response Load(string xmlFile) {
            return XTypedServices.Load<data_removeHashKey_response>(xmlFile);
        }
        
        public static data_removeHashKey_response Parse(string xml) {
            return XTypedServices.Parse<data_removeHashKey_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_removeHashKey_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_removeHashKeys_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_removeHashKeys_response(XElement xe) { return XTypedServices.ToXTypedElement<data_removeHashKeys_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_removeHashKeys_response() {
        }
        
        public data_removeHashKeys_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_removeHashKeys_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_removeHashKeys_response Load(string xmlFile) {
            return XTypedServices.Load<data_removeHashKeys_response>(xmlFile);
        }
        
        public static data_removeHashKeys_response Parse(string xml) {
            return XTypedServices.Parse<data_removeHashKeys_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_removeHashKeys_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_defineAssociation_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_defineAssociation_response(XElement xe) { return XTypedServices.ToXTypedElement<data_defineAssociation_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_defineAssociation_response() {
        }
        
        public data_defineAssociation_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_defineAssociation_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_defineAssociation_response Load(string xmlFile) {
            return XTypedServices.Load<data_defineAssociation_response>(xmlFile);
        }
        
        public static data_defineAssociation_response Parse(string xml) {
            return XTypedServices.Parse<data_defineAssociation_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_defineAssociation_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_undefineAssociation_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_undefineAssociation_response(XElement xe) { return XTypedServices.ToXTypedElement<data_undefineAssociation_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_undefineAssociation_response() {
        }
        
        public data_undefineAssociation_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_undefineAssociation_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_undefineAssociation_response Load(string xmlFile) {
            return XTypedServices.Load<data_undefineAssociation_response>(xmlFile);
        }
        
        public static data_undefineAssociation_response Parse(string xml) {
            return XTypedServices.Parse<data_undefineAssociation_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_undefineAssociation_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_renameAssociation_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_renameAssociation_response(XElement xe) { return XTypedServices.ToXTypedElement<data_renameAssociation_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_renameAssociation_response() {
        }
        
        public data_renameAssociation_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_renameAssociation_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_renameAssociation_response Load(string xmlFile) {
            return XTypedServices.Load<data_renameAssociation_response>(xmlFile);
        }
        
        public static data_renameAssociation_response Parse(string xml) {
            return XTypedServices.Parse<data_renameAssociation_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_renameAssociation_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_getAssociationDefinition_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private object_assoc_info ContentField;
        
         public static explicit operator data_getAssociationDefinition_response(XElement xe) { return XTypedServices.ToXTypedElement<data_getAssociationDefinition_response, object_assoc_info>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_getAssociationDefinition_response() {
            SetInnerType(new object_assoc_info());
        }
        
        public data_getAssociationDefinition_response(object_assoc_info content) {
            SetInnerType(content);
        }
        
        public override XElement Untyped {
            get {
                return base.Untyped;
            }
            set {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }
        
        public object_assoc_info Content {
            get {
                return ContentField;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, assoc_type, assoc_info1, assoc_info2)
        /// </para>
        /// </summary>
        public string name {
            get {
                return this.ContentField.name;
            }
            set {
                this.ContentField.name = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, assoc_type, assoc_info1, assoc_info2)
        /// </para>
        /// </summary>
        public int assoc_type {
            get {
                return this.ContentField.assoc_type;
            }
            set {
                this.ContentField.assoc_type = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, assoc_type, assoc_info1, assoc_info2)
        /// </para>
        /// </summary>
        public assoc_object_type assoc_info1 {
            get {
                return this.ContentField.assoc_info1;
            }
            set {
                this.ContentField.assoc_info1 = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, assoc_type, assoc_info1, assoc_info2)
        /// </para>
        /// </summary>
        public assoc_object_type assoc_info2 {
            get {
                return this.ContentField.assoc_info2;
            }
            set {
                this.ContentField.assoc_info2 = value;
            }
        }
        
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }
        
        XTypedElement IXMetaData.Content {
            get {
                return this.Content;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_getAssociationDefinition_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_getAssociationDefinition_response Load(string xmlFile) {
            return XTypedServices.Load<data_getAssociationDefinition_response, object_assoc_info>(xmlFile, LinqToXsdTypeManager.Instance);
        }
        
        public static data_getAssociationDefinition_response Parse(string xml) {
            return XTypedServices.Parse<data_getAssociationDefinition_response, object_assoc_info>(xml, LinqToXsdTypeManager.Instance);
        }
        
        public override XTypedElement Clone() {
            return new data_getAssociationDefinition_response(((object_assoc_info)(this.Content.Clone())));
        }
        
        private void SetInnerType(object_assoc_info ContentField) {
            this.ContentField = ((object_assoc_info)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_setAssociation_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_setAssociation_response(XElement xe) { return XTypedServices.ToXTypedElement<data_setAssociation_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_setAssociation_response() {
        }
        
        public data_setAssociation_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_setAssociation_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_setAssociation_response Load(string xmlFile) {
            return XTypedServices.Load<data_setAssociation_response>(xmlFile);
        }
        
        public static data_setAssociation_response Parse(string xml) {
            return XTypedServices.Parse<data_setAssociation_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_setAssociation_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_setAssociations_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_setAssociations_response(XElement xe) { return XTypedServices.ToXTypedElement<data_setAssociations_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_setAssociations_response() {
        }
        
        public data_setAssociations_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_setAssociations_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_setAssociations_response Load(string xmlFile) {
            return XTypedServices.Load<data_setAssociations_response>(xmlFile);
        }
        
        public static data_setAssociations_response Parse(string xml) {
            return XTypedServices.Parse<data_setAssociations_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_setAssociations_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_removeAssociation_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_removeAssociation_response(XElement xe) { return XTypedServices.ToXTypedElement<data_removeAssociation_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_removeAssociation_response() {
        }
        
        public data_removeAssociation_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_removeAssociation_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_removeAssociation_response Load(string xmlFile) {
            return XTypedServices.Load<data_removeAssociation_response>(xmlFile);
        }
        
        public static data_removeAssociation_response Parse(string xml) {
            return XTypedServices.Parse<data_removeAssociation_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_removeAssociation_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_removeAssociations_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_removeAssociations_response(XElement xe) { return XTypedServices.ToXTypedElement<data_removeAssociations_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_removeAssociations_response() {
        }
        
        public data_removeAssociations_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_removeAssociations_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_removeAssociations_response Load(string xmlFile) {
            return XTypedServices.Load<data_removeAssociations_response>(xmlFile);
        }
        
        public static data_removeAssociations_response Parse(string xml) {
            return XTypedServices.Parse<data_removeAssociations_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_removeAssociations_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_removeAssociatedObjects_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_removeAssociatedObjects_response(XElement xe) { return XTypedServices.ToXTypedElement<data_removeAssociatedObjects_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_removeAssociatedObjects_response() {
        }
        
        public data_removeAssociatedObjects_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_removeAssociatedObjects_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_removeAssociatedObjects_response Load(string xmlFile) {
            return XTypedServices.Load<data_removeAssociatedObjects_response>(xmlFile);
        }
        
        public static data_removeAssociatedObjects_response Parse(string xml) {
            return XTypedServices.Parse<data_removeAssociatedObjects_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_removeAssociatedObjects_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class data_getAssociatedObjectCount_response : XTypedElement, IXMetaData {
        
         public static explicit operator data_getAssociatedObjectCount_response(XElement xe) { return XTypedServices.ToXTypedElement<data_getAssociatedObjectCount_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public data_getAssociatedObjectCount_response() {
        }
        
        public data_getAssociatedObjectCount_response(int content) {
            this.TypedValue = content;
        }
        
        public int TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("data_getAssociatedObjectCount_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static data_getAssociatedObjectCount_response Load(string xmlFile) {
            return XTypedServices.Load<data_getAssociatedObjectCount_response>(xmlFile);
        }
        
        public static data_getAssociatedObjectCount_response Parse(string xml) {
            return XTypedServices.Parse<data_getAssociatedObjectCount_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<data_getAssociatedObjectCount_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class admin_getAppProperties_response : XTypedElement, IXMetaData {
        
         public static explicit operator admin_getAppProperties_response(XElement xe) { return XTypedServices.ToXTypedElement<admin_getAppProperties_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public admin_getAppProperties_response() {
        }
        
        public admin_getAppProperties_response(string content) {
            this.TypedValue = content;
        }
        
        public string TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("admin_getAppProperties_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static admin_getAppProperties_response Load(string xmlFile) {
            return XTypedServices.Load<admin_getAppProperties_response>(xmlFile);
        }
        
        public static admin_getAppProperties_response Parse(string xml) {
            return XTypedServices.Parse<admin_getAppProperties_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<admin_getAppProperties_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class admin_setAppProperties_response : XTypedElement, IXMetaData {
        
         public static explicit operator admin_setAppProperties_response(XElement xe) { return XTypedServices.ToXTypedElement<admin_setAppProperties_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public admin_setAppProperties_response() {
        }
        
        public admin_setAppProperties_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("admin_setAppProperties_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static admin_setAppProperties_response Load(string xmlFile) {
            return XTypedServices.Load<admin_setAppProperties_response>(xmlFile);
        }
        
        public static admin_setAppProperties_response Parse(string xml) {
            return XTypedServices.Parse<admin_setAppProperties_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<admin_setAppProperties_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class admin_getAllocation_response : XTypedElement, IXMetaData {
        
         public static explicit operator admin_getAllocation_response(XElement xe) { return XTypedServices.ToXTypedElement<admin_getAllocation_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public admin_getAllocation_response() {
        }
        
        public admin_getAllocation_response(int content) {
            this.TypedValue = content;
        }
        
        public int TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("admin_getAllocation_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static admin_getAllocation_response Load(string xmlFile) {
            return XTypedServices.Load<admin_getAllocation_response>(xmlFile);
        }
        
        public static admin_getAllocation_response Parse(string xml) {
            return XTypedServices.Parse<admin_getAllocation_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<admin_getAllocation_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class application_getPublicInfo_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private app_info ContentField;
        
         public static explicit operator application_getPublicInfo_response(XElement xe) { return XTypedServices.ToXTypedElement<application_getPublicInfo_response, app_info>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public application_getPublicInfo_response() {
            SetInnerType(new app_info());
        }
        
        public application_getPublicInfo_response(app_info content) {
            SetInnerType(content);
        }
        
        public override XElement Untyped {
            get {
                return base.Untyped;
            }
            set {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }
        
        public app_info Content {
            get {
                return ContentField;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public long app_id {
            get {
                return this.ContentField.app_id;
            }
            set {
                this.ContentField.app_id = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public string api_key {
            get {
                return this.ContentField.api_key;
            }
            set {
                this.ContentField.api_key = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public string canvas_name {
            get {
                return this.ContentField.canvas_name;
            }
            set {
                this.ContentField.canvas_name = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public string display_name {
            get {
                return this.ContentField.display_name;
            }
            set {
                this.ContentField.display_name = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public string icon_url {
            get {
                return this.ContentField.icon_url;
            }
            set {
                this.ContentField.icon_url = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public string logo_url {
            get {
                return this.ContentField.logo_url;
            }
            set {
                this.ContentField.logo_url = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public facebook.Schema.app_info.developersLocalType developers {
            get {
                return this.ContentField.developers;
            }
            set {
                this.ContentField.developers = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public string company_name {
            get {
                return this.ContentField.company_name;
            }
            set {
                this.ContentField.company_name = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public string description {
            get {
                return this.ContentField.description;
            }
            set {
                this.ContentField.description = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public int daily_active_users {
            get {
                return this.ContentField.daily_active_users;
            }
            set {
                this.ContentField.daily_active_users = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public int weekly_active_users {
            get {
                return this.ContentField.weekly_active_users;
            }
            set {
                this.ContentField.weekly_active_users = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (app_id, api_key, canvas_name, display_name, icon_url, logo_url, developers, company_name, description, daily_active_users, weekly_active_users, monthly_active_users)
        /// </para>
        /// </summary>
        public int monthly_active_users {
            get {
                return this.ContentField.monthly_active_users;
            }
            set {
                this.ContentField.monthly_active_users = value;
            }
        }
        
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }
        
        XTypedElement IXMetaData.Content {
            get {
                return this.Content;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("application_getPublicInfo_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static application_getPublicInfo_response Load(string xmlFile) {
            return XTypedServices.Load<application_getPublicInfo_response, app_info>(xmlFile, LinqToXsdTypeManager.Instance);
        }
        
        public static application_getPublicInfo_response Parse(string xml) {
            return XTypedServices.Parse<application_getPublicInfo_response, app_info>(xml, LinqToXsdTypeManager.Instance);
        }
        
        public override XTypedElement Clone() {
            return new application_getPublicInfo_response(((app_info)(this.Content.Clone())));
        }
        
        private void SetInnerType(app_info ContentField) {
            this.ContentField = ((app_info)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class feed_registerTemplateBundle_response : XTypedElement, IXMetaData {
        
         public static explicit operator feed_registerTemplateBundle_response(XElement xe) { return XTypedServices.ToXTypedElement<feed_registerTemplateBundle_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public feed_registerTemplateBundle_response() {
        }
        
        public feed_registerTemplateBundle_response(long content) {
            this.TypedValue = content;
        }
        
        public long TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetValueWithValidation(value, "TypedValue", global::facebook.Schema.tbid.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("feed_registerTemplateBundle_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static feed_registerTemplateBundle_response Load(string xmlFile) {
            return XTypedServices.Load<feed_registerTemplateBundle_response>(xmlFile);
        }
        
        public static feed_registerTemplateBundle_response Parse(string xml) {
            return XTypedServices.Parse<feed_registerTemplateBundle_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<feed_registerTemplateBundle_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class feed_getRegisteredTemplateBundleByID_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private template_bundle ContentField;
        
         public static explicit operator feed_getRegisteredTemplateBundleByID_response(XElement xe) { return XTypedServices.ToXTypedElement<feed_getRegisteredTemplateBundleByID_response, template_bundle>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public feed_getRegisteredTemplateBundleByID_response() {
            SetInnerType(new template_bundle());
        }
        
        public feed_getRegisteredTemplateBundleByID_response(template_bundle content) {
            SetInnerType(content);
        }
        
        public override XElement Untyped {
            get {
                return base.Untyped;
            }
            set {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }
        
        public template_bundle Content {
            get {
                return ContentField;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (one_line_story_templates, short_story_templates, full_story_template, action_links, time_created, template_bundle_id)
        /// </para>
        /// </summary>
        public facebook.Schema.template_bundle.one_line_story_templatesLocalType one_line_story_templates {
            get {
                return this.ContentField.one_line_story_templates;
            }
            set {
                this.ContentField.one_line_story_templates = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (one_line_story_templates, short_story_templates, full_story_template, action_links, time_created, template_bundle_id)
        /// </para>
        /// </summary>
        public facebook.Schema.template_bundle.short_story_templatesLocalType short_story_templates {
            get {
                return this.ContentField.short_story_templates;
            }
            set {
                this.ContentField.short_story_templates = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (one_line_story_templates, short_story_templates, full_story_template, action_links, time_created, template_bundle_id)
        /// </para>
        /// </summary>
        public full_story_template full_story_template {
            get {
                return this.ContentField.full_story_template;
            }
            set {
                this.ContentField.full_story_template = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (one_line_story_templates, short_story_templates, full_story_template, action_links, time_created, template_bundle_id)
        /// </para>
        /// </summary>
        public facebook.Schema.template_bundle.action_linksLocalType action_links {
            get {
                return this.ContentField.action_links;
            }
            set {
                this.ContentField.action_links = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (one_line_story_templates, short_story_templates, full_story_template, action_links, time_created, template_bundle_id)
        /// </para>
        /// </summary>
        public int time_created {
            get {
                return this.ContentField.time_created;
            }
            set {
                this.ContentField.time_created = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (one_line_story_templates, short_story_templates, full_story_template, action_links, time_created, template_bundle_id)
        /// </para>
        /// </summary>
        public long template_bundle_id {
            get {
                return this.ContentField.template_bundle_id;
            }
            set {
                this.ContentField.template_bundle_id = value;
            }
        }
        
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }
        
        XTypedElement IXMetaData.Content {
            get {
                return this.Content;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("feed_getRegisteredTemplateBundleByID_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static feed_getRegisteredTemplateBundleByID_response Load(string xmlFile) {
            return XTypedServices.Load<feed_getRegisteredTemplateBundleByID_response, template_bundle>(xmlFile, LinqToXsdTypeManager.Instance);
        }
        
        public static feed_getRegisteredTemplateBundleByID_response Parse(string xml) {
            return XTypedServices.Parse<feed_getRegisteredTemplateBundleByID_response, template_bundle>(xml, LinqToXsdTypeManager.Instance);
        }
        
        public override XTypedElement Clone() {
            return new feed_getRegisteredTemplateBundleByID_response(((template_bundle)(this.Content.Clone())));
        }
        
        private void SetInnerType(template_bundle ContentField) {
            this.ContentField = ((template_bundle)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class feed_deactivateTemplateBundleByID_response : XTypedElement, IXMetaData {
        
         public static explicit operator feed_deactivateTemplateBundleByID_response(XElement xe) { return XTypedServices.ToXTypedElement<feed_deactivateTemplateBundleByID_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public feed_deactivateTemplateBundleByID_response() {
        }
        
        public feed_deactivateTemplateBundleByID_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("feed_deactivateTemplateBundleByID_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static feed_deactivateTemplateBundleByID_response Load(string xmlFile) {
            return XTypedServices.Load<feed_deactivateTemplateBundleByID_response>(xmlFile);
        }
        
        public static feed_deactivateTemplateBundleByID_response Parse(string xml) {
            return XTypedServices.Parse<feed_deactivateTemplateBundleByID_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<feed_deactivateTemplateBundleByID_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class feed_publishUserAction_response : XTypedElement, IXMetaData {
        
         public static explicit operator feed_publishUserAction_response(XElement xe) { return XTypedServices.ToXTypedElement<feed_publishUserAction_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public feed_publishUserAction_response() {
        }
        
        public feed_publishUserAction_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("feed_publishUserAction_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static feed_publishUserAction_response Load(string xmlFile) {
            return XTypedServices.Load<feed_publishUserAction_response>(xmlFile);
        }
        
        public static feed_publishUserAction_response Parse(string xml) {
            return XTypedServices.Parse<feed_publishUserAction_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<feed_publishUserAction_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class admin_setRestrictionInfo_response : XTypedElement, IXMetaData {
        
         public static explicit operator admin_setRestrictionInfo_response(XElement xe) { return XTypedServices.ToXTypedElement<admin_setRestrictionInfo_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public admin_setRestrictionInfo_response() {
        }
        
        public admin_setRestrictionInfo_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("admin_setRestrictionInfo_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static admin_setRestrictionInfo_response Load(string xmlFile) {
            return XTypedServices.Load<admin_setRestrictionInfo_response>(xmlFile);
        }
        
        public static admin_setRestrictionInfo_response Parse(string xml) {
            return XTypedServices.Parse<admin_setRestrictionInfo_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<admin_setRestrictionInfo_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class admin_getRestrictionInfo_response : XTypedElement, IXMetaData {
        
         public static explicit operator admin_getRestrictionInfo_response(XElement xe) { return XTypedServices.ToXTypedElement<admin_getRestrictionInfo_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public admin_getRestrictionInfo_response() {
        }
        
        public admin_getRestrictionInfo_response(string content) {
            this.TypedValue = content;
        }
        
        public string TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("admin_getRestrictionInfo_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static admin_getRestrictionInfo_response Load(string xmlFile) {
            return XTypedServices.Load<admin_getRestrictionInfo_response>(xmlFile);
        }
        
        public static admin_getRestrictionInfo_response Parse(string xml) {
            return XTypedServices.Parse<admin_getRestrictionInfo_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<admin_getRestrictionInfo_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class error_response : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private FacebookApiException ContentField;
        
         public static explicit operator error_response(XElement xe) { return XTypedServices.ToXTypedElement<error_response, FacebookApiException>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public error_response() {
            SetInnerType(new FacebookApiException());
        }
        
        public error_response(FacebookApiException content) {
            SetInnerType(content);
        }
        
        public override XElement Untyped {
            get {
                return base.Untyped;
            }
            set {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }
        
        public FacebookApiException Content {
            get {
                return ContentField;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (error_code, error_msg, request_args)
        /// </para>
        /// </summary>
        public int error_code {
            get {
                return this.ContentField.error_code;
            }
            set {
                this.ContentField.error_code = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (error_code, error_msg, request_args)
        /// </para>
        /// </summary>
        public string error_msg {
            get {
                return this.ContentField.error_msg;
            }
            set {
                this.ContentField.error_msg = value;
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (error_code, error_msg, request_args)
        /// </para>
        /// </summary>
        public facebook.Schema.FacebookApiException.request_argsLocalType request_args {
            get {
                return this.ContentField.request_args;
            }
            set {
                this.ContentField.request_args = value;
            }
        }
        
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }
        
        XTypedElement IXMetaData.Content {
            get {
                return this.Content;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("error_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static error_response Load(string xmlFile) {
            return XTypedServices.Load<error_response, FacebookApiException>(xmlFile, LinqToXsdTypeManager.Instance);
        }
        
        public static error_response Parse(string xml) {
            return XTypedServices.Parse<error_response, FacebookApiException>(xml, LinqToXsdTypeManager.Instance);
        }
        
        public override XTypedElement Clone() {
            return new error_response(((FacebookApiException)(this.Content.Clone())));
        }
        
        private void SetInnerType(FacebookApiException ContentField) {
            this.ContentField = ((FacebookApiException)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public partial class feed_publishTemplatizedAction_response : XTypedElement, IXMetaData {
        
         public static explicit operator feed_publishTemplatizedAction_response(XElement xe) { return XTypedServices.ToXTypedElement<feed_publishTemplatizedAction_response>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        public feed_publishTemplatizedAction_response() {
        }
        
        public feed_publishTemplatizedAction_response(bool content) {
            this.TypedValue = content;
        }
        
        public bool TypedValue {
            get {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("feed_publishTemplatizedAction_response", "http://api.facebook.com/1.0/");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static feed_publishTemplatizedAction_response Load(string xmlFile) {
            return XTypedServices.Load<feed_publishTemplatizedAction_response>(xmlFile);
        }
        
        public static feed_publishTemplatizedAction_response Parse(string xml) {
            return XTypedServices.Parse<feed_publishTemplatizedAction_response>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<feed_publishTemplatizedAction_response>(this);
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    public class LinqToXsdTypeManager : ILinqToXsdTypeManager {
        
        static Dictionary<XName, System.Type> typeDictionary = new Dictionary<XName, System.Type>();
        
        static Dictionary<XName, System.Type> elementDictionary = new Dictionary<XName, System.Type>();
        
        static Dictionary<System.Type, System.Type> wrapperDictionary = new Dictionary<System.Type, System.Type>();
        
        private static XmlSchemaSet schemaSet;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static LinqToXsdTypeManager typeManagerSingleton = new LinqToXsdTypeManager();
        
        static LinqToXsdTypeManager() {
            BuildTypeDictionary();
            BuildElementDictionary();
            BuildWrapperDictionary();
        }
        
        XmlSchemaSet ILinqToXsdTypeManager.Schemas {
            get {
                if ((schemaSet == null)) {
                    XmlSchemaSet tempSet = new XmlSchemaSet();
                    System.Threading.Interlocked.CompareExchange(ref schemaSet, tempSet, null);
                }
                return schemaSet;
            }
            set {
                schemaSet = value;
            }
        }
        
        Dictionary<XName, System.Type> ILinqToXsdTypeManager.GlobalTypeDictionary {
            get {
                return typeDictionary;
            }
        }
        
        Dictionary<XName, System.Type> ILinqToXsdTypeManager.GlobalElementDictionary {
            get {
                return elementDictionary;
            }
        }
        
        Dictionary<System.Type, System.Type> ILinqToXsdTypeManager.RootContentTypeMapping {
            get {
                return wrapperDictionary;
            }
        }
        
        public static LinqToXsdTypeManager Instance {
            get {
                return typeManagerSingleton;
            }
        }
        
        private static void BuildTypeDictionary() {
            typeDictionary.Add(XName.Get("user_status", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.user_status));
            typeDictionary.Add(XName.Get("id_map", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.id_map));
            typeDictionary.Add(XName.Get("arg", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.arg));
            typeDictionary.Add(XName.Get("FacebookApiException", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.FacebookApiException));
            typeDictionary.Add(XName.Get("session_info", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.session_info));
            typeDictionary.Add(XName.Get("location", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.location));
            typeDictionary.Add(XName.Get("connect_account_info", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.connect_account_info));
            typeDictionary.Add(XName.Get("event", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.facebookevent));
            typeDictionary.Add(XName.Get("event_member", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.event_member));
            typeDictionary.Add(XName.Get("group", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.group));
            typeDictionary.Add(XName.Get("group_member", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.group_member));
            typeDictionary.Add(XName.Get("group_members", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.group_members));
            typeDictionary.Add(XName.Get("event_members", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.event_members));
            typeDictionary.Add(XName.Get("notification_count", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.notification_count));
            typeDictionary.Add(XName.Get("notifications", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.notifications));
            typeDictionary.Add(XName.Get("photo", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.photo));
            typeDictionary.Add(XName.Get("photo_tag", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.photo_tag));
            typeDictionary.Add(XName.Get("album", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.album));
            typeDictionary.Add(XName.Get("affiliation", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.affiliation));
            typeDictionary.Add(XName.Get("hs_info", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.hs_info));
            typeDictionary.Add(XName.Get("education_info", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.education_info));
            typeDictionary.Add(XName.Get("work_info", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.work_info));
            typeDictionary.Add(XName.Get("user", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.user));
            typeDictionary.Add(XName.Get("friend_info", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.friend_info));
            typeDictionary.Add(XName.Get("friendlist", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.friendlist));
            typeDictionary.Add(XName.Get("object_type_info", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.object_type_info));
            typeDictionary.Add(XName.Get("object_property_info", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.object_property_info));
            typeDictionary.Add(XName.Get("assoc_object_type", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.assoc_object_type));
            typeDictionary.Add(XName.Get("object_assoc_info", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.object_assoc_info));
            typeDictionary.Add(XName.Get("object_association", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.object_association));
            typeDictionary.Add(XName.Get("listing", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.listing));
            typeDictionary.Add(XName.Get("preference", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.preference));
            typeDictionary.Add(XName.Get("page_hours", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.page_hours));
            typeDictionary.Add(XName.Get("page_parking", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.page_parking));
            typeDictionary.Add(XName.Get("page_restaurant_services", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.page_restaurant_services));
            typeDictionary.Add(XName.Get("page_restaurant_specialties", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.page_restaurant_specialties));
            typeDictionary.Add(XName.Get("page_payment_options", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.page_payment_options));
            typeDictionary.Add(XName.Get("page", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.page));
            typeDictionary.Add(XName.Get("cookie", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.cookie));
            typeDictionary.Add(XName.Get("phrase", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.phrase));
            typeDictionary.Add(XName.Get("developer_info", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.developer_info));
            typeDictionary.Add(XName.Get("app_info", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.app_info));
            typeDictionary.Add(XName.Get("metrics", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.metrics));
            typeDictionary.Add(XName.Get("short_story_template", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.short_story_template));
            typeDictionary.Add(XName.Get("full_story_template", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.full_story_template));
            typeDictionary.Add(XName.Get("action_link", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.action_link));
            typeDictionary.Add(XName.Get("template_bundle", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.template_bundle));
            typeDictionary.Add(XName.Get("info_item", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.info_item));
            typeDictionary.Add(XName.Get("info_field", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.info_field));
            typeDictionary.Add(XName.Get("user_info", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.user_info));
            typeDictionary.Add(XName.Get("container", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.container));
        }
        
        private static void BuildElementDictionary() {
            elementDictionary.Add(XName.Get("connect_registerUsers_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.connect_registerUsers_response));
            elementDictionary.Add(XName.Get("connect_unregisterUsers_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.connect_unregisterUsers_response));
            elementDictionary.Add(XName.Get("events_get_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.events_get_response));
            elementDictionary.Add(XName.Get("friends_areFriends_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.friends_areFriends_response));
            elementDictionary.Add(XName.Get("friends_get_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.friends_get_response));
            elementDictionary.Add(XName.Get("friends_getAppUsers_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.friends_getAppUsers_response));
            elementDictionary.Add(XName.Get("friends_getLists_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.friends_getLists_response));
            elementDictionary.Add(XName.Get("groups_get_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.groups_get_response));
            elementDictionary.Add(XName.Get("privacy_canSee_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.privacy_canSee_response));
            elementDictionary.Add(XName.Get("data_getCookies_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_getCookies_response));
            elementDictionary.Add(XName.Get("permissions_checkGrantedApiAccess_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.permissions_checkGrantedApiAccess_response));
            elementDictionary.Add(XName.Get("permissions_checkAvailableApiAccess_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.permissions_checkAvailableApiAccess_response));
            elementDictionary.Add(XName.Get("fbpayments_getOrders_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.fbpayments_getOrders_response));
            elementDictionary.Add(XName.Get("marketplace_getCategories_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.marketplace_getCategories_response));
            elementDictionary.Add(XName.Get("marketplace_getSubCategories_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.marketplace_getSubCategories_response));
            elementDictionary.Add(XName.Get("marketplace_getListings_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.marketplace_getListings_response));
            elementDictionary.Add(XName.Get("marketplace_search_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.marketplace_search_response));
            elementDictionary.Add(XName.Get("photos_get_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.photos_get_response));
            elementDictionary.Add(XName.Get("photos_getAlbums_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.photos_getAlbums_response));
            elementDictionary.Add(XName.Get("photos_getTags_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.photos_getTags_response));
            elementDictionary.Add(XName.Get("update_decodeIDs_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.update_decodeIDs_response));
            elementDictionary.Add(XName.Get("users_getInfo_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.users_getInfo_response));
            elementDictionary.Add(XName.Get("users_getStandardInfo_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.users_getStandardInfo_response));
            elementDictionary.Add(XName.Get("pages_getInfo_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.pages_getInfo_response));
            elementDictionary.Add(XName.Get("data_getUserPreferences_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_getUserPreferences_response));
            elementDictionary.Add(XName.Get("data_getObjectTypes_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_getObjectTypes_response));
            elementDictionary.Add(XName.Get("data_getObjectType_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_getObjectType_response));
            elementDictionary.Add(XName.Get("data_getObjects_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_getObjects_response));
            elementDictionary.Add(XName.Get("data_getAssociationDefinitions_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_getAssociationDefinitions_response));
            elementDictionary.Add(XName.Get("data_getAssociatedObjects_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_getAssociatedObjects_response));
            elementDictionary.Add(XName.Get("data_getAssociatedObjectCounts_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_getAssociatedObjectCounts_response));
            elementDictionary.Add(XName.Get("data_getAssociations_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_getAssociations_response));
            elementDictionary.Add(XName.Get("feed_getRegisteredTemplateBundles_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.feed_getRegisteredTemplateBundles_response));
            elementDictionary.Add(XName.Get("admin_getMetrics_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.admin_getMetrics_response));
            elementDictionary.Add(XName.Get("auth_createToken_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.auth_createToken_response));
            elementDictionary.Add(XName.Get("auth_getSession_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.auth_getSession_response));
            elementDictionary.Add(XName.Get("auth_promoteSession_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.auth_promoteSession_response));
            elementDictionary.Add(XName.Get("auth_expireSession_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.auth_expireSession_response));
            elementDictionary.Add(XName.Get("auth_revokeAuthorization_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.auth_revokeAuthorization_response));
            elementDictionary.Add(XName.Get("connect_getUnconnectedFriendsCount_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.connect_getUnconnectedFriendsCount_response));
            elementDictionary.Add(XName.Get("events_getMembers_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.events_getMembers_response));
            elementDictionary.Add(XName.Get("events_rsvp_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.events_rsvp_response));
            elementDictionary.Add(XName.Get("events_create_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.events_create_response));
            elementDictionary.Add(XName.Get("events_edit_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.events_edit_response));
            elementDictionary.Add(XName.Get("events_cancel_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.events_cancel_response));
            elementDictionary.Add(XName.Get("fbml_setRefHandle_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.fbml_setRefHandle_response));
            elementDictionary.Add(XName.Get("fbml_refreshRefUrl_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.fbml_refreshRefUrl_response));
            elementDictionary.Add(XName.Get("fbml_refreshImgSrc_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.fbml_refreshImgSrc_response));
            elementDictionary.Add(XName.Get("fbml_uploadNativeStrings_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.fbml_uploadNativeStrings_response));
            elementDictionary.Add(XName.Get("feed_publishStoryToUser_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.feed_publishStoryToUser_response));
            elementDictionary.Add(XName.Get("feed_publishActionOfUser_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.feed_publishActionOfUser_response));
            elementDictionary.Add(XName.Get("groups_getMembers_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.groups_getMembers_response));
            elementDictionary.Add(XName.Get("data_setCookie_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_setCookie_response));
            elementDictionary.Add(XName.Get("permissions_grantApiAccess_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.permissions_grantApiAccess_response));
            elementDictionary.Add(XName.Get("permissions_revokeApiAccess_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.permissions_revokeApiAccess_response));
            elementDictionary.Add(XName.Get("fbpayments_setProperties_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.fbpayments_setProperties_response));
            elementDictionary.Add(XName.Get("fbpayments_getOrderDetails_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.fbpayments_getOrderDetails_response));
            elementDictionary.Add(XName.Get("fbpayments_updateOrder_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.fbpayments_updateOrder_response));
            elementDictionary.Add(XName.Get("marketplace_createListing_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.marketplace_createListing_response));
            elementDictionary.Add(XName.Get("marketplace_removeListing_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.marketplace_removeListing_response));
            elementDictionary.Add(XName.Get("liveMessage_send_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.liveMessage_send_response));
            elementDictionary.Add(XName.Get("notifications_get_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.notifications_get_response));
            elementDictionary.Add(XName.Get("notifications_send_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.notifications_send_response));
            elementDictionary.Add(XName.Get("notifications_sendEmail_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.notifications_sendEmail_response));
            elementDictionary.Add(XName.Get("photos_createAlbum_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.photos_createAlbum_response));
            elementDictionary.Add(XName.Get("photos_upload_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.photos_upload_response));
            elementDictionary.Add(XName.Get("photos_addTag_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.photos_addTag_response));
            elementDictionary.Add(XName.Get("profile_setFBML_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.profile_setFBML_response));
            elementDictionary.Add(XName.Get("profile_getFBML_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.profile_getFBML_response));
            elementDictionary.Add(XName.Get("profile_setInfo_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.profile_setInfo_response));
            elementDictionary.Add(XName.Get("profile_getInfo_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.profile_getInfo_response));
            elementDictionary.Add(XName.Get("profile_setInfoOptions_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.profile_setInfoOptions_response));
            elementDictionary.Add(XName.Get("profile_getInfoOptions_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.profile_getInfoOptions_response));
            elementDictionary.Add(XName.Get("users_isAppUser_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.users_isAppUser_response));
            elementDictionary.Add(XName.Get("users_isAppAdded_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.users_isAppAdded_response));
            elementDictionary.Add(XName.Get("users_hasAppPermission_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.users_hasAppPermission_response));
            elementDictionary.Add(XName.Get("users_getLoggedInUser_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.users_getLoggedInUser_response));
            elementDictionary.Add(XName.Get("users_setStatus_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.users_setStatus_response));
            elementDictionary.Add(XName.Get("pages_isAdmin_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.pages_isAdmin_response));
            elementDictionary.Add(XName.Get("pages_isFan_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.pages_isFan_response));
            elementDictionary.Add(XName.Get("pages_isAppAdded_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.pages_isAppAdded_response));
            elementDictionary.Add(XName.Get("data_setUserPreference_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_setUserPreference_response));
            elementDictionary.Add(XName.Get("data_setUserPreferences_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_setUserPreferences_response));
            elementDictionary.Add(XName.Get("data_getUserPreference_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_getUserPreference_response));
            elementDictionary.Add(XName.Get("data_createObjectType_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_createObjectType_response));
            elementDictionary.Add(XName.Get("data_dropObjectType_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_dropObjectType_response));
            elementDictionary.Add(XName.Get("data_renameObjectType_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_renameObjectType_response));
            elementDictionary.Add(XName.Get("data_defineObjectProperty_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_defineObjectProperty_response));
            elementDictionary.Add(XName.Get("data_undefineObjectProperty_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_undefineObjectProperty_response));
            elementDictionary.Add(XName.Get("data_renameObjectProperty_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_renameObjectProperty_response));
            elementDictionary.Add(XName.Get("data_createObject_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_createObject_response));
            elementDictionary.Add(XName.Get("data_updateObject_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_updateObject_response));
            elementDictionary.Add(XName.Get("data_deleteObject_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_deleteObject_response));
            elementDictionary.Add(XName.Get("data_deleteObjects_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_deleteObjects_response));
            elementDictionary.Add(XName.Get("data_getObject_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_getObject_response));
            elementDictionary.Add(XName.Get("data_getObjectProperty_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_getObjectProperty_response));
            elementDictionary.Add(XName.Get("data_setObjectProperty_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_setObjectProperty_response));
            elementDictionary.Add(XName.Get("data_getHashValue_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_getHashValue_response));
            elementDictionary.Add(XName.Get("data_setHashValue_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_setHashValue_response));
            elementDictionary.Add(XName.Get("data_incHashValue_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_incHashValue_response));
            elementDictionary.Add(XName.Get("data_removeHashKey_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_removeHashKey_response));
            elementDictionary.Add(XName.Get("data_removeHashKeys_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_removeHashKeys_response));
            elementDictionary.Add(XName.Get("data_defineAssociation_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_defineAssociation_response));
            elementDictionary.Add(XName.Get("data_undefineAssociation_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_undefineAssociation_response));
            elementDictionary.Add(XName.Get("data_renameAssociation_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_renameAssociation_response));
            elementDictionary.Add(XName.Get("data_getAssociationDefinition_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_getAssociationDefinition_response));
            elementDictionary.Add(XName.Get("data_setAssociation_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_setAssociation_response));
            elementDictionary.Add(XName.Get("data_setAssociations_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_setAssociations_response));
            elementDictionary.Add(XName.Get("data_removeAssociation_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_removeAssociation_response));
            elementDictionary.Add(XName.Get("data_removeAssociations_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_removeAssociations_response));
            elementDictionary.Add(XName.Get("data_removeAssociatedObjects_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_removeAssociatedObjects_response));
            elementDictionary.Add(XName.Get("data_getAssociatedObjectCount_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.data_getAssociatedObjectCount_response));
            elementDictionary.Add(XName.Get("admin_getAppProperties_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.admin_getAppProperties_response));
            elementDictionary.Add(XName.Get("admin_setAppProperties_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.admin_setAppProperties_response));
            elementDictionary.Add(XName.Get("admin_getAllocation_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.admin_getAllocation_response));
            elementDictionary.Add(XName.Get("application_getPublicInfo_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.application_getPublicInfo_response));
            elementDictionary.Add(XName.Get("feed_registerTemplateBundle_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.feed_registerTemplateBundle_response));
            elementDictionary.Add(XName.Get("feed_getRegisteredTemplateBundleByID_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.feed_getRegisteredTemplateBundleByID_response));
            elementDictionary.Add(XName.Get("feed_deactivateTemplateBundleByID_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.feed_deactivateTemplateBundleByID_response));
            elementDictionary.Add(XName.Get("feed_publishUserAction_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.feed_publishUserAction_response));
            elementDictionary.Add(XName.Get("admin_setRestrictionInfo_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.admin_setRestrictionInfo_response));
            elementDictionary.Add(XName.Get("admin_getRestrictionInfo_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.admin_getRestrictionInfo_response));
            elementDictionary.Add(XName.Get("error_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.error_response));
            elementDictionary.Add(XName.Get("feed_publishTemplatizedAction_response", "http://api.facebook.com/1.0/"), typeof(global::facebook.Schema.feed_publishTemplatizedAction_response));
        }
        
        private static void BuildWrapperDictionary() {
            wrapperDictionary.Add(typeof(facebook.Schema.auth_getSession_response), typeof(global::facebook.Schema.session_info));
            wrapperDictionary.Add(typeof(facebook.Schema.events_getMembers_response), typeof(global::facebook.Schema.event_members));
            wrapperDictionary.Add(typeof(facebook.Schema.groups_getMembers_response), typeof(global::facebook.Schema.group_members));
            wrapperDictionary.Add(typeof(facebook.Schema.notifications_get_response), typeof(global::facebook.Schema.notifications));
            wrapperDictionary.Add(typeof(facebook.Schema.photos_createAlbum_response), typeof(global::facebook.Schema.album));
            wrapperDictionary.Add(typeof(facebook.Schema.photos_upload_response), typeof(global::facebook.Schema.photo));
            wrapperDictionary.Add(typeof(facebook.Schema.profile_getInfo_response), typeof(global::facebook.Schema.user_info));
            wrapperDictionary.Add(typeof(facebook.Schema.data_getObject_response), typeof(global::facebook.Schema.container));
            wrapperDictionary.Add(typeof(facebook.Schema.data_getAssociationDefinition_response), typeof(global::facebook.Schema.object_assoc_info));
            wrapperDictionary.Add(typeof(facebook.Schema.application_getPublicInfo_response), typeof(global::facebook.Schema.app_info));
            wrapperDictionary.Add(typeof(facebook.Schema.feed_getRegisteredTemplateBundleByID_response), typeof(global::facebook.Schema.template_bundle));
            wrapperDictionary.Add(typeof(facebook.Schema.error_response), typeof(global::facebook.Schema.FacebookApiException));
        }
        
        protected internal static void AddSchemas(XmlSchemaSet schemas) {
            schemas.Add(schemaSet);
        }
        
        public static System.Type GetRootType() {
            return elementDictionary[XName.Get("connect_registerUsers_response", "http://api.facebook.com/1.0/")];
        }
    }
    
    public partial class XRootNamespace {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XDocument doc;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedElement rootObject;
        

    public connect_registerUsers_response connect_registerUsers_response {  get {return rootObject as connect_registerUsers_response; } }

    public connect_unregisterUsers_response connect_unregisterUsers_response {  get {return rootObject as connect_unregisterUsers_response; } }

    public events_get_response events_get_response {  get {return rootObject as events_get_response; } }

    public friends_areFriends_response friends_areFriends_response {  get {return rootObject as friends_areFriends_response; } }

    public friends_get_response friends_get_response {  get {return rootObject as friends_get_response; } }

    public friends_getAppUsers_response friends_getAppUsers_response {  get {return rootObject as friends_getAppUsers_response; } }

    public friends_getLists_response friends_getLists_response {  get {return rootObject as friends_getLists_response; } }

    public groups_get_response groups_get_response {  get {return rootObject as groups_get_response; } }

    public privacy_canSee_response privacy_canSee_response {  get {return rootObject as privacy_canSee_response; } }

    public data_getCookies_response data_getCookies_response {  get {return rootObject as data_getCookies_response; } }

    public permissions_checkGrantedApiAccess_response permissions_checkGrantedApiAccess_response {  get {return rootObject as permissions_checkGrantedApiAccess_response; } }

    public permissions_checkAvailableApiAccess_response permissions_checkAvailableApiAccess_response {  get {return rootObject as permissions_checkAvailableApiAccess_response; } }

    public fbpayments_getOrders_response fbpayments_getOrders_response {  get {return rootObject as fbpayments_getOrders_response; } }

    public marketplace_getCategories_response marketplace_getCategories_response {  get {return rootObject as marketplace_getCategories_response; } }

    public marketplace_getSubCategories_response marketplace_getSubCategories_response {  get {return rootObject as marketplace_getSubCategories_response; } }

    public marketplace_getListings_response marketplace_getListings_response {  get {return rootObject as marketplace_getListings_response; } }

    public marketplace_search_response marketplace_search_response {  get {return rootObject as marketplace_search_response; } }

    public photos_get_response photos_get_response {  get {return rootObject as photos_get_response; } }

    public photos_getAlbums_response photos_getAlbums_response {  get {return rootObject as photos_getAlbums_response; } }

    public photos_getTags_response photos_getTags_response {  get {return rootObject as photos_getTags_response; } }

    public update_decodeIDs_response update_decodeIDs_response {  get {return rootObject as update_decodeIDs_response; } }

    public users_getInfo_response users_getInfo_response {  get {return rootObject as users_getInfo_response; } }

    public users_getStandardInfo_response users_getStandardInfo_response {  get {return rootObject as users_getStandardInfo_response; } }

    public pages_getInfo_response pages_getInfo_response {  get {return rootObject as pages_getInfo_response; } }

    public data_getUserPreferences_response data_getUserPreferences_response {  get {return rootObject as data_getUserPreferences_response; } }

    public data_getObjectTypes_response data_getObjectTypes_response {  get {return rootObject as data_getObjectTypes_response; } }

    public data_getObjectType_response data_getObjectType_response {  get {return rootObject as data_getObjectType_response; } }

    public data_getObjects_response data_getObjects_response {  get {return rootObject as data_getObjects_response; } }

    public data_getAssociationDefinitions_response data_getAssociationDefinitions_response {  get {return rootObject as data_getAssociationDefinitions_response; } }

    public data_getAssociatedObjects_response data_getAssociatedObjects_response {  get {return rootObject as data_getAssociatedObjects_response; } }

    public data_getAssociatedObjectCounts_response data_getAssociatedObjectCounts_response {  get {return rootObject as data_getAssociatedObjectCounts_response; } }

    public data_getAssociations_response data_getAssociations_response {  get {return rootObject as data_getAssociations_response; } }

    public feed_getRegisteredTemplateBundles_response feed_getRegisteredTemplateBundles_response {  get {return rootObject as feed_getRegisteredTemplateBundles_response; } }

    public admin_getMetrics_response admin_getMetrics_response {  get {return rootObject as admin_getMetrics_response; } }

    public auth_createToken_response auth_createToken_response {  get {return rootObject as auth_createToken_response; } }

    public auth_getSession_response auth_getSession_response {  get {return rootObject as auth_getSession_response; } }

    public auth_promoteSession_response auth_promoteSession_response {  get {return rootObject as auth_promoteSession_response; } }

    public auth_expireSession_response auth_expireSession_response {  get {return rootObject as auth_expireSession_response; } }

    public auth_revokeAuthorization_response auth_revokeAuthorization_response {  get {return rootObject as auth_revokeAuthorization_response; } }

    public connect_getUnconnectedFriendsCount_response connect_getUnconnectedFriendsCount_response {  get {return rootObject as connect_getUnconnectedFriendsCount_response; } }

    public events_getMembers_response events_getMembers_response {  get {return rootObject as events_getMembers_response; } }

    public events_rsvp_response events_rsvp_response {  get {return rootObject as events_rsvp_response; } }

    public events_create_response events_create_response {  get {return rootObject as events_create_response; } }

    public events_edit_response events_edit_response {  get {return rootObject as events_edit_response; } }

    public events_cancel_response events_cancel_response {  get {return rootObject as events_cancel_response; } }

    public fbml_setRefHandle_response fbml_setRefHandle_response {  get {return rootObject as fbml_setRefHandle_response; } }

    public fbml_refreshRefUrl_response fbml_refreshRefUrl_response {  get {return rootObject as fbml_refreshRefUrl_response; } }

    public fbml_refreshImgSrc_response fbml_refreshImgSrc_response {  get {return rootObject as fbml_refreshImgSrc_response; } }

    public fbml_uploadNativeStrings_response fbml_uploadNativeStrings_response {  get {return rootObject as fbml_uploadNativeStrings_response; } }

    public feed_publishStoryToUser_response feed_publishStoryToUser_response {  get {return rootObject as feed_publishStoryToUser_response; } }

    public feed_publishActionOfUser_response feed_publishActionOfUser_response {  get {return rootObject as feed_publishActionOfUser_response; } }

    public groups_getMembers_response groups_getMembers_response {  get {return rootObject as groups_getMembers_response; } }

    public data_setCookie_response data_setCookie_response {  get {return rootObject as data_setCookie_response; } }

    public permissions_grantApiAccess_response permissions_grantApiAccess_response {  get {return rootObject as permissions_grantApiAccess_response; } }

    public permissions_revokeApiAccess_response permissions_revokeApiAccess_response {  get {return rootObject as permissions_revokeApiAccess_response; } }

    public fbpayments_setProperties_response fbpayments_setProperties_response {  get {return rootObject as fbpayments_setProperties_response; } }

    public fbpayments_getOrderDetails_response fbpayments_getOrderDetails_response {  get {return rootObject as fbpayments_getOrderDetails_response; } }

    public fbpayments_updateOrder_response fbpayments_updateOrder_response {  get {return rootObject as fbpayments_updateOrder_response; } }

    public marketplace_createListing_response marketplace_createListing_response {  get {return rootObject as marketplace_createListing_response; } }

    public marketplace_removeListing_response marketplace_removeListing_response {  get {return rootObject as marketplace_removeListing_response; } }

    public liveMessage_send_response liveMessage_send_response {  get {return rootObject as liveMessage_send_response; } }

    public notifications_get_response notifications_get_response {  get {return rootObject as notifications_get_response; } }

    public notifications_send_response notifications_send_response {  get {return rootObject as notifications_send_response; } }

    public notifications_sendEmail_response notifications_sendEmail_response {  get {return rootObject as notifications_sendEmail_response; } }

    public photos_createAlbum_response photos_createAlbum_response {  get {return rootObject as photos_createAlbum_response; } }

    public photos_upload_response photos_upload_response {  get {return rootObject as photos_upload_response; } }

    public photos_addTag_response photos_addTag_response {  get {return rootObject as photos_addTag_response; } }

    public profile_setFBML_response profile_setFBML_response {  get {return rootObject as profile_setFBML_response; } }

    public profile_getFBML_response profile_getFBML_response {  get {return rootObject as profile_getFBML_response; } }

    public profile_setInfo_response profile_setInfo_response {  get {return rootObject as profile_setInfo_response; } }

    public profile_getInfo_response profile_getInfo_response {  get {return rootObject as profile_getInfo_response; } }

    public profile_setInfoOptions_response profile_setInfoOptions_response {  get {return rootObject as profile_setInfoOptions_response; } }

    public profile_getInfoOptions_response profile_getInfoOptions_response {  get {return rootObject as profile_getInfoOptions_response; } }

    public users_isAppUser_response users_isAppUser_response {  get {return rootObject as users_isAppUser_response; } }

    public users_isAppAdded_response users_isAppAdded_response {  get {return rootObject as users_isAppAdded_response; } }

    public users_hasAppPermission_response users_hasAppPermission_response {  get {return rootObject as users_hasAppPermission_response; } }

    public users_getLoggedInUser_response users_getLoggedInUser_response {  get {return rootObject as users_getLoggedInUser_response; } }

    public users_setStatus_response users_setStatus_response {  get {return rootObject as users_setStatus_response; } }

    public pages_isAdmin_response pages_isAdmin_response {  get {return rootObject as pages_isAdmin_response; } }

    public pages_isFan_response pages_isFan_response {  get {return rootObject as pages_isFan_response; } }

    public pages_isAppAdded_response pages_isAppAdded_response {  get {return rootObject as pages_isAppAdded_response; } }

    public data_setUserPreference_response data_setUserPreference_response {  get {return rootObject as data_setUserPreference_response; } }

    public data_setUserPreferences_response data_setUserPreferences_response {  get {return rootObject as data_setUserPreferences_response; } }

    public data_getUserPreference_response data_getUserPreference_response {  get {return rootObject as data_getUserPreference_response; } }

    public data_createObjectType_response data_createObjectType_response {  get {return rootObject as data_createObjectType_response; } }

    public data_dropObjectType_response data_dropObjectType_response {  get {return rootObject as data_dropObjectType_response; } }

    public data_renameObjectType_response data_renameObjectType_response {  get {return rootObject as data_renameObjectType_response; } }

    public data_defineObjectProperty_response data_defineObjectProperty_response {  get {return rootObject as data_defineObjectProperty_response; } }

    public data_undefineObjectProperty_response data_undefineObjectProperty_response {  get {return rootObject as data_undefineObjectProperty_response; } }

    public data_renameObjectProperty_response data_renameObjectProperty_response {  get {return rootObject as data_renameObjectProperty_response; } }

    public data_createObject_response data_createObject_response {  get {return rootObject as data_createObject_response; } }

    public data_updateObject_response data_updateObject_response {  get {return rootObject as data_updateObject_response; } }

    public data_deleteObject_response data_deleteObject_response {  get {return rootObject as data_deleteObject_response; } }

    public data_deleteObjects_response data_deleteObjects_response {  get {return rootObject as data_deleteObjects_response; } }

    public data_getObject_response data_getObject_response {  get {return rootObject as data_getObject_response; } }

    public data_getObjectProperty_response data_getObjectProperty_response {  get {return rootObject as data_getObjectProperty_response; } }

    public data_setObjectProperty_response data_setObjectProperty_response {  get {return rootObject as data_setObjectProperty_response; } }

    public data_getHashValue_response data_getHashValue_response {  get {return rootObject as data_getHashValue_response; } }

    public data_setHashValue_response data_setHashValue_response {  get {return rootObject as data_setHashValue_response; } }

    public data_incHashValue_response data_incHashValue_response {  get {return rootObject as data_incHashValue_response; } }

    public data_removeHashKey_response data_removeHashKey_response {  get {return rootObject as data_removeHashKey_response; } }

    public data_removeHashKeys_response data_removeHashKeys_response {  get {return rootObject as data_removeHashKeys_response; } }

    public data_defineAssociation_response data_defineAssociation_response {  get {return rootObject as data_defineAssociation_response; } }

    public data_undefineAssociation_response data_undefineAssociation_response {  get {return rootObject as data_undefineAssociation_response; } }

    public data_renameAssociation_response data_renameAssociation_response {  get {return rootObject as data_renameAssociation_response; } }

    public data_getAssociationDefinition_response data_getAssociationDefinition_response {  get {return rootObject as data_getAssociationDefinition_response; } }

    public data_setAssociation_response data_setAssociation_response {  get {return rootObject as data_setAssociation_response; } }

    public data_setAssociations_response data_setAssociations_response {  get {return rootObject as data_setAssociations_response; } }

    public data_removeAssociation_response data_removeAssociation_response {  get {return rootObject as data_removeAssociation_response; } }

    public data_removeAssociations_response data_removeAssociations_response {  get {return rootObject as data_removeAssociations_response; } }

    public data_removeAssociatedObjects_response data_removeAssociatedObjects_response {  get {return rootObject as data_removeAssociatedObjects_response; } }

    public data_getAssociatedObjectCount_response data_getAssociatedObjectCount_response {  get {return rootObject as data_getAssociatedObjectCount_response; } }

    public admin_getAppProperties_response admin_getAppProperties_response {  get {return rootObject as admin_getAppProperties_response; } }

    public admin_setAppProperties_response admin_setAppProperties_response {  get {return rootObject as admin_setAppProperties_response; } }

    public admin_getAllocation_response admin_getAllocation_response {  get {return rootObject as admin_getAllocation_response; } }

    public application_getPublicInfo_response application_getPublicInfo_response {  get {return rootObject as application_getPublicInfo_response; } }

    public feed_registerTemplateBundle_response feed_registerTemplateBundle_response {  get {return rootObject as feed_registerTemplateBundle_response; } }

    public feed_getRegisteredTemplateBundleByID_response feed_getRegisteredTemplateBundleByID_response {  get {return rootObject as feed_getRegisteredTemplateBundleByID_response; } }

    public feed_deactivateTemplateBundleByID_response feed_deactivateTemplateBundleByID_response {  get {return rootObject as feed_deactivateTemplateBundleByID_response; } }

    public feed_publishUserAction_response feed_publishUserAction_response {  get {return rootObject as feed_publishUserAction_response; } }

    public admin_setRestrictionInfo_response admin_setRestrictionInfo_response {  get {return rootObject as admin_setRestrictionInfo_response; } }

    public admin_getRestrictionInfo_response admin_getRestrictionInfo_response {  get {return rootObject as admin_getRestrictionInfo_response; } }

    public error_response error_response {  get {return rootObject as error_response; } }

    public feed_publishTemplatizedAction_response feed_publishTemplatizedAction_response {  get {return rootObject as feed_publishTemplatizedAction_response; } }
        
        private XRootNamespace() {
        }
        
        public XRootNamespace(connect_registerUsers_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(connect_unregisterUsers_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(events_get_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(friends_areFriends_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(friends_get_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(friends_getAppUsers_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(friends_getLists_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(groups_get_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(privacy_canSee_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_getCookies_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(permissions_checkGrantedApiAccess_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(permissions_checkAvailableApiAccess_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(fbpayments_getOrders_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(marketplace_getCategories_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(marketplace_getSubCategories_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(marketplace_getListings_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(marketplace_search_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(photos_get_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(photos_getAlbums_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(photos_getTags_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(update_decodeIDs_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(users_getInfo_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(users_getStandardInfo_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(pages_getInfo_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_getUserPreferences_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_getObjectTypes_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_getObjectType_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_getObjects_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_getAssociationDefinitions_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_getAssociatedObjects_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_getAssociatedObjectCounts_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_getAssociations_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(feed_getRegisteredTemplateBundles_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(admin_getMetrics_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(auth_createToken_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(auth_getSession_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(auth_promoteSession_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(auth_expireSession_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(auth_revokeAuthorization_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(connect_getUnconnectedFriendsCount_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(events_getMembers_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(events_rsvp_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(events_create_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(events_edit_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(events_cancel_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(fbml_setRefHandle_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(fbml_refreshRefUrl_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(fbml_refreshImgSrc_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(fbml_uploadNativeStrings_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(feed_publishStoryToUser_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(feed_publishActionOfUser_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(groups_getMembers_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_setCookie_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(permissions_grantApiAccess_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(permissions_revokeApiAccess_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(fbpayments_setProperties_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(fbpayments_getOrderDetails_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(fbpayments_updateOrder_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(marketplace_createListing_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(marketplace_removeListing_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(liveMessage_send_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(notifications_get_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(notifications_send_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(notifications_sendEmail_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(photos_createAlbum_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(photos_upload_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(photos_addTag_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(profile_setFBML_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(profile_getFBML_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(profile_setInfo_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(profile_getInfo_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(profile_setInfoOptions_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(profile_getInfoOptions_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(users_isAppUser_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(users_isAppAdded_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(users_hasAppPermission_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(users_getLoggedInUser_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(users_setStatus_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(pages_isAdmin_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(pages_isFan_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(pages_isAppAdded_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_setUserPreference_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_setUserPreferences_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_getUserPreference_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_createObjectType_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_dropObjectType_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_renameObjectType_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_defineObjectProperty_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_undefineObjectProperty_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_renameObjectProperty_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_createObject_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_updateObject_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_deleteObject_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_deleteObjects_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_getObject_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_getObjectProperty_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_setObjectProperty_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_getHashValue_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_setHashValue_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_incHashValue_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_removeHashKey_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_removeHashKeys_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_defineAssociation_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_undefineAssociation_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_renameAssociation_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_getAssociationDefinition_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_setAssociation_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_setAssociations_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_removeAssociation_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_removeAssociations_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_removeAssociatedObjects_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(data_getAssociatedObjectCount_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(admin_getAppProperties_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(admin_setAppProperties_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(admin_getAllocation_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(application_getPublicInfo_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(feed_registerTemplateBundle_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(feed_getRegisteredTemplateBundleByID_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(feed_deactivateTemplateBundleByID_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(feed_publishUserAction_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(admin_setRestrictionInfo_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(admin_getRestrictionInfo_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(error_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(feed_publishTemplatizedAction_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XDocument XDocument {
            get {
                return doc;
            }
        }
        
        public static XRootNamespace Load(string xmlFile) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlFile);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(string xmlFile, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlFile, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(TextReader textReader) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(textReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(TextReader textReader, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(textReader, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(XmlReader xmlReader) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Parse(string text) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Parse(text);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Parse(string text, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Parse(text, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public virtual void Save(string fileName) {
            doc.Save(fileName);
        }
        
        public virtual void Save(TextWriter textWriter) {
            doc.Save(textWriter);
        }
        
        public virtual void Save(XmlWriter writer) {
            doc.Save(writer);
        }
        
        public virtual void Save(TextWriter textWriter, SaveOptions options) {
            doc.Save(textWriter, options);
        }
        
        public virtual void Save(string fileName, SaveOptions options) {
            doc.Save(fileName, options);
        }
    }
    
    public partial class XRoot {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XDocument doc;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedElement rootObject;
        

    public global::facebook.Schema.connect_registerUsers_response connect_registerUsers_response {  get {return rootObject as global::facebook.Schema.connect_registerUsers_response; } }

    public global::facebook.Schema.connect_unregisterUsers_response connect_unregisterUsers_response {  get {return rootObject as global::facebook.Schema.connect_unregisterUsers_response; } }

    public global::facebook.Schema.events_get_response events_get_response {  get {return rootObject as global::facebook.Schema.events_get_response; } }

    public global::facebook.Schema.friends_areFriends_response friends_areFriends_response {  get {return rootObject as global::facebook.Schema.friends_areFriends_response; } }

    public global::facebook.Schema.friends_get_response friends_get_response {  get {return rootObject as global::facebook.Schema.friends_get_response; } }

    public global::facebook.Schema.friends_getAppUsers_response friends_getAppUsers_response {  get {return rootObject as global::facebook.Schema.friends_getAppUsers_response; } }

    public global::facebook.Schema.friends_getLists_response friends_getLists_response {  get {return rootObject as global::facebook.Schema.friends_getLists_response; } }

    public global::facebook.Schema.groups_get_response groups_get_response {  get {return rootObject as global::facebook.Schema.groups_get_response; } }

    public global::facebook.Schema.privacy_canSee_response privacy_canSee_response {  get {return rootObject as global::facebook.Schema.privacy_canSee_response; } }

    public global::facebook.Schema.data_getCookies_response data_getCookies_response {  get {return rootObject as global::facebook.Schema.data_getCookies_response; } }

    public global::facebook.Schema.permissions_checkGrantedApiAccess_response permissions_checkGrantedApiAccess_response {  get {return rootObject as global::facebook.Schema.permissions_checkGrantedApiAccess_response; } }

    public global::facebook.Schema.permissions_checkAvailableApiAccess_response permissions_checkAvailableApiAccess_response {  get {return rootObject as global::facebook.Schema.permissions_checkAvailableApiAccess_response; } }

    public global::facebook.Schema.fbpayments_getOrders_response fbpayments_getOrders_response {  get {return rootObject as global::facebook.Schema.fbpayments_getOrders_response; } }

    public global::facebook.Schema.marketplace_getCategories_response marketplace_getCategories_response {  get {return rootObject as global::facebook.Schema.marketplace_getCategories_response; } }

    public global::facebook.Schema.marketplace_getSubCategories_response marketplace_getSubCategories_response {  get {return rootObject as global::facebook.Schema.marketplace_getSubCategories_response; } }

    public global::facebook.Schema.marketplace_getListings_response marketplace_getListings_response {  get {return rootObject as global::facebook.Schema.marketplace_getListings_response; } }

    public global::facebook.Schema.marketplace_search_response marketplace_search_response {  get {return rootObject as global::facebook.Schema.marketplace_search_response; } }

    public global::facebook.Schema.photos_get_response photos_get_response {  get {return rootObject as global::facebook.Schema.photos_get_response; } }

    public global::facebook.Schema.photos_getAlbums_response photos_getAlbums_response {  get {return rootObject as global::facebook.Schema.photos_getAlbums_response; } }

    public global::facebook.Schema.photos_getTags_response photos_getTags_response {  get {return rootObject as global::facebook.Schema.photos_getTags_response; } }

    public global::facebook.Schema.update_decodeIDs_response update_decodeIDs_response {  get {return rootObject as global::facebook.Schema.update_decodeIDs_response; } }

    public global::facebook.Schema.users_getInfo_response users_getInfo_response {  get {return rootObject as global::facebook.Schema.users_getInfo_response; } }

    public global::facebook.Schema.users_getStandardInfo_response users_getStandardInfo_response {  get {return rootObject as global::facebook.Schema.users_getStandardInfo_response; } }

    public global::facebook.Schema.pages_getInfo_response pages_getInfo_response {  get {return rootObject as global::facebook.Schema.pages_getInfo_response; } }

    public global::facebook.Schema.data_getUserPreferences_response data_getUserPreferences_response {  get {return rootObject as global::facebook.Schema.data_getUserPreferences_response; } }

    public global::facebook.Schema.data_getObjectTypes_response data_getObjectTypes_response {  get {return rootObject as global::facebook.Schema.data_getObjectTypes_response; } }

    public global::facebook.Schema.data_getObjectType_response data_getObjectType_response {  get {return rootObject as global::facebook.Schema.data_getObjectType_response; } }

    public global::facebook.Schema.data_getObjects_response data_getObjects_response {  get {return rootObject as global::facebook.Schema.data_getObjects_response; } }

    public global::facebook.Schema.data_getAssociationDefinitions_response data_getAssociationDefinitions_response {  get {return rootObject as global::facebook.Schema.data_getAssociationDefinitions_response; } }

    public global::facebook.Schema.data_getAssociatedObjects_response data_getAssociatedObjects_response {  get {return rootObject as global::facebook.Schema.data_getAssociatedObjects_response; } }

    public global::facebook.Schema.data_getAssociatedObjectCounts_response data_getAssociatedObjectCounts_response {  get {return rootObject as global::facebook.Schema.data_getAssociatedObjectCounts_response; } }

    public global::facebook.Schema.data_getAssociations_response data_getAssociations_response {  get {return rootObject as global::facebook.Schema.data_getAssociations_response; } }

    public global::facebook.Schema.feed_getRegisteredTemplateBundles_response feed_getRegisteredTemplateBundles_response {  get {return rootObject as global::facebook.Schema.feed_getRegisteredTemplateBundles_response; } }

    public global::facebook.Schema.admin_getMetrics_response admin_getMetrics_response {  get {return rootObject as global::facebook.Schema.admin_getMetrics_response; } }

    public global::facebook.Schema.auth_createToken_response auth_createToken_response {  get {return rootObject as global::facebook.Schema.auth_createToken_response; } }

    public global::facebook.Schema.auth_getSession_response auth_getSession_response {  get {return rootObject as global::facebook.Schema.auth_getSession_response; } }

    public global::facebook.Schema.auth_promoteSession_response auth_promoteSession_response {  get {return rootObject as global::facebook.Schema.auth_promoteSession_response; } }

    public global::facebook.Schema.auth_expireSession_response auth_expireSession_response {  get {return rootObject as global::facebook.Schema.auth_expireSession_response; } }

    public global::facebook.Schema.auth_revokeAuthorization_response auth_revokeAuthorization_response {  get {return rootObject as global::facebook.Schema.auth_revokeAuthorization_response; } }

    public global::facebook.Schema.connect_getUnconnectedFriendsCount_response connect_getUnconnectedFriendsCount_response {  get {return rootObject as global::facebook.Schema.connect_getUnconnectedFriendsCount_response; } }

    public global::facebook.Schema.events_getMembers_response events_getMembers_response {  get {return rootObject as global::facebook.Schema.events_getMembers_response; } }

    public global::facebook.Schema.events_rsvp_response events_rsvp_response {  get {return rootObject as global::facebook.Schema.events_rsvp_response; } }

    public global::facebook.Schema.events_create_response events_create_response {  get {return rootObject as global::facebook.Schema.events_create_response; } }

    public global::facebook.Schema.events_edit_response events_edit_response {  get {return rootObject as global::facebook.Schema.events_edit_response; } }

    public global::facebook.Schema.events_cancel_response events_cancel_response {  get {return rootObject as global::facebook.Schema.events_cancel_response; } }

    public global::facebook.Schema.fbml_setRefHandle_response fbml_setRefHandle_response {  get {return rootObject as global::facebook.Schema.fbml_setRefHandle_response; } }

    public global::facebook.Schema.fbml_refreshRefUrl_response fbml_refreshRefUrl_response {  get {return rootObject as global::facebook.Schema.fbml_refreshRefUrl_response; } }

    public global::facebook.Schema.fbml_refreshImgSrc_response fbml_refreshImgSrc_response {  get {return rootObject as global::facebook.Schema.fbml_refreshImgSrc_response; } }

    public global::facebook.Schema.fbml_uploadNativeStrings_response fbml_uploadNativeStrings_response {  get {return rootObject as global::facebook.Schema.fbml_uploadNativeStrings_response; } }

    public global::facebook.Schema.feed_publishStoryToUser_response feed_publishStoryToUser_response {  get {return rootObject as global::facebook.Schema.feed_publishStoryToUser_response; } }

    public global::facebook.Schema.feed_publishActionOfUser_response feed_publishActionOfUser_response {  get {return rootObject as global::facebook.Schema.feed_publishActionOfUser_response; } }

    public global::facebook.Schema.groups_getMembers_response groups_getMembers_response {  get {return rootObject as global::facebook.Schema.groups_getMembers_response; } }

    public global::facebook.Schema.data_setCookie_response data_setCookie_response {  get {return rootObject as global::facebook.Schema.data_setCookie_response; } }

    public global::facebook.Schema.permissions_grantApiAccess_response permissions_grantApiAccess_response {  get {return rootObject as global::facebook.Schema.permissions_grantApiAccess_response; } }

    public global::facebook.Schema.permissions_revokeApiAccess_response permissions_revokeApiAccess_response {  get {return rootObject as global::facebook.Schema.permissions_revokeApiAccess_response; } }

    public global::facebook.Schema.fbpayments_setProperties_response fbpayments_setProperties_response {  get {return rootObject as global::facebook.Schema.fbpayments_setProperties_response; } }

    public global::facebook.Schema.fbpayments_getOrderDetails_response fbpayments_getOrderDetails_response {  get {return rootObject as global::facebook.Schema.fbpayments_getOrderDetails_response; } }

    public global::facebook.Schema.fbpayments_updateOrder_response fbpayments_updateOrder_response {  get {return rootObject as global::facebook.Schema.fbpayments_updateOrder_response; } }

    public global::facebook.Schema.marketplace_createListing_response marketplace_createListing_response {  get {return rootObject as global::facebook.Schema.marketplace_createListing_response; } }

    public global::facebook.Schema.marketplace_removeListing_response marketplace_removeListing_response {  get {return rootObject as global::facebook.Schema.marketplace_removeListing_response; } }

    public global::facebook.Schema.liveMessage_send_response liveMessage_send_response {  get {return rootObject as global::facebook.Schema.liveMessage_send_response; } }

    public global::facebook.Schema.notifications_get_response notifications_get_response {  get {return rootObject as global::facebook.Schema.notifications_get_response; } }

    public global::facebook.Schema.notifications_send_response notifications_send_response {  get {return rootObject as global::facebook.Schema.notifications_send_response; } }

    public global::facebook.Schema.notifications_sendEmail_response notifications_sendEmail_response {  get {return rootObject as global::facebook.Schema.notifications_sendEmail_response; } }

    public global::facebook.Schema.photos_createAlbum_response photos_createAlbum_response {  get {return rootObject as global::facebook.Schema.photos_createAlbum_response; } }

    public global::facebook.Schema.photos_upload_response photos_upload_response {  get {return rootObject as global::facebook.Schema.photos_upload_response; } }

    public global::facebook.Schema.photos_addTag_response photos_addTag_response {  get {return rootObject as global::facebook.Schema.photos_addTag_response; } }

    public global::facebook.Schema.profile_setFBML_response profile_setFBML_response {  get {return rootObject as global::facebook.Schema.profile_setFBML_response; } }

    public global::facebook.Schema.profile_getFBML_response profile_getFBML_response {  get {return rootObject as global::facebook.Schema.profile_getFBML_response; } }

    public global::facebook.Schema.profile_setInfo_response profile_setInfo_response {  get {return rootObject as global::facebook.Schema.profile_setInfo_response; } }

    public global::facebook.Schema.profile_getInfo_response profile_getInfo_response {  get {return rootObject as global::facebook.Schema.profile_getInfo_response; } }

    public global::facebook.Schema.profile_setInfoOptions_response profile_setInfoOptions_response {  get {return rootObject as global::facebook.Schema.profile_setInfoOptions_response; } }

    public global::facebook.Schema.profile_getInfoOptions_response profile_getInfoOptions_response {  get {return rootObject as global::facebook.Schema.profile_getInfoOptions_response; } }

    public global::facebook.Schema.users_isAppUser_response users_isAppUser_response {  get {return rootObject as global::facebook.Schema.users_isAppUser_response; } }

    public global::facebook.Schema.users_isAppAdded_response users_isAppAdded_response {  get {return rootObject as global::facebook.Schema.users_isAppAdded_response; } }

    public global::facebook.Schema.users_hasAppPermission_response users_hasAppPermission_response {  get {return rootObject as global::facebook.Schema.users_hasAppPermission_response; } }

    public global::facebook.Schema.users_getLoggedInUser_response users_getLoggedInUser_response {  get {return rootObject as global::facebook.Schema.users_getLoggedInUser_response; } }

    public global::facebook.Schema.users_setStatus_response users_setStatus_response {  get {return rootObject as global::facebook.Schema.users_setStatus_response; } }

    public global::facebook.Schema.pages_isAdmin_response pages_isAdmin_response {  get {return rootObject as global::facebook.Schema.pages_isAdmin_response; } }

    public global::facebook.Schema.pages_isFan_response pages_isFan_response {  get {return rootObject as global::facebook.Schema.pages_isFan_response; } }

    public global::facebook.Schema.pages_isAppAdded_response pages_isAppAdded_response {  get {return rootObject as global::facebook.Schema.pages_isAppAdded_response; } }

    public global::facebook.Schema.data_setUserPreference_response data_setUserPreference_response {  get {return rootObject as global::facebook.Schema.data_setUserPreference_response; } }

    public global::facebook.Schema.data_setUserPreferences_response data_setUserPreferences_response {  get {return rootObject as global::facebook.Schema.data_setUserPreferences_response; } }

    public global::facebook.Schema.data_getUserPreference_response data_getUserPreference_response {  get {return rootObject as global::facebook.Schema.data_getUserPreference_response; } }

    public global::facebook.Schema.data_createObjectType_response data_createObjectType_response {  get {return rootObject as global::facebook.Schema.data_createObjectType_response; } }

    public global::facebook.Schema.data_dropObjectType_response data_dropObjectType_response {  get {return rootObject as global::facebook.Schema.data_dropObjectType_response; } }

    public global::facebook.Schema.data_renameObjectType_response data_renameObjectType_response {  get {return rootObject as global::facebook.Schema.data_renameObjectType_response; } }

    public global::facebook.Schema.data_defineObjectProperty_response data_defineObjectProperty_response {  get {return rootObject as global::facebook.Schema.data_defineObjectProperty_response; } }

    public global::facebook.Schema.data_undefineObjectProperty_response data_undefineObjectProperty_response {  get {return rootObject as global::facebook.Schema.data_undefineObjectProperty_response; } }

    public global::facebook.Schema.data_renameObjectProperty_response data_renameObjectProperty_response {  get {return rootObject as global::facebook.Schema.data_renameObjectProperty_response; } }

    public global::facebook.Schema.data_createObject_response data_createObject_response {  get {return rootObject as global::facebook.Schema.data_createObject_response; } }

    public global::facebook.Schema.data_updateObject_response data_updateObject_response {  get {return rootObject as global::facebook.Schema.data_updateObject_response; } }

    public global::facebook.Schema.data_deleteObject_response data_deleteObject_response {  get {return rootObject as global::facebook.Schema.data_deleteObject_response; } }

    public global::facebook.Schema.data_deleteObjects_response data_deleteObjects_response {  get {return rootObject as global::facebook.Schema.data_deleteObjects_response; } }

    public global::facebook.Schema.data_getObject_response data_getObject_response {  get {return rootObject as global::facebook.Schema.data_getObject_response; } }

    public global::facebook.Schema.data_getObjectProperty_response data_getObjectProperty_response {  get {return rootObject as global::facebook.Schema.data_getObjectProperty_response; } }

    public global::facebook.Schema.data_setObjectProperty_response data_setObjectProperty_response {  get {return rootObject as global::facebook.Schema.data_setObjectProperty_response; } }

    public global::facebook.Schema.data_getHashValue_response data_getHashValue_response {  get {return rootObject as global::facebook.Schema.data_getHashValue_response; } }

    public global::facebook.Schema.data_setHashValue_response data_setHashValue_response {  get {return rootObject as global::facebook.Schema.data_setHashValue_response; } }

    public global::facebook.Schema.data_incHashValue_response data_incHashValue_response {  get {return rootObject as global::facebook.Schema.data_incHashValue_response; } }

    public global::facebook.Schema.data_removeHashKey_response data_removeHashKey_response {  get {return rootObject as global::facebook.Schema.data_removeHashKey_response; } }

    public global::facebook.Schema.data_removeHashKeys_response data_removeHashKeys_response {  get {return rootObject as global::facebook.Schema.data_removeHashKeys_response; } }

    public global::facebook.Schema.data_defineAssociation_response data_defineAssociation_response {  get {return rootObject as global::facebook.Schema.data_defineAssociation_response; } }

    public global::facebook.Schema.data_undefineAssociation_response data_undefineAssociation_response {  get {return rootObject as global::facebook.Schema.data_undefineAssociation_response; } }

    public global::facebook.Schema.data_renameAssociation_response data_renameAssociation_response {  get {return rootObject as global::facebook.Schema.data_renameAssociation_response; } }

    public global::facebook.Schema.data_getAssociationDefinition_response data_getAssociationDefinition_response {  get {return rootObject as global::facebook.Schema.data_getAssociationDefinition_response; } }

    public global::facebook.Schema.data_setAssociation_response data_setAssociation_response {  get {return rootObject as global::facebook.Schema.data_setAssociation_response; } }

    public global::facebook.Schema.data_setAssociations_response data_setAssociations_response {  get {return rootObject as global::facebook.Schema.data_setAssociations_response; } }

    public global::facebook.Schema.data_removeAssociation_response data_removeAssociation_response {  get {return rootObject as global::facebook.Schema.data_removeAssociation_response; } }

    public global::facebook.Schema.data_removeAssociations_response data_removeAssociations_response {  get {return rootObject as global::facebook.Schema.data_removeAssociations_response; } }

    public global::facebook.Schema.data_removeAssociatedObjects_response data_removeAssociatedObjects_response {  get {return rootObject as global::facebook.Schema.data_removeAssociatedObjects_response; } }

    public global::facebook.Schema.data_getAssociatedObjectCount_response data_getAssociatedObjectCount_response {  get {return rootObject as global::facebook.Schema.data_getAssociatedObjectCount_response; } }

    public global::facebook.Schema.admin_getAppProperties_response admin_getAppProperties_response {  get {return rootObject as global::facebook.Schema.admin_getAppProperties_response; } }

    public global::facebook.Schema.admin_setAppProperties_response admin_setAppProperties_response {  get {return rootObject as global::facebook.Schema.admin_setAppProperties_response; } }

    public global::facebook.Schema.admin_getAllocation_response admin_getAllocation_response {  get {return rootObject as global::facebook.Schema.admin_getAllocation_response; } }

    public global::facebook.Schema.application_getPublicInfo_response application_getPublicInfo_response {  get {return rootObject as global::facebook.Schema.application_getPublicInfo_response; } }

    public global::facebook.Schema.feed_registerTemplateBundle_response feed_registerTemplateBundle_response {  get {return rootObject as global::facebook.Schema.feed_registerTemplateBundle_response; } }

    public global::facebook.Schema.feed_getRegisteredTemplateBundleByID_response feed_getRegisteredTemplateBundleByID_response {  get {return rootObject as global::facebook.Schema.feed_getRegisteredTemplateBundleByID_response; } }

    public global::facebook.Schema.feed_deactivateTemplateBundleByID_response feed_deactivateTemplateBundleByID_response {  get {return rootObject as global::facebook.Schema.feed_deactivateTemplateBundleByID_response; } }

    public global::facebook.Schema.feed_publishUserAction_response feed_publishUserAction_response {  get {return rootObject as global::facebook.Schema.feed_publishUserAction_response; } }

    public global::facebook.Schema.admin_setRestrictionInfo_response admin_setRestrictionInfo_response {  get {return rootObject as global::facebook.Schema.admin_setRestrictionInfo_response; } }

    public global::facebook.Schema.admin_getRestrictionInfo_response admin_getRestrictionInfo_response {  get {return rootObject as global::facebook.Schema.admin_getRestrictionInfo_response; } }

    public global::facebook.Schema.error_response error_response {  get {return rootObject as global::facebook.Schema.error_response; } }

    public global::facebook.Schema.feed_publishTemplatizedAction_response feed_publishTemplatizedAction_response {  get {return rootObject as global::facebook.Schema.feed_publishTemplatizedAction_response; } }
        
        private XRoot() {
        }
        
        public XRoot(global::facebook.Schema.connect_registerUsers_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.connect_unregisterUsers_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.events_get_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.friends_areFriends_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.friends_get_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.friends_getAppUsers_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.friends_getLists_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.groups_get_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.privacy_canSee_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_getCookies_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.permissions_checkGrantedApiAccess_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.permissions_checkAvailableApiAccess_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.fbpayments_getOrders_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.marketplace_getCategories_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.marketplace_getSubCategories_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.marketplace_getListings_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.marketplace_search_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.photos_get_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.photos_getAlbums_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.photos_getTags_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.update_decodeIDs_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.users_getInfo_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.users_getStandardInfo_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.pages_getInfo_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_getUserPreferences_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_getObjectTypes_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_getObjectType_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_getObjects_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_getAssociationDefinitions_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_getAssociatedObjects_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_getAssociatedObjectCounts_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_getAssociations_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.feed_getRegisteredTemplateBundles_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.admin_getMetrics_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.auth_createToken_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.auth_getSession_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.auth_promoteSession_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.auth_expireSession_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.auth_revokeAuthorization_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.connect_getUnconnectedFriendsCount_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.events_getMembers_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.events_rsvp_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.events_create_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.events_edit_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.events_cancel_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.fbml_setRefHandle_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.fbml_refreshRefUrl_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.fbml_refreshImgSrc_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.fbml_uploadNativeStrings_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.feed_publishStoryToUser_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.feed_publishActionOfUser_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.groups_getMembers_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_setCookie_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.permissions_grantApiAccess_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.permissions_revokeApiAccess_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.fbpayments_setProperties_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.fbpayments_getOrderDetails_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.fbpayments_updateOrder_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.marketplace_createListing_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.marketplace_removeListing_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.liveMessage_send_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.notifications_get_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.notifications_send_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.notifications_sendEmail_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.photos_createAlbum_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.photos_upload_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.photos_addTag_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.profile_setFBML_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.profile_getFBML_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.profile_setInfo_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.profile_getInfo_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.profile_setInfoOptions_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.profile_getInfoOptions_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.users_isAppUser_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.users_isAppAdded_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.users_hasAppPermission_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.users_getLoggedInUser_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.users_setStatus_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.pages_isAdmin_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.pages_isFan_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.pages_isAppAdded_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_setUserPreference_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_setUserPreferences_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_getUserPreference_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_createObjectType_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_dropObjectType_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_renameObjectType_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_defineObjectProperty_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_undefineObjectProperty_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_renameObjectProperty_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_createObject_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_updateObject_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_deleteObject_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_deleteObjects_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_getObject_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_getObjectProperty_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_setObjectProperty_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_getHashValue_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_setHashValue_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_incHashValue_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_removeHashKey_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_removeHashKeys_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_defineAssociation_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_undefineAssociation_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_renameAssociation_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_getAssociationDefinition_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_setAssociation_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_setAssociations_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_removeAssociation_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_removeAssociations_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_removeAssociatedObjects_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.data_getAssociatedObjectCount_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.admin_getAppProperties_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.admin_setAppProperties_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.admin_getAllocation_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.application_getPublicInfo_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.feed_registerTemplateBundle_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.feed_getRegisteredTemplateBundleByID_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.feed_deactivateTemplateBundleByID_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.feed_publishUserAction_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.admin_setRestrictionInfo_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.admin_getRestrictionInfo_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.error_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::facebook.Schema.feed_publishTemplatizedAction_response root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XDocument XDocument {
            get {
                return doc;
            }
        }
        
        public static XRoot Load(string xmlFile) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlFile);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(string xmlFile, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlFile, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(TextReader textReader) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(textReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(TextReader textReader, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(textReader, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(XmlReader xmlReader) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Parse(string text) {
            XRoot root = new XRoot();
            root.doc = XDocument.Parse(text);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Parse(string text, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Parse(text, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public virtual void Save(string fileName) {
            doc.Save(fileName);
        }
        
        public virtual void Save(TextWriter textWriter) {
            doc.Save(textWriter);
        }
        
        public virtual void Save(XmlWriter writer) {
            doc.Save(writer);
        }
        
        public virtual void Save(TextWriter textWriter, SaveOptions options) {
            doc.Save(textWriter, options);
        }
        
        public virtual void Save(string fileName, SaveOptions options) {
            doc.Save(fileName, options);
        }
    }
}
