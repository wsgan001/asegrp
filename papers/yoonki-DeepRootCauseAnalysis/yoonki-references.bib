% This file was created with JabRef 2.4.2.
% Encoding: Cp1252

@INPROCEEDINGS{damorim06:empirical,
  author = {d'Amorim,, Marcelo and Pacheco,, Carlos and Xie,, Tao and Marinov,,
	Darko and Ernst,, Michael D. },
  title = {An Empirical Comparison of Automated Generation and Classification
	Techniques for Object-Oriented Unit Testing},
  booktitle = {Proc. 21st IEEE/ACM International Conference on Automated Software
	Engineering},
  year = {2006},
  pages = {59--68},
  doi = {http://dx.doi.org/10.1109/ASE.2006.13},
  review = {Test review}
}

@ARTICLE{adamson74:ngram,
  author = {Gorge W. Adamson and Jillian Boreham},
  title = {The Use of an Association Measure based on Character Strucure to
	Identify Semantically Related Pairs of Words and Decument Titles},
  journal = {Information Storage and Retrieval},
  year = {1974},
  volume = {7--8},
  pages = {253--260},
  number = {10},
  comment = {Textual similarity}
}

@INPROCEEDINGS{aeschlimann05:EclipseJDT,
  author = {Martin Aeschlimann and Dirk Baumer and Jerome Lanneluc},
  title = {{J}ava Tool Smithing Extending the {Eclipse} {J}ava Development Tools},
  booktitle = {Proc. EclipseCon, Tutorial},
  year = {2005},
  key = {EclipseJDT},
  keywords = {Eclipse JDT}
}

@MISC{harpoon,
  author = {Scott Ananian},
  title = {{FLEX} compiler infrastructure for {J}ava},
  year = {2003},
  note = {\url{http://cycleserv2.csail.mit.edu/Harpoon}}
}

@INPROCEEDINGS{artzi07:combined,
  author = {Shay Artzi and Adam Kiezun and David Glasser and Michael D. Ernst},
  title = {Combined static and dynamic mutability analysis},
  booktitle = {Proc. 22nd International Conference on Automated Software Engineering},
  year = {2007},
  pages = {104--113},
  doi = {http://doi.acm.org/10.1145/1321631.1321649}
}

@ARTICLE{beck00:test,
  author = {Beck,, Kent and Gamma,, Erich},
  title = {Test-infected: programmers love writing tests},
  year = {2000},
  pages = {357--376},
  book = {More Java gems}
}

@BOOK{beust07:testng,
  title = {Next Generation Java Testing: TestNG and Advanced Concepts},
  publisher = {Addison-Wesley Professional},
  year = {2007},
  author = {Beust,, C\'{e}dric and Suleiman,, Hani},
  isbn = {0321503104}
}

@INPROCEEDINGS{bruch06:fruit,
  author = {Bruch,, Marcel and Sch\"{a}fer,, Thorsten and Mezini,, Mira},
  title = {FrUiT: IDE support for framework understanding},
  booktitle = {Proc. 2006 OOPSLA workshop on Eclipse Technology eXchange},
  year = {2006},
  pages = {55--59},
  doi = {http://doi.acm.org/10.1145/1188835.1188847}
}

@INPROCEEDINGS{csallner06:dynamically,
  author = {Csallner,, Christoph and Smaragdakis,, Yannis},
  title = {Dynamically discovering likely interface invariants},
  booktitle = {Proc. 28th International Conference on Software Engineering},
  year = {2006},
  pages = {861--864},
  doi = {http://doi.acm.org/10.1145/1134285.1134435}
}

@ARTICLE{csallner04:jcrasher,
  author = {Csallner,, Christoph and Smaragdakis,, Yannis},
  title = {JCrasher: an automatic robustness tester for {J}ava},
  journal = {Softw. Pract. Exper.},
  year = {2004},
  volume = {34},
  pages = {1025--1050},
  number = {11},
  doi = {http://dx.doi.org/10.1002/spe.602},
  review = {Uncaught exception, Automated randon test generation, Exception-based
	random testing}
}

@ARTICLE{csallner08:dsdcrasher,
  author = {Csallner,, Christoph and Smaragdakis,, Yannis and Xie,, Tao},
  title = {DSD-Crasher: A hybrid analysis tool for bug finding},
  journal = {ACM Trans. Softw. Eng. Methodol.},
  year = {2008},
  volume = {17},
  pages = {1--37},
  number = {2},
  doi = {http://doi.acm.org/10.1145/1348250.1348254}
}

@INPROCEEDINGS{csallner08:dysy,
  author = {Csallner,, Christoph and Tillmann,, Nikolai and Smaragdakis,, Yannis},
  title = {DySy: dynamic symbolic execution for invariant inference},
  booktitle = {Proc. 30th International Conference on Software Engineering},
  year = {2008},
  pages = {281--290},
  abstract = {Dynamically discovering likely program invariants from concrete test
	executions has emerged as a highly promising software engineering
	technique. Dynamic invariant inference has the advantage of succinctly
	summarizing both “expected”program inputs and the subset of program
	behaviors that is normal under those inputs. In this paper, we introduce
	a technique that can drastically increase the relevance of inferred
	invariants, or reduce the size of the test suite required to obtain
	good invariants. Instead of falsifying invariants produced by pre-set
	patterns, we determine likely program invariants by combining the
	concrete execution of actual test cases with a simultaneous symbolic
	execution of the same tests. The symbolic execution produces abstract
	conditions over program variables that the concrete tests satisfy
	during their execution. In this way, we obtain the benefits of dynamic
	inference tools like Daikon: the inferred invariants correspond to
	the observed program behaviors. At the same time, however, our inferred
	invariants are much more suited to the program at hand than Daikon’s
	hardcoded invariant patterns. The symbolic invariants are literally
	derived from the program text itself, with appropriate value substitutions
	as dictated by symbolic execution. We implemented our technique in
	the DySy tool, which utilizes a powerful symbolic execution and simplification
	engine. The results confirm the benefits of our approach. In Daikon’s
	prime example benchmark, we infer the majority of the interesting
	Daikon invariants, while eliminating invariants that a human user
	is likely to consider irrelevant.},
  doi = {http://doi.acm.org/10.1145/1368088.1368127}
}

@INPROCEEDINGS{dagenais08:automatically,
  author = {Dagenais,, Barth\'{e}l\'{e}my and Ossher,, Harold},
  title = {Automatically locating framework extension examples},
  booktitle = {Proc. 16th ACM SIGSOFT International Symposium on Foundations of
	Software Engineering},
  year = {2008},
  pages = {203--213},
  doi = {http://doi.acm.org/10.1145/1453101.1453129}
}

@INPROCEEDINGS{dagenais07:mismar,
  author = {Dagenais,, Barthelemy and Ossher,, Harold},
  title = {Mismar: A New Approach to Developer Documentation},
  booktitle = {Companion to the proc. 29th International Conference on Software
	Engineering},
  year = {2007},
  pages = {47--48},
  doi = {http://dx.doi.org/10.1109/ICSECOMPANION.2007.51}
}

@INPROCEEDINGS{dagenais08:semdiff,
  author = {Dagenais,, Barth\'{e}l\'{e}my and Robillard,, Martin P.},
  title = {Recommending adaptive changes for framework evolution},
  booktitle = {Proc. 30th International Conference on Software Engineering},
  year = {2008},
  pages = {481--490},
  doi = {http://doi.acm.org/10.1145/1368088.1368154}
}

@MISC{dallmeier07:jdynpur,
  author = {V. Dallmeier and C. Lindig and A. Zeller},
  title = {Dynamic purity analysis for {J}ava programs},
  year = {2007},
  note = {\url{http://www.st.cs.uni-sb.de/models/jdynpur/}}
}

@INPROCEEDINGS{daniel08:predicting,
  author = {Daniel,, Brett and Boshernitsan,, Marat},
  title = {Predicting Effectiveness of Automatic Testing Tools},
  booktitle = {Proc. 23rd IEEE/ACM International Conference on Automated Software
	Engineering},
  year = {2008}
}

@INPROCEEDINGS{daniel07:astgen,
  author = {Daniel,, Brett and Dig,, Danny and Garcia,, Kely and Marinov,, Darko},
  title = {Automated Testing of Refactoring Engines},
  booktitle = {Proc. ACM SIGSOFT Symposium on the Foundations of Software Engineering},
  year = {2007},
  doi = {http://doi.acm.org/10.1145/1287624.1287651},
  keywords = {Automated testing, bounded-exhaustive testing, imperative generators,
	test data generation, refactoring engines}
}

@INPROCEEDINGS{deursen01:refactoring,
  author = {Deursen,, Arie and Moonen,, Leon and Bergh,, Alex and Kok,, Gerard},
  title = {Refactoring test code},
  booktitle = {Proc. 2nd International Conference on Extreme Programming and Flexible
	Processes in Software Engineering},
  year = {2001},
  pages = {92--95}
}

@INPROCEEDINGS{dig08:reba,
  author = {Dig,, Danny and Negara,, Stas and Mohindra,, Vibhu and Johnson,,
	Ralph},
  title = {ReBA: refactoring-aware binary adaptation of evolving libraries},
  booktitle = {Proc. 30th International Conference on Software Engineering},
  year = {2008},
  pages = {441--450},
  doi = {http://doi.acm.org/10.1145/1368088.1368148}
}

@INPROCEEDINGS{donovan04:converting,
  author = {Donovan,, Alan and Kie\v{z}un,, Adam and Tschantz,, Matthew S. and
	Ernst,, Michael D.},
  title = {Converting {J}ava programs to use generic libraries},
  booktitle = {Proc. 19th annual ACM SIGPLAN conference on Object-oriented programming,
	systems, languages, and applications},
  year = {2004},
  pages = {15--34},
  doi = {http://doi.acm.org/10.1145/1028976.1028979}
}

@INPROCEEDINGS{ernst04:invited,
  author = {Ernst,, Michael D.},
  title = {Invited Talk Static and dynamic analysis: synergy and duality},
  booktitle = {Proc. 5th ACM SIGPLAN-SIGSOFT workshop on Program analysis for software
	tools and engineering},
  year = {2004},
  pages = {35--35},
  doi = {http://doi.acm.org/10.1145/996821.996823}
}

@ARTICLE{ernst07:daikon,
  author = {Michael D. Ernst and Jeff H. Perkins and Philip J. Guo and Stephen
	McCamant and Carlos Pacheco and Matthew S. Tschantz and Chen Xiao},
  title = {The {Daikon} system for dynamic detection of likely invariants},
  journal = {Science of Computer Programming},
  year = {2007},
  volume = {69},
  pages = {35--45},
  number = {1--3},
  doi = {http://dx.doi.org/10.1016/j.scico.2007.01.015},
  review = {Infering operational model}
}

@INPROCEEDINGS{fluri08:changecommander,
  author = {Fluri,, Beat and Zuberb\"{u}hler,, Jonas and Gall,, Harald C.},
  title = {Recommending method invocation context changes},
  booktitle = {Proc. 28th International Workshop on Recommendation Systems for Software
	Engineering},
  year = {2008},
  pages = {1--5},
  doi = {http://doi.acm.org/10.1145/1454247.1454249}
}

@BOOK{fowler99:refactoring,
  title = {Refactoring: improving the design of existing code},
  publisher = {Addison-Wesley Longman Publishing Co., Inc.},
  year = {1999},
  author = {Martin Fowler}
}

@MISC{junit,
  author = {Gamma,, Erich and Beck,, Kent },
  title = {{JUnit}},
  note = {\url{http://www.junit.org}},
  keywords = {testing}
}

@INPROCEEDINGS{godefroid07:compositional,
  author = {Godefroid,, Patrice},
  title = {Compositional dynamic test generation},
  booktitle = {Proc. 34th annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming
	Languages},
  year = {2007},
  pages = {47--54},
  doi = {http://doi.acm.org/10.1145/1190216.1190226}
}

@ARTICLE{godefroid08:grammar,
  author = {Godefroid,, Patrice and Kiezun,, Adam and Levin,, Michael Y.},
  title = {Grammar-based whitebox fuzzing},
  journal = {SIGPLAN Not.},
  year = {2008},
  volume = {43},
  pages = {206--215},
  number = {6},
  doi = {http://doi.acm.org/10.1145/1379022.1375607}
}

@INPROCEEDINGS{godefroid05:dart,
  author = {Godefroid,, Patrice and Klarlund,, Nils and Sen,, Koushik},
  title = {DART: directed automated random testing},
  booktitle = {Proc. 2005 ACM SIGPLAN Conference on Programming Language Design
	and Implementation},
  year = {2005},
  pages = {213--223},
  doi = {http://doi.acm.org/10.1145/1065010.1065036}
}

@INPROCEEDINGS{guerra07:refactoring,
  author = {Guerra,, Eduardo Martins and Fernandes,, Clovis Torres},
  title = {Refactoring Test Code Safely},
  booktitle = {Proc. International Conference on Software Engineering Advances},
  year = {2007},
  pages = {44},
  doi = {http://dx.doi.org/10.1109/ICSEA.2007.57}
}

@INPROCEEDINGS{gupta03:coverage,
  author = {Neelam Gupta and Zachary V. Heidepriem},
  title = {A new structural coverage criterion for dynamic detection of program
	invariants},
  booktitle = {Proc. 18th Annual International Conference on Automated Software
	Engineering},
  year = {2003},
  pages = {49--58}
}

@INPROCEEDINGS{girba07rule-basedassessment,
  author = {Stefan Reichhart Tudor GÃ®rba and StÃ©phane Ducasse and Annecy Savoie},
  title = {Rule-based assessment of test quality},
  booktitle = {In Proceedings of TOOLS Europe},
  year = {2007}
}

@INPROCEEDINGS{harder03:improving,
  author = {Harder,, Michael and Mellen,, Jeff and Michael D. Ernst},
  title = {Improving Test Suites via Operational Abstraction},
  booktitle = {Proc. 25th International Conference on Software Engineering},
  year = {2003},
  pages = {60--71}
}

@INPROCEEDINGS{henkel03:discovering,
  author = {Johannes Henkel and Amer Diwan},
  title = {Discovering algebraic specifications from {J}ava classes},
  booktitle = {Proc. 17th European Conference on Object-Oriented Programming},
  year = {2003},
  pages = {431--456}
}

@ARTICLE{henkel08:developing,
  author = {Henkel,, Johannes and Reichenbach,, Christoph and Diwan,, Amer},
  title = {Developing and debugging algebraic specifications for {J}ava classes},
  journal = {ACM Trans. Softw. Eng. Methodol.},
  year = {2008},
  volume = {17},
  pages = {1--37},
  number = {3},
  doi = {http://doi.acm.org/10.1145/1363102.1363105}
}

@INPROCEEDINGS{inkumsah08:improving,
  author = {Inkumsah,, Kobi and Xie,, Tao},
  title = {Improving Structural Testing of Object-Oriented Programs via Integrating
	Evolutionary Testing and Symbolic Execution},
  booktitle = {Proc. 23rd IEEE/ACM International Conference on Automated Software
	Engineering},
  year = {2008},
  pages = {297--306}
}

@INPROCEEDINGS{inkumsah07:evacon,
  author = {Kobi Inkumsah and Tao Xie},
  title = {Evacon: A Framework for Integrating Evolutionary and Concolic Testing
	for Object-Oriented Programs},
  booktitle = {Proc. 22nd IEEE/ACM International Conference on Automated Software
	Engineering},
  year = {2007},
  pages = {425--428},
  month = {November},
  location = {Atlanta, Georgia}
}

@ARTICLE{jiau09:testdiff,
  author = {Jiau,, Hewijin Christine and Chen,, Jinghong Cox},
  title = {Test code differencing for test-driven refactoring automation},
  journal = {SIGSOFT Softw. Eng. Notes},
  year = {2009},
  volume = {34},
  pages = {1--10},
  number = {1},
  doi = {http://doi.acm.org/10.1145/1457516.1457524}
}

@INPROCEEDINGS{kiezun07:refactoring,
  author = {Kiezun,, Adam and Ernst,, Michael D. and Tip,, Frank and Fuhrer,,
	Robert M.},
  title = {Refactoring for Parameterizing {J}ava Classes},
  booktitle = {Proc. 29th International Conference on Software Engineering},
  year = {2007},
  pages = {437--446},
  doi = {http://dx.doi.org/10.1109/ICSE.2007.70}
}

@ARTICLE{king76:symbolic,
  author = {King,, James C.},
  title = {Symbolic execution and program testing},
  journal = {Commun. ACM},
  year = {1976},
  volume = {19},
  pages = {385--394},
  number = {7},
  doi = {http://doi.acm.org/10.1145/360248.360252},
  keywords = {program debugging, program proving, program testing, program verification,
	symbolic execution, symbolic interpretation},
  review = {Symbolic Execution}
}

@INPROCEEDINGS{koochakzadeh09:test,
  author = {Negar Koochakzadeh and Vahid Garousi and Frank Maurer},
  title = {Test Redundancy Measurement Based on Coverage Information: Evaluations
	and Lessons Learned},
  booktitle = {Proc. 2nd International Conference on Software Testing, Verification,
	and Validation},
  year = {2009},
  pages = {TBD--TBD},
  doi = {TBD}
}

@INPROCEEDINGS{kuhn08:jexample,
  author = {Adrian Kuhn and Bart Van Rompaey and Lea Haensenberger and Oscar
	Nierstrasz and Serge Demeyer and Markus Gaelli and Koenraad Van Leemput},
  title = {JExample: Exploiting dependencies between tests to improve defect
	localization},
  booktitle = {Proc. 9th International Conference on Extreme Programming and Flexible
	Processes},
  year = {2008},
  pages = {73--82}
}

@ARTICLE{ma05:mujava,
  author = {Ma,, Yu-Seung and Offutt,, Jeff and Kwon,, Yong Rae},
  title = {{MuJava}: an automated class mutation system},
  journal = {Softw. Test. Verif. Reliab.},
  year = {2005},
  volume = {15},
  pages = {97--133},
  number = {2},
  doi = {http://dx.doi.org/10.1002/stvr.v15:2}
}

@INPROCEEDINGS{majumdar07:hybrid,
  author = {Majumdar,, Rupak and Sen,, Koushik},
  title = {Hybrid Concolic Testing},
  booktitle = {Proc. 29th International Conference on Software Engineering},
  year = {2007},
  pages = {416--426},
  doi = {http://dx.doi.org/10.1109/ICSE.2007.41}
}

@BOOK{meszaros06:xunit,
  title = {XUnit Test Patterns: Refactoring Test Code},
  publisher = {Prentice Hall PTR},
  year = {2006},
  author = {Meszaros,, Gerard},
  address = {Upper Saddle River, NJ, USA},
  isbn = {0131495054}
}

@ARTICLE{milanova05:parameterized,
  author = {Milanova,, Ana and Rountev,, Atanas and Ryder,, Barbara G.},
  title = {Parameterized object sensitivity for points-to analysis for {J}ava},
  journal = {ACM Trans. Softw. Eng. Methodol.},
  year = {2005},
  volume = {14},
  pages = {1--41},
  number = {1},
  abstract = {The goal of points-to analysis for Java is to determine the set of
	objects pointed to by a reference variable or a reference object
	field. We present object sensitivity, a new form of context sensitivity
	for flow-insensitive points-to analysis for Java. The key idea of
	our approach is to analyze a method separately for each of the object
	names that represent run-time objects on which this method may be
	invoked. To ensure flexibility and practicality, we propose a parameterization
	framework that allows analysis designers to control the tradeoffs
	between cost and precision in the object-sensitive analysis.Side-effect
	analysis determines the memory locations that may be modified by
	the execution of a program statement. Def-use analysis identifies
	pairs of statements that set the value of a memory location and subsequently
	use that value. The information computed by such analyses has a wide
	variety of uses in compilers and software tools. This work proposes
	new versions of these analyses that are based on object-sensitive
	points-to analysis.We have implemented two instantiations of our
	parameterized object-sensitive points-to analysis. On a set of 23
	Java programs, our experiments show that these analyses have comparable
	cost to a context-insensitive points-to analysis for Java which is
	based on Andersen's analysis for C. Our results also show that object
	sensitivity significantly improves the precision of side-effect analysis
	and call graph construction, compared to (1) context-insensitive
	analysis, and (2) context-sensitive points-to analysis that models
	context using the invoking call site. These experiments demonstrate
	that object-sensitive analyses can achieve substantial precision
	improvement, while at the same time remaining efficient and practical.},
  doi = {http://doi.acm.org/10.1145/1044834.1044835}
}

@INPROCEEDINGS{oconnor05:star,
  author = {O'Connor,, Alexis and Shonle,, Macneil and Griswold,, William},
  title = {Star diagram with automated refactorings for Eclipse},
  booktitle = {Proc. of OOPSLA workshop on Eclipse technology eXchange},
  year = {2005},
  pages = {16--20},
  doi = {http://doi.acm.org/10.1145/1117696.1117700},
  location = {San Diego, California}
}

@INPROCEEDINGS{pasareanu08:combining,
  author = {P\v{a}s\v{a}reanu,, Corina S. and Mehlitz,, Peter C. and Bushnell,,
	David H. and Gundy-Burlet,, Karen and Lowry,, Michael and Person,,
	Suzette and Pape,, Mark},
  title = {Combining unit-level symbolic execution and system-level concrete
	execution for testing nasa software},
  booktitle = {Proc. 2008 International Symposium on Software Testing and Analysis},
  year = {2008},
  pages = {15--26},
  doi = {http://doi.acm.org/10.1145/1390630.1390635}
}

@INPROCEEDINGS{pacheco07:randoop,
  author = {Pacheco,, Carlos and Ernst,, Michael D.},
  title = {Randoop: feedback-directed random testing for {J}ava},
  booktitle = {Companion to the 22nd ACM SIGPLAN Conference on Object-Oriented Programming
	Systems and Applications companion},
  year = {2007},
  pages = {815--816},
  publisher = {ACM},
  doi = {http://doi.acm.org/10.1145/1297846.1297902}
}

@INPROCEEDINGS{pacheco05:eclat,
  author = {Pacheco,, Carlos and Ernst,, Michael D.},
  title = {Eclat: Automatic generation and classification of test inputs},
  booktitle = {Proc. 19th European Conference Object-Oriented Programming},
  year = {2005},
  pages = {504--527},
  review = {Random Generation, Classification Operational Model}
}

@INPROCEEDINGS{pacheco07:feedback,
  author = {Pacheco,, Carlos and Lahiri,, Shuvendu K. and Ernst,, Michael D.
	and Ball,, Thomas},
  title = {Feedback-Directed Random Test Generation},
  booktitle = {Proc. 29th International Conference on Software Engineering},
  year = {2007},
  pages = {75--84},
  publisher = {IEEE Computer Society},
  doi = {http://dx.doi.org/10.1109/ICSE.2007.37}
}

@INPROCEEDINGS{person08:differential,
  author = {Person,, Suzette and Dwyer,, Matthew B. and Elbaum,, Sebastian and
	P\v{a}s\v{a}reanu,, Corina S.},
  title = {Differential symbolic execution},
  booktitle = {Proc. 16th ACM SIGSOFT International Symposium on Foundations of
	Software Engineering},
  year = {2008},
  pages = {226--237},
  doi = {http://doi.acm.org/10.1145/1453101.1453131}
}

@MASTERSTHESIS{razafimahefa99:side-effect,
  author = {Razafimahefa,, Chrislain},
  title = {A Study of Side-effect Analyses for {J}ava},
  school = {McGill University},
  year = {1999}
}

@INPROCEEDINGS{rinard04:classification,
  author = {Martin Rinard and Alexandru Salcianu and Suhabe Bugrara},
  title = {A classification system and analysis for aspect-oriented programs},
  booktitle = {Proc. 12th ACM SIGSOFT International Symposium on Foundations of
	Software Engineering},
  year = {2004},
  pages = {147--158},
  doi = {http://doi.acm.org/10.1145/1041685.1029917}
}

@INPROCEEDINGS{martin05:automatic,
  author = {Robillard,, Martin P.},
  title = {Automatic generation of suggestions for program investigation},
  booktitle = {ESEC/FSE-13: Proceedings of the 10th European software engineering
	conference held jointly with 13th ACM SIGSOFT international symposium
	on Foundations of software engineering},
  year = {2005},
  pages = {11--20},
  publisher = {ACM},
  doi = {http://doi.acm.org/10.1145/1081706.1081711}
}

@INPROCEEDINGS{rosenblum92:towards,
  author = {Rosenblum,, David S.},
  title = {Towards a method of programming with assertions},
  booktitle = {Proc. 14th International Conference on Software Engineering},
  year = {1992},
  pages = {92--104},
  doi = {http://doi.acm.org/10.1145/143062.143098}
}

@INPROCEEDINGS{rountev04:precise,
  author = {Rountev,, Atanas},
  title = {Precise Identification of Side-Effect-Free Methods in {J}ava},
  booktitle = {Proc. 20th International Conference on Software Maintenance},
  year = {2004},
  pages = {82--91}
}

@INPROCEEDINGS{saff07:developer,
  author = {Saff,, David},
  title = {From developer's head to developer tests: characterization, theories,
	and preventing one more bug},
  booktitle = {Companion to the 22nd ACM SIGPLAN Conference on Object-oriented Programming
	Systems and Applications Companion},
  year = {2007},
  pages = {811--812},
  doi = {http://doi.acm.org/10.1145/1297846.1297900}
}

@INPROCEEDINGS{saff05:automatic,
  author = {Saff,, David and Artzi,, Shay and Perkins,, Jeff H. and Ernst,, Michael
	D.},
  title = {Automatic test factoring for {J}ava},
  booktitle = {Proc. 20th IEEE/ACM international Conference on Automated software
	engineering},
  year = {2005},
  pages = {114--123},
  doi = {http://doi.acm.org/10.1145/1101908.1101927}
}

@INPROCEEDINGS{saff05:continuous,
  author = {Saff,, David and Ernst,, Michael D.},
  title = {Continuous testing in eclipse},
  booktitle = {Proc. 27th international conference on Software engineering},
  year = {2005},
  pages = {668--669},
  doi = {http://doi.acm.org/10.1145/1062455.1062600}
}

@PHDTHESIS{salcianu06:pointer,
  author = {Salcianu,, Alexandru},
  title = {Pointer Analysis for {J}ava Programs: Novel techniques and applications},
  school = {Massachusetts Institute of Technology},
  year = {2005}
}

@INPROCEEDINGS{salcianu05:purity,
  author = {Salcianu,, Alexandru and Rinard,, Martin},
  title = {Purity and Side Effect Analysis for {J}ava Programs},
  booktitle = {Proc. 6th International Conference on Verification, Model Checking
	and Abstract Interpretation},
  year = {2005},
  pages = {199--215}
}

@INPROCEEDINGS{sen07:concolic,
  author = {Sen,, Koushik},
  title = {Concolic testing},
  booktitle = {Pro. 22nd IEEE/ACM International Conference on Automated Software
	Engineering},
  year = {2007},
  pages = {571--572},
  doi = {http://doi.acm.org/10.1145/1321631.1321746}
}

@INPROCEEDINGS{sen05:cute,
  author = {Sen,, Koushik and Marinov,, Darko and Agha,, Gul},
  title = {CUTE: a concolic unit testing engine for C},
  booktitle = {Proc. 13th ACM SIGSOFT International Symposium on Foundations of
	Software Engineering},
  year = {2005},
  pages = {263--272},
  doi = {http://doi.acm.org/10.1145/1081706.1081750}
}

@INPROCEEDINGS{sharp05:building,
  author = {Mariana Sharp and Jason Sawin and Atanas Rountev},
  title = {Building a Whole-Program Type Analysis in {Eclipse}},
  booktitle = {Proc. Eclipse Technology eXchange Workshop at OOPSLA 2005},
  year = {2005},
  pages = {6-10}
}

@INPROCEEDINGS{taneja07:automated,
  author = {Taneja,, Kunal and Dig,, Danny and Xie,, Tao},
  title = {Automated Detection of {API} Refactorings in Libraries},
  booktitle = {Proc. 22nd IEEE/ACM International Conference on Automated Software
	Engineering},
  year = {2007},
  pages = {377--380}
}

@INPROCEEDINGS{taneja08:diffgen,
  author = {Kunal Taneja and Tao Xie},
  title = {{DiffGen}: Automated Regression Unit-Test Generation},
  booktitle = {Proc. 23rd IEEE/ACM International Conference on Automated Software
	Engineering},
  year = {2008}
}

@INPROCEEDINGS{thummalapenta08:negweb,
  author = {Suresh Thummalapenta and Tao Xie},
  title = {{NEGWeb}: Detecting Neglected Conditions via Mining Programming Rules
	from Open Source Code},
  booktitle = {Presented as a Student Poster at International Symposium on Software
	Testing and Analysis},
  year = {2008}
}

@INPROCEEDINGS{thummalapenta08:spotweb,
  author = {Suresh Thummalapenta and Tao Xie},
  title = {{SpotWeb}: Detecting Framework Hotspots via Mining Open Source Repositories
	on the Web},
  booktitle = {Proc. 5th Working Conference on Mining Software Repositories},
  year = {2008},
  pages = {109--112}
}

@INPROCEEDINGS{thummalapentaase08:spotweb,
  author = {Thummalapenta,, Suresh and Xie,, Tao},
  title = {{SpotWeb}: Detecting Framework Hotspots and Coldspots via Mining
	Open Source Code on the Web},
  booktitle = {Proc. 23rd IEEE/ACM International Conference on Automated Software
	Engineering},
  year = {2008}
}

@INPROCEEDINGS{thummalapenta07:parseweb,
  author = {Thummalapenta,, Suresh and Xie,, Tao},
  title = {{PARSEWeb}: A Programmer Assistant for Reusing Open Source Code on
	the Web},
  booktitle = {Proc. 22nd IEEE/ACM International Conference on Automated Software
	Engineering},
  year = {2007},
  pages = {204--213}
}

@INPROCEEDINGS{tillmann06:mock,
  author = {Tillmann,, Nikolai and Schulte,, Wolfram},
  title = {Mock-object generation with behavior},
  booktitle = {Proc. 21st IEEE/ACM International Conference on Automated Software
	Engineering},
  year = {2006},
  pages = {365--368},
  doi = {http://dx.doi.org/10.1109/ASE.2006.51}
}

@INPROCEEDINGS{tillman05:put,
  author = {Tillmann,, Nikolai and Schulte,, Wolfram},
  title = {Parameterized unit tests},
  booktitle = {Proc. 10th European Software Engineering Conference held jointly
	with 13th ACM SIGSOFT International Symposium on Foundations of Software
	Engineering},
  year = {2005},
  pages = {253--262},
  doi = {http://doi.acm.org/10.1145/1081706.1081749}
}

@INPROCEEDINGS{rompaey06:testsmell,
  author = {V. Rompaey,, Bart and D. Bois,, Bart and Demeyer,, Serge},
  title = {Characterizing the Relative Significance of a Test Smell},
  booktitle = {Proc. 22nd International Conference on Software Maintenance},
  year = {2006},
  pages = {391--400},
  doi = {http://dx.doi.org/10.1109/ICSM.2006.18}
}

@ARTICLE{rompaey07:detection,
  author = {V. Rompaey,, Bart and D. Bois,, Bart and Demeyer,, Serge and Rieger,,
	Matthias},
  title = {On The Detection of Test Smells: A Metrics-Based Approach for General
	Fixture and Eager Test},
  journal = {IEEE Transactions on Software Engineering},
  year = {2007},
  volume = {33},
  pages = {800--817},
  number = {12},
  doi = {http://dx.doi.org/10.1109/TSE.2007.70745}
}

@INPROCEEDINGS{visser04:test,
  author = {Visser,, Willem and P\v{a}s\v{a}reanu,, Corina S. and Khurshid,,
	Sarfraz},
  title = {Test input generation with {J}ava PathFinder},
  booktitle = {Proc. 2004 ACM SIGSOFT International Symposium on Software Testing
	and Analysis},
  year = {2004},
  pages = {97--107},
  doi = {http://doi.acm.org/10.1145/1007512.1007526},
  keywords = {coverage, model checking, red-black trees, symbolic execution, testing
	object-oriented programs},
  review = {Symbolic Execution, Uncaught Exception}
}

@INPROCEEDINGS{visvanathan02:generating,
  author = {Visvanathan,, Srinivas and Gupta,, Neelam},
  title = {Generating Test Data for Functions with Pointer Inputs},
  booktitle = {Proc. 17th IEEE International Conference on Automated Software Engineering},
  year = {2002},
  pages = {149},
  review = {Symbolic Generation}
}

@MISC{moreUnit,
  author = {Vera Wahler and Channing Walton and Ombredanne, P. and Jones, C.},
  title = {more{U}nit},
  year = {2007},
  note = {\url{http://moreunit.sourceforge.net}}
}

@ARTICLE{wloka09:tool,
  author = {Jan Wloka and Einar W. Høst and Barbara G. Ryder},
  title = {Tool Support for Change-centric Test Development},
  journal = {IEEE Software},
  year = {2009},
  volume = {43},
  pages = {206--215},
  number = {6},
  doi = {http://doi.acm.org/10.1145/1379022.1375607}
}

@INPROCEEDINGS{wloka09:junitmx,
  author = {Jan Wloka and Barbara G. Ryder and Frank Tip},
  title = {JUnitMX -- A Change-aware Unit Testing Tool},
  booktitle = {International Conference on Software Engineering},
  year = {2009}
}

@INPROCEEDINGS{xie06:augmenting,
  author = {Tao Xie},
  title = {Augmenting Automatically Generated Unit-Test Suites with Regression
	Oracle Checking},
  booktitle = {Proc. 20th European Conference on Object-Oriented Programming},
  year = {2006},
  pages = {380--403}
}

@INPROCEEDINGS{xie05:symstra,
  author = {Tao Xie and Darko Marinov and Wolfram Schulte and David Notkin},
  title = {Symstra: A framework for generating object-oriented unit tests using
	symbolic execution},
  booktitle = {Proc. 11th International Conference on Tools and Algorithms for the
	Construction and Analysis of Systems},
  year = {2005},
  pages = {365--381},
  keywords = {State class ; Test generation ; State space method ; State space ;
	Branching ; Case based reasoning ; Object oriented ; Software development
	;},
  review = {Exception-based Symbolic execution, Classification Uncaught Exception}
}

@ARTICLE{xie06:tool,
  author = {Tao Xie and David Notkin},
  title = {Tool-Assisted Unit-Test Generation and Selection Based on Operational
	Abstractions},
  journal = {Automated Software Engineering Journal},
  year = {2006},
  volume = {13},
  pages = {345--371},
  number = {3},
  month = {July},
  review = {Classification Operational Model}
}

@ARTICLE{xie05:checking,
  author = {Tao Xie and David Notkin},
  title = {Checking Inside the Black Box: Regression Testing By Comparing Value
	Spectra},
  journal = {IEEE Transactions on Software Engineering},
  year = {2005},
  volume = {31},
  pages = {869--883},
  number = {10}
}

@INPROCEEDINGS{xie07:towards,
  author = {Tao Xie and Kunal Taneja and Shreyas Kale and Darko Marinov},
  title = {Towards a Framework for Differential Unit Testing of Object-Oriented
	Programs.},
  booktitle = {Proc. 2nd International Workshop on Automation of Software Test},
  year = {2007},
  pages = {5--11},
  month = {May}
}

@INPROCEEDINGS{xu07:dynamicpurity,
  author = {Haiying Xu and Christopher J. F. Pickett and Clark Verbrugge},
  title = {Dynamic purity analysis for {J}ava programs},
  booktitle = {Proc. 7th ACM SIGPLAN-SIGSOFT workshop on Program Analysis for Software
	Tools and Engineering},
  year = {2007},
  pages = {75--82}
}

@INPROCEEDINGS{andy08:mining,
  author = {Zaidman,, Andy and Rompaey,, Bart Van and Demeyer,, Serge and Deursen,,
	Arie van},
  title = {Mining Software Repositories to Study Co-Evolution of Production
	\& Test Code},
  booktitle = {Proc. 1st International Conference on Software Testing, Verification,
	and Validation},
  year = {2008},
  pages = {220--229},
  doi = {http://dx.doi.org/10.1109/ICST.2008.47}
}

@MISC{wala,
  title = {WALA: The {T}.{J}. {W}atson Libraries for Analysis},
  note = {\url{http://wala.sourceforge.net}},
  key = {wala}
}

@MISC{JVMTI,
  title = {{J}ava {V}irtual {M}achine {T}ool {I}nterface},
  note = {\url{http://www.j2ee.me/j2se/1.5.0/docs/guide/jvmti/}},
  key = {jvmti}
}

@MISC{ARM,
  title = {{A}pplication {R}esponse {M}easurement},
  note = {\url{http://www.opengroup.org/management/arm/}},
  key = {arm}
}

@MISC{TPTP,
  title = {{T}est and {P}erformance {T}ools {P}latform},
  note = {\url{http://www.eclipse.org/tptp/}},
  key = {tptp}
}

@MISC{RPT,
  title = {{IBM} {R}ational {P}erformance {T}ester},
  note = {\url{http://www-01.ibm.com/software/awdtools/tester/performance}},
  key = {rpt}
}

@MISC{LoadRunner,
  title = {{HP} {L}oad{R}unner},
  note = {\url{https://h10078.www1.hp.com/cda/hpms/display/main/hpms_content.jsp?zn=bto&cp=1-11-126-17^8_4000_100__}},
  key = {LoadRunner}
}

@MISC{junitfactory,
  title = {{JUnit Factory} website},
  year = {2007},
  note = {\url{http://www.junitfactory.com/}},
  key = {JUF},
  keywords = {JMF}
}
