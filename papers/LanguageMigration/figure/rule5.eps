%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: dd.pdf
%%Creator: Adobe Acrobat 9.1.2
%%For: zhonghao
%%CreationDate: 2009-8-31, 9:00:28
%%BoundingBox: 85 413 269 430
%%HiResBoundingBox: 0 0 595.2200 842
%%CropBox: 0 0 595.2200 842
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1053 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2009-08-31T08:59:40+08:00"
   xmp:CreatorTool="PScript5.dll Version 5.2.2"
   xmp:ModifyDate="2009-08-31T08:59:40+08:00"
   pdf:Producer="Acrobat Distiller 9.0.0 (Windows)"
   xmpMM:DocumentID="uuid:06f3df0f-1e60-45f3-9f7c-854039c4fe06"
   xmpMM:InstanceID="uuid:efb4c40b-d129-4f60-a25d-1cf388549d30">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>zhonghao</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Microsoft PowerPoint - figure.pptx</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -842 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 842 li
595.22 842 li
595.22 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
27.48 60.9 mo
567.48 60.9 li
567.48 163.74 li
27.48 163.74 li
cp
eclp
27.48 163.76 mo
567.48 163.76 li
567.48 60.9 li
27.48 60.9 li
cp
false sop
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
grestore
false sop
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri Initial
ct_T42Dict begin
-0.473 -0.191 1.211 0.949
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f326c6872b8000000cc000000606376
7420af93b7f90000012c0000050a6670676df6f64d0c000006380000091a
676c79662399c81a00005bac00000b0c68656164e227154000000f540000
0036686865610dae0b3c00000f8c00000024686d74782d65e0e800000fb0
000011846c6f6361000a2dac00002134000011886d6178702801030d0000
32bc000000206e616d6526e8767a000032dc000004c170726570ffeae6e0
000037a00000240b67646972000000000000000000000000000304070190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204a00002ef4000207b00000000000000004d53202000400020
fb040600fe0001c4079e02262000009f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
00004047645f5e5d5c5b5a59585554535251504f4e4d4c4b4a4948474645
44434241403f3e3d3c3b3a39383736352f2e2d2c2826252423221f181411
100f0d0b0a090807060504030201002c4523466020b02660b00426234848
2d2c452346236120b02661b004262348482d2c45234660b0206120b04660
b004262348482d2c4523462361b0206020b02661b02061b004262348482d
2c45234660b0406120b06660b004262348482d2c4523462361b0406020b0
2661b04061b004262348482d2c0110203c003c2d2c20452320b0cd442320
b8015a51582320b08d44235920b0ed51582320b04d44235920b004265158
2320b00d44235921212d2c20204518684420b001602045b04676688a4560
442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b1
01283e01b0282370b10228453ab10200080d2d2c2045b00325456164b050
515845441b2121592d2c2045b0004360442d2c01b00643b00743650a2d2c
2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b00361
592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c4565b02c234445
b02b23442d2c4b525845441b2121592d2c01b005251023208af500b00160
23edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f500
edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2c00b0
0743b006430b2d2c21210c6423648bb84000622d2c21b08051580c642364
8bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb81555
621bb200802f2b59b002602d2c0c6423648bb84000626023212d2c452345
6023456023456023766818b08062202d2cb00426b00426b00425b0042545
234520b003266062636820b0032661658a2344442d2c2045b0005458b040
442045b04061441b2121592d2c45b1302f4523456160b0016069442d2c4b
5158b02f2370b01423421b2121592d2c4b515820b0032545695358441b21
21591b2121592d2c45b01443b0006063b0016069442d2cb02f45442d2c45
2320458a60442d2c45234560442d2c4b235158b90033ffe0b134201bb333
0034005944442d2cb0164358b00326458a586466b01f601b64b020606620
581b21b04059b001615923586559b02923442310b029e01b212121212159
2d2cb0164358b004254564b020606620581b21b04059b0016123586559b0
292344b00425b00725082058021b0359b0052510b004252046b004252342
3cb0072510b006252046b00425b0016023423c2058011b0059b0052510b0
0425b029e0b0072510b00625b029e0b00425b00725082058021b0359b004
25b003254348b00625b00325b0016043481b2159212121212121212d2cb0
164358b004254564b020606620581b21b04059b0016123581b6559b02923
44b00525b00825082058021b0359b0042510b005252046b0042523423cb0
0425b0072508b0072510b006252046b00425b0016023423c2058011b0059
b0042510b00525b029e0b02920456544b0072510b00625b029e0b00525b0
0825082058021b0359b00525b003254348b00425b0072508b00625b00325
b0016043481b2159212121212121212d2c02b00425202046b004252342b0
052508b003254548212121212d2c02b0032520b0042508b0022543482121
212d2c452320451820b00050205823652359236820b040505821b0405923
5865598a60442d2c4b53234b515a5820458a60441b2121592d2c4b545820
458a60441b2121592d2c4b53234b515a58381b2121592d2cb000214b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c208a08234b538a4b515a5823381b2121592d2c0020
b200400325b0062649618b3812342d2c014623466023466123201020468a
61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c1b2159
2d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b123018851
b1400188535a58b910000020885458b202010243604259b12401885158b9
20000040885458b2020202436042b12401885458b2022002436042004b01
4b5258b2020802436042591bb940000080885458b202040243604259b940
00008063b80100885458b202080243604259b94000010063b80200885458
b202100243604259b94000020063b80400885458b2024002436042595959
59592d2c451868234b51582320452064b04050587c59688a6059442d2cb0
0016b00225b0022501b001233e00b002233eb10102060cb00a236542b00b
234201b001233f00b002233fb10102060cb006236542b0072342b0011601
2d2c20b82000628a6023622d2cb0072558001b0159b0042510b00325b002
2520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920b00525
4ab0042547b004254760b0062547b0806361b00225b0005558b00325b007
25496359b0082558001b0159b00425b0062549b009255cb009255a58b009
2b59b0072546b0806361b0032520b0005558631b2159612320b0005558b0
80631b21b08059b0592bb006255c586959b00425202010b00048233ab006
2658001b0159b0052658b003252f598a12233221212d2cb00625b00a2587
b00625b009254ab0005358b00625b00a251bb00925b0072559b00225b002
25070cb005256323b00625636020b94000040063535821b00426b00426b0
0a1bb94000040063655158b0042665b0042665b00a1bb00426b00426b000
b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b00525
07595920b0005558b00525b0052587b00725b007250bb0092510b00b25b0
092620b8ffff545821cd1bed59b00525b0052507b00825b00b254923b006
25b0062587b00a2510b00b25c15920b00051b800522378b00161b00225b0
0725b0072507b00a25b00d254961b08062b00525b005250bb00a252338b0
0625b0062587b00825b008250bb00a2510b00b25c4b00625b0062507b009
25b00c2549b0032554b8ffa723792121212121212121212121212d2c23b0
005458b9400000001bb900004000598ab0005458b9400000001bb9000040
0059b05b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c
8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b0
0426080db00426b00426080db05b2b2d2c204569442d0000000100000001
051f0c98646d5f0f3cf50019080000000000bbeb7ccc00000000c1274845
fc31fe7309b6079e000000090002000100000000000100000600fe0001c4
0a4efc31fe8c09b6000100000000000000000000000000000461040e0000
000000000000000001cf000004a1002304a1002304a1002304a1002304a1
002304a1002304a1002304a1002304a1002304a1002304a10023061bffcc
061bffcc045a00ac04440061044400610444006104440061044400610444
006104ec00ac04ec009704ff001b04ff001b03e800ac03e8004503e800ac
03e8004603e8004603e8006303e8005f03e8008103e800ac03e800ac03ad
00ac050c005b050c005b050c005b050c005b050c005b04fc00ac04fc00ac
05400020020400ac0204ff4a020400280204ff390204ff310204ff500204
ff4f0204ff7b0204001e02040027049200ac028d0007028dffa9042800ac
042800ac035d00ac035d0081036200ac035d00ac0370001c045e00ac06d7
00ac052a00ac052a00ac052a00ac052a00ac052a00ac050700ac054c0063
054c0063054c0063054c0063054c0063054c0063054c0063054c0063054c
0063054f0063054f006306ef0063042200ac042200ac05620063045800ac
045800ac04580053045800ac03ad004703ad004703ad001503ad001803ad
004703ad004703e6000f03e6000f03e6000f03e6000f052200aa052200aa
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa048a0022071e003d071e003d071e003d071e003d071e003d
0427003003e6001e03e6001e03e6001e03e6001e03e6001e03bf003b03bf
003b03bf001a03bf003b03f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f40010055cffe2055c
ffe2040400a103cb006d03cb006d03cb006d03cb006d03cb006d03cb006d
046500a10465006a0477003204770032038000a103800030038000a10380
0020038000200380002c0380002903800042038000a1038000a1035000a1
0482006c0482006c0482006c0482006c0482006c047800a10478008c049d
004001ec00a101ecff5801ec001901ecff4801ecff2701ecff5501ecff52
01ecff7101ec001101ec0018041b00a1023e0000023eff8c03c900a103c9
00a102e000a102e0008702e600a102e000a102f0003203d500a1060600a1
049100a1049100a10491009904910078049100a1046600a104aa006604aa
006604aa006604aa006604aa006604aa006604aa006604aa006604aa0066
04ba006604ba00660606006603c500a103c500a104b1006603ed00a103ed
00a103ed004503ed00a1034f0049034f0049034ffff5034ffff6034f0049
034f00490359001c0359fffe0359001c0359001c048d009f048d009c048d
009f048d0097048d0075048d009f048d009f048d009f048d009f048d009f
048d009f03fd0021063e0037063e0037063e0037063e0037063e003703cc
003603830010038300100383001003830010038300100369004403690044
036900080369004403d5005c03d5005c03d5005c03d5005c03d5001e03d5
005c03d5005c03d5005c03d5005c03d5005c03d5005c062f005c062f005c
043400990362005a0362005a0362004e036200570362005a0362005a076f
005a06dd005a0601005a0601005a04340060048c0060046a006004340061
03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d02710025069a002508d5002504ab0025069b0025
08d50025043c0025043c0025043c0025043c0025044f0025044f0025044f
0025044f0025043c0025043c002506760025067600250676002506760025
068900250689002506890025068900250676002506760025043c0025043c
0025067600250609002508430025043c0025043c002504830025043c0025
0676002504ed002504ed0025051300250728002503c4003503c4003503c4
003503c4003503c400350434006004340060043400600434006004340060
043400990434ffad0443fff901d6008501d6ff6e01d6000f01d6ff5a01d6
ff2001d6ff7201d6ff5801d6ff6701d6001101d6009903c00085041e0088
01eaffd501eaffd501eaff6303a3009903a3009903a3009901d6009901d6
002a021c009901d6004b01fb001c02fd0099066400990434009904340099
043400990434004e0434009904a2ff9d043400990438005a0438005a0438
005a0438005a0438004f0438005a0438005a0438005a0438005a043c005a
043c005a06cc005a04340099043400990434006002ca009902ca009902ca
fff902ca006e03210051032100510321fffe0321fffd0321005103210051
05ae005105ae00510438009901f1009902ae002102c4002102ae002102bc
002604e60021047500210475002104750021047500210475002104750021
0475002104750021047500210475002105130021074b002106d9002106d9
002106d9002106d9002106d9002106d9002106d9002106d9002106d90021
06d90021043400940434008e04340094043400860434004d043400890434
008604340094043400940434009404340094039d002205b8003505b80035
05b8003505b8003505b8003503770029039f0022039f0022039f0022039f
0022039f0022032900590329005903290007032900590338007203610064
0378005d02ac004402e5006c024e004402e5004802b8004701c100240297
002a02e9006c01630061016dffd80297006c015e006c0456006c02e6006c
02e6004502e5006c02e5004801f6006c0230004201e3002302e9006c0285
001f03ef002c027e00280286001f02370042025400000275000002940000
0000fd080000fce80256000002750000029400000000fd080000fce80329
0000035f0000039400000000fc9f0000fc6703290000035f000003940000
0000fc9d0000fc6901ff0000039a000003a2000003a800000000fc650000
fc600324000002f5000003460000036700000000fca00000fc7e03270000
03490000036a00000000fc9d0000fc7d030c0000030f0000031100000000
fcac0000fca9029100000298000002a000000000fce90000fce202cf0000
02c2000002b5000003c1000003e10000040000000000fc520000fc3101ce
000001d6000001ce000001ce00000000fd4d0000fd4d027500840000fd7a
027f00840000fd7601f700840231000004a1002304a1ff89045a00ac0353
00ac0484003a03e800ac03e8fec703bf003b04fc00ac04fcfe9e054c0063
020400ac0204feb20204ff52042800ac0495002406d700ac052a00ac03ef
0053054c0063054cff1604fc00ac042200ac03ab004603e6000f03e6001e
03e6fe6e03e6001e0613000004270030060000900550005e0550fef903f4
001003f4ff75040400a102fb00a103c90023038000a10380fed103690044
047800a10478fed404b4006601ec00a101ecfebd01ecff5403c900a103e1
0011060600a1049100a10387005e04aa006604aaff3b047800a103c500a1
035b004b0359001c038300100383fea2038300100552000003cc00360558
008704b1006604b1ff67048a0061048a0061044000990432006403920018
0430000003a5005903a5005902c8004e044c0099044c0099044100600478
0006023200940232ffec0232ff7a0232ff0f03a3009903b4000004660099
039700220302004d0303004d0438005a0438005a046c0028041200760441
00590349005c0319000304550090045500900455007d0455001605360055
053b00550369001205a900940592006405920064028900000000fd0a03f4
00000000fc360205009702050097020500970224004801ff006e01ff006e
04a10023044d00ad045a00ac037000ac037000ac037600ac0527000303e8
00ac03e8004503e800610668005503ca004b052200ac052200ac052200ac
020400ac0204ff50028d0007045800ac045800ac04e3000306fa000306d7
00ac04fc00ac070300ac054c0063054c006304f900ac042200ac04440061
03ad004703e6000f0438000f0438000f04b800220594000004270030051c
00ac04f500ac0472007406f200ac071e00ac04eb000f061800ac044000ac
0462005d04610062070800ac0471005304ff000f04f2000f0504000003f4
001003ee00a2040400a1031400a1031400a1032700a10480000e038000a1
038000300380002c0578004403800057048900a1048900960489009501ec
00a101ecff55023e000003ca00a103ca00a104320001060600a1047800a1
04aa006604a90066046a00a103c500a103cb006d034f00490359001c039d
001e039d001b042f0022050a000003cc0036048e00a1046900a103fa006d
062300a1064500a1045f0017058300a103e800a103e4006b03f000660632
00a103ff005c045f001f0463001f044d000006010001063200a103d5005c
044300000430000003d5009902c4009902c4009902d50099034900490477
00170434006003fb005d03fb005d03fb005d0583003e0362004b04530099
045300780453008801d6008501d6ff7201eaffd503b6009903b600990415
0016060200130569005f04470099062800990438005a0431005a042a0099
04340099043400990362005a032100510319000a06640099039f0022039f
001803d2002204fe005103770029045500990433009903c0004205d40099
05fe0099044a000a0554009903c20099038b004d038d005d05c6009903cb
00380453fff90443fff904270018036e0000036e0000036e00000000fca5
0000fca5029b010a029b00bf029b00bf03b5008503b5005e03b5005e03de
0064026000ed026000b10364007a0361005f01ff002a02240048022400bb
020500970586009601ff008c01ff002a01ff008c01ff002a035900880359
002b035900880359002b01ff002a0359002b02b6007402b600c002b60074
02b600c004190075041900ad04190075041900ad0317000102df001f03af
018a03fc01ae0317000b02df002d027300450273004503fcfff603fcfff6
073e0095073e0095073e0095073e009503fcfff903fc00c1020500970205
0097026d0085026d007a027400bf0274005a028400560284007502400084
0240007a024a00b0024a0067026d0085026d007a027400bf0274005a0284
00560284007503fc009e03fc007703fc007803fc007604b0006b043d006e
03fc006a03fc003d01c4008b0335008b057500000556000007f700000727
0000073c00000727000006ad00af06ad00af040e008005a4003f05ac004d
02b6000003fc003f04b30049040e002a03fc0057040e00600434005803fc
00b903fc004a040e005303fc006d0419002b040e003403f30035039f0061
03be005f039f0058039f002506210049083300ac03fc002406e300a10411
001d0494005f02cb002303ec006203ec00510455002203d700510436007e
03b20035043600630436005c040e0048040e00ae040e0072040e0067040e
0020040e0065040e006b040e0063040e0052040e005204430067028d0019
0381005c0373005903ac00260368006103b7006e0349002f03b5004b03bc
0052039f0050039f008d039f0065039f0062039f003a039f0067039f0061
039f005e039f0051039f00500494005f02cb002303ec006203ec00510428
002203d700510436007e03b20035043600630436005c040e0048040e00ae
040e0072040e0067040e0030040e0065040e006b040e0063040e0052040e
00520321004801f8002302b0004b02ad004102db002502a6004502df005b
0291003202e1004b02df004402ea005102df005102d0005701bc006001bc
00580321004801f8002302b0004b02ad004102db002502a6004502df005b
0291003202e1004b02df004402ea005102df005102d0005701bc006001bc
0058029d003801f500310252003c0249002d024a00140246003202510030
0238002202570025024d0023029d003801f500310252003c0249002d024a
001402460032025100300238002202570025024d002302b1ff4b03130044
055f0044056900440517004405690044052e00440553004405c9004e05c9
004e0567004705b7004705a2004705cd0027057d004505a20045052a0035
05b80048084e0048057d005c07c9005c03fc004603fc004c03fc006003fc
002b03fc005e03fc006003fc005903fc004503fc006503fc004c03fc0055
03fc005603fc003d05e9002c0405003506d300690443006102ed000703fc
00080484003a0550005e04660099066500660454005b0416004a073e009a
073e0096073e00c9073e00c9070e00af070e013a070e00af070e013a0a4e
009a0638009f046600280000000000000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
01420000038e0000038e0000038e0000038e0000038e0000038e0000038e
0000038e0000038e0000038e0000038e0000038e0000038e0000038e0000
038e0000038e0000038e0000038e0000038e0000038e0000038e0000038e
0000038e0000038e0000038e0000038e0000038e0000038e0000038e0000
038e0000038e0000038e000004f400000662000007a20000098a0000098a
0000098a0000098a0000098a0000099a00000b0c00000b0c00000b0c0000
0b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c
00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c0000
0b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c
00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c0000
0b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c
00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c0000
0b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c
00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c0000
0b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c
00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c0000
0b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c
00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c0000
0b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c
00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c00000b0c0001
0000046100ad000700ac000700020010002f006500002318018200040001
0000000e00ae000000030000000000640000000000030000000700fa0064
00010000000000000032015e0001000000000003000e0190000100000000
0004000e019e0001000000000006000e01ac0001000000000007007d01ba
0003000104090000006402370003000104090001001c029b000300010409
0002000e02b70003000104090003001c02c50003000104090004001c02e1
0003000104090006001c02fd000300010409000700fa031900a900200032
0030003000360020004d006900630072006f0073006f0066007400200043
006f00720070006f0072006100740069006f006e002e00200041006c006c
002000520069006700680074007300200052006500730065007200760065
0064002e00430061006c0069006200720069002000690073002000650069
007400680065007200200061002000720065006700690073007400650072
00650064002000740072006100640065006d00610072006b0020006f0072
00200061002000740072006100640065006d00610072006b0020006f0066
0020004d006900630072006f0073006f0066007400200043006f00720070
006f0072006100740069006f006e00200069006e00200074006800650020
0055006e0069007400650064002000530074006100740065007300200061
006e0064002f006f00720020006f007400680065007200200063006f0075
006e00740072006900650073002ea92032303036204d6963726f736f6674
20436f72706f726174696f6e2e20416c6c20526967687473205265736572
7665642e43504c43494c2b43616c6962726943504c43494c2b43616c6962
726943504c43494c2b43616c6962726943616c6962726920697320656974
686572206120726567697374657265642074726164656d61726b206f7220
612074726164656d61726b206f66204d6963726f736f667420436f72706f
726174696f6e20696e2074686520556e697465642053746174657320616e
642f6f72206f7468657220636f756e74726965732e00a900200032003000
3000360020004d006900630072006f0073006f0066007400200043006f00
720070006f0072006100740069006f006e002e00200041006c006c002000
520069006700680074007300200052006500730065007200760065006400
2e00430050004c00430049004c002b00430061006c006900620072006900
52006500670075006c0061007200430050004c00430049004c002b004300
61006c006900620072006900430050004c00430049004c002b0043006100
6c006900620072006900430050004c00430049004c002b00430061006c00
6900620072006900430061006c0069006200720069002000690073002000
650069007400680065007200200061002000720065006700690073007400
65007200650064002000740072006100640065006d00610072006b002000
6f007200200061002000740072006100640065006d00610072006b002000
6f00660020004d006900630072006f0073006f0066007400200043006f00
720070006f0072006100740069006f006e00200069006e00200074006800
6500200055006e0069007400650064002000530074006100740065007300
200061006e0064002f006f00720020006f00740068006500720020006300
6f0075006e00740072006900650073002e000000b2090320b80284b40918
014a20b80283b40918014a20b80282b40918014a20b80281b40918014a20
b80280b40918014a20b8027fb40918014a20b8027eb40918014a20b8027d
b40918014a20b8027cb40918014a20b8027bb40918014a20b8027ab40918
014a20b80279b40918014a20b80278b40918014a20b80277b40918014a20
b80276b40918014a20b80275b40918014a20b80274b40918014a20b80273
b40918014a20b80271b40918014a20b80270b40918014a20b8026fb40918
014a20b8026eb40918014a20b8026db40918014a20b8026cb40918014a20
b8026bb40918014a20b8026ab40918014a20b80269b40918014a20b80268
b40918014a20b80267b40918014a20b80266b40918014a20b80265b40918
014a20b80264b40918014a20b80263b40918014a20b80262b40918014a20
b80261b40918014a20b80260b40918014a20b8025fb40918014a20b8025e
b40918014a20b8025db40918014a20b8025cb40918014a20b8025bb40918
014a20b8025ab40918014a20b80259b40918014a20b80258b40918014a20
b80257b40918014a20b80256b40918014a20b80255b40918014a20b80254
b40918014a20b80253b40918014a20b80252b40918014a20b80251b40918
014a20b80250b40918014a20b8024fb40918014a20b8024eb40918014a20
b8024db40918014a20b8024cb40918014a20b8024bb40918014a20b8024a
b40918014a20b80249b40918014a20b80248b40918014a20b80247b40918
014a20b80246b40918014a20b80245b40918014a20b80244b40918014a20
b80243b40918014a20b80242b40918014a20b80241b40918014a20b80240
b40918014a20b8023fb40918014a20b8023eb40918014a20b8023db40918
014a20b8023cb40918014a20b8023bb40918014a20b8023ab40918014a20
b80239b40918014a20b80238b40918014a20b80237b40918014a20b80236
b40918014a20b80235b40918014a20b80234b40918014a20b80233b40918
014a20b80232b40918014a20b80231b40918014a20b80230b40918014a20
b8022fb40918014a20b8022eb40918014a20b8022db40918014a20b8022c
b40918014a20b8022bb40918014a20b8022ab40918014a20b80229b40918
014a20b80228b40918014a20b80227b40918014a20b80226b40918014a20
b80225b40918014a20b80224b40918014a20b80223b40918014a20b80222
b40918014a20b80221b40918014a20b80220b40918014a20b8021fb40918
014a20b8021eb40918014a20b8021db40918014a20b8021cb40918014a20
b8021bb40918014a20b8021ab40918014a20b80219b40918014a20b80218
b40918014a20b80217b40918014a20b80216b40918014a20b80215b40918
014a20b80214b40918014a20b80213b40918014a20b80212b40918014a20
b80211b40918014a20b80210b40918014a20b8020fb40918014a20b8020e
b40918014a20b8020db40918014a20b8020cb40918014a20b8020bb40918
014a20b8020ab40918014a20b80209b40918014a20b80208b40918014a20
b80207b40918014a20b80206b40918014a20b80205b40918014a20b80204
b40918014a20b80203b40918014a20b80202b40918014a20b80201b40918
014a20b80200b40918014a20b801ffb40918014a20b801feb40918014a20
b801fdb40918014a20b801fcb40918014a20b801fbb40918014a20b801fa
b40918014a20b801f9b40918014a20b801f8b40918014a20b801f7b40918
014a20b801f6b40918014a20b801f5b40918014a20b801f4b40918014a20
b801f3b40918014a20b801f2b40918014a20b801f1b40918014a20b801f0
b40918014a20b801efb40918014a20b801eeb40918014a20b801edb40918
014a20b801ecb40918014a20b801ebb40918014a20b801eab40918014a20
b801e9b40918014a20b801e8b40918014a20b801e7b40918014a20b801e6
b40918014a20b801e5b40918014a20b801e4b40918014a20b801e3b40918
014a20b801e2b40918014a20b801e1b40918014a20b801e0b40918014a20
b801dfb40918014a20b801deb40918014a20b801ddb40918014a20b801dc
b40918014a20b801dbb40918014a20b801dab40918014a20b801d9b40918
014a20b801d8b40918014a20b801d7b40918014a20b801d6b40918014a20
b801d5b40918014a20b801d4b40918014a20b801d3b40918014a20b801d2
b40918014a20b801d1b40918014a20b801d0b40918014a20b801cfb40918
014a20b801ceb40918014a20b801cdb40918014a20b801ccb40918014a20
b801cbb40918014a20b801cab40918014a20b801c9b40918014a20b801c8
b40918014a20b801c7b40918014a20b801c6b40918014a20b801c5b40918
014a20b801c4b40918014a20b801c3b40918014a20b801c2b40918014a20
b801c1b40918014a20b801c0b40918014a20b801bfb40918014a20b801be
b40918014a20b801bdb40918014a20b801bcb40918014a20b801bbb40918
014a20b801bab40918014a20b801b9b40918014a20b801b8b40918014a20
b801b7b40918014a20b801b6b40918014a20b801b5b40918014a20b801b4
b40918014a20b801b3b40918014a20b801b2b40918014a20b801b1b40918
014a20b801b0b40918014a20b801afb40918014a20b801aeb40918014a20
b801adb40918014a20b801acb40918014a20b801abb40918014a20b801aa
b40918014a20b801a9b40918014a20b801a8b40918014a20b801a7b40918
014a20b801a6b40918014a20b801a5b40918014a20b801a4b40918014a20
b801a3b40918014a20b801a2b40918014a20b801a1b40918014a20b801a0
b40918014a20b8019fb40918014a20b8019eb40918014a20b8019db40918
014a20b8019cb40918014a20b8019bb40918014a20b8019ab40918014a20
b80199b40918014a20b80198b40918014a20b80197b40918014a20b80196
b40918014a20b80195b40918014a20b80194b40918014a20b80193b40918
014a20b80192b40918014a20b80191b40918014a20b80190b40918014a20
b8018fb40918014a20b8018eb40918014a20b8018db40918014a20b8018c
b40918014a20b8018bb40918014a20b8018ab40918014a20b80189b40918
014a20b80188b40918014a20b80187b40918014a20b80186b40918014a20
b80185b40918014a20b80184b40918014a20b80183b40918014a20b80182
b40918014a20b80181b40918014a20b80180b40918014a20b8017fb40918
014a20b8017eb40918014a20b8017db40918014a20b8017cb40918014a20
b8017bb40918014a20b8017ab40918014a20b80179b40918014a20b80178
b40918014a20b80177b40918014a20b80176b40918014a20b80175b40918
014a20b80174b40918014a20b80173b40918014a20b80172b40918014a20
b80171b40918014a20b80170b40918014a20b8016fb40918014a20b8016e
b40918014a20b8016db40918014a20b8016cb40918014a20b8016bb40918
014a20b8016ab40918014a20b80169b40918014a20b80168b40918014a20
b80167b40918014a20b80166b40918014a20b80165b40918014a20b80164
b40918014a20b80163b40918014a20b80162b40918014a20b80161b40918
014a20b80160b40918014a20b8015fb40918014a20b8015eb40918014a20
b8015db40918014a20b8015cb40918014a20b8015bb40918014a20b8015a
b40918014a20b80159b40918014a20b80158b40918014a20b80157b40918
014a20b80156b40918014a20b80155b40918014a20b80154b40918014a20
b80153b40918014a20b80152b40918014a20b80150b40918014a20b8014f
b40918014a20b8014eb40918014a20b8014cb40918014a20b8014bb40918
014a20b8014ab40918014a20b80149b40918014a20b80148b40918014a20
b80147b40918014a20b80146b40918014a20b80145b40918014a20b80144
b40918014a20b80143b30918014ab80284b21e3e1fb80283b21e151fb802
82b21e3e1fb80281b21e3a1fb80280b21e3e1fb8027fb21e3e1fb8027eb2
1e0c1fb8027db21e3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab21e3e
1fb80279b21d411fb80278b21d431fb80277b21d431fb80276b21d431fb8
0275b21d411fb80274b21d431fb80273b21d431fb80272b21d411fb80271
b21d421fb80270b21d421fb8026fb21d421fb8026eb21d431fb8026db21d
431fb8026cb21d431fb8026bb21c451fb8026ab21c451fb80269b21c451f
b80268b21c451fb80267b21c451fb80266b21c441fb80265b21c451fb802
64b21c451fb80263b21c451fb80262b21c451fb80261b21c451fb80260b2
1c451fb8025fb21c451fb8025eb21c441fb8025db21c451fb8025cb21c45
1fb8025bb21c451fb8025ab21c451fb80259b21c451fb80258b21c451fb8
0257b21c451fb80256b21c451fb80255b21c451fb80254b21c451fb80253
b21c451fb80252b21c451fb80251b21c451fb80250b21c451fb8024fb21c
451fb8024eb21c451fb8024db21c451fb8024cb21c451fb8024bb21c451f
b8024ab21b491fb80249b21b491fb80248b21b4a1fb80247b21b4a1fb802
46b21b4b1fb80245b21b4c1fb80244b21b4c1fb80243b21b4c1fb80242b2
1b4b1fb80241b21b491fb80240b21b491fb8023fb21b4a1fb8023eb21b4a
1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c1fb8
0239b21b4c1fb80238b21b4c1fb80237b21b4c1fb80236b21b4c1fb80235
b21b491fb80234b21b491fb80233b21b4a1fb80232b21b4a1fb80231b21b
4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b4c1f
b8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c1fb80229b21b4c1fb802
28b21b4c1fb80227b21b491fb80226b21b491fb80225b21b4a1fb80224b2
1b4a1fb80223b21b4a1fb80222b21b4b1fb80221b21b4b1fb80220b21b4c
1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b4c1fb8021cb21b4c1fb8
021bb21b4c1fb8021ab21a4e1fb80219b21a4e1fb80218b21a4f1fb80217
b21a4f1fb80216b21a4e1fb80215b21a4e1fb80214b21a4f1fb80213b21a
4f1fb80212b21a4f1fb80211b21a4e1fb80210b21a4e1fb8020fb21a4f1f
b8020eb21a4f1fb8020db21a4f1fb8020cb21a4e1fb8020bb21a4e1fb802
0ab21a4e1fb80209b21a4f1fb80208b21a4f1fb80207b21a4f1fb80206b2
19501fb80205b219511fb80204b219511fb80203b219501fb80202b21951
1fb80201b219511fb80200b219511fb801ffb219511fb801feb219501fb8
01fdb219511fb801fcb219511fb801fbb219511fb801fab219501fb801f9
b219511fb801f8b219511fb801f7b219511fb801f6b219511fb801f5b218
541fb801f4b218531fb801f3b218541fb801f2b218541fb801f1b218541f
b801f0b218531fb801efb218541fb801eeb218541fb801edb218541fb801
ecb218531fb801ebb218531fb801eab218541fb801e9b218541fb801e8b2
18541fb801e7b218541fb801e6b218531fb801e5b218541fb801e4b21853
1fb801e3b218541fb801e2b218541fb801e1b218541fb801e0b218531fb8
01dfb218531fb801deb218541fb801ddb218541fb801dcb218541fb801db
b218541fb801dab218531fb801d9b218541fb801d8b218541fb801d7b217
571fb801d6b217561fb801d5b217561fb801d4b217571fb801d3b217571f
b801d2b217571fb801d1b217571fb801d0b217561fb801cfb217561fb801
ceb217571fb801cdb217571fb801ccb217571fb801cbb217571fb801cab2
17561fb801c9b217561fb801c8b217571fb801c7b217571fb801c6b21757
1fb801c5b217571fb801c4b217571fb801c3b217561fb801c2b217571fb8
01c1b217571fb801c0b217571fb801bfb217561fb801beb217561fb801bd
b217571fb801bcb217571fb801bbb217571fb801bab217571fb801b9b217
571fb801b8b217561fb801b7b217571fb801b6b217571fb801b5b217571f
b801b4b217571fb801b3b2163f1fb801b2b2165b1fb801b1b2165b1fb801
b0b2165b1fb801afb2165b1fb801aeb2165b1fb801adb2165b1fb801acb2
165b1fb801abb2165b1fb801aab2163e1fb801a9b2163f1fb801a8b2163f
1fb801a7b2165b1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb8
01a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019f
b2163e1fb8019eb2163f1fb8019db2163f1fb8019cb2165b1fb8019bb216
5b1fb8019ab2165b1fb80199b2165b1fb80198b2163e1fb80197b2165b1f
b80196b2165b1fb80195b2165b1fb80194b2163e1fb80193b2163f1fb801
92b2163f1fb80191b2165b1fb80190b2165b1fb8018fb2165b1fb8018eb2
165b1fb8018db2165b1fb8018cb2163f1fb8018bb2165b1fb8018ab2165b
1fb80189b2165b1fb80188b2165b1fb80187b2165b1fb80186b215611fb8
0185b215621fb80184b215621fb80183b215661fb80182b215661fb80181
b215551fb80180b215451fb8017fb215361fb8017eb215361fb8017db215
611fb8017cb215621fb8017bb215621fb8017ab215641fb80179b215661f
b80178b215661fb80177b215661fb80176b215661fb80175b215661fb801
74b215661fb80173b215451fb80172b215621fb80171b215621fb80170b2
15631fb8016fb215641fb8016eb215661fb8016db215661fb8016cb21566
1fb8016bb215661fb8016ab215661fb80169b215621fb80168b215621fb8
0167b215611fb80166b215641fb80165b215641fb80164b215661fb80163
b215661fb80162b215661fb80161b215661fb80160b215661fb8015fb215
661fb8015eb215551fb8015db215451fb8015cb215451fb8015bb215361f
b8015ab215611fb80159b215621fb80158b215621fb80157b215631fb801
56b215641fb80155b215661fb80154b215661fb80153b215661fb80152b2
15661fb80151b214401fb80150b214551fb8014fb214561fb8014eb21483
1fb8014db2142d1fb8014cb214401fb8014bb214401fb8014ab214411fb8
0149b214401fb80148b214401fb80147b214411fb80146b2147e1fb80145
b214871fb80144b2147f1fb80143b214801fb80142b212461fb80141b212
461fb80140b212461fb8013fb212461fb8013eb212441fb8013db212461f
b8013cb211591fb8013bb211591fb8013ab2115b1fb80139b2115b1fb801
38b211471fb80137b211581fb80136b2115a1fb80135b2115b1fb80134b2
115b1fb80133b2112c1fb80132b211471fb80131b211551fb80130b21157
1fb8012fb211571fb8012eb211581fb8012db211591fb8012cb211591fb8
012bb2115a1fb8012ab2115a1fb80129b2115b1fb80128b2115b1fb80127
b2115b1fb80126b2115b1fb80125b211561fb80124b211561fb80123b211
571fb80122b211581fb80121b211591fb80120b2115a1fb8011fb2115a1f
b8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8011bb2115b1fb801
1ab2115b1fb80119b2105d1fb80118b2105e1fb80117b2105f1fb80116b2
105f1fb80115b2105f1fb80114b2105f1fb80113b2105f1fb80112b2105d
1fb80111b2105e1fb80110b2105f1fb8010fb2105f1fb8010eb2105f1fb8
010db2105f1fb8010cb2105d1fb8010bb2105e1fb8010ab2105f1fb80109
b2105f1fb80108b2105f1fb80107b2105f1fb80106b2105d1fb80105b210
5e1fb80104b2105f1fb80103b2105f1fb80102b2105f1fb80101b2105f1f
b8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f621ffb0f621ffa0f
621ff90f631ff80f641ff70f641ff60f641ff50f641ff40f621ff30f621f
f20f631ff10f641ff00f641fef0f641fee0f641fed0f621fec0f621feb0f
631fea0f641fe90f641fe80f641fe70f641fe60e671fe50e681fe40e681f
e30e681fe20e681fe10e671fe00e681fdf0e681fde0e681fdd0e671fdc0e
681fdb0e681fda0e681fd90e681fd80d6b1fd70d311fd60d6b1fd50d6c1f
d40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d
6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d681f
c50d671fc40d261fc30d311fc20d311fc10d311f40ffc00d311fbf0d311f
be0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c741fb80c741fb70c
711fb60c711fb50c721fb40c731fb30c741fb20c741fb10c741fb00c741f
af0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1fa80b
7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b7e1f
a00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f990b
7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b6b1f
910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f8403
381f8301381f8255805581ab80557f557d557eab7d550b7d010b7d1b7d4b
7d7b7dab7ddb7d404d060a7c557a557bab7a557955775578ab775576ab75
5504751475747503f47501ab750144750130750102007510752075030c74
55725573ab7255007250728072b072043bb072e072020072010ab8ffc0b3
721b1e46b8ffc0407c720d104671556f5570ab6f556e666d556a03251f69
38675568ab67556638645565ab645563386255613860555f385d555eab5d
555c385a555bab5a55593858555703251f5638545555ab54555338515552
ab51554f384e554e03251f4d384b554cab4b554a38485549ab4855473846
554503381f001c101c201c0310b8ffc0404e1c1b1e46001b0142301b401b
e01bf01b04001bb01bc01b03120f1a1f1a02290f1901434f19016f197f19
8f19030f18cf18024018292c460f17cf17df17ef1704134017292e460016
101620160315b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b316313546
b8ffc0404d162326460f15010f151f1502451f15010011e011f0110315bf
10cf10020f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e0340
0e3137460f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040270c5054
460f0b1f0b02553f0b4f0b02400b3f4346400b2d30460003012001010001
100120010308b8ffc0b401151f4603bc01000100000500010190b154532b
2b4bb80800524bb008505bb00188b02553b00188b040515ab00688b00055
5a5b58b101018e59b101024354b0144b515a58b101018e59858d8d001d42
4bb01d5358b203a0a01d42594bb0805358b20340401d42594bb0ff5358b2
0300001d42592b5e7375732b2b745e732b2b5e73742b73742b7374745e73
01755e73742b2b2b2b5e732b5e732b7374755e735e735e73755e732b5e73
002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b5e73755e732b2b5e735f73737373742b2b2b2b2b5e73742b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb10002
43545841ff0284006402830064028200640281006402800064027f006402
7e0064027d0064027c0064027b0064027a00640279006402780064027700
64027600640275006402740064027300640271006402700064026f006402
6e0064026d0064026c0064026b0064026a00640269006402680064026700
640266006402650064026400640263006402620064026100640260006402
5f0064025e0064025d0064025c0064025b0064025a006402590064025800
640257006402560064025500640254006402530064025200640251006402
500064024f0064024e0064024d0064024c0064024b0064024a0064024900
640248006402470064024600640245006402440064024300640242006402
41006402400064023f0064023e0064023d0064023c0064023b0064023a00
640239006402380064023700640236006402350064023400640233006402
3200640231006402300064022f0064022e0064022d0064022c0064022b00
64022a006402290064022800640227006402260064022500640224006402
230064022200640221006402200064021f0064021e0064021d0064021c00
64021b0064021a0064021900640218006402170064021600640215006402
14006402130064021200640211006402100064020f0064020e0064020d00
64020c0064020b0064020a00640209006402080064020700640206006402
050064020441ff00640203006402020064020100640200006401ff006401
fe006401fd006401fc006401fb006401fa006401f9006401f8006401f700
6401f6006401f5006401f4006401f3006401f2006401f1006401f0006401
ef006401ee006401ed006401ec006401eb006401ea006401e9006401e800
6401e7006401e6006401e5006401e4006401e3006401e2006401e1006401
e0006401df006401de006401dd006401dc006401db006401da006401d900
6401d8006401d7006401d6006401d5006401d4006401d3006401d2006401
d1006401d0006401cf006401ce006401cd006401cc006401cb006401ca00
6401c9006401c8006401c7006401c6006401c5006401c4006401c3006401
c2006401c1006401c0006401bf006401be006401bd006401bc006401bb00
6401ba006401b9006401b8006401b7006401b6006401b5006401b4006401
b3006401b2006401b1006401b0006401af006401ae006401ad006401ac00
6401ab006401aa006401a9006401a8006401a7006401a6006401a5006401
a4006401a3006401a2006401a1006401a00064019f0064019e0064019d00
64019c0064019b0064019a00640199006401980064019700640196006401
9500640194006401930064019200640191006401900064018f0064018e00
64018d0064018c0064018b0064018a006401890064018800640187006401
860064018500644180018400640183006401820064018100640180006401
7f0064017e0064017d0064017c0064017b0064017a006401790064017800
640177006401760064017500640174006401730064017200640171006401
700064016f0064016e0064016d0064016c0064016b0064016a0064016900
640168006401670064016600640165006401640064016300640162006401
61006401600064015f0064015e0064015d0064015c0064015b0064015a00
640159006401580064015700640156006401550064015400640153006401
52006401500064014f0064014e0064014c0064014b0064014a0064014900
640148006401470064014600640145006401440064014300642b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b185f5e0000>
[2829 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 910 1004 <00020048ffed03c705210013002b00ea4019281201291101260d01260c01
2608012507012a03012902012db8ffc040250f024d602d01141810014d14
100f014d14160d014d140a0c014d14200b014d14180c014d14bb022d0000
0020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8fff6b30c
014d20b8ffe8b60c014d24200120b8022d40090a200030004000030ab8ff
f040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00b8ffc040
0a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003fed3fed11
120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b2b2b3130
5d2b5d5d5d5d5d5d5d5d01140e0223222e0235343e0233321e0207342e04
23220e0215141e0233323e0403c72f6db0817aa7662b306cb0807ba7662b
b00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b16157a9f7
a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e7285>PBAAAA+Calibri AddT42Char 
1 1268 1005 <000100ae0000039f0517002e00e54024241e01241d01241c01231b01241a
01241901261801261701291201291101122010014d30b8ffc0400d0f024d
60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29b8fff0b3
0d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e18200b01
4d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8ffc0b310
014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b014da01101
111312b8013fb323522910b80107b10654003fed323ffdcd012f5d2b2b2b
2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d5d5d5d5d
5d5d5d25140e022321222e0235343e02332111070606262635343e023725
3e0333321e02151133321e02039f060a0d07fd5c070c0b0606090d08010e
fa13170e0503060b09012a040c12181218201206ea080e090544131a1007
07101a13121a110903d8950a040d1e171118100c06bf0304040104070b06
fb8f09111a00>PBAAAA+Calibri AddT42Char 
1 1634 1006 <000100720000039c0521003e0094400d2936012b1e01291d01261e0140b8
ffc040170f024d604001161810014d16100c0d014c16200b014d16b8022d
b633253325330039b8ffe8b310014d39ba027f000bffc0b30c014d0bb8ff
e0400b0f014d0b1138392020391bb8012eb63316062e531039b80128b106
54003fed323f123939ed11392f123939012f2b2be12bcd39392f2f10e12b
2b2b31305d2b005d015d5d5d25140e022321222e0235343e0237133e0335
342e0223220e0223222e0235343e0633321e0215140e02070721321e0203
9c05090f09fd350e150f07030a0f0cfb576939121c3550343d6149310c07
0b0704020508183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c13
0907101e16141e17170d010a5c9278622b2b4d3a2222282208121e150f16
100e15242318355c7a453e7b8faf72d609121b00>PBAAAA+Calibri AddT42Char 
1 1954 1007 <00010067ffed0392052100580105b9005affc0401c0f024d605a01310810
014d31100f014d31100c0d014c31200b014d31b80235400a4e53264e4e18
13014d40b8ffe840260f014d26200f014d40264e4e2640030e1b0810014d
1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8022db500
080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b30f014d0e
b8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ffc0b30f01
4d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf320200549
5316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b5d2b2b01
2f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910e12b2b2b
2b31305d2b01140e0223222e0635343633321e0233323e0235342e022323
222e0235343e023333323e0235342e0223220e0223222e0235343e063332
1e0215140e0207151e0303923e74aa6b4171583a0f0806030e0d0935536f
44426444222b53794d7b080f0b07060b0e0971426949271a3451353a614c
320a070b0703020608133a556f405a885b2d203e5a3b436f502d0172598f
6637151d1f0e0e141d15241c202520223e55323758402207101a1513190f
07224059372849361f232823050f1b160f17110e132423182e5475473d69
51390b020735506b>PBAAAA+Calibri AddT42Char 
1 322 972 <00030052ffed03ba05210027003700470182b90036fff0b40f11014c36b8
fff0b40c0d014c35b8fff0b40f11014c35b8fff0b40c0d014c34b8fff0b4
0f11014c34b8fff0b40c0d014c33b8fff0b311014d33b8fff0b30f014d49
b8ffc0b60f024d60490130b8fff0b40c0d014c30b8fff0b40f10014c30b8
fff0b40c0d014c30b8ffe0b30b014d30b8021940191428100c0d014c2810
0f10014c28100c0d014c28200b014d28b80218401a1e0f231e1e180f014d
14180f014d141e141e0a38100c0d014c38b8ffd040151d014d38100f1001
4c38100c0d014c38200b014d38ba02430000ffd4b30f024d00b8ffe0b30f
014d00b8ffc0b314014d00b8ffc0b310014d00b8ffc0b30d014d00b8ffc0
b40b014d0042b8fff0400a0c0d014c42301d014d42b8fff0b40f10014c42
b8fff0b40c0d014c42b8ffe0b30b014d42b8024340110a400b014d0a353d
052dfd195945fd055f003fed3fed123939012f2be12b2b2b2b2bd42b2b2b
2b2b2be12b2b2b2b2b1239392f2f2b2b12393910e12b2b2b2b10e12b2b2b
2b31305d2b002b2b2b2b2b2b2b2b01140e0223222e0235343e02372e0335
343e0233321e0215140e02071e0303342e0223220615141e021736361334
2e02270e0315141633323603ba3c71a66b649e6e3a284b6e453c5c402131
639966628f5d2c21405d3c476f4b27d81d3853356c6f1b39573c656c2a22
4567443f5f3d1f85848083014c54835a2e2a52784d3d66564b221f45515c
36447758332f516e3f335e544920234a555f025f2a443019625527433c39
1f347efda22e4b413d211f3e42492c616a6b>PBAAAA+Calibri AddT42Char 
1 2442 1012 <ffff0052ffed03ba0521020603cc0000>PBAAAA+Calibri AddT42Char 
1 2458 1013 <00020052ffed03a605210030004200bd4013292e012a0501290401290301
2a2601260a0144b8ffc040200f024d60440131080d014d31100c0d014c1d
7a3101393149316931032b310131b8022c4009000e0e200070000200b8ff
e0b30f024d00b8ffe0b40f014d003bb8fff8b30d014d3bb8fff040120c0d
014c753b01363b463b663b03243b013bb8022b400e2f25012540f2202007
36f42a5318b80108b10756003fed3fed12392fed012f5de15d5d5d2b2bc4
2b2b5d392f10e15d5d5d322b2b31305d2b005d5d015d5d5d5d01140e0423
222e0435343e0233321e0233323e0237060623222e0235343e0233321e04
07342e0223220e0215141e0233323603a61430517ba9702b51412c140903
060b080b283d5233618b582c023594606c935927326aa472517d5c402711
af2242603f415c3b1c19385a424b8c02ba54ac9f8b683b0b1012121f1a16
1a0e050f120f4b7ea65c1f303b668c53569b7646294d6d8aa14680af6c30
2f4f64353b6244252d00>PBAAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/zero 1004 def
/one 1005 def
/two 1006 def
/three 1007 def
/eight 1012 def
/nine 1013 def
end
PBAAAA+Calibri /Encoding get
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 56 /eight put
dup 57 /nine put
pop
end
%ADOEndSubsetFont
/KYNPNQ+Calibri /PBAAAA+Calibri findfont ct_VMDictPut
/KYNPNQ+Calibri*1 
[48{/.notdef}rp /zero /one /two /three 4{/.notdef}rp /eight /nine 
198{/.notdef}rp]
KYNPNQ+Calibri nf
KYNPNQ+Calibri*1 [12 0 0 -12 0 0 ]msf
510.24 75.7197 mo
(2009)
[6.06244 6.06244 6.06244 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+Calibri Initial
ct_T42Dict begin
-0.473 -0.191 1.211 0.949
 256 array 0 1 255 {1 index exch /.notdef put} for  /HIBBAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f326c6872b8000000cc000000606376
7420af93b7f90000012c0000050a6670676df6f64d0c000006380000091a
676c79667ee5067600005bac0000018868656164e227154000000f540000
0036686865610dae0b3c00000f8c00000024686d74782d65e0e800000fb0
000011846c6f63610005c35c00002134000011886d6178702801030d0000
32bc000000206e616d65826d127a000032dc000004c170726570ffeae6e0
000037a00000240b67646972000000000000000000000000000304070190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204a00002ef4000207b00000000000000004d53202000400020
fb040600fe0001c4079e02262000009f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
00004047645f5e5d5c5b5a59585554535251504f4e4d4c4b4a4948474645
44434241403f3e3d3c3b3a39383736352f2e2d2c2826252423221f181411
100f0d0b0a090807060504030201002c4523466020b02660b00426234848
2d2c452346236120b02661b004262348482d2c45234660b0206120b04660
b004262348482d2c4523462361b0206020b02661b02061b004262348482d
2c45234660b0406120b06660b004262348482d2c4523462361b0406020b0
2661b04061b004262348482d2c0110203c003c2d2c20452320b0cd442320
b8015a51582320b08d44235920b0ed51582320b04d44235920b004265158
2320b00d44235921212d2c20204518684420b001602045b04676688a4560
442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b1
01283e01b0282370b10228453ab10200080d2d2c2045b00325456164b050
515845441b2121592d2c2045b0004360442d2c01b00643b00743650a2d2c
2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b00361
592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c4565b02c234445
b02b23442d2c4b525845441b2121592d2c01b005251023208af500b00160
23edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f500
edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2c00b0
0743b006430b2d2c21210c6423648bb84000622d2c21b08051580c642364
8bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb81555
621bb200802f2b59b002602d2c0c6423648bb84000626023212d2c452345
6023456023456023766818b08062202d2cb00426b00426b00425b0042545
234520b003266062636820b0032661658a2344442d2c2045b0005458b040
442045b04061441b2121592d2c45b1302f4523456160b0016069442d2c4b
5158b02f2370b01423421b2121592d2c4b515820b0032545695358441b21
21591b2121592d2c45b01443b0006063b0016069442d2cb02f45442d2c45
2320458a60442d2c45234560442d2c4b235158b90033ffe0b134201bb333
0034005944442d2cb0164358b00326458a586466b01f601b64b020606620
581b21b04059b001615923586559b02923442310b029e01b212121212159
2d2cb0164358b004254564b020606620581b21b04059b0016123586559b0
292344b00425b00725082058021b0359b0052510b004252046b004252342
3cb0072510b006252046b00425b0016023423c2058011b0059b0052510b0
0425b029e0b0072510b00625b029e0b00425b00725082058021b0359b004
25b003254348b00625b00325b0016043481b2159212121212121212d2cb0
164358b004254564b020606620581b21b04059b0016123581b6559b02923
44b00525b00825082058021b0359b0042510b005252046b0042523423cb0
0425b0072508b0072510b006252046b00425b0016023423c2058011b0059
b0042510b00525b029e0b02920456544b0072510b00625b029e0b00525b0
0825082058021b0359b00525b003254348b00425b0072508b00625b00325
b0016043481b2159212121212121212d2c02b00425202046b004252342b0
052508b003254548212121212d2c02b0032520b0042508b0022543482121
212d2c452320451820b00050205823652359236820b040505821b0405923
5865598a60442d2c4b53234b515a5820458a60441b2121592d2c4b545820
458a60441b2121592d2c4b53234b515a58381b2121592d2cb000214b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c208a08234b538a4b515a5823381b2121592d2c0020
b200400325b0062649618b3812342d2c014623466023466123201020468a
61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c1b2159
2d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b123018851
b1400188535a58b910000020885458b202010243604259b12401885158b9
20000040885458b2020202436042b12401885458b2022002436042004b01
4b5258b2020802436042591bb940000080885458b202040243604259b940
00008063b80100885458b202080243604259b94000010063b80200885458
b202100243604259b94000020063b80400885458b2024002436042595959
59592d2c451868234b51582320452064b04050587c59688a6059442d2cb0
0016b00225b0022501b001233e00b002233eb10102060cb00a236542b00b
234201b001233f00b002233fb10102060cb006236542b0072342b0011601
2d2c20b82000628a6023622d2cb0072558001b0159b0042510b00325b002
2520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920b00525
4ab0042547b004254760b0062547b0806361b00225b0005558b00325b007
25496359b0082558001b0159b00425b0062549b009255cb009255a58b009
2b59b0072546b0806361b0032520b0005558631b2159612320b0005558b0
80631b21b08059b0592bb006255c586959b00425202010b00048233ab006
2658001b0159b0052658b003252f598a12233221212d2cb00625b00a2587
b00625b009254ab0005358b00625b00a251bb00925b0072559b00225b002
25070cb005256323b00625636020b94000040063535821b00426b00426b0
0a1bb94000040063655158b0042665b0042665b00a1bb00426b00426b000
b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b00525
07595920b0005558b00525b0052587b00725b007250bb0092510b00b25b0
092620b8ffff545821cd1bed59b00525b0052507b00825b00b254923b006
25b0062587b00a2510b00b25c15920b00051b800522378b00161b00225b0
0725b0072507b00a25b00d254961b08062b00525b005250bb00a252338b0
0625b0062587b00825b008250bb00a2510b00b25c4b00625b0062507b009
25b00c2549b0032554b8ffa723792121212121212121212121212d2c23b0
005458b9400000001bb900004000598ab0005458b9400000001bb9000040
0059b05b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c
8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b0
0426080db00426b00426080db05b2b2d2c204569442d0000000100000001
051f953582175f0f3cf50019080000000000bbeb7ccc00000000c1274845
fc31fe7309b6079e000000090002000100000000000100000600fe0001c4
0a4efc31fe8c09b6000100000000000000000000000000000461040e0000
000000000000000001cf000004a1002304a1002304a1002304a1002304a1
002304a1002304a1002304a1002304a1002304a1002304a10023061bffcc
061bffcc045a00ac04440061044400610444006104440061044400610444
006104ec00ac04ec009704ff001b04ff001b03e800ac03e8004503e800ac
03e8004603e8004603e8006303e8005f03e8008103e800ac03e800ac03ad
00ac050c005b050c005b050c005b050c005b050c005b04fc00ac04fc00ac
05400020020400ac0204ff4a020400280204ff390204ff310204ff500204
ff4f0204ff7b0204001e02040027049200ac028d0007028dffa9042800ac
042800ac035d00ac035d0081036200ac035d00ac0370001c045e00ac06d7
00ac052a00ac052a00ac052a00ac052a00ac052a00ac050700ac054c0063
054c0063054c0063054c0063054c0063054c0063054c0063054c0063054c
0063054f0063054f006306ef0063042200ac042200ac05620063045800ac
045800ac04580053045800ac03ad004703ad004703ad001503ad001803ad
004703ad004703e6000f03e6000f03e6000f03e6000f052200aa052200aa
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa048a0022071e003d071e003d071e003d071e003d071e003d
0427003003e6001e03e6001e03e6001e03e6001e03e6001e03bf003b03bf
003b03bf001a03bf003b03f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f40010055cffe2055c
ffe2040400a103cb006d03cb006d03cb006d03cb006d03cb006d03cb006d
046500a10465006a0477003204770032038000a103800030038000a10380
0020038000200380002c0380002903800042038000a1038000a1035000a1
0482006c0482006c0482006c0482006c0482006c047800a10478008c049d
004001ec00a101ecff5801ec001901ecff4801ecff2701ecff5501ecff52
01ecff7101ec001101ec0018041b00a1023e0000023eff8c03c900a103c9
00a102e000a102e0008702e600a102e000a102f0003203d500a1060600a1
049100a1049100a10491009904910078049100a1046600a104aa006604aa
006604aa006604aa006604aa006604aa006604aa006604aa006604aa0066
04ba006604ba00660606006603c500a103c500a104b1006603ed00a103ed
00a103ed004503ed00a1034f0049034f0049034ffff5034ffff6034f0049
034f00490359001c0359fffe0359001c0359001c048d009f048d009c048d
009f048d0097048d0075048d009f048d009f048d009f048d009f048d009f
048d009f03fd0021063e0037063e0037063e0037063e0037063e003703cc
003603830010038300100383001003830010038300100369004403690044
036900080369004403d5005c03d5005c03d5005c03d5005c03d5001e03d5
005c03d5005c03d5005c03d5005c03d5005c03d5005c062f005c062f005c
043400990362005a0362005a0362004e036200570362005a0362005a076f
005a06dd005a0601005a0601005a04340060048c0060046a006004340061
03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d02710025069a002508d5002504ab0025069b0025
08d50025043c0025043c0025043c0025043c0025044f0025044f0025044f
0025044f0025043c0025043c002506760025067600250676002506760025
068900250689002506890025068900250676002506760025043c0025043c
0025067600250609002508430025043c0025043c002504830025043c0025
0676002504ed002504ed0025051300250728002503c4003503c4003503c4
003503c4003503c400350434006004340060043400600434006004340060
043400990434ffad0443fff901d6008501d6ff6e01d6000f01d6ff5a01d6
ff2001d6ff7201d6ff5801d6ff6701d6001101d6009903c00085041e0088
01eaffd501eaffd501eaff6303a3009903a3009903a3009901d6009901d6
002a021c009901d6004b01fb001c02fd0099066400990434009904340099
043400990434004e0434009904a2ff9d043400990438005a0438005a0438
005a0438005a0438004f0438005a0438005a0438005a0438005a043c005a
043c005a06cc005a04340099043400990434006002ca009902ca009902ca
fff902ca006e03210051032100510321fffe0321fffd0321005103210051
05ae005105ae00510438009901f1009902ae002102c4002102ae002102bc
002604e60021047500210475002104750021047500210475002104750021
0475002104750021047500210475002105130021074b002106d9002106d9
002106d9002106d9002106d9002106d9002106d9002106d9002106d90021
06d90021043400940434008e04340094043400860434004d043400890434
008604340094043400940434009404340094039d002205b8003505b80035
05b8003505b8003505b8003503770029039f0022039f0022039f0022039f
0022039f0022032900590329005903290007032900590338007203610064
0378005d02ac004402e5006c024e004402e5004802b8004701c100240297
002a02e9006c01630061016dffd80297006c015e006c0456006c02e6006c
02e6004502e5006c02e5004801f6006c0230004201e3002302e9006c0285
001f03ef002c027e00280286001f02370042025400000275000002940000
0000fd080000fce80256000002750000029400000000fd080000fce80329
0000035f0000039400000000fc9f0000fc6703290000035f000003940000
0000fc9d0000fc6901ff0000039a000003a2000003a800000000fc650000
fc600324000002f5000003460000036700000000fca00000fc7e03270000
03490000036a00000000fc9d0000fc7d030c0000030f0000031100000000
fcac0000fca9029100000298000002a000000000fce90000fce202cf0000
02c2000002b5000003c1000003e10000040000000000fc520000fc3101ce
000001d6000001ce000001ce00000000fd4d0000fd4d027500840000fd7a
027f00840000fd7601f700840231000004a1002304a1ff89045a00ac0353
00ac0484003a03e800ac03e8fec703bf003b04fc00ac04fcfe9e054c0063
020400ac0204feb20204ff52042800ac0495002406d700ac052a00ac03ef
0053054c0063054cff1604fc00ac042200ac03ab004603e6000f03e6001e
03e6fe6e03e6001e0613000004270030060000900550005e0550fef903f4
001003f4ff75040400a102fb00a103c90023038000a10380fed103690044
047800a10478fed404b4006601ec00a101ecfebd01ecff5403c900a103e1
0011060600a1049100a10387005e04aa006604aaff3b047800a103c500a1
035b004b0359001c038300100383fea2038300100552000003cc00360558
008704b1006604b1ff67048a0061048a0061044000990432006403920018
0430000003a5005903a5005902c8004e044c0099044c0099044100600478
0006023200940232ffec0232ff7a0232ff0f03a3009903b4000004660099
039700220302004d0303004d0438005a0438005a046c0028041200760441
00590349005c0319000304550090045500900455007d0455001605360055
053b00550369001205a900940592006405920064028900000000fd0a03f4
00000000fc360205009702050097020500970224004801ff006e01ff006e
04a10023044d00ad045a00ac037000ac037000ac037600ac0527000303e8
00ac03e8004503e800610668005503ca004b052200ac052200ac052200ac
020400ac0204ff50028d0007045800ac045800ac04e3000306fa000306d7
00ac04fc00ac070300ac054c0063054c006304f900ac042200ac04440061
03ad004703e6000f0438000f0438000f04b800220594000004270030051c
00ac04f500ac0472007406f200ac071e00ac04eb000f061800ac044000ac
0462005d04610062070800ac0471005304ff000f04f2000f0504000003f4
001003ee00a2040400a1031400a1031400a1032700a10480000e038000a1
038000300380002c0578004403800057048900a1048900960489009501ec
00a101ecff55023e000003ca00a103ca00a104320001060600a1047800a1
04aa006604a90066046a00a103c500a103cb006d034f00490359001c039d
001e039d001b042f0022050a000003cc0036048e00a1046900a103fa006d
062300a1064500a1045f0017058300a103e800a103e4006b03f000660632
00a103ff005c045f001f0463001f044d000006010001063200a103d5005c
044300000430000003d5009902c4009902c4009902d50099034900490477
00170434006003fb005d03fb005d03fb005d0583003e0362004b04530099
045300780453008801d6008501d6ff7201eaffd503b6009903b600990415
0016060200130569005f04470099062800990438005a0431005a042a0099
04340099043400990362005a032100510319000a06640099039f0022039f
001803d2002204fe005103770029045500990433009903c0004205d40099
05fe0099044a000a0554009903c20099038b004d038d005d05c6009903cb
00380453fff90443fff904270018036e0000036e0000036e00000000fca5
0000fca5029b010a029b00bf029b00bf03b5008503b5005e03b5005e03de
0064026000ed026000b10364007a0361005f01ff002a02240048022400bb
020500970586009601ff008c01ff002a01ff008c01ff002a035900880359
002b035900880359002b01ff002a0359002b02b6007402b600c002b60074
02b600c004190075041900ad04190075041900ad0317000102df001f03af
018a03fc01ae0317000b02df002d027300450273004503fcfff603fcfff6
073e0095073e0095073e0095073e009503fcfff903fc00c1020500970205
0097026d0085026d007a027400bf0274005a028400560284007502400084
0240007a024a00b0024a0067026d0085026d007a027400bf0274005a0284
00560284007503fc009e03fc007703fc007803fc007604b0006b043d006e
03fc006a03fc003d01c4008b0335008b057500000556000007f700000727
0000073c00000727000006ad00af06ad00af040e008005a4003f05ac004d
02b6000003fc003f04b30049040e002a03fc0057040e00600434005803fc
00b903fc004a040e005303fc006d0419002b040e003403f30035039f0061
03be005f039f0058039f002506210049083300ac03fc002406e300a10411
001d0494005f02cb002303ec006203ec00510455002203d700510436007e
03b20035043600630436005c040e0048040e00ae040e0072040e0067040e
0020040e0065040e006b040e0063040e0052040e005204430067028d0019
0381005c0373005903ac00260368006103b7006e0349002f03b5004b03bc
0052039f0050039f008d039f0065039f0062039f003a039f0067039f0061
039f005e039f0051039f00500494005f02cb002303ec006203ec00510428
002203d700510436007e03b20035043600630436005c040e0048040e00ae
040e0072040e0067040e0030040e0065040e006b040e0063040e0052040e
00520321004801f8002302b0004b02ad004102db002502a6004502df005b
0291003202e1004b02df004402ea005102df005102d0005701bc006001bc
00580321004801f8002302b0004b02ad004102db002502a6004502df005b
0291003202e1004b02df004402ea005102df005102d0005701bc006001bc
0058029d003801f500310252003c0249002d024a00140246003202510030
0238002202570025024d0023029d003801f500310252003c0249002d024a
001402460032025100300238002202570025024d002302b1ff4b03130044
055f0044056900440517004405690044052e00440553004405c9004e05c9
004e0567004705b7004705a2004705cd0027057d004505a20045052a0035
05b80048084e0048057d005c07c9005c03fc004603fc004c03fc006003fc
002b03fc005e03fc006003fc005903fc004503fc006503fc004c03fc0055
03fc005603fc003d05e9002c0405003506d300690443006102ed000703fc
00080484003a0550005e04660099066500660454005b0416004a073e009a
073e0096073e00c9073e00c9070e00af070e013a070e00af070e013a0a4e
009a0638009f046600280000000000000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000188000001880000018800000188000001880000018800000188
000001880000018800000188000001880000018800000188000001880000
018800000188000001880000018800000188000001880000018800000188
000001880000018800000188000001880000018800000188000001880000
018800000188000001880000018800000188000001880000018800000188
000001880000018800000188000001880000018800000188000001880000
018800000188000001880000018800000188000001880000018800000188
000001880000018800000188000001880000018800000188000001880000
018800000188000001880000018800000188000001880000018800000188
000001880000018800000188000001880000018800000188000001880000
018800000188000001880000018800000188000001880000018800000188
000001880000018800000188000001880000018800000188000001880000
018800000188000001880000018800000188000001880000018800000188
000001880000018800000188000001880000018800000188000001880000
018800000188000001880000018800000188000001880000018800000188
000001880000018800000188000001880000018800000188000001880000
018800000188000001880000018800000188000001880000018800000188
000001880000018800000188000001880000018800000188000001880000
018800000188000001880000018800000188000001880000018800000188
000001880000018800000188000001880000018800000188000001880000
018800000188000001880000018800000188000001880000018800000188
000001880000018800000188000001880000018800000188000001880000
018800000188000001880000018800000188000001880000018800000188
000001880000018800000188000001880000018800000188000001880000
018800000188000001880000018800000188000001880000018800000188
000001880000018800000188000001880000018800000188000001880000
018800000188000001880000018800000188000001880000018800000188
000001880000018800000188000001880000018800000188000001880000
018800000188000001880000018800000188000001880000018800000188
000001880000018800000188000001880000018800000188000001880000
018800000188000001880000018800000188000001880000018800000188
000001880000018800000188000001880000018800000188000001880001
0000046100ad000700ac000700020010002f006500002318018200040001
0000000e00ae000000030000000000640000000000030000000700fa0064
00010000000000000032015e0001000000000003000e0190000100000000
0004000e019e0001000000000006000e01ac0001000000000007007d01ba
0003000004090001001c02370003000004090002000e0253000300000409
0003001c02610003000004090004001c027d0003000004090006001c0299
0003000104090000006402b5000300010409000700fa031900a900200032
0030003000360020004d006900630072006f0073006f0066007400200043
006f00720070006f0072006100740069006f006e002e00200041006c006c
002000520069006700680074007300200052006500730065007200760065
0064002e00430061006c0069006200720069002000690073002000650069
007400680065007200200061002000720065006700690073007400650072
00650064002000740072006100640065006d00610072006b0020006f0072
00200061002000740072006100640065006d00610072006b0020006f0066
0020004d006900630072006f0073006f0066007400200043006f00720070
006f0072006100740069006f006e00200069006e00200074006800650020
0055006e0069007400650064002000530074006100740065007300200061
006e0064002f006f00720020006f007400680065007200200063006f0075
006e00740072006900650073002ea92032303036204d6963726f736f6674
20436f72706f726174696f6e2e20416c6c20526967687473205265736572
7665642e43504c43484c2b43616c6962726943504c43484c2b43616c6962
726943504c43484c2b43616c6962726943616c6962726920697320656974
686572206120726567697374657265642074726164656d61726b206f7220
612074726164656d61726b206f66204d6963726f736f667420436f72706f
726174696f6e20696e2074686520556e697465642053746174657320616e
642f6f72206f7468657220636f756e74726965732e00430050004c004300
48004c002b00430061006c00690062007200690052006500670075006c00
61007200430050004c00430048004c002b00430061006c00690062007200
6900430050004c00430048004c002b00430061006c006900620072006900
430050004c00430048004c002b00430061006c006900620072006900a900
2000320030003000360020004d006900630072006f0073006f0066007400
200043006f00720070006f0072006100740069006f006e002e0020004100
6c006c002000520069006700680074007300200052006500730065007200
7600650064002e00430061006c0069006200720069002000690073002000
650069007400680065007200200061002000720065006700690073007400
65007200650064002000740072006100640065006d00610072006b002000
6f007200200061002000740072006100640065006d00610072006b002000
6f00660020004d006900630072006f0073006f0066007400200043006f00
720070006f0072006100740069006f006e00200069006e00200074006800
6500200055006e0069007400650064002000530074006100740065007300
200061006e0064002f006f00720020006f00740068006500720020006300
6f0075006e00740072006900650073002e000000b2090320b80284b40918
014a20b80283b40918014a20b80282b40918014a20b80281b40918014a20
b80280b40918014a20b8027fb40918014a20b8027eb40918014a20b8027d
b40918014a20b8027cb40918014a20b8027bb40918014a20b8027ab40918
014a20b80279b40918014a20b80278b40918014a20b80277b40918014a20
b80276b40918014a20b80275b40918014a20b80274b40918014a20b80273
b40918014a20b80271b40918014a20b80270b40918014a20b8026fb40918
014a20b8026eb40918014a20b8026db40918014a20b8026cb40918014a20
b8026bb40918014a20b8026ab40918014a20b80269b40918014a20b80268
b40918014a20b80267b40918014a20b80266b40918014a20b80265b40918
014a20b80264b40918014a20b80263b40918014a20b80262b40918014a20
b80261b40918014a20b80260b40918014a20b8025fb40918014a20b8025e
b40918014a20b8025db40918014a20b8025cb40918014a20b8025bb40918
014a20b8025ab40918014a20b80259b40918014a20b80258b40918014a20
b80257b40918014a20b80256b40918014a20b80255b40918014a20b80254
b40918014a20b80253b40918014a20b80252b40918014a20b80251b40918
014a20b80250b40918014a20b8024fb40918014a20b8024eb40918014a20
b8024db40918014a20b8024cb40918014a20b8024bb40918014a20b8024a
b40918014a20b80249b40918014a20b80248b40918014a20b80247b40918
014a20b80246b40918014a20b80245b40918014a20b80244b40918014a20
b80243b40918014a20b80242b40918014a20b80241b40918014a20b80240
b40918014a20b8023fb40918014a20b8023eb40918014a20b8023db40918
014a20b8023cb40918014a20b8023bb40918014a20b8023ab40918014a20
b80239b40918014a20b80238b40918014a20b80237b40918014a20b80236
b40918014a20b80235b40918014a20b80234b40918014a20b80233b40918
014a20b80232b40918014a20b80231b40918014a20b80230b40918014a20
b8022fb40918014a20b8022eb40918014a20b8022db40918014a20b8022c
b40918014a20b8022bb40918014a20b8022ab40918014a20b80229b40918
014a20b80228b40918014a20b80227b40918014a20b80226b40918014a20
b80225b40918014a20b80224b40918014a20b80223b40918014a20b80222
b40918014a20b80221b40918014a20b80220b40918014a20b8021fb40918
014a20b8021eb40918014a20b8021db40918014a20b8021cb40918014a20
b8021bb40918014a20b8021ab40918014a20b80219b40918014a20b80218
b40918014a20b80217b40918014a20b80216b40918014a20b80215b40918
014a20b80214b40918014a20b80213b40918014a20b80212b40918014a20
b80211b40918014a20b80210b40918014a20b8020fb40918014a20b8020e
b40918014a20b8020db40918014a20b8020cb40918014a20b8020bb40918
014a20b8020ab40918014a20b80209b40918014a20b80208b40918014a20
b80207b40918014a20b80206b40918014a20b80205b40918014a20b80204
b40918014a20b80203b40918014a20b80202b40918014a20b80201b40918
014a20b80200b40918014a20b801ffb40918014a20b801feb40918014a20
b801fdb40918014a20b801fcb40918014a20b801fbb40918014a20b801fa
b40918014a20b801f9b40918014a20b801f8b40918014a20b801f7b40918
014a20b801f6b40918014a20b801f5b40918014a20b801f4b40918014a20
b801f3b40918014a20b801f2b40918014a20b801f1b40918014a20b801f0
b40918014a20b801efb40918014a20b801eeb40918014a20b801edb40918
014a20b801ecb40918014a20b801ebb40918014a20b801eab40918014a20
b801e9b40918014a20b801e8b40918014a20b801e7b40918014a20b801e6
b40918014a20b801e5b40918014a20b801e4b40918014a20b801e3b40918
014a20b801e2b40918014a20b801e1b40918014a20b801e0b40918014a20
b801dfb40918014a20b801deb40918014a20b801ddb40918014a20b801dc
b40918014a20b801dbb40918014a20b801dab40918014a20b801d9b40918
014a20b801d8b40918014a20b801d7b40918014a20b801d6b40918014a20
b801d5b40918014a20b801d4b40918014a20b801d3b40918014a20b801d2
b40918014a20b801d1b40918014a20b801d0b40918014a20b801cfb40918
014a20b801ceb40918014a20b801cdb40918014a20b801ccb40918014a20
b801cbb40918014a20b801cab40918014a20b801c9b40918014a20b801c8
b40918014a20b801c7b40918014a20b801c6b40918014a20b801c5b40918
014a20b801c4b40918014a20b801c3b40918014a20b801c2b40918014a20
b801c1b40918014a20b801c0b40918014a20b801bfb40918014a20b801be
b40918014a20b801bdb40918014a20b801bcb40918014a20b801bbb40918
014a20b801bab40918014a20b801b9b40918014a20b801b8b40918014a20
b801b7b40918014a20b801b6b40918014a20b801b5b40918014a20b801b4
b40918014a20b801b3b40918014a20b801b2b40918014a20b801b1b40918
014a20b801b0b40918014a20b801afb40918014a20b801aeb40918014a20
b801adb40918014a20b801acb40918014a20b801abb40918014a20b801aa
b40918014a20b801a9b40918014a20b801a8b40918014a20b801a7b40918
014a20b801a6b40918014a20b801a5b40918014a20b801a4b40918014a20
b801a3b40918014a20b801a2b40918014a20b801a1b40918014a20b801a0
b40918014a20b8019fb40918014a20b8019eb40918014a20b8019db40918
014a20b8019cb40918014a20b8019bb40918014a20b8019ab40918014a20
b80199b40918014a20b80198b40918014a20b80197b40918014a20b80196
b40918014a20b80195b40918014a20b80194b40918014a20b80193b40918
014a20b80192b40918014a20b80191b40918014a20b80190b40918014a20
b8018fb40918014a20b8018eb40918014a20b8018db40918014a20b8018c
b40918014a20b8018bb40918014a20b8018ab40918014a20b80189b40918
014a20b80188b40918014a20b80187b40918014a20b80186b40918014a20
b80185b40918014a20b80184b40918014a20b80183b40918014a20b80182
b40918014a20b80181b40918014a20b80180b40918014a20b8017fb40918
014a20b8017eb40918014a20b8017db40918014a20b8017cb40918014a20
b8017bb40918014a20b8017ab40918014a20b80179b40918014a20b80178
b40918014a20b80177b40918014a20b80176b40918014a20b80175b40918
014a20b80174b40918014a20b80173b40918014a20b80172b40918014a20
b80171b40918014a20b80170b40918014a20b8016fb40918014a20b8016e
b40918014a20b8016db40918014a20b8016cb40918014a20b8016bb40918
014a20b8016ab40918014a20b80169b40918014a20b80168b40918014a20
b80167b40918014a20b80166b40918014a20b80165b40918014a20b80164
b40918014a20b80163b40918014a20b80162b40918014a20b80161b40918
014a20b80160b40918014a20b8015fb40918014a20b8015eb40918014a20
b8015db40918014a20b8015cb40918014a20b8015bb40918014a20b8015a
b40918014a20b80159b40918014a20b80158b40918014a20b80157b40918
014a20b80156b40918014a20b80155b40918014a20b80154b40918014a20
b80153b40918014a20b80152b40918014a20b80150b40918014a20b8014f
b40918014a20b8014eb40918014a20b8014cb40918014a20b8014bb40918
014a20b8014ab40918014a20b80149b40918014a20b80148b40918014a20
b80147b40918014a20b80146b40918014a20b80145b40918014a20b80144
b40918014a20b80143b30918014ab80284b21e3e1fb80283b21e151fb802
82b21e3e1fb80281b21e3a1fb80280b21e3e1fb8027fb21e3e1fb8027eb2
1e0c1fb8027db21e3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab21e3e
1fb80279b21d411fb80278b21d431fb80277b21d431fb80276b21d431fb8
0275b21d411fb80274b21d431fb80273b21d431fb80272b21d411fb80271
b21d421fb80270b21d421fb8026fb21d421fb8026eb21d431fb8026db21d
431fb8026cb21d431fb8026bb21c451fb8026ab21c451fb80269b21c451f
b80268b21c451fb80267b21c451fb80266b21c441fb80265b21c451fb802
64b21c451fb80263b21c451fb80262b21c451fb80261b21c451fb80260b2
1c451fb8025fb21c451fb8025eb21c441fb8025db21c451fb8025cb21c45
1fb8025bb21c451fb8025ab21c451fb80259b21c451fb80258b21c451fb8
0257b21c451fb80256b21c451fb80255b21c451fb80254b21c451fb80253
b21c451fb80252b21c451fb80251b21c451fb80250b21c451fb8024fb21c
451fb8024eb21c451fb8024db21c451fb8024cb21c451fb8024bb21c451f
b8024ab21b491fb80249b21b491fb80248b21b4a1fb80247b21b4a1fb802
46b21b4b1fb80245b21b4c1fb80244b21b4c1fb80243b21b4c1fb80242b2
1b4b1fb80241b21b491fb80240b21b491fb8023fb21b4a1fb8023eb21b4a
1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c1fb8
0239b21b4c1fb80238b21b4c1fb80237b21b4c1fb80236b21b4c1fb80235
b21b491fb80234b21b491fb80233b21b4a1fb80232b21b4a1fb80231b21b
4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b4c1f
b8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c1fb80229b21b4c1fb802
28b21b4c1fb80227b21b491fb80226b21b491fb80225b21b4a1fb80224b2
1b4a1fb80223b21b4a1fb80222b21b4b1fb80221b21b4b1fb80220b21b4c
1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b4c1fb8021cb21b4c1fb8
021bb21b4c1fb8021ab21a4e1fb80219b21a4e1fb80218b21a4f1fb80217
b21a4f1fb80216b21a4e1fb80215b21a4e1fb80214b21a4f1fb80213b21a
4f1fb80212b21a4f1fb80211b21a4e1fb80210b21a4e1fb8020fb21a4f1f
b8020eb21a4f1fb8020db21a4f1fb8020cb21a4e1fb8020bb21a4e1fb802
0ab21a4e1fb80209b21a4f1fb80208b21a4f1fb80207b21a4f1fb80206b2
19501fb80205b219511fb80204b219511fb80203b219501fb80202b21951
1fb80201b219511fb80200b219511fb801ffb219511fb801feb219501fb8
01fdb219511fb801fcb219511fb801fbb219511fb801fab219501fb801f9
b219511fb801f8b219511fb801f7b219511fb801f6b219511fb801f5b218
541fb801f4b218531fb801f3b218541fb801f2b218541fb801f1b218541f
b801f0b218531fb801efb218541fb801eeb218541fb801edb218541fb801
ecb218531fb801ebb218531fb801eab218541fb801e9b218541fb801e8b2
18541fb801e7b218541fb801e6b218531fb801e5b218541fb801e4b21853
1fb801e3b218541fb801e2b218541fb801e1b218541fb801e0b218531fb8
01dfb218531fb801deb218541fb801ddb218541fb801dcb218541fb801db
b218541fb801dab218531fb801d9b218541fb801d8b218541fb801d7b217
571fb801d6b217561fb801d5b217561fb801d4b217571fb801d3b217571f
b801d2b217571fb801d1b217571fb801d0b217561fb801cfb217561fb801
ceb217571fb801cdb217571fb801ccb217571fb801cbb217571fb801cab2
17561fb801c9b217561fb801c8b217571fb801c7b217571fb801c6b21757
1fb801c5b217571fb801c4b217571fb801c3b217561fb801c2b217571fb8
01c1b217571fb801c0b217571fb801bfb217561fb801beb217561fb801bd
b217571fb801bcb217571fb801bbb217571fb801bab217571fb801b9b217
571fb801b8b217561fb801b7b217571fb801b6b217571fb801b5b217571f
b801b4b217571fb801b3b2163f1fb801b2b2165b1fb801b1b2165b1fb801
b0b2165b1fb801afb2165b1fb801aeb2165b1fb801adb2165b1fb801acb2
165b1fb801abb2165b1fb801aab2163e1fb801a9b2163f1fb801a8b2163f
1fb801a7b2165b1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb8
01a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019f
b2163e1fb8019eb2163f1fb8019db2163f1fb8019cb2165b1fb8019bb216
5b1fb8019ab2165b1fb80199b2165b1fb80198b2163e1fb80197b2165b1f
b80196b2165b1fb80195b2165b1fb80194b2163e1fb80193b2163f1fb801
92b2163f1fb80191b2165b1fb80190b2165b1fb8018fb2165b1fb8018eb2
165b1fb8018db2165b1fb8018cb2163f1fb8018bb2165b1fb8018ab2165b
1fb80189b2165b1fb80188b2165b1fb80187b2165b1fb80186b215611fb8
0185b215621fb80184b215621fb80183b215661fb80182b215661fb80181
b215551fb80180b215451fb8017fb215361fb8017eb215361fb8017db215
611fb8017cb215621fb8017bb215621fb8017ab215641fb80179b215661f
b80178b215661fb80177b215661fb80176b215661fb80175b215661fb801
74b215661fb80173b215451fb80172b215621fb80171b215621fb80170b2
15631fb8016fb215641fb8016eb215661fb8016db215661fb8016cb21566
1fb8016bb215661fb8016ab215661fb80169b215621fb80168b215621fb8
0167b215611fb80166b215641fb80165b215641fb80164b215661fb80163
b215661fb80162b215661fb80161b215661fb80160b215661fb8015fb215
661fb8015eb215551fb8015db215451fb8015cb215451fb8015bb215361f
b8015ab215611fb80159b215621fb80158b215621fb80157b215631fb801
56b215641fb80155b215661fb80154b215661fb80153b215661fb80152b2
15661fb80151b214401fb80150b214551fb8014fb214561fb8014eb21483
1fb8014db2142d1fb8014cb214401fb8014bb214401fb8014ab214411fb8
0149b214401fb80148b214401fb80147b214411fb80146b2147e1fb80145
b214871fb80144b2147f1fb80143b214801fb80142b212461fb80141b212
461fb80140b212461fb8013fb212461fb8013eb212441fb8013db212461f
b8013cb211591fb8013bb211591fb8013ab2115b1fb80139b2115b1fb801
38b211471fb80137b211581fb80136b2115a1fb80135b2115b1fb80134b2
115b1fb80133b2112c1fb80132b211471fb80131b211551fb80130b21157
1fb8012fb211571fb8012eb211581fb8012db211591fb8012cb211591fb8
012bb2115a1fb8012ab2115a1fb80129b2115b1fb80128b2115b1fb80127
b2115b1fb80126b2115b1fb80125b211561fb80124b211561fb80123b211
571fb80122b211581fb80121b211591fb80120b2115a1fb8011fb2115a1f
b8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8011bb2115b1fb801
1ab2115b1fb80119b2105d1fb80118b2105e1fb80117b2105f1fb80116b2
105f1fb80115b2105f1fb80114b2105f1fb80113b2105f1fb80112b2105d
1fb80111b2105e1fb80110b2105f1fb8010fb2105f1fb8010eb2105f1fb8
010db2105f1fb8010cb2105d1fb8010bb2105e1fb8010ab2105f1fb80109
b2105f1fb80108b2105f1fb80107b2105f1fb80106b2105d1fb80105b210
5e1fb80104b2105f1fb80103b2105f1fb80102b2105f1fb80101b2105f1f
b8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f621ffb0f621ffa0f
621ff90f631ff80f641ff70f641ff60f641ff50f641ff40f621ff30f621f
f20f631ff10f641ff00f641fef0f641fee0f641fed0f621fec0f621feb0f
631fea0f641fe90f641fe80f641fe70f641fe60e671fe50e681fe40e681f
e30e681fe20e681fe10e671fe00e681fdf0e681fde0e681fdd0e671fdc0e
681fdb0e681fda0e681fd90e681fd80d6b1fd70d311fd60d6b1fd50d6c1f
d40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d
6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d681f
c50d671fc40d261fc30d311fc20d311fc10d311f40ffc00d311fbf0d311f
be0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c741fb80c741fb70c
711fb60c711fb50c721fb40c731fb30c741fb20c741fb10c741fb00c741f
af0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1fa80b
7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b7e1f
a00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f990b
7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b6b1f
910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f8403
381f8301381f8255805581ab80557f557d557eab7d550b7d010b7d1b7d4b
7d7b7dab7ddb7d404d060a7c557a557bab7a557955775578ab775576ab75
5504751475747503f47501ab750144750130750102007510752075030c74
55725573ab7255007250728072b072043bb072e072020072010ab8ffc0b3
721b1e46b8ffc0407c720d104671556f5570ab6f556e666d556a03251f69
38675568ab67556638645565ab645563386255613860555f385d555eab5d
555c385a555bab5a55593858555703251f5638545555ab54555338515552
ab51554f384e554e03251f4d384b554cab4b554a38485549ab4855473846
554503381f001c101c201c0310b8ffc0404e1c1b1e46001b0142301b401b
e01bf01b04001bb01bc01b03120f1a1f1a02290f1901434f19016f197f19
8f19030f18cf18024018292c460f17cf17df17ef1704134017292e460016
101620160315b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b316313546
b8ffc0404d162326460f15010f151f1502451f15010011e011f0110315bf
10cf10020f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e0340
0e3137460f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040270c5054
460f0b1f0b02553f0b4f0b02400b3f4346400b2d30460003012001010001
100120010308b8ffc0b401151f4603bc01000100000500010190b154532b
2b4bb80800524bb008505bb00188b02553b00188b040515ab00688b00055
5a5b58b101018e59b101024354b0144b515a58b101018e59858d8d001d42
4bb01d5358b203a0a01d42594bb0805358b20340401d42594bb0ff5358b2
0300001d42592b5e7375732b2b745e732b2b5e73742b73742b7374745e73
01755e73742b2b2b2b5e732b5e732b7374755e735e735e73755e732b5e73
002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b5e73755e732b2b5e735f73737373742b2b2b2b2b5e73742b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb10002
43545841ff0284006402830064028200640281006402800064027f006402
7e0064027d0064027c0064027b0064027a00640279006402780064027700
64027600640275006402740064027300640271006402700064026f006402
6e0064026d0064026c0064026b0064026a00640269006402680064026700
640266006402650064026400640263006402620064026100640260006402
5f0064025e0064025d0064025c0064025b0064025a006402590064025800
640257006402560064025500640254006402530064025200640251006402
500064024f0064024e0064024d0064024c0064024b0064024a0064024900
640248006402470064024600640245006402440064024300640242006402
41006402400064023f0064023e0064023d0064023c0064023b0064023a00
640239006402380064023700640236006402350064023400640233006402
3200640231006402300064022f0064022e0064022d0064022c0064022b00
64022a006402290064022800640227006402260064022500640224006402
230064022200640221006402200064021f0064021e0064021d0064021c00
64021b0064021a0064021900640218006402170064021600640215006402
14006402130064021200640211006402100064020f0064020e0064020d00
64020c0064020b0064020a00640209006402080064020700640206006402
050064020441ff00640203006402020064020100640200006401ff006401
fe006401fd006401fc006401fb006401fa006401f9006401f8006401f700
6401f6006401f5006401f4006401f3006401f2006401f1006401f0006401
ef006401ee006401ed006401ec006401eb006401ea006401e9006401e800
6401e7006401e6006401e5006401e4006401e3006401e2006401e1006401
e0006401df006401de006401dd006401dc006401db006401da006401d900
6401d8006401d7006401d6006401d5006401d4006401d3006401d2006401
d1006401d0006401cf006401ce006401cd006401cc006401cb006401ca00
6401c9006401c8006401c7006401c6006401c5006401c4006401c3006401
c2006401c1006401c0006401bf006401be006401bd006401bc006401bb00
6401ba006401b9006401b8006401b7006401b6006401b5006401b4006401
b3006401b2006401b1006401b0006401af006401ae006401ad006401ac00
6401ab006401aa006401a9006401a8006401a7006401a6006401a5006401
a4006401a3006401a2006401a1006401a00064019f0064019e0064019d00
64019c0064019b0064019a00640199006401980064019700640196006401
9500640194006401930064019200640191006401900064018f0064018e00
64018d0064018c0064018b0064018a006401890064018800640187006401
860064018500644180018400640183006401820064018100640180006401
7f0064017e0064017d0064017c0064017b0064017a006401790064017800
640177006401760064017500640174006401730064017200640171006401
700064016f0064016e0064016d0064016c0064016b0064016a0064016900
640168006401670064016600640165006401640064016300640162006401
61006401600064015f0064015e0064015d0064015c0064015b0064015a00
640159006401580064015700640156006401550064015400640153006401
52006401500064014f0064014e0064014c0064014b0064014a0064014900
640148006401470064014600640145006401440064014300642b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b185f5e0000>
[393 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 322 882 <0001004501b4022e023d000f000eb400070bed04002fed012fcd31300114
06232122263534363321321e02022e1211fe5e1212121201a2080d090501
f9271e1f26261e06111a>HIBBAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>HIBBAA+Calibri AddT42Char 
HIBBAA+Calibri /CharStrings get begin
/g882 882 def
end
HIBBAA+Calibri /Encoding get
dup 32 /g882 put
pop
end
%ADOEndSubsetFont
/KYNPNR+Calibri /HIBBAA+Calibri findfont ct_VMDictPut
/KYNPNR+Calibri*1 
[32{/.notdef}rp /g882 223{/.notdef}rp]
KYNPNR+Calibri nf
KYNPNR+Calibri*1 [12 0 0 -12 0 0 ]msf
534.48 75.7197 mo
( )sh
KYNPNQ+Calibri*1 [12 0 0 -12 0 0 ]msf
538.14 75.7197 mo
(8)sh
KYNPNR+Calibri*1 [12 0 0 -12 0 0 ]msf
544.2 75.7197 mo
( )sh
KYNPNQ+Calibri*1 [12 0 0 -12 0 0 ]msf
547.86 75.7197 mo
(31)
[6.12244 0 ]xsh
gsave
27.48 163.74 mo
567.48 163.74 li
567.48 266.58 li
27.48 266.58 li
cp
eclp
27.48 266.6 mo
567.48 266.6 li
567.48 163.7 li
27.48 163.7 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
grestore
gsave
27.48 266.58 mo
567.48 266.58 li
567.48 369.42 li
27.48 369.42 li
cp
eclp
27.48 369.44 mo
567.48 369.44 li
567.48 266.54 li
27.48 266.54 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
grestore
gsave
27.48 369.42 mo
567.48 369.42 li
567.48 472.26 li
27.48 472.26 li
cp
eclp
27.48 472.28 mo
567.48 472.28 li
567.48 369.38 li
27.48 369.38 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
grestore
gsave
27.48 472.26 mo
567.48 472.26 li
567.48 575.1 li
27.48 575.1 li
cp
eclp
27.48 575.12 mo
567.48 575.12 li
567.48 472.22 li
27.48 472.22 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
grestore
gsave
27.48 575.1 mo
567.48 575.1 li
567.48 677.94 li
27.48 677.94 li
cp
eclp
27.48 677.96 mo
567.48 677.96 li
567.48 575.06 li
27.48 575.06 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
grestore
gsave
27.48 677.94 mo
567.48 677.94 li
567.48 780.9 li
27.48 780.9 li
cp
eclp
27.48 780.9 mo
567.48 780.9 li
567.48 677.9 li
27.48 677.9 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
grestore
KYNPNQ+Calibri*1 [12 0 0 -12 0 0 ]msf
553.98 774 mo
(1)sh
gsave
65.28 246.6 mo
529.74 246.6 li
529.74 333.66 li
65.28 333.66 li
cp
eclp
65.28 333.68 mo
529.74 333.68 li
529.74 246.6 li
65.28 246.6 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
grestore
366.9 289.56 mo
366.84 299.82 li
366.18 299.82 li
366.24 289.56 li
cp
369.06 296.1 mo
366.48 300.42 li
363.96 296.1 li
363.96 295.86 li
364.08 295.62 li
364.38 295.62 li
364.56 295.74 li
366.78 299.64 li
366.24 299.64 li
368.52 295.8 li
368.7 295.62 li
368.94 295.68 li
369.12 295.86 li
369.06 296.1 li
.92929 .879301 .889677 .799283 cmyk
f
366.96 315.6 mo
366.66 321.6 li
366 321.54 li
366.3 315.54 li
cp
369.06 318 mo
366.3 322.2 li
364.02 317.76 li
363.96 317.52 li
364.14 317.28 li
364.38 317.28 li
364.56 317.46 li
366.6 321.42 li
366.06 321.42 li
368.52 317.64 li
368.7 317.52 li
368.94 317.58 li
369.12 317.76 li
369.06 318 li
f
75.9 267.06 mo
75.9 266.76 li
77.636 257.8 119.124 256.128 124.38 256.32 cv
127.2 256.32 li
127.32 256.56 li
127.02 256.32 li
129.6 256.32 li
194.28 257.528 194.275 276.635 129.6 277.74 cv
127.02 277.8 li
127.26 277.32 li
127.5 277.8 li
124.38 277.8 li
118.381 277.919 78.837 276.38 75.96 267.66 cv
75.9 267.36 li
cp
76.56 267.3 mo
76.5 267.24 li
76.56 267.54 li
76.56 267.48 li
76.68 267.78 li
76.62 267.72 li
76.74 268.02 li
76.74 267.96 li
76.86 268.2 li
77.607 269.375 79.553 270.56 80.82 271.02 cv
81.36 271.26 li
81.3 271.26 li
81.9 271.5 li
81.84 271.5 li
82.44 271.74 li
95.017 276.013 111.205 276.881 124.38 277.14 cv
127.02 277.14 li
126.72 277.62 li
126.48 277.14 li
129.6 277.14 li
138.084 276.954 146.941 276.559 155.34 275.34 cv
157.38 275.1 li
157.32 275.1 li
159.24 274.74 li
163.761 273.954 168.947 272.98 173.16 271.02 cv
173.7 270.84 li
173.64 270.84 li
174.12 270.6 li
174.96 270.12 li
176.04 269.4 li
175.98 269.4 li
176.58 268.92 li
176.52 268.92 li
177 268.44 li
176.94 268.44 li
177.12 268.2 li
177.24 267.96 li
177.24 268.02 li
177.36 267.72 li
177.36 267.78 li
177.42 267.48 li
177.42 267.54 li
177.48 267.24 li
177.48 267.3 li
177.48 266.82 li
177.42 266.58 li
177.42 266.64 li
177.36 266.34 li
177.36 266.4 li
177.24 266.1 li
177.24 266.16 li
177.12 265.92 li
176.94 265.68 li
177 265.68 li
176.52 265.2 li
176.58 265.2 li
176.28 264.96 li
175.588 264.368 174.915 263.957 174.12 263.52 cv
173.64 263.28 li
173.7 263.28 li
173.16 263.04 li
173.16 263.1 li
172.68 262.86 li
171.057 262.125 169.327 261.68 167.64 261.12 cv
166.86 260.94 li
166.92 260.94 li
166.14 260.76 li
164.52 260.4 li
162.84 260.04 li
161.1 259.68 li
159.24 259.32 li
157.32 259.02 li
157.38 259.02 li
155.34 258.78 li
146.818 257.555 138.204 257.092 129.6 256.98 cv
126.78 256.98 li
126.66 256.74 li
127.02 256.98 li
124.38 256.98 li
119.34 257.051 114.589 257.225 109.56 257.58 cv
107.22 257.82 li
107.28 257.82 li
105 258 li
97.516 258.747 89.576 259.889 82.44 262.38 cv
81.84 262.62 li
81.9 262.62 li
81.3 262.86 li
81.36 262.86 li
80.82 263.1 li
80.82 263.04 li
80.34 263.28 li
79.11 263.894 77.636 264.747 76.86 265.92 cv
76.74 266.16 li
76.74 266.1 li
76.62 266.4 li
76.68 266.34 li
76.56 266.64 li
76.56 266.58 li
76.5 266.88 li
76.56 266.82 li
76.5 267.06 li
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: QJJAAA+Calibri-Italic Initial
ct_T42Dict begin
-0.473 -0.191 1.211 0.949
 256 array 0 1 255 {1 index exch /.notdef put} for  /QJJAAA+Calibri-Italic
Type42DictBegin
[<00010000000c000c000c000c4f532f326c6b7284000000cc000000606376
7420b49aceb90000012c0000050e6670676da1ea42ac0000063c00000913
676c7966f7d4338b000048d800001d2868656164e22cc15500000f500000
0036686865610f48129000000f8800000024686d7478267a5c9b00000fac
000011846c6f63610047095e00002130000011886d6178700ecd03040000
32b8000000206e616d65c76bcfb4000032d8000005007072657065f2c424
000037d8000010fd67646972000000000000000000000000000304050190
00050008059905330000011e05990533000003d0008602000800020f0502
0202040a0204a00002ef4000207b00000000000000004d53202000010020
fb040600fe0001c4079e02262000009f0000000003bd0511000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
00000000000000000000004a004c00540055005600570059004f004e004f
00500051004d005d005f00610063006400650066006700680069006a006b
006c006d006e006d0066006f007000710072007300740075007600710074
00700071007200740075007600780079007a007d00780079007a007b007c
007d0079007c007a007c007d007e007f00800081007e007f008000810082
007f008000810082007e007f008000810082008300850083008400850086
008700880089008600880089008300840085008600870088008900830084
00850086008700880089008a008b008c008d008e008f008a008b008c008d
008f008a008b008c008d008e008f008a008b008c008d008e008f00900095
00900091009200930094009500980099009a009b009c0090009100930096
0097009b009c009f00a20094009600900091009200930094009500960097
00980099009a009b009c009d009e009f00a000a100a200a300a600a70090
00910092009300940095009600980099009f00bc00bd00c100c600be00bf
00bf00c100c200b900be00c200df00e000e400e700e800e9012b01360147
00f200f400cf00640066006a006c006d0070006c006d0069006c00670073
00740075007600770078007a007b007c007d007e00810084008500860087
00880089008a0076007a007b007c007e007f008000820083008400870088
0089008a0077008500870079008200840085008600870088008a0079007a
007c007d007e0081008300840086008700880089008b008c008d008e008f
00900091009200940095008b008c008d008e008f0093009400950093008b
008c008d008e00900091009200930094008c008d008e008f009000910092
009300940095009700980099009a009b009c0096009700980099009a009b
009c009a009c009600980099009a009b009c00960097009b009c009d009e
009f00a000a100a2009d009e009f00a000a100a200a1009d009e009f00a0
00a100a2009d009e009f00a000a100a200a300a500a300a400a500a600a7
00a300a500a300a400a500a600a700a300a400a500a600a700a800a900a8
00a900aa00ab00ac00a800ab00ac00a800a900aa00ab00ac00a800a900aa
00ab00ac00ad00ae00af00b000b100b300b500b600b700b800af00b000b1
00b300b400b700ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700ba00bb00bc00bd
00bf00c000c100c200c300c400ba00bb00bf00c300b900ba00bb00bc00bf
00c100c200c300ba00bc00bf00c200c700c900cb00cc00cd00c500c600c7
00c600c700cb00ce00cf00d100d200db00dc00de00df00e000e400d600e8
00e90123012b00d000d1042600d8050e010503c000c2024e0078042600d7
02990092000040465f5e5d5c5b5a59585554535251504f4e4d4c4b4a4948
47464544434241403f3e3d3c3b3a39383736352f2e2d2c2826252423221f
181411100f0d0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120
b04660b004262348482d2c4523462361b0206020b02661b02061b0042623
48482d2c45234660b0406120b06660b004262348482d2c4523462361b040
6020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd
442320b8015a51582320b08d44235920b0ed51582320b04d44235920b004
2651582320b00d44235921212d2c20204518684420b001602045b0467668
8a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b028
2370b101283e01b0282370b10228453ab10200080d2d2c2045b003254561
64b050515845441b2121592d2c2045b0004360442d2c01b00643b0074365
0a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58
b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c4565b02c
234445b02b23442d2c4b525845441b2121592d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c00b00743b006430b2d2c21210c6423648bb84000622d2c21b08051580c
6423648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648b
b81555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2c
4523456023456023456023766818b08062202d2cb00426b00426b00425b0
042545234520b003266062636820b0032661658a2344442d2c2045b00054
58b040442045b04061441b2121592d2c45b1302f4523456160b001606944
2d2c4b5158b02f2370b01423421b2121592d2c4b515820b0032545695358
441b2121591b2121592d2c45b01443b0006063b0016069442d2cb02f4544
2d2c452320458a60442d2c45234560442d2c4b235158b90033ffe0b13420
1bb3330034005944442d2cb0164358b00326458a586466b01f601b64b020
606620581b21b04059b001615923586559b02923442310b029e01b212121
2121592d2cb0164358b004254564b020606620581b21b04059b001612358
6559b0292344b00425b00725082058021b0359b0052510b004252046b004
2523423cb0072510b006252046b00425b0016023423c2058011b0059b005
2510b00425b029e0b0072510b00625b029e0b00425b00725082058021b03
59b00425b003254348b00625b00325b0016043481b215921212121212121
2d2cb0164358b004254564b020606620581b21b04059b0016123581b6559
b0292344b00525b00825082058021b0359b0042510b005252046b0042523
423cb00425b0072508b0072510b006252046b00425b0016023423c205801
1b0059b0042510b00525b029e0b02920456544b0072510b00625b029e0b0
0525b00825082058021b0359b00525b003254348b00425b0072508b00625
b00325b0016043481b2159212121212121212d2c02b00425202046b00425
2342b0052508b003254548212121212d2c02b0032520b0042508b0022543
482121212d2c452320451820b00050205823652359236820b040505821b0
4059235865598a60442d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2cb00021
4b5458381b2121592d2cb002435458b0462b1b21212121592d2cb0024354
58b0472b1b212121592d2cb002435458b0482b1b21212121592d2cb00243
5458b0492b1b212121592d2c208a08234b538a4b515a5823381b2121592d
2c0020b200400325b0062649618b3812342d2c0146234660234661232010
20468a61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c
1b21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b123
018851b1400188535a58b910000020885458b202010243604259b1240188
5158b920000040885458b2020202436042b12401885458b2022002436042
004b014b5258b2020802436042591bb940000080885458b2020402436042
59b94000008063b80100885458b202080243604259b94000010063b80200
885458b202100243604259b94000020063b80400885458b2024002436042
59595959592d2c451868234b51582320452064b04050587c59688a605944
2d2cb00016b00225b0022501b001233e00b002233eb10102060cb00a2365
42b00b234201b001233f00b002233fb10102060cb006236542b0072342b0
0116012d2c20b82000628a6023622d2cb0072558001b0159b0042510b003
25b0022520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920
b005254ab0042547b004254760b0062547b0806361b00225b0005558b003
25b00725496359b0082558001b0159b00425b0062549b009255cb009255a
58b0092b59b0072546b0806361b0032520b0005558631b2159612320b000
5558b080631b21b08059b0592bb006255c586959b00425202010b0004823
3ab0062658001b0159b0052658b003252f598a12233221212d2cb00625b0
0a2587b00625b009254ab0005358b00625b00a251bb00925b0072559b002
25b00225070cb005256323b00625636020b94000040063535821b00426b0
0426b00a1bb94000040063655158b0042665b0042665b00a1bb00426b004
26b000b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525
b0052507595920b0005558b00525b0052587b00725b007250bb0092510b0
0b25b0092620b8ffff545821cd1bed59b00525b0052507b00825b00b2549
23b00625b0062587b00a2510b00b25c15920b00051b800522378b00161b0
0225b00725b0072507b00a25b00d254961b08062b00525b005250bb00a25
2338b00625b0062587b00825b008250bb00a2510b00b25c4b00625b00625
07b00925b00c2549b0032554b8ffa723792121212121212121212121212d
2c23b0005458b9400000001bb900004000598ab0005458b9400000001bb9
0000400059b05b2b2d2c08b0005458b9400000001bb900004000590db05b
2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb0
0426b00426080db00426b00426080db05b2b2d00000100000001051fbcbc
b91b5f0f3cf50019080000000000bbeb7ccc00000000c12af45afc31fe73
09b6079e000000090002000100000000000100000600fe0001c40a4efc31
fde109b60800019a0000000000000000000000000461040e000000000000
0000000001cf000004a1ffca04a1ffca04a1ffca04a1ffca04a1ffca04a1
ffca04a1ffca04a1ffca04a1ffca04a1ffca04a1ffca061bff74061bff74
045a0054042e0073042e0073042e0073042e0073042e0073042e007404ec
005804ec005804ff003f04ff003f03e8005803e8003303e8005803e80043
03e8003b03e8005403e8004d03e8005803e8005803e8005803ad0052050c
006e050c006e050c006e050c006e050c006e04fc005204fc005205400074
020400520204ff25020400160204ff390204ff2d0204ff4e0204ff4c0204
ff770204001b0204ff9d04920052028dffb8028dffa50428005204280052
035d0058035d005803620058035d005803700023045e005806d700520528
00520528005205280052052800520528005205040052053c0072053c0072
053c0072053c0072053c0072053c0072053c0072053c0072053c00720543
00260543002606ef00720422005204220051055000720458005204580052
0458003c04580052039e0004039e0004039efff6039e0001039e0004039e
000403e600a303e6001603e600a303e60094052200930522009305220093
052200930522009305220093052200930522009305220093052200930522
0093048a00c1071f00db071f00db071f00db071f00db071f00db0427ffd1
03e600bf03e6003b03e600bf03e6004d03e6006803bfffe803bfffe803bf
ffe803bfffe803f4ffb703f4ffb703f4ffb703f4ffb703f4ffb703f4ffb7
03f4ffb703f4ffb703f4ffb703f4ffb703f4ffb6055cff8b055cff8b0404
004903ab006903ab006903ab006903ab006903ab006903ab00690465004c
0465004c0477003d0477003d0380004d0380002d0380004d038000200380
001f0380002c03800026038000400380004d0380004d035000470482006b
0482006b0482006b0482006b0482006b0476004704760047049d005901ec
004701ecff4301ec001c01ecff4801ecff2701ecff5501ecff5201ecff71
01ec001101ecff8d041b0047023effb0023eff8003c9004703c9004702e0
004d02e0004d02e6004d02e0004d02f0002503d5004d0606004604790046
047900460479004604790046047900460466004704990060049900600499
006004990060049900600499006004990060049900600499006004ba0049
04ba00490606006203c2004703c2004504a2006003e7004703e7004703e7
004503e70047033f0002033f0002033ffff0033fffee033f0002033f0002
035900800359fff9035900740359007f0485007d0485007d0485007d0485
007d048500730485007d0485007d0485007d0485007d0485007d0485007d
03ed0095061e00a6061e00a6061e00a6061e00a6061e00a603ccffda037e
0086037e0011037e0086037e000a037e00180369fff10369fff10369fff1
0369fff1041d0051041d0051041d0051041d0051041d003a041d0051041d
0051041d0051041d0051041d0051041d00510609002f0609002f041d003d
0354004c0354004c0354003e0354003f0354004c0354004c0746004c06cc
004c05f1004c05f1004c041d005104700051046800510434005003d2004d
03d2004d03d2004d03d2004d03d2004d03d2004d03d2004d03d2004d03d2
004d03d2004d0271ff3d0684ff3d08beff3d04abff1f0683ff3d08bdff3d
043cff3d043cff3d043cff3d043cff3d044fff3d044fff3d044fff3d044f
ff3d043cff3d043cff3d0676ff3d0676ff3d0676ff3d0676ff3d0689ff3d
0689ff3d0689ff3d0689ff3d0676ff3d0676ff3d043cff3d043cff3d0677
ff3d0609ff3d0843ff3d043cff3d043cff3d0483ff3d043cff3d0676ff3d
04e4ff3d04e4ff3d050aff3d071fff3d041d0042041d0042041d0042041d
0042041d004203c4ffbd03c4ffbd03c4ffbd03c4ffbd03c4ffbd041d003f
041d003f042a004d01d6003f01d6ff3f01d6fff801d6ff5001d6ff1b01d6
ff6e01d6ff5101d6ff5e01d6ff8801d6003f03c0003f041b002601eaff3b
01eaff3b01eaff3b03a3003e03a3003e03a3003f01d6003f01d6002d021c
003f01d6ffb501fb004102fd003f0654003f041d003f041d003f041d003f
041d002b041d003f048dfff2041d003f041b004e041b004e041b004e041b
004e041b0030041b004e041b004e041b004e041b004e043c002f043c002f
0684004e041dfff8041dfff8041d005102be003f02be003f02beffea02be
ffff031d0009031d0009031dfff2031dfff1031d0009031d000905a50009
05a500090438ff2b01f1ff1a02ae007102c4007102ae006102bc002a04e6
007104750071047500710475007104750071047500710475007104750071
04750071047500710475007105130071074b007106d9007106d9007106d9
007106d9007106d9007106d9007106d9007106d9007106d9007106d90071
041d0070041d0050041d0070041d0070041d003d041d006b041d0066041d
0069041d0070041d0070041d00700391007c05b8008f05b8008f05b8008f
05b8008f05b8008f0377ffd0039400150394000103940015039400150394
00140329000503290005032900000329000503720071036100810378005a
02d800aa02d5009f024100a602d800aa02a100a801c1fff502d800a702da
009f016200a2016dffe9029700a0015e00a0044c00a002db00a002d600aa
02d7007602d700aa01f000a00230008301e300bb02db00c1028500c303ef
00ce027c005e0286008f0238007d0254000002750000029400000000fd08
0000fce80256000002750000029400000000fd080000fce803290000035f
0000039400000000fc9f0000fc6703290000035f0000039400000000fc9d
0000fc6901ff0000039a000003a2000003a800000000fc650000fc600324
000002f5000003460000036700000000fca00000fc7e0327000003490000
036a00000000fc9d0000fc7d030c0000030f0000031100000000fcac0000
fca9029100000298000002a000000000fce90000fce202cf000002c20000
02b5000003c1000003e10000040000000000fc520000fc3101c9000001d6
000001ce000001ce00000000fd4d0000fd4d0275ffe90000fcdf027ffffa
0000fcec01f7ffe70231000004a1ffca04a1ff97045a0054035300520484
ffe803e8005803e8fec503bfffe804fc005204fcfeb60540007202040052
0204feba0204ff4e042800520495ffcc06d700520528005203ef0000053c
0072053cff0604fc00520422005203abfff403e600a303e600bd03e6fe8b
03e60054061400000427ffd1060000bf0550000c0550fef503f4ffb703f4
ff790404004902fb004703c9ffcf0380004d0380fed10369fff104760047
0476fec904b1006001ec004701ecfebd01ecff5403c9004703e1ffb90606
0046047900460387000b049900600499ff3b0478004603c20047035bfff8
03590080038300830383fea3038300100552000003ccffda0558009b04b1
001204b1ff5404850051048500510439006b043afff70391007804300000
03a5002f03a5002f02c800340434003f0434003f047800400441006c0232
00650232ffdd0232ff7a0232feef03a3003f03b4ffbd044efff80397007d
0302003303030033041b004e041b004e046c00050412ffd30441004b0349
00500319005204550075045500750455006904550009053b004c0536004a
0369ff7605a9007c0592005605920056028900000000fd0a03f400000000
fc36020500f202050137020501060224ffb101ff00c501ffffed04a1ffca
044d0059045a00540370005203700052037600520527ff6903e8005803e8
003303e800540668ffff03ca000305220052052200520522005202040052
0204ff4e028dffb8045800520458005204e3ffae06faffae06d7005204fc
005207030052053c0072053c007204f9005204220052042e0073039e0004
03e600a3043800490438004904b700c2059400000427ffd1051c005404f5
0054047200be06f20054071e005404eb00a106180058044000580462001e
04610070070900520471fffb04ff00a004f200a10504000003f4ffb703ee
004c040400490314004703140047032700470480ff770380004d0380002d
0380002c0578ffeb0380000e04890047048900470489004701ec004701ec
ff55023effb003c8004603c800460432ffa9060600460476004704990060
049b0060046a004703c2004703ab0069033f000203590080039d003b039d
0000042f0094050a000003ccffda048e004a0469004a03fa009a0623004a
0645004a045f007a0583004903e8004903e4002603f00062062f004703ff
0000045f008104630082044d00000601ffa906320047041d005104430000
0430000003d5004a0349001f0349001f02d5003f0349001f04350050041d
004203d2004d03d2004d03d2004d064afff503620003041d0070041d0042
041d004f01d6003f01d6ff7001eaff3b03b6003e03b6003e0415ffbc0601
ffbc056900060437003f0628003f041b004e041f004e042a003f041d003f
041dfff80354004c031d00090654003f06360074039400150394fff103d2
007c05a3004d0377ffd004470070041d007003c000610636007406610074
044a00570554006503bb0066038b0009038d005105c4003f03cbffe5044b
004d042a004d04270067036e0000036e0000036e00000000fca50000fca5
029b00bb029b0051029b006d03b500fa03b5002203b5003f03de00e20260
009b02600056036400dd0361003001ffff950224ffb10224006d0205004a
0585004901ff00ec01ff007f01ff00ff01ff0092035900e9035900820359
00fc0359009501ffff950359ff9802b6007c02b6007902b6009602b60093
0419007f0419006e0419009904190088031aff7102dfff9a03af00e803fc
0108031300cc02df00c2027300480273006603fc000503fc001a073e00a5
073e00ba073e00a5073e00ba03fcff5e03fc00e4020500a8020500b9026d
0075026dffdb0274002b0274ffc5028400660284ffe40240006e0240ffea
024a002b024affe4026d0088026dffee0274003e0274ffd8028400790284
fff703fc00f603fc00dc03fc006503fc004504b000bf043d00a003fc0081
03fc009301c400f7033500f7057500000556000007f7000007270000073c
00000727001406ad00c906ad00c9040e00ed05a400d605ac008b02b60000
03fcffef04b3004b040e002c03fc0016040e001f0434001403fc00cb03fc
fff7040e000003fc006604190038040e004a03f30024039f001c03be0018
039f0005039f004a060c006c082d005203fc001a06e000470411ffff0494
005b02cb005e03ec001103ecffde0455ffcf03d7ffd90436007e03b2004a
0436003f04360005040e0040040e005f040e0020040efff4040effcd040e
ffed040e006a040e0077040e002e040efff90443005f028d005903810009
0373001203ac00040368001503b7005d0349005003b5002203bc0028039f
0045039f0055039f0010039f001b039f0014039f001b039f0050039f0084
039f0023039f00220494006a02cb008d03ec001103ec000d0428000f03d7
00080436007e03b200790436003f04360033040e004d040e005f040e0020
040e0023040e0018040e001d040e006a040e00a6040e002e040e00290321
00b901f800cc02b0008402ad008102db008302a6008502df00c8029100bd
02e1009f02df009f02ea00c502df00c502d000b401bc00cf01bc006f0321
000101f8001402b0ffcc02adffc902dbffcb02a6ffcd02df001002910005
02e1ffe702dfffe702ea000d02df000d02d0fffc01bc001701bcffb7029d
001101f500300252ffe60249ffdd024affd80246ffdf025100040238000c
0257ffe5024dffee029d009301f500b2025200680249005f024a005a0246
0061025100860238008e02570067024d007002b1fee50313fffe055ffffe
0569fffe0517fffe0569fffe052efffd0553fffd05c9005e05c9005e0567
004d05b7004d05a2004d05cd0063057d004c05a2004c052affd405b80061
084e00610581006307cd005903fc005903fc005f03fc003303fc003c03fc
004903fc004a03fc004703fc005703fc002203fc000303fc000303fc0003
03fc004e05e9002c0405004806d300880443005002edff7103fc00560484
ffe80550000c044efff8066500a10454ffbf0416006c073e009a073e0096
073e00c9073e00c9070e00af070e013a070e00af070e013a0a4e009a0638
009f04660028000000000000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000208000002080000
020800000208000002080000020800000208000002080000020800000208
000002080000020800000208000002080000020800000208000002080000
020800000208000002080000020800000208000002080000020800000208
000002080000020800000208000002080000020800000208000002080000
020800000208000002080000020800000208000002080000020800000208
000002080000020800000208000002080000020800000208000002080000
020800000208000002080000020800000208000002080000020800000208
000002080000020800000208000002080000020800000208000002080000
020800000208000002080000020800000208000002080000020800000208
000002080000020800000208000002080000020800000208000002080000
020800000208000002080000020800000208000002080000020800000208
000002080000020800000208000002080000020800000208000002080000
020800000208000002080000020800000208000002080000020800000208
000002080000020800000208000002080000020800000208000002080000
020800000208000002080000020800000208000002080000020800000208
000002080000020800000208000002080000020800000208000002080000
020800000208000002080000020800000208000002080000020800000208
000002080000020800000208000002080000020800000208000002080000
020800000208000002080000020800000208000002080000020800000208
000002080000020800000208000002080000020800000208000002080000
020800000208000002080000020800000208000002080000033e0000033e
0000033e0000033e0000033e0000033e0000033e0000033e0000033e0000
033e0000033e0000033e0000033e00000498000004980000049800000498
000004980000049800000498000004980000049800000498000004980000
0498000004980000049800000498000005c6000005c6000005c6000005c6
000005c6000005c6000005c6000005c6000005c6000005c6000007380000
073800000738000007380000073800000738000007380000073800000738
000007380000073800000738000007380000073800000738000007380000
073800000738000007380000073800000738000007380000073800000738
000007380000073800000738000007380000073800000738000007380000
073800000738000007380000073800000738000007380000073800000738
00000738000008ca000008ca000008ca000008ca000008ca000008ca0000
08ca000008ca000008ca000008ca000008ca000008ca000008ca000009b4
000009b4000009b4000009b4000009b4000009b4000009b4000009b40000
09b4000009b4000009b4000009b4000009b4000009b4000009b4000009b4
000009b4000009b400000a4400000a4400000a4400000a4400000a440000
0a4400000bea00000d1000000d1000000d1000000d1000000d1000000d10
00000d1000000d1000000d1000000d1000000d1000000d1000000d100000
0d1000000d1000000d1000000d1000000d1000000d1000000e5800000e58
00000e5800000f5a00000f5a00000f5a00000f5a00000f5a00000f5a0000
0f5a00000f5a00000f5a00000f5a00000f5a00000f5a00000f5a00000f5a
000010a2000010a2000010a2000010a2000010a2000010a2000010a20000
10a2000010a2000010a2000010a2000010a2000010a2000010a2000010a2
000010a2000010a2000010a2000010a2000010a2000010a2000010a20000
10a2000010a2000010a2000010a2000010a2000011c4000011c4000011c4
000011c4000011c4000011c4000011c4000011c4000011c4000011c40000
11c4000012ac000012ac000012ac000012ac000012ac000012ac000013c0
000014bc000014bc000014bc000014bc000014bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc000015bc000015bc000015bc000015bc000015bc
000015bc000015bc000015bc000015bc000015bc000015bc000015bc0000
15bc000015bc000015bc00001664000016cc000017c6000017c6000017c6
000017c6000017c6000017c6000017c6000017c6000017c6000017c60000
17c6000017c6000017c6000017c6000017c6000017c6000017c6000017c6
000017c6000017c6000017c6000017c6000017c6000017c6000017c60000
17c6000017c6000017c6000017c6000017c6000017c6000017c6000017c6
000017c6000017c6000017c6000017c6000017c6000017c6000017c60000
17c6000017c6000017c6000017c6000017c6000017c6000017c6000017c6
000017c6000017c6000017c6000017c6000017c6000017c6000017c60000
17c6000017c6000017c6000017c6000017c6000017c6000017c6000017c6
000017c6000017c6000017c6000017c6000017c6000017c6000017c60000
17c6000017c6000017c6000017c6000017c6000017c6000017c6000017c6
000017c6000017c6000017c6000017c6000017c6000017c6000017c60000
17c6000017c6000017c6000017c6000017c6000017c6000017c6000017c6
000017c6000017c6000017c6000017c6000017c6000017c6000017c60000
17c6000017c6000017c6000017c6000017c6000017c6000017c6000017c6
000017c6000017c6000017c6000017c6000017c6000017c6000017c60000
17c6000017c6000017c6000017c6000017c6000017c6000017c6000017c6
000017c6000017c6000017c6000017c6000017c6000017c6000017c60000
17c6000017c6000017c6000017c6000017c6000017c6000017c6000017c6
000017c6000017c6000017c6000017c6000017c6000017c6000017c60000
17c6000017c6000018ee00001a0600001b6400001d2800001d2800001d28
00001d2800001d2800001d2800001d2800001d2800001d2800001d280000
1d2800001d2800001d2800001d2800001d2800001d2800001d2800001d28
00001d2800001d2800001d2800001d2800001d2800001d2800001d280000
1d2800001d2800001d2800001d2800001d2800001d2800001d2800001d28
00001d2800001d2800001d2800001d2800001d2800001d2800001d280000
1d2800001d2800001d2800001d2800001d2800001d2800001d2800001d28
00001d2800001d2800001d2800001d2800001d2800001d2800001d280000
1d2800001d2800001d2800001d2800001d2800001d2800001d2800001d28
00001d2800001d2800001d2800001d2800001d2800001d2800001d280000
1d2800001d2800001d2800001d2800001d2800001d2800001d2800001d28
00001d2800001d2800001d2800001d2800001d2800001d2800001d280000
1d2800001d2800001d2800001d2800001d2800001d2800001d2800001d28
00001d2800001d2800001d2800001d2800001d2800001d2800001d280000
1d2800001d2800001d2800001d2800001d2800001d2800001d2800001d28
00001d2800001d2800001d2800001d2800001d2800001d28000100000461
00d4000700b0000700020010002f0060000009e9014e000400010000000e
00ae000000030000000000640000000000030000000700fa006400010000
000000000032015e00010000000000030015019000010000000000040015
01a50001000000000006001501ba0001000000000007007d01cf00030001
040900000064024c0003000104090001001c02b00003000104090002000e
02cc0003000104090003002a02da0003000104090004002a030400030001
04090006002a032e000300010409000700fa035800a90020003200300030
00360020004d006900630072006f0073006f0066007400200043006f0072
0070006f0072006100740069006f006e002e00200041006c006c00200052
00690067006800740073002000520065007300650072007600650064002e
00430061006c006900620072006900200069007300200065006900740068
006500720020006100200072006500670069007300740065007200650064
002000740072006100640065006d00610072006b0020006f007200200061
002000740072006100640065006d00610072006b0020006f00660020004d
006900630072006f0073006f0066007400200043006f00720070006f0072
006100740069006f006e00200069006e002000740068006500200055006e
0069007400650064002000530074006100740065007300200061006e0064
002f006f00720020006f007400680065007200200063006f0075006e0074
0072006900650073002ea92032303036204d6963726f736f667420436f72
706f726174696f6e2e20416c6c205269676874732052657365727665642e
43504c434b4e2b43616c696272692d4974616c696343504c434b4e2b4361
6c696272692d4974616c696343504c434b4e2b43616c696272692d497461
6c696343616c696272692069732065697468657220612072656769737465
7265642074726164656d61726b206f7220612074726164656d61726b206f
66204d6963726f736f667420436f72706f726174696f6e20696e20746865
20556e697465642053746174657320616e642f6f72206f7468657220636f
756e74726965732e00a9002000320030003000360020004d006900630072
006f0073006f0066007400200043006f00720070006f0072006100740069
006f006e002e00200041006c006c00200052006900670068007400730020
00520065007300650072007600650064002e00430050004c0043004b004e
002b00430061006c00690062007200690052006500670075006c00610072
00430050004c0043004b004e002b00430061006c0069006200720069002d
004900740061006c0069006300430050004c0043004b004e002b00430061
006c0069006200720069002d004900740061006c0069006300430050004c
0043004b004e002b00430061006c0069006200720069002d004900740061
006c0069006300430061006c006900620072006900200069007300200065
006900740068006500720020006100200072006500670069007300740065
007200650064002000740072006100640065006d00610072006b0020006f
007200200061002000740072006100640065006d00610072006b0020006f
00660020004d006900630072006f0073006f0066007400200043006f0072
0070006f0072006100740069006f006e00200069006e0020007400680065
00200055006e006900740065006400200053007400610074006500730020
0061006e0064002f006f00720020006f007400680065007200200063006f
0075006e00740072006900650073002eb10903b8027ab21e3e1fb80279b2
1e3e1fb80278b21e0b1fb80277b21e0b1fb80276b21e3a1fb80275b21e3a
1fb80274b21e3e1fb80273b21e3b1fb80272b21e3c1fb80271b21e3c1fb8
0270b21e3c1fb8026fb21e3d1fb8026eb21e3d1fb8026db21e3e1fb8026c
b21e3e1fb8026bb21d411fb8026ab21d411fb80269b21d421fb80268b21d
431fb80267b21d431fb80266b21d431fb80265b21d431fb80264b21d431f
b80263b21d411fb80262b21d421fb80261b21d421fb80260b21d431fb802
5fb21d431fb8025eb21c451fb8025db21c451fb8025cb21c451fb8025bb2
1c451fb8025ab21c451fb80259b21c451fb80258b21c451fb80257b21c45
1fb80256b21c451fb80255b21c451fb80254b21c451fb80252b21c451fb8
0251b21c451fb80250b21c451fb8024fb21c451fb8024eb21c441fb8024d
b21c451fb8024cb21c451fb8024bb21c451fb8024ab21c451fb80249b21c
451fb80248b21c451fb80247b21c451fb80246b21c451fb80245b21c451f
b80244b21b491fb80243b21b4a1fb80242b21b4a1fb80241b21b4a1fb802
40b21b4b1fb8023fb21b4b1fb8023eb21b4c1fb8023db21b4c1fb8023cb2
1b4c1fb8023bb21b4c1fb8023ab21b4c1fb80253b21b4c1fb80239b21b49
1fb80238b21b491fb80237b21b4a1fb80236b21b4a1fb80235b21b4a1fb8
0234b21b4b1fb80233b21b4b1fb80232b21b4c1fb80231b21b4c1fb80230
b21b4c1fb8022fb21b4c1fb8022eb21b4c1fb8022db21b491fb8022cb21b
4a1fb8022bb21b4b1fb8022ab21b4c1fb80229b21b4c1fb80228b21b4c1f
b80227b21b491fb80226b21b491fb80225b21b4a1fb80224b21b4a1fb802
23b21b4b1fb80222b21b4c1fb80221b21b4c1fb80220b21b4c1fb8021fb2
1b4c1fb8021eb21b4c1fb8021db21a4e1fb8021cb21a4e1fb8021bb21a4f
1fb8021ab21a4f1fb80219b21a4f1fb80218b21a4e1fb80217b21a4e1fb8
0216b21a4f1fb80215b21a4f1fb80214b21a4f1fb80213b21a4e1fb80212
b21a4e1fb80211b21a4f1fb80210b21a4e1fb8020fb21a4e1fb8020eb21a
4f1fb8020db21a4f1fb8020cb21a4f1fb8020bb21a4f1fb8020ab21a4f1f
b80209b219501fb80208b219511fb80207b219511fb80206b219511fb802
05b219511fb80204b219501fb80203b219511fb80202b219511fb80201b2
19511fb80200b219511fb801ffb219511fb801feb219511fb801fdb21950
1fb801fcb219511fb801fbb219511fb801fab219511fb801f9b219511fb8
01f8b219511fb801f7b219511fb801f6b218531fb801f5b218531fb801f4
b218541fb801f3b218541fb801f2b218541fb801f1b218541fb801f0b218
531fb801efb218531fb801eeb218541fb801edb218541fb801ecb218541f
b801ebb218541fb801eab218531fb801e9b218531fb801e8b218531fb801
e7b218541fb801e6b218541fb801e5b218541fb801e4b218541fb801e3b2
18531fb801e2b218531fb801e1b218541fb801e0b218541fb801dfb21854
1fb801deb218541fb801ddb217561fb801dcb217561fb801dbb217571fb8
01dab217571fb801d9b217561fb801d8b217561fb801d7b217571fb801d6
b217571fb801d5b217571fb801d4b217571fb801d3b217561fb801d2b217
571fb801d1b217561fb801d0b217561fb801cfb217571fb801ceb217571f
b801cdb217571fb801ccb217571fb801cbb217571fb801cab217561fb801
c9b217561fb801c8b217571fb801c7b217571fb801c6b217571fb801c5b2
17571fb801c4b2163e1fb801c3b2163f1fb801c2b2163f1fb801c1b2165b
1fb801c0b2165b1fb801bfb2165b1fb801beb2165b1fb801bdb2165b1fb8
01bcb2165b1fb801bbb2165b1fb801bab2163f1fb801b9b2163f1fb801b8
b2165b1fb801b7b2165b1fb801b6b2165b1fb801b5b2165b1fb801b4b216
5b1fb801b3b2165b1fb801b2b2165b1fb801b1b2163f1fb801b0b2163e1f
b801afb2163f1fb801aeb2163f1fb801adb2165b1fb801acb2165b1fb801
abb2165b1fb801aab2165b1fb801a9b2165b1fb801a8b2163e1fb801a7b2
163f1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb801a3b2165b
1fb801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019fb2165b1fb8
019eb215621fb8019db215621fb8019cb215631fb8019bb215641fb8019a
b215651fb80199b215661fb80198b215661fb80197b215661fb80196b215
661fb80195b215661fb80194b215661fb80193b215661fb80192b215611f
b80191b215621fb80190b215631fb8018fb215641fb8018eb215641fb801
8db215651fb8018cb215661fb8018bb215661fb8018ab215631fb80189b2
15641fb80188b215551fb80187b215611fb80186b215621fb80185b21562
1fb80184b215631fb80183b215651fb80182b215661fb80181b215661fb8
0180b215661fb8017fb215661fb8017eb215661fb8017db215661fb8017c
b215661fb8017bb215661fb8017ab215451fb80179b215611fb80178b215
621fb80177b215621fb80176b215631fb80175b215641fb80174b215641f
b80173b215651fb80172b215661fb80171b215661fb80170b215661fb801
6fb215661fb8016eb215661fb8016db215661fb8016cb215661fb8016bb2
15551fb8016ab215451fb80169b215451fb80168b215361fb80167b21536
1fb80166b214821fb80165b214561fb80164b2147f1fb80163b214551fb8
0162b214561fb80161b214401fb80160b214551fb8015fb214561fb8015e
b2147e1fb8015db214831fb8015cb214851fb8015bb2133d1fb8015ab213
1e1fb80159b2131e1fb80158b2130a1fb80157b2130a1fb80156b2130b1f
b80155b2133a1fb80154b2133a1fb80153b2133a1fb80152b2133b1fb801
51b2133c1fb80150b2133c1fb8014fb212451fb8014eb212461fb8014db2
12461fb8014cb212451fb8014bb212451fb8014ab212461fb80149b21246
1fb80148b212461fb80147b212441fb80146b212451fb80145b212461fb8
0144b212461fb80143b211471fb80142b211571fb80141b211581fb80140
b211591fb8013fb2115a1fb8013eb2115a1fb8013db2115b1fb8013cb211
5b1fb8013bb2115b1fb8013ab2115b1fb80139b2112b1fb80138b2112c1f
b80137b211391fb80136b211391fb80135b211461fb80134b211471fb801
33b211471fb80132b211551fb80131b211551fb80130b211561fb8012fb2
11561fb8012eb211571fb8012db211571fb8012cb211581fb8012bb21159
1fb8012ab211591fb80129b2115a1fb80128b2115a1fb80127b2115b1fb8
0126b2115b1fb80125b2115b1fb80124b2115b1fb80123b211591fb80122
b2115a1fb80121b211391fb80120b211471fb8011fb211561fb8011eb211
561fb8011db211591fb8011cb211591fb8011bb2115b1fb8011ab2115b1f
b80119b2115b1fb80118b211561fb80117b211561fb80116b211571fb801
15b211571fb80114b211581fb80113b2115a1fb80112b2115a1fb80111b2
115b1fb80110b2115b1fb8010fb2115b1fb8010eb2115b1fb8010db2115a
1fb8010cb2115b1fb8010bb2105d1fb8010ab2105e1fb80109b2105f1fb8
0108b2105f1fb80107b2105f1fb80106b2105f1fb80105b2105d1fb80104
b2105e1fb80103b2105f1fb80102b2105f1fb80101b2105f1fb8010040ff
105f1fff105d1ffe105f1ffd105f1ffc105f1ffb105f1ffa105d1ff9105e
1ff8105f1ff7105f1ff6105f1ff5105f1ff40f621ff30f621ff20f631ff1
0f641ff00f641fef0f641fee0f641fed0f621fec0f621feb0f631fea0f64
1fe90f641fe80f641fe70f641fe60f621fe50f621fe40f641fe30f621fe2
0f621fe10f631fe00f641fdf0f641fde0f641fdd0f641fdc0f641fdb0f64
1fda0e671fd90e681fd80e681fd70e681fd60e681fd50e671fd40e681fd3
0e681fd20e681fd10e671fd00e681fcf0e681fce0e681fcd0e681fcc0e68
1fcb0e681fca0e681fc90e681fc80d6b1fc70d6c1fc60d2a1fc50d6c1fc4
0d2c1fc30d6b1fc20d6c1fc10d6d1f40ffc00d6a1fbf0d691fbe0d681fbd
0d6b1fbc0d311fbb0d311fba0d311fb90c711fb80c721fb70c731fb60c74
1fb50c741fb40c741fb30c731fb20c741fb10d311fb00d311faf0d311fae
0d311fad0d311fac0d311fab0d311faa0d311fa90b7e1fa80b7a1fa70b79
1fa60b7a1fa50b7c1fa40b7d1fa30b7e1fa20b7e1fa10b7e1fa00b7e1f9f
0b7e1f9e0b7e1f9d0b7e1f9c0b7e1f9b0b7e1f9a0b2d1f990b2d1f980aa7
1f970aa51f960aa71f950aa71f940aa71f930aa71f920a681f910a821f90
0a9b1f8f0a9d1f8e0a9f1f8d0aa71f8c0aa71f8503251f8403381f830138
1f8255805581ab80557f557d557eab7d550b7d010b7d1b7d4b7d7b7dab7d
db7d404d060a7c557a557bab7a557955775578ab775576ab755504751475
747503f47501ab750144750130750102007510752075030c7455725573ab
7255007250728072b072043bb072e072020072010ab8ffc0b3721b1e46b8
ffc0407c720d104671556f5570ab6f556e666d556a03251f6938675568ab
67556638645565ab645563386255613860555f385d555eab5d555c385a55
5bab5a55593858555703251f5638545555ab54555338515552ab51554f38
4e554e03251f4d384b554cab4b554a38485549ab4855473846554503381f
001c101c201c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04
001bb01bc01b03120f1a1f1a02290f1901434f19016f197f198f19030f18
cf18024018292c460f17cf17df17ef1704134017292e4600161016201603
15b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d
162326460f15010f151f1502451f15010011e011f0110315bf10cf10020f
0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f
0d1f0d020f0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b
02553f0b4f0b02400b3f4346400b2d304600030120010100011001200103
08b8ffc0b401151f4603bc01000100000500010190b154532b2b4bb807ff
524bb009505bb00188b02553b00188b040515ab00688b000555a5b58b101
018e59b101024354b0144b515a58b101018e59858d8d001d424bb01d5358
b203a0a01d42594bb0805358b20340401d42594bb0ff5358b20300001d42
592b5e7375732b2b745e732b2b5e73742b73742b7374745e7301755e7374
2b2b2b2b5e732b5e732b7374755e735e735e73755e732b5e73002b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e
732b2b5e735f73737373742b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b185f5e00000000>
[7465 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 5732 856 <0001004afff7012a00e00017001fbc00000272000c00130155b2074c28ba
027f028000582b2b3fed012fed313025140e0423222e0235343e0433321e
02012a050a0f182c221c241408050b0f1729261d231407990e262822180c
08131b1110272621170d0a131a00>QJJAAA+Calibri-Italic AddT42Char 
1 5564 855 <0002006dfff701d70395001300270030bf0000026c000a0014026d001e00
230153b2194c05b80154b20f4828ba027f028000582b2b3fed3fed012fed
d4ed3130010e0323222e02373e0333321e02030e032322262634373e0333
321e0201d006131d2b1f1e2613010706121c2b1f1e2714019205131e2b1f
1f26130606121d2a1e202712020320202c1b0c0c1b2c20212d1b0c0c1b2d
fd29202c1b0c0a1a2d22202d1b0c0c1b2d00>QJJAAA+Calibri-Italic AddT42Char 
1 520 258 <00020051ffed03e103ca0026003b008dba027f028000582bb10102435558
b3091d081eb801afb42627263b08b801aeb7000f260113032631b8021e40
171300093b271d26060321492af91a4a36f8400e4d034c282b183f3f1a4d
ed3fed3f121739012fedd45f5e5ddded33113310ed11393931301b401600
093b271d26060321492af91a4a36f8400e4d034c282b183f3f1a4ded3fed
3f12173931305925060623222e0237370e0323222e0235343e0433321617
37363633321e020707262623220e0415141e0233323e0237032c04242a14
1a100603210d445d723b50693e17152f4b6a8c59597f3213042628141b10
0401d32f6d44365743311f0f0b1f362b376f604a1219110e04070b09aa20
4c402a385c743d388e948c6f43483f5b100e03080c07ec454533546b726e
2c234539233d6c925800>QJJAAA+Calibri-Italic AddT42Char 
1 1176 286 <0002004dffed039d03ca002e003c0087ba027f028000582bb10102435558
b62a323706040009b8020e400923110c1e031414232fb8020d4015002306
be37372a1e11110c32d12a4a0cdf401e4d282b183f1a4ded3fed11392f11
12392fed012fd4ed12392f173910ed11173931301b401306be37372a1e11
110c32d12a4a0cdf401e4d282b183f1a4ded3fed11392f1112392fed3130
5901140e022323060615141633323e0233321615140e02070e0323222e02
35343e0433321e0207342623220e020733323e02039d4088d4946a070563
6f40664b3009090904080d080c3d5464325986592c193656779c6254754b
22a9504a41644d371166698d552302e5456e4e2a213e1b646a1316130d0c
0a1c1d1a090c17130c28537c5441959286663e2a425137333f2d4c65381a
2d3c>QJJAAA+Calibri-Italic AddT42Char 
1 1478 296 <0001ff3dfe93033105780055008eba027f028000582bb10102435558b312
1e111fbb01e5003b001101e54023493c4840493b4049161649403b04002a
0ce34e471e3ce33b1f2412484836e340244f282b183f1a4ded3fc4123939
fdc43fed012fc417392f2f2f2f1112393910ed10ed11393931301b40130c
e34e471e3ce33b1f2412484836e340244f282b183f1a4ded3fc4123939fd
c43fed31305901140e0423222e0223220e02070733321615140e04232303
0e0323222627262635343e0433321e0233323e02371323222635343e0433
33373e0333321e021716160331020306080a0607151c26172b3d2c1e0b11
c90b0d0406090b0e07caab113a546e452d39070404030406080a07070d0f
15102a3d2b1d0ca4800a0b0205080c0d0a7e19103c556f431630291f0606
06053704111517140c0809081a3754395a0f110b181715100afcac547b51
270e06050c0a04131517140c0303031a37543b03320d1208171816120b7d
527b502705090c060512>QJJAAA+Calibri-Italic AddT42Char 
1 2628 373 <0001003ffffa05e703ca005b00a7ba027f028000582bb101024355584039
442d2d2e39171622214e225b005b0b000a0113030a38220b534a1128f940
494a382e21170a00162d0b225b4e44390e333e49334c1c4c054c282b183f
3f3f3f1217393f1a4dfdc43f012f2f2fc45f5e5d113332111239c4113332
c63332113331301b4021534a1128f940494a382e21170a00162d0b225b4e
44390e333e49334c1c4c054c282b183f3f3f3f1217393f1a4dfdc43f3130
59250e0323222e023713363635342623220e0207030e0323222e02371336
3635342623220e0207030e0323222e0237133e0333321e0207073e033332
1e02173e0333321e02151406070567010a152118181f1106026f0507313d
326b604a1150020a152118181f1006016f0705323c336a604a1150020a14
2118191f110502b50109131d14151b0f0401220f455c6d393c56371a0314
465c6c38435a3818080719080b080404080b08022c1d341a404c3d6b9356
fe6e080b080404080b08022c1e3a193d493d6b9356fe6e080b080404080b
080385070c080303080c07ac224c402a21394f2f234c3f2a264258342344
2400>QJJAAA+Calibri-Italic AddT42Char 
1 3050 374 <0001003ffffa03b003ca003a007bba027f028000582bb101024355584026
311a1a1b26040e03000f0114030f0e2515f940364a251b0e041a0f312608
202b49204c094c282b183f3f3f1217393f1a4ded012fc4c45f5e5d321133
c63332113331301b401615f940364a251b0e041a0f312608202b49204c09
4c282b183f3f3f1217393f1a4ded31305901140607030e0323222e023713
363635342623220e0207030e0323222e0237133e0333321e0207073e0333
321e0203b00807710209152019181f1105016f0705343d356f5f4b115002
0a142118191f110502b50109131d14151b0f0401220f445e713d435a3818
02d6234424fdce080b080404080b08022c1f3a163d4b3d6b9356fe6e080b
080404080b080385070c080303080c07ac224c402a294358>QJJAAA+Calibri-Italic AddT42Char 
1 3344 393 <0002fff8fe9403d003ca002a003f0092ba027f028000582bb10102435558
400d2135360c0d350d35180d171800b8021e401c2b170c363521040730f9
264a170d182004121b49124f39f840074d282b183f1a4ded3f3f1217393f
ed121739012fd4ed2f11331133107d870ec4c411013331301b401a0c3635
21040730f9264a170d182004121b49124f39f840074d282b183f1a4ded3f
3f1217393fed12173931305901140e0423222e0227030e0323222e023713
363633321e0207073e0333321e0207342e0223220e020707161633323e04
03d016304b6a8b582d4a3e3416550209142119171f120501fd02242a151a
100401220e435d723b4c67401cad0f2135273670604b11212f6c44355743
31210f02843a91948b6c4112202b1afe50080c080404080c0804ea100e03
070c08ab214b412a3457774f2b48341c3c6c9357a5464532546a7270>QJJAAA+Calibri-Italic AddT42Char 
1 3930 410 <00010071ffef02c504ad0045008aba027f028000582bb101024355584029
362c2b372b42080941094137092b2b30371737170030424837413c082ce3
092b2136480ff840214d282b183f1a4ded3f123939ed32cd39393f012fcd
39392f2f123911331133107d87c4c41087c4c431301b4013424837413c08
2ce3092b2136480ff840214d282b183f1a4ded3f123939ed32cd39393f31
305901140e04232303060615141633323e0233321615140e02070e032322
2e0235343e02371323222635343e023333373e0333321e02070733321602
c502060a0b0e09e66504062b301b281d1608080905080c0708202a2f1738
52381b02050503657d0b0c060c130d7e2b010b142118181f1105012be60f
0a039309151616110afe0a153411332f090a090b0f0d1f1e1807070e0b06
18334d360c1d20200e01fa0d130e252016d6070c090404090c07d616>QJJAAA+Calibri-Italic AddT42Char 
1 5056 455 <00010015fe9403a303bc00300068ba027f028000582bb10102435558b323
141329bb02100000002201fdb318180009b80223400e40132e492308141d
49144b0e4f282b183f3f3f1239393f012f1a4dedc4392fed10ed11393931
301b400c2e492308141d49144b0e4f282b183f3f3f1239393f3130590114
06070e0307010e032322262636371303262635343e0233321e021713333e
03373e0333321603a30405214e688b60fefd06121a25191b2312020bf495
0202071421181b1f11070175023e6454471f020b15241b2d1e03a40b170a
5bc5d7ea81fe9f080c0904050c140e0139036f0c14070b0f090303070e0a
fd2257b4b9bd61080b08030c>QJJAAA+Calibri-Italic AddT42Char 
1 0 0 <00050000fe7303da050e00030007003b00550056004fb52d162d16083c41
0a01ed00490007016400020020018c000800010164401204022537060351
1b0d117051015144070254003fdddedd5ddeddcd3fdddecd012fddedd6ed
10fdd6ed1239392f2f3130011121110111211101140e020707060623222e
02373736363333323e0235342e0223220e0223222635343e02373e033332
1e0201140e0207060623222e0235343e0237363633321e020103dafc5b03
4ffd06027b1f456e4e24021f1b0e140c050120051f17083d4f2e130f2135
2828402f1f070a060205080608293a4422445e3a1afeb503070b070a2016
161a0e0504070c0809201913190e04fe46050efaf2050efb43046cfb9403
313467523605980a0802040606bc1b17253b4621192b20130f13100c0e05
131612060713120b263d4afd8b08171a17070a0a070c100a091818160809
0a060c10fd38>QJJAAA+Calibri-Italic AddT42Char 
QJJAAA+Calibri-Italic /CharStrings get begin
/period 856 def
/colon 855 def
/a 258 def
/e 286 def
/f 296 def
/m 373 def
/n 374 def
/p 393 def
/t 410 def
/y 455 def
end
QJJAAA+Calibri-Italic /Encoding get
dup 46 /period put
dup 58 /colon put
dup 97 /a put
dup 101 /e put
dup 102 /f put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 116 /t put
dup 121 /y put
pop
end
%ADOEndSubsetFont
/KYNPNS+Calibri-Italic /QJJAAA+Calibri-Italic findfont ct_VMDictPut
/KYNPNS+Calibri-Italic*1 
[46{/.notdef}rp /period 11{/.notdef}rp /colon 38{/.notdef}rp /a 3{/.notdef}rp /e 
/f 6{/.notdef}rp /m /n /.notdef /p 3{/.notdef}rp /t 
4{/.notdef}rp /y 134{/.notdef}rp]
KYNPNS+Calibri-Italic nf
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
95.82 268.86 mo
(f.name:f.type)
[2.93785 2.93443 5.99818 5.99818 9.17931 5.58484 3.1254 2.93785 2.69466 3.90063 5.21713 5.93765 
0 ]xsh
gsave
65.28 246.6 mo
529.74 246.6 li
529.74 333.66 li
65.28 333.66 li
cp
eclp
337.14 332.16 mo
337.2 331.68 li
337.32 331.26 li
341.71 322.357 387.628 322.352 392.1 331.26 cv
392.22 331.68 li
392.22 332.58 li
390.996 337.781 374.29 339.49 370.2 339.54 cv
368.88 339.66 li
367.5 339.66 li
361.376 340.052 342.167 339.13 337.8 333.78 cv
337.5 333.42 li
337.32 333 li
337.2 332.58 li
cp
337.86 332.46 mo
337.8 332.4 li
337.92 332.82 li
337.92 332.76 li
338.1 333.12 li
338.04 333.06 li
338.28 333.42 li
338.94 334.08 li
338.88 334.02 li
339.3 334.38 li
339.78 334.68 li
340.32 334.98 li
340.92 335.34 li
340.92 335.28 li
341.58 335.58 li
341.52 335.58 li
342.24 335.88 li
343.8 336.48 li
343.8 336.42 li
344.64 336.72 li
345.54 336.96 li
346.5 337.2 li
346.44 337.2 li
347.46 337.44 li
353.003 338.607 359.025 339.103 364.68 339.06 cv
367.5 339.06 li
367.44 339.06 li
368.82 339 li
373.883 338.749 378.967 338.263 383.88 336.96 cv
384.78 336.72 li
384.72 336.72 li
385.62 336.42 li
385.62 336.48 li
387.18 335.88 li
387.12 335.88 li
387.84 335.58 li
388.5 335.28 li
388.5 335.34 li
389.1 334.98 li
389.04 334.98 li
389.58 334.68 li
390.06 334.38 li
390.48 334.02 li
390.48 334.08 li
391.14 333.42 li
391.08 333.42 li
391.32 333.06 li
391.32 333.12 li
391.5 332.76 li
391.44 332.82 li
391.56 332.4 li
391.56 332.46 li
391.56 332.1 li
391.56 332.16 li
391.56 331.8 li
391.56 331.86 li
391.44 331.5 li
391.5 331.56 li
391.32 331.2 li
391.08 330.84 li
391.14 330.9 li
390.84 330.54 li
390.48 330.24 li
390.06 329.88 li
389.58 329.58 li
389.64 329.58 li
389.04 329.28 li
389.1 329.28 li
388.5 328.98 li
387.84 328.68 li
387.12 328.38 li
387.18 328.38 li
386.4 328.08 li
385.62 327.84 li
384.72 327.54 li
384.78 327.54 li
383.88 327.3 li
381.424 326.713 378.948 326.216 376.44 325.92 cv
375.24 325.74 li
375.24 325.8 li
374.04 325.62 li
372.78 325.5 li
371.46 325.44 li
370.14 325.32 li
368.82 325.26 li
367.44 325.26 li
367.5 325.26 li
364.68 325.2 li
361.573 325.216 358.472 325.311 355.38 325.62 cv
354.12 325.8 li
354.12 325.74 li
352.92 325.92 li
351.087 326.172 349.259 326.437 347.46 326.88 cv
346.44 327.06 li
346.5 327.06 li
345.54 327.3 li
344.64 327.54 li
343.8 327.84 li
343.02 328.08 li
342.24 328.38 li
341.52 328.68 li
341.58 328.68 li
340.92 328.98 li
340.32 329.28 li
339.78 329.58 li
339.3 329.88 li
338.88 330.24 li
338.94 330.24 li
338.58 330.54 li
338.28 330.9 li
338.28 330.84 li
338.04 331.2 li
338.1 331.2 li
337.92 331.56 li
337.92 331.5 li
337.8 331.86 li
337.86 331.8 li
337.8 332.16 li
337.8 332.1 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
gsave
351.06 333.66 mo
378.06 333.66 li
378.06 324.3 li
351.06 324.3 li
cp
clp
%ADOBeginSubsetFont: QJJAAA+Calibri-Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QJJAAA+Calibri-Italic gcheck setglobal} if
1 336 100 <000100a3fffa0473050e0022004eba027d027e00582bb101024355584009
000808181409130814b80126b5401f510e55282b183f3f1a4dfdc4012f33
d6cd3310cd31301bb10814b80126b5401f510e55282b183f3f1a4dfdc431
305901140e042321030e0323222e02371321222635343e04332132160473
0105080c110afe94e1020b1522191920120602e0fe960e0a0305080c0f0a
03840d0a04eb0615181b140dfb9e080c070505070c080462121007151a18
150d1300>QJJAAA+Calibri-Italic AddT42Char 
1 2484 367 <0001003ffffa01f1057100150047ba027f028000582bb101024355584010
15000b400a000a150b04051046054c282b183f3f121739012f1acd333231
301b400b000a150b04051046054c282b183f3f121739313059370e032322
2e0237013e0333321e0207e6020a142118191f110502010a020915211918
1f11040119080b080404080b080538080c080404080c0800>QJJAAA+Calibri-Italic AddT42Char 
1 4258 437 <00010070ffed03e203bc003c0075ba027f028000582bb101024355584022
0b1800313c323123241918000b18243119233c32090537491e492cf84010
4d054c282b183f3f1a4ded3f3f121739012fcd3332c4c432113311393130
1b4017000b18243119233c32090537491e492cf840104d054c282b183f3f
1a4ded3f3f121739313059250e0323222e0237370e0323222e0235343637
133e0333321e020703060615141e0233323e0237133e0333321e0207032c
010a121d15141b0f05022110455d6f39445d391909076f020a152118181f
1105016e06060b1b2b1f356f604b124f010b152118181f11050119080c07
0404070c08a9224b4028254159352145230234070c080303080c07fdd21a
381d1e3124143d6c9558018e070c080303080c07>QJJAAA+Calibri-Italic AddT42Char 
QJJAAA+Calibri-Italic /CharStrings get begin
/T 100 def
/l 367 def
/u 437 def
end
QJJAAA+Calibri-Italic /Encoding get
dup 84 /T put
dup 108 /l put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KYNPNS+Calibri-Italic*1 
[46{/.notdef}rp /period 11{/.notdef}rp /colon 25{/.notdef}rp /T 12{/.notdef}rp /a 
3{/.notdef}rp /e /f 5{/.notdef}rp /l /m /n /.notdef 
/p 3{/.notdef}rp /t /u 3{/.notdef}rp /y 134{/.notdef}rp]
KYNPNS+Calibri-Italic nf
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
351.06 335.4 mo
(null:T)
[6.00168 6.00168 2.6842 2.68423 3.13821 0 ]xsh
grestore
gsave
377.28 333.66 mo
381.18 333.66 li
381.18 330.84 li
377.28 330.84 li
cp
clp
%ADOBeginSubsetFont: QJJAAA+Calibri-Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QJJAAA+Calibri-Italic gcheck setglobal} if
1 6086 1004 <0002004dffed04090521001f00390087ba027d027e00582bb10102435558
b9003bffc040090f024d003b010f0300ba02300020ffe8b40f024d202db8
0230b40f202d0a23b80103b21b5330b80103b3400a56282b183f1a4ded3f
ed123939012fedd42bed31305f5e5d2b1b4009003b010f03202d0a23b801
03b21b5330b80103b3400a56282b183f1a4ded3fed1239393130015f5e5d
5901140e0407060623222e0235343e04373e0333321e0207342623220607
0e05151416333236373e0504090b19283a4f333ba7705e8656280b19283b
4e331f495560365f865527af5f683b5f28283e3020150a60673c5f27273f
30211509039d2c7f939e9688323c483363915d2c7f939d9787331f322112
3463915e7f7a292728768991876f237f7a292727778991867000>QJJAAA+Calibri-Italic AddT42Char 
QJJAAA+Calibri-Italic /CharStrings get begin
/zero 1004 def
end
QJJAAA+Calibri-Italic /Encoding get
dup 48 /zero put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KYNPNS+Calibri-Italic*1 
[46{/.notdef}rp /period /.notdef /zero 9{/.notdef}rp /colon 25{/.notdef}rp /T 
12{/.notdef}rp /a 3{/.notdef}rp /e /f 5{/.notdef}rp /l /m 
/n /.notdef /p 3{/.notdef}rp /t /u 3{/.notdef}rp /y 
134{/.notdef}rp]
KYNPNS+Calibri-Italic nf
KYNPNS+Calibri-Italic*1 [7.74 0 0 -7.74 0 0 ]msf
377.28 338.22 mo
(0)sh
grestore
351.66 300.42 mo
351.78 300.24 li
352.02 300.12 li
381 300.12 li
381.24 300.24 li
381.36 300.42 li
381.36 314.94 li
381.24 315.18 li
381 315.3 li
352.02 315.3 li
351.78 315.18 li
351.66 314.94 li
cp
352.32 314.94 mo
352.02 314.64 li
381 314.64 li
380.7 314.94 li
380.7 300.42 li
381 300.78 li
352.02 300.78 li
352.32 300.42 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: QJJAAA+Calibri-Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QJJAAA+Calibri-Italic gcheck setglobal} if
1 6382 1005 <0001005f000003530517002e008dba027d027e00582bb10102435558b900
30ffc040180f024d0030010f032a142b1320141314001a0b2a25081514b8
014ab325522b13b80100b3400854282b183f1a4dfdc43ffdcd111239012f
c4cd393911331133113331305f5e5d2b1b400a0030010f032a25081514b8
014ab325522b13b80100b3400854282b183f1a4dfdc43ffdcd1112393130
015f5e5d5925140e042321222635343e04332113050606262635343e0237
253e0333321e02070333321603530305080c0f09fd5b0c0f0305090c100a
010ec3fee710140d05050b120e0151050d121911191f110301e2ea0e0b66
06151716130b141105131618120d03ce94080506100c0b21211e08bf0304
040104070b06fb8f1300>QJJAAA+Calibri-Italic AddT42Char 
QJJAAA+Calibri-Italic /CharStrings get begin
/one 1005 def
end
QJJAAA+Calibri-Italic /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KYNPNS+Calibri-Italic*1 
[46{/.notdef}rp /period /.notdef /zero /one 8{/.notdef}rp /colon 25{/.notdef}rp 
/T 12{/.notdef}rp /a 3{/.notdef}rp /e /f 5{/.notdef}rp /l 
/m /n /.notdef /p 3{/.notdef}rp /t /u 3{/.notdef}rp 
/y 134{/.notdef}rp]
KYNPNS+Calibri-Italic nf
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
361.92 309.96 mo
(m)sh
291.66 284.58 mo
(p)sh
KYNPNS+Calibri-Italic*1 [7.74 0 0 -7.74 0 0 ]msf
297.66 287.4 mo
(1)sh
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
301.56 284.58 mo
(:T)
[3.1254 0 ]xsh
KYNPNS+Calibri-Italic*1 [7.74 0 0 -7.74 0 0 ]msf
310.38 287.4 mo
(1)sh
274.98 281.22 mo
275.04 280.8 li
275.16 280.38 li
279.139 271.43 325.886 271.427 329.88 280.38 cv
330 280.8 li
330.06 281.22 li
330 281.64 li
328.898 286.938 312.121 288.527 308.04 288.66 cv
305.28 288.78 li
298.63 289 280.532 288.367 275.58 282.9 cv
275.34 282.48 li
275.16 282.06 li
275.04 281.64 li
cp
275.64 281.58 mo
275.64 281.52 li
275.76 281.88 li
275.7 281.82 li
275.88 282.18 li
276.12 282.48 li
276.42 282.84 li
276.36 282.78 li
276.72 283.14 li
277.14 283.44 li
277.62 283.8 li
278.16 284.1 li
278.76 284.4 li
278.7 284.4 li
279.36 284.7 li
282.089 285.824 285.568 286.667 288.48 287.1 cv
289.62 287.28 li
289.56 287.28 li
290.76 287.46 li
291.96 287.58 li
294.48 287.82 li
294.42 287.82 li
295.74 287.94 li
304.939 288.461 316.933 288.16 325.68 284.7 cv
326.34 284.4 li
326.28 284.4 li
326.88 284.1 li
327.42 283.8 li
327.9 283.44 li
328.32 283.14 li
328.68 282.78 li
328.62 282.84 li
328.92 282.48 li
329.16 282.18 li
329.28 281.82 li
329.28 281.88 li
329.4 281.52 li
329.4 281.58 li
329.4 281.22 li
329.4 281.28 li
329.4 280.86 li
329.4 280.92 li
329.28 280.56 li
329.28 280.62 li
329.1 280.26 li
329.16 280.32 li
328.92 279.96 li
328.62 279.6 li
328.68 279.66 li
328.32 279.3 li
327.9 279 li
327.42 278.64 li
327.42 278.7 li
326.88 278.34 li
326.28 278.04 li
326.34 278.04 li
325.68 277.74 li
324.96 277.44 li
324.96 277.5 li
324.24 277.2 li
315.637 274.286 304.671 273.989 295.74 274.5 cv
294.42 274.62 li
294.48 274.62 li
293.22 274.74 li
290.879 274.905 288.63 275.306 286.32 275.7 cv
285.24 275.94 li
285.3 275.94 li
284.28 276.18 li
282.48 276.66 li
281.64 276.9 li
280.8 277.2 li
280.08 277.5 li
280.08 277.44 li
279.36 277.74 li
278.7 278.04 li
278.76 278.04 li
278.16 278.34 li
277.62 278.7 li
277.62 278.64 li
277.14 279 li
276.72 279.3 li
276.36 279.66 li
276.42 279.6 li
276.12 279.96 li
275.88 280.32 li
275.88 280.26 li
275.7 280.62 li
275.76 280.56 li
275.64 280.92 li
275.64 280.86 li
275.64 281.28 li
275.64 281.22 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: QJJAAA+Calibri-Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QJJAAA+Calibri-Italic gcheck setglobal} if
1 5836 857 <00030049fff704ac00de0017002f00470039bf0030026f003c0018026e00
240000026fb70c374c1f4c432b13b80153b2074c28ba027f028000582b2b
3ffdc4c43f3f012fedd4edd4ed313025140e0423222e0235343e0433321e
0205140e0423222e0235343e0433321e0205140e0423222e0235343e0433
321e020125050a0f172b221b231408060a0f1628251d22140701c3050910
162c211c221507050b0e1629251c23140601c4050a0f172b221b23140806
0a0f1628251d221407970d262722170d09121a120f272620170d0a131a10
0d262722170d09121a120f272620170d0a131a100d262722170d09121a12
0f272620170d0a131a00>QJJAAA+Calibri-Italic AddT42Char 
QJJAAA+Calibri-Italic /CharStrings get begin
/ellipsis 857 def
end
QJJAAA+Calibri-Italic /Encoding get
dup 32 /ellipsis put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KYNPNS+Calibri-Italic*1 
[32{/.notdef}rp /ellipsis 13{/.notdef}rp /period /.notdef /zero /one 8{/.notdef}rp 
/colon 25{/.notdef}rp /T 12{/.notdef}rp /a 3{/.notdef}rp /e /f 
5{/.notdef}rp /l /m /n /.notdef /p 3{/.notdef}rp /t 
/u 3{/.notdef}rp /y 134{/.notdef}rp]
KYNPNS+Calibri-Italic nf
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
361.8 284.58 mo
( )sh
337.14 281.22 mo
337.2 280.8 li
337.32 280.38 li
341.44 271.427 387.889 271.416 392.1 280.38 cv
392.22 280.8 li
392.22 281.64 li
390.878 286.99 374.455 288.495 370.2 288.66 cv
368.88 288.72 li
367.5 288.78 li
361.022 289.018 342.54 288.353 337.8 282.9 cv
337.5 282.48 li
337.32 282.06 li
337.2 281.64 li
cp
337.86 281.58 mo
337.8 281.52 li
337.92 281.88 li
337.92 281.82 li
338.1 282.18 li
338.04 282.18 li
338.28 282.48 li
338.58 282.84 li
338.58 282.78 li
338.94 283.14 li
338.88 283.14 li
339.3 283.44 li
339.78 283.8 li
340.32 284.1 li
340.92 284.4 li
341.58 284.7 li
341.52 284.7 li
342.24 285 li
343.02 285.24 li
343.8 285.54 li
344.64 285.78 li
345.54 286.02 li
346.5 286.26 li
346.44 286.26 li
347.46 286.5 li
353.06 287.741 358.957 288.098 364.68 288.18 cv
367.5 288.12 li
367.44 288.12 li
368.82 288.06 li
373.774 287.852 379.086 287.326 383.88 286.02 cv
384.78 285.78 li
384.72 285.78 li
385.62 285.54 li
386.4 285.24 li
387.18 285 li
387.12 285 li
387.84 284.7 li
388.5 284.4 li
389.1 284.1 li
389.04 284.1 li
389.58 283.8 li
390.06 283.44 li
390.48 283.14 li
390.84 282.78 li
390.84 282.84 li
391.14 282.48 li
391.08 282.48 li
391.32 282.18 li
391.5 281.82 li
391.44 281.88 li
391.56 281.52 li
391.56 281.58 li
391.56 281.22 li
391.56 281.28 li
391.56 280.86 li
391.56 280.92 li
391.44 280.56 li
391.5 280.62 li
391.32 280.26 li
391.32 280.32 li
391.08 279.96 li
391.14 279.96 li
390.84 279.6 li
390.84 279.66 li
390.48 279.3 li
390.06 279 li
389.58 278.64 li
389.64 278.7 li
389.04 278.34 li
389.1 278.34 li
388.5 278.04 li
387.84 277.74 li
387.12 277.44 li
387.18 277.5 li
385.62 276.9 li
384.72 276.66 li
384.78 276.66 li
383.88 276.42 li
379.085 275.114 373.775 274.588 368.82 274.38 cv
367.44 274.32 li
367.5 274.32 li
364.68 274.26 li
358.957 274.342 353.06 274.699 347.46 275.94 cv
346.44 276.18 li
346.5 276.18 li
345.54 276.42 li
344.64 276.66 li
343.8 276.9 li
342.24 277.5 li
342.24 277.44 li
341.52 277.74 li
341.58 277.74 li
340.92 278.04 li
340.32 278.34 li
339.78 278.7 li
339.78 278.64 li
339.3 279 li
338.88 279.3 li
338.94 279.3 li
338.58 279.66 li
338.58 279.6 li
338.28 279.96 li
338.04 280.32 li
338.1 280.26 li
337.92 280.62 li
337.92 280.56 li
337.8 280.92 li
337.86 280.86 li
337.8 281.28 li
337.8 281.22 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
415.08 284.58 mo
(p)sh
KYNPNS+Calibri-Italic*1 [7.74 0 0 -7.74 0 0 ]msf
421.08 287.4 mo
(n)sh
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
425.04 284.58 mo
(:T)
[3.1254 0 ]xsh
KYNPNS+Calibri-Italic*1 [7.74 0 0 -7.74 0 0 ]msf
433.32 287.4 mo
(n)sh
398.34 281.22 mo
398.4 280.8 li
398.52 280.38 li
402.659 271.422 449.136 271.419 453.3 280.38 cv
453.42 280.8 li
453.42 281.64 li
452.12 287.002 435.637 288.492 431.4 288.66 cv
430.08 288.72 li
428.7 288.78 li
422.171 289.01 403.801 288.366 399 282.9 cv
398.7 282.48 li
398.52 282.06 li
398.4 281.64 li
cp
399.06 281.58 mo
399.06 281.52 li
399.12 281.88 li
399.12 281.82 li
399.3 282.18 li
399.24 282.18 li
399.48 282.48 li
399.78 282.84 li
399.78 282.78 li
400.14 283.14 li
400.08 283.14 li
400.56 283.44 li
400.5 283.44 li
400.98 283.8 li
411.567 289.51 436.455 289.227 447.6 285.24 cv
448.38 285 li
448.32 285 li
449.04 284.7 li
449.7 284.4 li
450.3 284.1 li
450.84 283.8 li
450.78 283.8 li
451.32 283.44 li
451.26 283.44 li
451.68 283.14 li
452.04 282.78 li
452.04 282.84 li
452.34 282.48 li
452.28 282.48 li
452.52 282.18 li
452.7 281.82 li
452.7 281.88 li
452.76 281.52 li
452.76 281.58 li
452.82 281.22 li
452.82 281.28 li
452.76 280.86 li
452.76 280.92 li
452.7 280.56 li
452.7 280.62 li
452.52 280.26 li
452.52 280.32 li
452.28 279.96 li
452.34 279.96 li
452.04 279.6 li
452.04 279.66 li
451.68 279.3 li
451.26 279 li
451.32 279 li
450.78 278.64 li
450.84 278.7 li
450.3 278.34 li
449.7 278.04 li
449.04 277.74 li
448.32 277.44 li
448.38 277.5 li
447.6 277.2 li
440.239 274.642 430.827 274.167 423.12 274.32 cv
421.74 274.38 li
421.8 274.38 li
420.42 274.44 li
415.102 274.749 409.263 275.417 404.22 277.2 cv
403.44 277.5 li
403.44 277.44 li
402.12 278.04 li
401.52 278.34 li
400.98 278.7 li
400.98 278.64 li
400.5 279 li
400.56 279 li
400.08 279.3 li
400.14 279.3 li
399.78 279.66 li
399.78 279.6 li
399.48 279.96 li
399.3 280.32 li
399.3 280.26 li
399.12 280.62 li
399.12 280.56 li
399.06 280.92 li
399.06 280.86 li
399 281.28 li
399 281.22 li
.92929 .879301 .889677 .799283 cmyk
f
302.82 288.48 mo
302.88 288.9 li
302.94 289.32 li
303.379 292.724 307.144 295.658 309.84 297.36 cv
310.44 297.72 li
311.1 298.14 li
321.708 303.954 335.41 306.706 347.4 307.26 cv
349.68 307.32 li
351.36 307.38 li
351.36 308.04 li
349.68 307.98 li
339.887 308.468 304.311 302.524 302.22 288.96 cv
302.22 288.48 li
cp
347.7 305.1 mo
352.02 307.68 li
347.64 310.2 li
347.4 310.2 li
347.16 310.08 li
347.16 309.84 li
347.28 309.6 li
351.18 307.38 li
351.18 307.98 li
347.34 305.64 li
347.22 305.46 li
347.22 305.22 li
347.46 305.1 li
347.7 305.1 li
f
426.24 288.48 mo
426.24 288.96 li
424.123 302.336 393.453 308.279 383.16 307.98 cv
381.66 308.04 li
381.66 307.38 li
383.1 307.32 li
392.831 307.799 423.689 301.643 425.58 288.9 cv
425.58 288.48 li
cp
385.38 310.2 mo
381 307.68 li
385.32 305.1 li
385.56 305.04 li
385.8 305.22 li
385.8 305.46 li
385.68 305.64 li
381.84 307.98 li
381.84 307.38 li
385.74 309.6 li
385.86 309.78 li
385.86 310.08 li
385.68 310.2 li
385.38 310.2 li
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: QJJAAA+Calibri-Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QJJAAA+Calibri-Italic gcheck setglobal} if
1 830 271 <0002003dffed03d00571002d0042009cba027f028000582bb10102435558
40120b111d1e1f20233738391c391c1239111200b8021e401c2e110a3938
22040733f9274a1c12110b040e17460e4c3cf840074d282b183f1a4ded3f
3f1217393fed121739012fd4ed2f11331133107d870ec4c4c4c4c4c4c412
013931301b401a0a393822040733f9274a1c12110b040e17460e4c3cf840
074d282b183f1a4ded3f3f1217393fed12173931305901140e0423222627
07060623222637013e0333321e0207030e03073e0333321e0407342e0223
220e020707161633323e0403d016314a6b8b575a8032120227282a1c0401
0a0209152119181e12040150050e0f0f0610455d6e383c563c251408ad0a
1d372e3670604b11212f6c4434544432211102843c91938b6b4144405811
0e100f0538080c080404080c08fe6e1a38373112234b3f2a20354448472c
1b463c293e6d9357a645423050677172>QJJAAA+Calibri-Italic AddT42Char 
1 2250 349 <0002003ffffa01ef052f00130029006aba027f028000582bb10102435558
b4291f141e00b80262400b0a1f1e1e141f290424190fb80147b605402449
194c282b183f3f1ade4ded11121739012fd6d4ed1133113331301bb71e14
1f290424190fb80147b605402449194c282b183f3f1ade4ded1112173931
3059010e0323222e02373e0333321e02010e0323222e0237133e0333321e
020701e905111c2a1e1d2612020506121b2a1e1d251302fef7020a142118
191f110502b3010a142119181f11050104cc1c26170a0a17261c1c251909
091925fb31080b080404080b080384070c080404080c0700>QJJAAA+Calibri-Italic AddT42Char 
1 3672 396 <0001003ffffa02f203ca0033006cba027f028000582bb10102435558400a
2811111d121c001d1c0cb801184010402d4a121c11281d2706172249174c
282b183f3f1217393f1a4ded012f2fc411331133113331301bb9000c0118
4010402d4a121c11281d2706172249174c282b183f3f1217393f1a4ded31
305901140e0423222e0223220e0207030e0323222e0237133e0333321e02
07073e0333321e02171602f20304080c0d080813171e1422595647114f02
0a142118191f110502b3010a141d14151b0f040121173f4a512711231e17
0606039c04171e201b12070a073b688e53fe6f080b080404080b08038507
0c080303080c07a4294c3922050709060600>QJJAAA+Calibri-Italic AddT42Char 
1 4548 448 <0001007cfffa03a303bc00310056ba027f028000582bb10102435558b900
210187b2121628bb021f0000002001fb400b40162d49220d1b490d4c282b
183f3f12393f012f1a4dedd4ed10dded31301b40092d49220d1b490d4c28
2b183f3f12393f313059011406070e03070e0323222e022703262635343e
0233321e02171315373e03373e0333321e0203a30604255d718750071219
20161f2615090185010108121f1a1a201106016c053b62544b27030b1523
1a181e110703a50a150b6ddfddd5630b0c070204080e0a03550b11070d0e
080303070d09fd1a0c0659a7b2c476090d0703030509>QJJAAA+Calibri-Italic AddT42Char 
QJJAAA+Calibri-Italic /CharStrings get begin
/b 271 def
/i 349 def
/r 396 def
/v 448 def
end
QJJAAA+Calibri-Italic /Encoding get
dup 98 /b put
dup 105 /i put
dup 114 /r put
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KYNPNS+Calibri-Italic*1 
[32{/.notdef}rp /ellipsis 13{/.notdef}rp /period /.notdef /zero /one 8{/.notdef}rp 
/colon 25{/.notdef}rp /T 12{/.notdef}rp /a /b 2{/.notdef}rp /e 
/f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /.notdef 
/p /.notdef /r /.notdef /t /u /v 2{/.notdef}rp 
/y 134{/.notdef}rp]
KYNPNS+Calibri-Italic nf
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
207.84 284.58 mo
(variable:T)
[5.19958 5.9912 4.00069 2.67375 5.9912 5.9912 2.67375 5.57204 3.12773 0 ]xsh
199.26 281.22 mo
199.26 280.98 li
200.65 274.733 227.531 273.5 232.26 273.66 cv
234.3 273.6 li
234.36 273.9 li
234.06 273.66 li
235.86 273.66 li
279.927 274.43 279.83 288.046 235.8 288.78 cv
234.06 288.78 li
234.3 288.3 li
234.72 288.78 li
232.26 288.78 li
227.171 288.904 201.425 287.74 199.32 281.7 cv
199.26 281.46 li
cp
199.92 281.4 mo
199.92 281.34 li
199.92 281.52 li
199.92 281.46 li
200.04 281.88 li
200.04 281.82 li
200.22 282.18 li
200.22 282.12 li
200.52 282.48 li
200.88 282.78 li
201.3 283.14 li
201.3 283.08 li
201.84 283.44 li
204.239 284.805 207.077 285.458 209.76 286.02 cv
210.96 286.26 li
210.9 286.26 li
212.16 286.5 li
218.68 287.615 225.65 288.081 232.26 288.12 cv
234.06 288.18 li
233.82 288.66 li
233.4 288.12 li
235.8 288.12 li
244.751 288.012 253.899 287.396 262.56 285 cv
263.46 284.7 li
263.4 284.7 li
264.24 284.4 li
265.02 284.1 li
265.68 283.74 li
266.28 283.44 li
266.82 283.14 li
266.76 283.14 li
267.24 282.78 li
267.6 282.48 li
267.9 282.12 li
267.84 282.18 li
268.08 281.82 li
268.02 281.88 li
268.2 281.52 li
268.14 281.52 li
268.2 281.34 li
268.2 281.4 li
268.2 281.04 li
268.2 281.1 li
268.14 280.92 li
268.2 280.98 li
268.02 280.62 li
268.08 280.62 li
267.84 280.26 li
267.9 280.32 li
267.6 279.96 li
267.6 280.02 li
267.24 279.66 li
266.76 279.3 li
266.82 279.36 li
266.28 279 li
265.68 278.7 li
265.02 278.4 li
264.24 278.04 li
263.4 277.74 li
263.46 277.74 li
262.56 277.5 li
260.737 276.865 259.043 276.555 257.16 276.18 cv
255.9 275.94 li
255.96 275.94 li
254.64 275.7 li
250.569 275.105 246.743 274.762 242.64 274.5 cv
240.96 274.44 li
241.02 274.44 li
239.28 274.38 li
237.6 274.32 li
235.8 274.32 li
233.82 274.26 li
233.76 274.02 li
234.06 274.26 li
232.26 274.26 li
228.78 274.38 li
228.84 274.38 li
227.1 274.44 li
222.153 274.661 217.04 275.086 212.16 275.94 cv
210.9 276.18 li
210.96 276.18 li
209.76 276.42 li
207.038 276.981 204.303 277.676 201.84 279 cv
201.3 279.36 li
201.3 279.3 li
200.88 279.66 li
200.52 280.02 li
200.52 279.96 li
200.22 280.32 li
200.28 280.26 li
200.04 280.62 li
199.92 280.98 li
199.92 280.92 li
199.92 281.1 li
199.92 281.04 li
199.92 281.22 li
.92929 .879301 .889677 .799283 cmyk
f
231.78 290.16 mo
231.84 290.58 li
231.84 290.52 li
231.96 290.88 li
232.14 291.24 li
234.616 294.684 243.54 296.741 247.38 297.84 cv
248.88 298.2 li
250.44 298.56 li
275.92 303.92 303.533 306.031 329.52 306.96 cv
340.74 307.26 li
351.36 307.38 li
351.36 308.04 li
340.68 307.92 li
329.52 307.62 li
303.01 306.543 274.699 304.584 248.76 298.8 cv
247.2 298.44 li
245.76 298.08 li
242.457 297.123 232.311 294.592 231.18 290.7 cv
231.18 290.22 li
cp
347.7 305.16 mo
352.02 307.68 li
347.64 310.2 li
347.4 310.26 li
347.16 310.08 li
347.16 309.84 li
347.28 309.66 li
351.18 307.44 li
351.18 307.98 li
347.34 305.7 li
347.22 305.46 li
347.22 305.22 li
347.4 305.1 li
347.7 305.16 li
f
gsave
65.28 333.66 mo
529.74 333.66 li
529.74 420.72 li
65.28 420.72 li
cp
eclp
65.28 420.74 mo
529.74 420.74 li
529.74 333.62 li
65.28 333.62 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
337.14 332.16 mo
337.2 331.68 li
337.32 331.26 li
341.71 322.357 387.628 322.352 392.1 331.26 cv
392.22 331.68 li
392.22 332.58 li
390.996 337.781 374.29 339.49 370.2 339.54 cv
368.88 339.66 li
367.5 339.66 li
361.376 340.052 342.167 339.13 337.8 333.78 cv
337.5 333.42 li
337.32 333 li
337.2 332.58 li
cp
337.86 332.46 mo
337.8 332.4 li
337.92 332.82 li
337.92 332.76 li
338.1 333.12 li
338.04 333.06 li
338.28 333.42 li
338.94 334.08 li
338.88 334.02 li
339.3 334.38 li
339.78 334.68 li
340.32 334.98 li
340.92 335.34 li
340.92 335.28 li
341.58 335.58 li
341.52 335.58 li
342.24 335.88 li
343.8 336.48 li
343.8 336.42 li
344.64 336.72 li
345.54 336.96 li
346.5 337.2 li
346.44 337.2 li
347.46 337.44 li
353.003 338.607 359.025 339.103 364.68 339.06 cv
367.5 339.06 li
367.44 339.06 li
368.82 339 li
373.883 338.749 378.967 338.263 383.88 336.96 cv
384.78 336.72 li
384.72 336.72 li
385.62 336.42 li
385.62 336.48 li
387.18 335.88 li
387.12 335.88 li
387.84 335.58 li
388.5 335.28 li
388.5 335.34 li
389.1 334.98 li
389.04 334.98 li
389.58 334.68 li
390.06 334.38 li
390.48 334.02 li
390.48 334.08 li
391.14 333.42 li
391.08 333.42 li
391.32 333.06 li
391.32 333.12 li
391.5 332.76 li
391.44 332.82 li
391.56 332.4 li
391.56 332.46 li
391.56 332.1 li
391.56 332.16 li
391.56 331.8 li
391.56 331.86 li
391.44 331.5 li
391.5 331.56 li
391.32 331.2 li
391.08 330.84 li
391.14 330.9 li
390.84 330.54 li
390.48 330.24 li
390.06 329.88 li
389.58 329.58 li
389.64 329.58 li
389.04 329.28 li
389.1 329.28 li
388.5 328.98 li
387.84 328.68 li
387.12 328.38 li
387.18 328.38 li
386.4 328.08 li
385.62 327.84 li
384.72 327.54 li
384.78 327.54 li
383.88 327.3 li
381.424 326.713 378.948 326.216 376.44 325.92 cv
375.24 325.74 li
375.24 325.8 li
374.04 325.62 li
372.78 325.5 li
371.46 325.44 li
370.14 325.32 li
368.82 325.26 li
367.44 325.26 li
367.5 325.26 li
364.68 325.2 li
361.573 325.216 358.472 325.311 355.38 325.62 cv
354.12 325.8 li
354.12 325.74 li
352.92 325.92 li
351.087 326.172 349.259 326.437 347.46 326.88 cv
346.44 327.06 li
346.5 327.06 li
345.54 327.3 li
344.64 327.54 li
343.8 327.84 li
343.02 328.08 li
342.24 328.38 li
341.52 328.68 li
341.58 328.68 li
340.92 328.98 li
340.32 329.28 li
339.78 329.58 li
339.3 329.88 li
338.88 330.24 li
338.94 330.24 li
338.58 330.54 li
338.28 330.9 li
338.28 330.84 li
338.04 331.2 li
338.1 331.2 li
337.92 331.56 li
337.92 331.5 li
337.8 331.86 li
337.86 331.8 li
337.8 332.16 li
337.8 332.1 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
gsave
351.06 338.52 mo
378.06 338.52 li
378.06 333.66 li
351.06 333.66 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
351.06 335.4 mo
(null:T)
[6.00168 6.00168 2.6842 2.68423 3.13821 0 ]xsh
grestore
gsave
377.28 340.32 mo
381.18 340.32 li
381.18 333.66 li
377.28 333.66 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [7.74 0 0 -7.74 0 0 ]msf
377.28 338.22 mo
(0)sh
grestore
152.1 379.32 mo
152.1 379.08 li
153.667 372.483 185.624 371.578 190.62 371.7 cv
190.74 371.82 li
190.5 371.76 li
192.48 371.76 li
241.124 372.5 241.103 386.117 192.48 386.88 cv
190.5 386.88 li
190.68 386.28 li
191.58 386.88 li
188.52 386.88 li
183.402 387.018 154.326 385.849 152.16 379.8 cv
152.1 379.56 li
cp
152.76 379.5 mo
152.7 379.44 li
152.76 379.62 li
152.76 379.56 li
152.82 379.74 li
152.88 379.92 li
152.88 379.86 li
153.12 380.22 li
153.06 380.22 li
153.42 380.58 li
153.36 380.52 li
153.6 380.7 li
153.78 380.88 li
154.32 381.18 li
154.26 381.18 li
154.86 381.54 li
155.52 381.84 li
156.3 382.14 li
157.14 382.5 li
157.08 382.44 li
158.04 382.8 li
157.98 382.74 li
159 383.04 li
160.08 383.34 li
160.02 383.34 li
161.16 383.64 li
170.073 385.541 179.425 386.145 188.52 386.22 cv
190.5 386.28 li
190.32 386.82 li
189.42 386.22 li
194.4 386.22 li
196.32 386.16 li
196.26 386.16 li
198.18 386.1 li
205.903 385.754 214.533 385.122 222 383.04 cv
223.02 382.74 li
223.02 382.8 li
223.92 382.44 li
223.92 382.5 li
224.76 382.14 li
224.7 382.14 li
225.48 381.84 li
226.14 381.54 li
226.74 381.18 li
227.22 380.88 li
227.46 380.7 li
227.4 380.7 li
227.64 380.52 li
227.58 380.52 li
227.76 380.4 li
227.94 380.22 li
227.88 380.22 li
228.06 380.04 li
228 380.1 li
228.12 379.86 li
228.12 379.92 li
228.24 379.56 li
228.24 379.62 li
228.3 379.44 li
228.3 379.5 li
228.3 379.14 li
228.3 379.2 li
228.24 379.02 li
228.18 378.84 li
228.18 378.9 li
228.12 378.72 li
228 378.54 li
228.06 378.6 li
227.88 378.42 li
227.94 378.42 li
227.58 378.06 li
227.64 378.12 li
227.4 377.94 li
227.46 377.94 li
226.74 377.4 li
226.74 377.46 li
226.14 377.1 li
225.48 376.8 li
224.7 376.44 li
224.76 376.5 li
223.92 376.14 li
220.462 374.955 216.831 374.416 213.24 373.8 cv
211.74 373.62 li
211.8 373.62 li
210.24 373.44 li
207.407 373.069 204.683 372.913 201.84 372.72 cv
199.98 372.6 li
200.04 372.6 li
196.32 372.48 li
194.4 372.42 li
192.48 372.42 li
190.38 372.36 li
190.26 372.3 li
190.5 372.36 li
188.52 372.36 li
184.68 372.48 li
182.82 372.54 li
181.02 372.6 li
179.16 372.72 li
179.22 372.72 li
177.42 372.84 li
171.922 373.169 166.549 373.863 161.16 375 cv
160.02 375.3 li
160.08 375.3 li
159 375.54 li
157.98 375.84 li
158.04 375.84 li
157.08 376.14 li
157.14 376.14 li
156.3 376.5 li
156.3 376.44 li
155.52 376.8 li
154.86 377.1 li
154.26 377.46 li
154.32 377.4 li
153.78 377.76 li
153.6 377.94 li
153.36 378.12 li
153.42 378.06 li
153.06 378.42 li
153.12 378.42 li
152.94 378.6 li
153 378.54 li
152.88 378.72 li
152.82 378.9 li
152.82 378.84 li
152.7 379.2 li
152.76 379.14 li
152.7 379.32 li
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: QJJAAA+Calibri-Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QJJAAA+Calibri-Italic gcheck setglobal} if
1 4780 454 <0001ffd0fffa039c03bc002f007aba027f028000582bb10102435558bc00
23020f0019000b0221400d0100240c180401190119011725bb020e002f00
0d0223400e40172a49240c121e49124c064c282b183f3f3f1239393f012f
1a4ded2fed1239392f2f12173910ed10ed31301b400c2a49240c121e4912
4c064c282b183f3f3f1239393f3130590113160e0223222e022703010e03
2322262636370103263e0233321e021713013e03333216160607022dc406
0316271f1c2012060396fee5060d18251e1d2411030a0176b9060213261f
1c201107038f010e060c16211b1e2612030d01e4fe480e130c0503070b07
0163fe9d070b0604050c120e01bc01a40e130c0403060a07feb00150060a
0703040a130e>QJJAAA+Calibri-Italic AddT42Char 
QJJAAA+Calibri-Italic /CharStrings get begin
/x 454 def
end
QJJAAA+Calibri-Italic /Encoding get
dup 120 /x put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KYNPNS+Calibri-Italic*1 
[32{/.notdef}rp /ellipsis 13{/.notdef}rp /period /.notdef /zero /one 8{/.notdef}rp 
/colon 25{/.notdef}rp /T 12{/.notdef}rp /a /b 2{/.notdef}rp /e 
/f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /.notdef 
/p /.notdef /r /.notdef /t /u /v /.notdef 
/x /y 134{/.notdef}rp]
KYNPNS+Calibri-Italic nf
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
157.26 381.36 mo
(x.name:x.type)
[5.03195 2.92513 5.9749 5.9749 9.1991 5.55574 3.11143 5.03195 2.63528 3.89133 5.19501 5.9749 
0 ]xsh
72.12 356.94 mo
72.12 356.7 li
73.514 350.359 103.849 349.277 108.6 349.32 cv
110.7 349.32 li
110.76 349.44 li
110.58 349.32 li
112.5 349.38 li
161.17 350.092 161.183 363.723 112.5 364.5 cv
110.52 364.5 li
110.7 363.9 li
111.66 364.5 li
108.6 364.5 li
103.365 364.568 74.419 363.519 72.18 357.36 cv
72.12 357.18 li
cp
72.78 357.12 mo
72.78 357.06 li
72.84 357.24 li
72.84 357.18 li
72.9 357.36 li
72.84 357.36 li
72.96 357.54 li
72.9 357.48 li
73.14 357.84 li
73.32 358.02 li
73.26 357.96 li
73.62 358.32 li
73.86 358.5 li
73.86 358.44 li
74.34 358.8 li
74.94 359.16 li
74.88 359.1 li
75.6 359.46 li
76.32 359.76 li
77.16 360.06 li
78.06 360.36 li
79.08 360.66 li
79.02 360.66 li
80.1 360.96 li
82.247 361.457 84.215 361.875 86.4 362.22 cv
87.84 362.4 li
87.78 362.4 li
89.28 362.64 li
90.84 362.82 li
92.46 363 li
92.4 363 li
94.08 363.12 li
98.852 363.619 103.802 363.827 108.6 363.84 cv
110.58 363.84 li
110.4 364.44 li
109.5 363.84 li
112.5 363.84 li
115.624 363.901 118.74 363.643 121.86 363.54 cv
123.66 363.42 li
123.6 363.42 li
125.34 363.3 li
129.879 362.915 134.25 362.406 138.72 361.5 cv
139.92 361.2 li
139.86 361.2 li
141 360.96 li
142.08 360.66 li
143.04 360.36 li
143.94 360.06 li
144.78 359.76 li
145.56 359.46 li
145.5 359.46 li
146.22 359.1 li
146.22 359.16 li
146.82 358.8 li
146.76 358.8 li
147.3 358.5 li
147.24 358.5 li
147.48 358.32 li
147.84 357.96 li
147.84 358.02 li
148.2 357.48 li
148.2 357.54 li
148.26 357.36 li
148.32 357.18 li
148.32 357.24 li
148.32 357.06 li
148.32 357.12 li
148.32 356.88 li
148.32 356.94 li
148.32 356.76 li
148.32 356.82 li
148.32 356.64 li
148.26 356.46 li
148.26 356.52 li
148.2 356.34 li
147.96 355.98 li
147.96 356.04 li
147.84 355.86 li
147.48 355.5 li
147.48 355.56 li
147.24 355.38 li
147.3 355.38 li
146.76 355.02 li
146.82 355.02 li
146.22 354.72 li
144.563 353.914 142.807 353.288 141 352.92 cv
139.86 352.62 li
139.92 352.62 li
138.72 352.38 li
137.46 352.08 li
137.46 352.14 li
136.14 351.9 li
133.629 351.401 131.234 351.174 128.7 350.88 cv
127.02 350.7 li
127.08 350.7 li
125.34 350.58 li
122.464 350.263 119.247 350.21 116.34 350.1 cv
114.42 350.04 li
114.48 350.04 li
112.5 349.98 li
110.4 349.98 li
110.34 349.86 li
110.58 349.98 li
108.6 349.98 li
103.754 350.061 98.909 350.272 94.08 350.7 cv
92.4 350.88 li
92.46 350.88 li
90.84 351.06 li
89.28 351.24 li
87.78 351.42 li
87.84 351.42 li
86.4 351.66 li
84.358 351.867 82.105 352.425 80.1 352.92 cv
79.02 353.16 li
79.08 353.16 li
78.06 353.46 li
77.16 353.76 li
76.32 354.06 li
75.6 354.42 li
75.6 354.36 li
74.88 354.72 li
74.94 354.72 li
74.34 355.02 li
73.62 355.56 li
73.62 355.5 li
73.26 355.86 li
73.32 355.86 li
73.14 356.04 li
73.14 355.98 li
73.02 356.16 li
72.96 356.34 li
72.84 356.52 li
72.9 356.46 li
72.78 356.64 li
72.84 356.64 li
72.78 356.82 li
72.78 356.76 li
72.78 356.94 li
72.78 356.88 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
78.78 360.18 mo
(y.name:y.type)
[4.67702 2.93443 5.9877 5.98771 9.2119 5.56854 3.12424 4.6165 2.63528 3.90413 5.15659 5.93765 
0 ]xsh
152.1 355.74 mo
152.1 355.5 li
153.319 348.989 185.901 347.924 190.62 348.12 cv
190.74 348.24 li
190.5 348.12 li
192.48 348.12 li
241.107 349.002 241.1 362.426 192.48 363.3 cv
190.5 363.3 li
190.68 362.7 li
191.58 363.3 li
188.52 363.3 li
183.566 363.417 154.096 362.204 152.16 356.16 cv
152.1 355.92 li
cp
152.76 355.86 mo
152.7 355.86 li
152.76 356.04 li
152.76 355.98 li
152.82 356.16 li
152.88 356.34 li
152.88 356.28 li
153.12 356.64 li
153.06 356.58 li
153.42 356.94 li
153.36 356.94 li
153.6 357.12 li
153.78 357.3 li
153.78 357.24 li
154.32 357.6 li
154.26 357.6 li
154.86 357.9 li
155.52 358.26 li
156.3 358.56 li
157.14 358.86 li
157.08 358.86 li
158.04 359.16 li
157.98 359.16 li
159 359.46 li
160.08 359.76 li
160.02 359.76 li
161.16 360 li
169.832 361.994 179.64 362.518 188.52 362.64 cv
190.5 362.64 li
190.32 363.24 li
189.42 362.64 li
194.4 362.64 li
196.32 362.58 li
196.26 362.58 li
198.18 362.52 li
206.493 362.088 215.97 361.477 223.92 358.86 cv
224.76 358.56 li
224.7 358.56 li
225.48 358.26 li
226.14 357.9 li
226.14 357.96 li
226.74 357.6 li
227.22 357.24 li
227.22 357.3 li
227.46 357.12 li
227.4 357.12 li
227.64 356.94 li
227.58 356.94 li
227.94 356.58 li
227.88 356.64 li
228.06 356.46 li
228 356.46 li
228.12 356.28 li
228.12 356.34 li
228.24 355.98 li
228.24 356.04 li
228.3 355.86 li
228.3 355.68 li
228.3 355.74 li
228.3 355.56 li
228.3 355.62 li
228.24 355.38 li
228.24 355.44 li
228.12 355.08 li
228.12 355.14 li
228 354.96 li
228.06 354.96 li
227.88 354.78 li
227.94 354.84 li
227.58 354.48 li
227.64 354.48 li
227.4 354.3 li
227.46 354.36 li
226.74 353.82 li
226.14 353.52 li
225.48 353.16 li
224.7 352.86 li
224.76 352.86 li
223.92 352.56 li
220.543 351.388 216.767 350.741 213.24 350.22 cv
211.74 350.04 li
211.8 350.04 li
210.24 349.8 li
207.437 349.595 204.645 349.257 201.84 349.08 cv
199.98 349.02 li
200.04 349.02 li
198.18 348.9 li
196.32 348.84 li
194.4 348.84 li
192.48 348.78 li
190.38 348.78 li
190.26 348.66 li
190.5 348.78 li
188.52 348.78 li
186.6 348.84 li
184.68 348.84 li
182.82 348.9 li
181.02 349.02 li
179.16 349.08 li
179.22 349.08 li
177.42 349.2 li
171.967 349.64 166.501 350.202 161.16 351.42 cv
160.02 351.66 li
160.08 351.66 li
159 351.96 li
157.98 352.26 li
158.04 352.26 li
157.08 352.56 li
157.14 352.56 li
156.3 352.86 li
155.52 353.16 li
154.86 353.52 li
154.26 353.82 li
154.32 353.82 li
153.78 354.18 li
153.6 354.36 li
153.6 354.3 li
153.36 354.48 li
153.42 354.48 li
153.06 354.84 li
153.12 354.78 li
152.94 354.96 li
153 354.96 li
152.88 355.14 li
152.88 355.08 li
152.82 355.26 li
152.76 355.44 li
152.76 355.38 li
152.7 355.62 li
152.76 355.56 li
152.7 355.74 li
152.7 355.68 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: QJJAAA+Calibri-Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QJJAAA+Calibri-Italic gcheck setglobal} if
1 5308 460 <000100050000031303b70031006dba027f028000582bb10102435558bc00
09024b001d0023024a4019051d1827050d270d270d0018000823f62e4822
09f640144b282b183f1a4ded323fed32012f2f1239392f2f113911123910
e110e131301b400c0823f62e482209f640144b282b183f1a4ded323fed32
31305901140e02070606070121321615140e042321222635343e02373e03
370121222635343e0433213216031302040402061916fe03019d0c0c0206
080c0e09fdd313120404050202060c120d0200fe880d0d0305090c0f0902
07130f0395051315150716271afd96121108161617120b15120716171405
080d111810026a111209161717110a12>QJJAAA+Calibri-Italic AddT42Char 
QJJAAA+Calibri-Italic /CharStrings get begin
/z 460 def
end
QJJAAA+Calibri-Italic /Encoding get
dup 122 /z put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KYNPNS+Calibri-Italic*1 
[32{/.notdef}rp /ellipsis 13{/.notdef}rp /period /.notdef /zero /one 8{/.notdef}rp 
/colon 25{/.notdef}rp /T 12{/.notdef}rp /a /b 2{/.notdef}rp /e 
/f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /.notdef 
/p /.notdef /r /.notdef /t /u /v /.notdef 
/x /y /z 133{/.notdef}rp]
KYNPNS+Calibri-Italic nf
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
156.72 358.98 mo
(z.name:z.type)
[4.6095 2.9449 5.99469 5.99469 9.21889 5.57552 3.13123 4.60948 2.69464 3.84012 5.1566 5.99469 
0 ]xsh
gsave
65.28 333.66 mo
529.74 333.66 li
529.74 420.72 li
65.28 420.72 li
cp
eclp
126.66 419.82 mo
126.72 419.4 li
126.84 418.98 li
131.083 410.079 177.303 410.069 181.62 418.98 cv
181.74 419.4 li
181.74 420.3 li
180.301 425.61 164.01 427.11 159.72 427.26 cv
158.4 427.32 li
157.02 427.38 li
150.612 427.642 131.981 426.956 127.32 421.5 cv
127.02 421.14 li
126.84 420.72 li
126.72 420.3 li
cp
127.38 420.18 mo
127.32 420.12 li
127.44 420.48 li
127.44 420.42 li
127.62 420.84 li
127.56 420.78 li
127.8 421.14 li
127.8 421.08 li
128.1 421.44 li
128.46 421.74 li
128.4 421.74 li
128.82 422.1 li
129.3 422.4 li
129.84 422.7 li
130.44 423 li
131.1 423.3 li
131.04 423.3 li
131.76 423.6 li
132.54 423.9 li
133.32 424.14 li
134.16 424.44 li
135.06 424.68 li
136.02 424.92 li
135.96 424.92 li
136.98 425.16 li
142.793 426.354 148.263 426.782 154.2 426.78 cv
157.02 426.72 li
156.96 426.72 li
158.34 426.72 li
163.407 426.488 168.48 425.947 173.4 424.68 cv
174.3 424.44 li
174.24 424.44 li
175.14 424.14 li
175.92 423.9 li
176.7 423.6 li
176.64 423.6 li
177.36 423.3 li
178.02 423 li
178.62 422.7 li
178.56 422.7 li
179.16 422.4 li
179.1 422.4 li
179.58 422.1 li
180 421.74 li
180 421.8 li
180.36 421.44 li
180.66 421.08 li
180.6 421.14 li
180.84 420.78 li
180.84 420.84 li
181.02 420.42 li
180.96 420.48 li
181.08 420.12 li
181.08 420.18 li
181.14 419.82 li
181.14 419.88 li
181.08 419.52 li
181.08 419.58 li
180.96 419.22 li
181.02 419.22 li
180.84 418.86 li
180.84 418.92 li
180.6 418.56 li
180.66 418.62 li
180.36 418.26 li
180 417.9 li
180 417.96 li
179.58 417.6 li
179.1 417.3 li
179.16 417.3 li
178.56 417 li
178.62 417 li
178.02 416.7 li
177.36 416.4 li
176.64 416.1 li
176.7 416.1 li
175.92 415.8 li
175.14 415.56 li
174.24 415.26 li
174.3 415.26 li
173.4 415.02 li
171.48 414.54 li
170.46 414.36 li
169.38 414.12 li
169.38 414.18 li
168.3 413.94 li
164.959 413.421 161.716 413.141 158.34 412.98 cv
156.96 412.98 li
157.02 412.98 li
154.2 412.92 li
149.443 412.924 144.859 413.2 140.16 413.94 cv
139.08 414.18 li
139.08 414.12 li
138 414.36 li
136.98 414.54 li
135.96 414.78 li
136.02 414.78 li
135.06 415.02 li
134.16 415.26 li
133.32 415.56 li
132.54 415.8 li
131.76 416.1 li
131.04 416.4 li
131.1 416.4 li
130.44 416.7 li
129.84 417 li
129.3 417.3 li
128.82 417.6 li
128.4 417.96 li
128.46 417.9 li
128.1 418.26 li
127.8 418.62 li
127.8 418.56 li
127.56 418.92 li
127.62 418.86 li
127.44 419.22 li
127.32 419.58 li
127.38 419.52 li
127.32 419.88 li
127.32 419.82 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
gsave
140.58 420.72 mo
167.58 420.72 li
167.58 411.96 li
140.58 411.96 li
cp
clp
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
140.58 423.06 mo
(null:T)
[6.00168 6.00166 2.68423 2.68423 3.1382 0 ]xsh
grestore
gsave
65.28 333.66 mo
529.74 333.66 li
529.74 420.72 li
65.28 420.72 li
cp
eclp
86.76 412.92 mo
86.88 412.74 li
87.06 412.62 li
116.1 412.62 li
116.34 412.74 li
116.46 412.92 li
116.46 427.44 li
116.34 427.68 li
116.1 427.8 li
87.06 427.8 li
86.88 427.68 li
86.76 427.44 li
cp
87.42 427.44 mo
87.06 427.14 li
116.1 427.14 li
115.8 427.44 li
115.8 412.92 li
116.1 413.28 li
87.06 413.28 li
87.42 412.92 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
gsave
97.02 420.72 mo
106.2 420.72 li
106.2 411.36 li
97.02 411.36 li
cp
clp
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
97.02 422.46 mo
(m)sh
grestore
gsave
65.28 333.66 mo
529.74 333.66 li
529.74 420.72 li
65.28 420.72 li
cp
eclp
192 419.1 mo
192 418.92 li
193.293 412.417 225.746 411.296 230.52 411.54 cv
230.64 411.66 li
230.4 411.54 li
232.38 411.54 li
281.03 412.371 281.048 425.925 232.38 426.66 cv
230.4 426.66 li
230.7 426.18 li
231.06 426.72 li
228.48 426.72 li
223.412 426.754 194.11 425.676 192.06 419.58 cv
192 419.34 li
cp
192.66 419.28 mo
192.66 419.22 li
192.66 419.46 li
192.66 419.4 li
192.78 419.76 li
192.78 419.7 li
193.02 420.06 li
193.02 420 li
193.14 420.18 li
193.5 420.54 li
193.5 420.48 li
193.74 420.66 li
193.68 420.66 li
194.22 421.02 li
194.82 421.32 li
194.76 421.32 li
195.48 421.68 li
195.42 421.68 li
196.2 421.98 li
197.04 422.28 li
197.94 422.58 li
198.9 422.88 li
199.98 423.18 li
201.12 423.42 li
201.06 423.42 li
202.26 423.66 li
204.404 424.225 206.944 424.493 209.16 424.8 cv
210.72 425.04 li
210.72 424.98 li
212.28 425.16 li
217.727 425.765 223.003 426.001 228.48 426.06 cv
230.4 426.06 li
230.16 426.6 li
229.8 426.06 li
232.38 426.06 li
237.26 425.912 242.035 425.805 246.9 425.34 cv
248.58 425.16 li
248.52 425.16 li
250.14 424.98 li
251.7 424.8 li
253.2 424.62 li
254.64 424.38 li
254.58 424.38 li
256.02 424.2 li
255.96 424.2 li
257.34 423.96 li
257.28 423.96 li
258.54 423.66 li
259.74 423.42 li
260.88 423.18 li
261.96 422.88 li
261.9 422.88 li
262.92 422.58 li
263.82 422.28 li
264.66 421.98 li
265.38 421.68 li
266.1 421.32 li
266.04 421.32 li
266.64 421.02 li
267.36 420.48 li
267.36 420.54 li
267.72 420.18 li
267.66 420.18 li
267.84 420 li
267.84 420.06 li
267.96 419.88 li
268.08 419.7 li
268.02 419.76 li
268.14 419.58 li
268.2 419.4 li
268.14 419.46 li
268.2 419.22 li
268.2 419.28 li
268.2 419.1 li
268.2 419.16 li
268.2 418.98 li
268.14 418.8 li
268.2 418.86 li
268.14 418.68 li
268.02 418.5 li
268.08 418.56 li
267.84 418.2 li
267.84 418.26 li
267.66 418.08 li
267.72 418.08 li
267.36 417.72 li
267.12 417.54 li
267.12 417.6 li
266.64 417.24 li
266.04 416.88 li
266.1 416.94 li
265.38 416.58 li
265.44 416.58 li
264.66 416.28 li
262.537 415.467 260.742 415.045 258.54 414.54 cv
257.28 414.3 li
257.34 414.3 li
255.96 414.06 li
256.02 414.06 li
254.58 413.82 li
254.64 413.82 li
253.2 413.64 li
245.806 412.558 237.75 412.172 230.28 412.2 cv
230.16 412.08 li
230.4 412.2 li
228.48 412.2 li
224.255 412.186 219.861 412.454 215.64 412.74 cv
213.9 412.92 li
213.96 412.92 li
212.28 413.04 li
208.926 413.406 205.569 413.873 202.26 414.54 cv
201.06 414.84 li
201.12 414.84 li
199.98 415.08 li
198.9 415.38 li
197.94 415.68 li
197.04 415.98 li
196.2 416.28 li
195.42 416.58 li
195.48 416.58 li
194.76 416.94 li
194.82 416.94 li
194.22 417.24 li
193.68 417.6 li
193.74 417.54 li
193.5 417.72 li
193.14 418.08 li
193.02 418.26 li
193.02 418.2 li
192.78 418.56 li
192.78 418.5 li
192.72 418.68 li
192.66 418.86 li
192.66 418.8 li
192.66 419.16 li
192.66 419.1 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
gsave
196.68 420.72 mo
263.04 420.72 li
263.04 410.28 li
196.68 410.28 li
cp
clp
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
196.92 421.38 mo
(x.name:x.type)
[5.03195 2.92513 5.9749 5.9749 9.1991 5.55574 3.11143 5.03195 2.63528 3.89133 5.19501 5.97491 
0 ]xsh
grestore
gsave
65.28 333.66 mo
529.74 333.66 li
529.74 420.72 li
65.28 420.72 li
cp
eclp
116.1 419.88 mo
126.36 419.52 li
126.36 420.18 li
116.1 420.54 li
cp
122.58 417.48 mo
127.02 419.82 li
122.76 422.52 li
122.52 422.58 li
122.28 422.4 li
122.28 422.16 li
122.4 421.98 li
126.18 419.58 li
126.18 420.18 li
122.28 418.02 li
122.1 417.84 li
122.16 417.6 li
122.34 417.42 li
122.58 417.48 li
.92929 .879301 .889677 .799283 cmyk
f
181.68 419.16 mo
184.26 419.04 li
184.26 419.7 li
181.68 419.82 li
cp
186.18 418.98 mo
188.76 418.92 li
188.76 419.58 li
186.18 419.64 li
cp
190.68 418.86 mo
191.94 418.8 li
191.94 419.46 li
190.74 419.52 li
cp
188.16 416.7 mo
192.54 419.1 li
188.28 421.8 li
188.04 421.86 li
187.86 421.68 li
187.8 421.44 li
187.98 421.26 li
191.76 418.86 li
191.76 419.4 li
187.8 417.3 li
187.68 417.12 li
187.68 416.88 li
187.86 416.7 li
188.16 416.7 li
f
grestore
188.4 362.76 mo
189.06 362.76 li
189.06 365.34 li
188.4 365.34 li
cp
189.06 362.76 mo
cp
189.06 367.26 mo
189 369.84 li
188.4 369.84 li
188.4 367.26 li
cp
188.4 371.76 mo
189 371.76 li
189 373.02 li
188.4 373.02 li
cp
189 371.76 mo
cp
191.22 369.3 mo
188.7 373.62 li
186.18 369.3 li
186.12 369.06 li
186.3 368.82 li
186.54 368.82 li
186.72 368.94 li
189 372.84 li
188.4 372.84 li
190.68 369 li
190.86 368.82 li
191.1 368.88 li
191.28 369.06 li
191.22 369.3 li
.92929 .879301 .889677 .799283 cmyk
f
112.08 365.76 mo
112.08 366 li
112.137 366.59 112.546 367.292 112.92 367.74 cv
113.04 367.86 li
112.56 368.28 li
112.44 368.16 li
112.2 367.86 li
111.84 367.26 li
111.48 366.36 li
111.48 366.06 li
111.42 365.76 li
cp
114.42 369.12 mo
114.66 369.3 li
115.08 369.6 li
115.44 369.84 li
116.34 370.32 li
116.58 370.44 li
116.28 371.04 li
115.98 370.92 li
115.08 370.38 li
114.72 370.08 li
114.3 369.84 li
114 369.66 li
cp
118.26 371.28 mo
118.32 371.34 li
119.46 371.82 li
120.66 372.24 li
120.42 372.9 li
120.42 372.84 li
119.16 372.42 li
118.02 371.88 li
cp
122.46 372.9 mo
123.24 373.14 li
124.62 373.56 li
124.92 373.62 li
124.74 374.28 li
124.44 374.22 li
123.06 373.74 li
122.28 373.5 li
cp
126.78 374.16 mo
127.62 374.34 li
129.18 374.7 li
129.24 374.76 li
129.12 375.36 li
129 375.36 li
127.44 375 li
126.6 374.76 li
cp
131.16 375.12 mo
132.42 375.42 li
133.68 375.6 li
133.56 376.26 li
131.04 375.78 li
cp
135.6 375.96 mo
135.9 375.96 li
137.64 376.26 li
138.12 376.32 li
138.06 376.92 li
137.58 376.86 li
135.78 376.62 li
135.48 376.56 li
cp
140.04 376.5 mo
141.3 376.68 li
142.62 376.8 li
142.56 377.4 li
141.24 377.28 li
139.98 377.16 li
cp
144.54 376.92 mo
145.02 376.98 li
146.94 377.1 li
147.12 377.1 li
147.06 377.76 li
146.88 377.76 li
144.96 377.64 li
144.48 377.58 li
cp
149.04 377.16 mo
150.72 377.22 li
151.62 377.22 li
151.62 377.88 li
150.72 377.88 li
149.04 377.82 li
cp
148.32 375 mo
152.64 377.58 li
148.26 380.04 li
148.02 380.1 li
147.78 379.92 li
147.78 379.68 li
147.9 379.5 li
151.8 377.28 li
151.8 377.82 li
147.96 375.54 li
147.84 375.36 li
147.84 375.12 li
148.08 374.94 li
148.32 375 li
f
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
263.82 360.78 mo
( )sh
239.16 357.42 mo
239.22 357 li
239.34 356.58 li
243.562 347.645 289.763 347.619 294.12 356.58 cv
294.24 357 li
294.24 357.84 li
292.944 363.159 276.438 364.731 272.22 364.86 cv
270.9 364.92 li
269.52 364.98 li
262.855 365.235 244.734 364.557 239.76 359.1 cv
239.52 358.68 li
239.34 358.32 li
239.22 357.84 li
cp
239.88 357.78 mo
239.82 357.72 li
239.94 358.08 li
239.94 358.02 li
240.12 358.38 li
240.06 358.38 li
240.3 358.74 li
240.3 358.68 li
240.6 359.04 li
240.96 359.34 li
240.9 359.34 li
241.32 359.7 li
241.32 359.64 li
241.8 360 li
242.34 360.3 li
242.94 360.6 li
243.6 360.9 li
243.54 360.9 li
244.26 361.2 li
245.04 361.5 li
244.98 361.44 li
245.82 361.74 li
246.66 361.98 li
247.56 362.28 li
248.52 362.52 li
248.46 362.46 li
250.5 362.94 li
251.58 363.12 li
251.52 363.12 li
252.66 363.3 li
257.253 364.072 262.049 364.311 266.7 364.38 cv
269.52 364.32 li
269.46 364.32 li
270.84 364.26 li
275.152 364.09 279.764 363.637 283.98 362.7 cv
284.94 362.46 li
284.94 362.52 li
285.9 362.28 li
286.8 361.98 li
286.74 361.98 li
287.64 361.74 li
288.42 361.5 li
289.2 361.2 li
289.14 361.2 li
289.86 360.9 li
290.52 360.6 li
291.12 360.3 li
291.06 360.3 li
291.6 360 li
292.08 359.64 li
292.08 359.7 li
292.5 359.34 li
292.86 359.04 li
293.16 358.68 li
293.1 358.74 li
293.34 358.38 li
293.52 358.02 li
293.46 358.08 li
293.58 357.72 li
293.58 357.78 li
293.58 357.42 li
293.58 357.48 li
293.58 357.12 li
293.46 356.76 li
293.52 356.82 li
293.34 356.46 li
293.34 356.52 li
293.1 356.16 li
293.16 356.16 li
292.8 355.8 li
292.86 355.86 li
292.5 355.5 li
292.08 355.2 li
291.6 354.9 li
291.66 354.9 li
291.06 354.54 li
291.12 354.6 li
290.52 354.24 li
289.86 353.94 li
289.14 353.7 li
289.2 353.7 li
287.64 353.1 li
286.74 352.86 li
286.8 352.86 li
285.9 352.62 li
280.987 351.332 275.907 350.779 270.84 350.58 cv
269.46 350.52 li
269.52 350.52 li
266.7 350.52 li
260.927 350.471 255.131 350.937 249.48 352.14 cv
248.46 352.38 li
248.52 352.38 li
247.56 352.62 li
246.66 352.86 li
245.82 353.1 li
244.98 353.4 li
245.04 353.4 li
244.26 353.7 li
243.54 353.94 li
243.6 353.94 li
242.94 354.24 li
242.34 354.6 li
242.34 354.54 li
241.8 354.9 li
241.32 355.2 li
240.9 355.5 li
240.96 355.5 li
240.3 356.16 li
240.06 356.52 li
240.12 356.46 li
239.94 356.82 li
239.94 356.76 li
239.82 357.12 li
239.88 357.06 li
239.82 357.48 li
239.82 357.42 li
.92929 .879301 .889677 .799283 cmyk
f
267.06 364.68 mo
267 364.98 li
266.983 365.669 266.724 366.378 266.34 366.96 cv
266.16 367.26 li
265.62 366.9 li
265.8 366.66 li
266.05 366.118 266.319 365.583 266.4 364.98 cv
266.4 364.68 li
cp
264.78 368.76 mo
264.72 368.82 li
264.36 369.12 li
263.64 369.66 li
262.8 370.26 li
262.68 370.32 li
262.32 369.78 li
262.44 369.72 li
263.22 369.18 li
263.94 368.58 li
264.3 368.34 li
264.36 368.28 li
cp
261 371.28 mo
258.72 372.42 li
258.6 372.42 li
258.36 371.82 li
258.42 371.82 li
259.56 371.28 li
260.58 370.8 li
260.64 370.74 li
cp
256.8 373.14 mo
256.26 373.38 li
254.94 373.86 li
254.34 374.04 li
254.16 373.44 li
254.7 373.26 li
256.02 372.78 li
256.56 372.54 li
cp
252.54 374.58 mo
252.12 374.7 li
250.62 375.12 li
250.02 375.3 li
249.84 374.64 li
250.44 374.52 li
251.94 374.1 li
252.3 373.98 li
cp
248.1 375.72 mo
245.94 376.2 li
245.58 376.26 li
245.46 375.6 li
245.82 375.54 li
247.44 375.24 li
247.98 375.12 li
cp
243.66 376.62 mo
242.64 376.8 li
241.14 376.98 li
241.02 376.38 li
242.52 376.14 li
243.54 375.96 li
cp
239.16 377.28 mo
237.48 377.46 li
236.58 377.52 li
236.58 376.86 li
237.42 376.8 li
239.1 376.62 li
cp
234.66 377.7 mo
234 377.7 li
232.2 377.82 li
232.08 377.82 li
232.08 377.16 li
232.14 377.16 li
233.94 377.1 li
234.6 377.04 li
cp
230.16 377.88 mo
229.26 377.88 li
229.26 377.22 li
230.16 377.22 li
cp
232.98 380.04 mo
228.6 377.58 li
232.92 375 li
233.16 374.94 li
233.34 375.12 li
233.4 375.36 li
233.28 375.54 li
229.38 377.82 li
229.38 377.28 li
233.28 379.5 li
233.46 379.68 li
233.4 379.92 li
233.22 380.1 li
232.98 380.04 li
f
384.36 394.5 mo
384.36 394.26 li
385.795 387.705 417.987 386.73 422.88 386.88 cv
423 387 li
422.76 386.94 li
424.74 386.94 li
473.355 387.671 473.337 401.302 424.74 402.06 cv
422.76 402.06 li
423 401.52 li
423.42 402.06 li
420.78 402.06 li
415.706 402.216 386.514 400.994 384.42 394.98 cv
384.36 394.74 li
cp
384.96 394.68 mo
384.96 394.62 li
385.02 394.8 li
385.02 394.74 li
385.14 395.1 li
385.14 395.04 li
385.26 395.22 li
385.2 395.22 li
385.38 395.4 li
385.32 395.4 li
385.68 395.76 li
385.62 395.7 li
385.86 395.88 li
385.8 395.88 li
386.04 396.06 li
386.52 396.36 li
387.12 396.72 li
387.78 397.02 li
388.56 397.32 li
388.5 397.32 li
389.34 397.62 li
390.3 397.92 li
390.24 397.92 li
391.26 398.22 li
400.396 400.715 411.342 401.283 420.78 401.4 cv
422.76 401.4 li
422.52 401.94 li
422.1 401.4 li
424.68 401.4 li
433.748 401.341 443.21 400.682 452.1 398.82 cv
453.24 398.52 li
453.18 398.52 li
454.26 398.22 li
455.28 397.92 li
455.22 397.92 li
456.18 397.62 li
457.02 397.32 li
456.96 397.32 li
457.74 397.02 li
458.4 396.72 li
459 396.36 li
458.94 396.36 li
459.48 396.06 li
459.66 395.88 li
459.9 395.7 li
459.84 395.7 li
460.02 395.58 li
460.2 395.4 li
460.14 395.4 li
460.32 395.22 li
460.26 395.28 li
460.38 395.04 li
460.38 395.1 li
460.5 394.74 li
460.5 394.8 li
460.56 394.62 li
460.5 394.68 li
460.56 394.5 li
460.5 394.32 li
460.56 394.38 li
460.44 394.02 li
460.44 394.08 li
460.38 393.9 li
460.26 393.72 li
460.32 393.78 li
460.14 393.6 li
460.2 393.6 li
459.84 393.24 li
459.9 393.3 li
459.66 393.12 li
459.48 392.94 li
458.94 392.58 li
459 392.64 li
458.4 392.28 li
457.74 391.98 li
456.96 391.62 li
457.02 391.68 li
456.18 391.32 li
455.22 391.02 li
455.28 391.02 li
454.26 390.72 li
453.18 390.48 li
453.24 390.48 li
452.1 390.18 li
444.931 388.643 437.757 388.008 430.44 387.72 cv
428.52 387.66 li
428.58 387.66 li
426.66 387.6 li
424.74 387.6 li
422.64 387.54 li
422.52 387.48 li
422.76 387.54 li
420.78 387.54 li
414.85 387.695 408.913 387.907 403.02 388.62 cv
401.46 388.8 li
401.52 388.8 li
400.02 388.98 li
397.049 389.478 394.175 389.944 391.26 390.72 cv
390.24 391.02 li
390.3 391.02 li
389.34 391.32 li
388.5 391.68 li
388.56 391.62 li
387.78 391.98 li
387.12 392.28 li
386.52 392.64 li
386.52 392.58 li
385.8 393.12 li
385.86 393.12 li
385.62 393.3 li
385.68 393.24 li
385.32 393.6 li
385.38 393.6 li
385.2 393.78 li
385.26 393.72 li
385.14 393.9 li
385.08 394.08 li
385.08 394.02 li
384.96 394.38 li
384.96 394.32 li
384.96 394.5 li
f
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
389.52 396.54 mo
(x.name:x.type)
[5.03195 2.92511 5.97491 5.97491 9.1991 5.55573 3.11142 5.03195 2.63531 3.89133 5.19498 5.97491 
0 ]xsh
297.12 394.44 mo
297.12 394.2 li
298.518 387.847 328.835 386.783 333.6 386.82 cv
335.76 386.82 li
335.82 387 li
335.58 386.82 li
337.5 386.88 li
386.15 387.61 386.207 401.19 337.5 402 cv
335.52 402 li
335.82 401.46 li
336.18 402 li
333.6 402 li
328.388 402.067 299.395 401.001 297.18 394.86 cv
297.12 394.68 li
cp
297.78 394.62 mo
297.78 394.56 li
297.84 394.74 li
297.78 394.68 li
297.84 394.86 li
297.96 395.04 li
297.9 394.98 li
298.26 395.52 li
298.26 395.46 li
298.62 395.82 li
298.86 396 li
298.86 395.94 li
299.34 396.3 li
299.94 396.66 li
299.88 396.6 li
300.6 396.96 li
300.54 396.96 li
301.32 397.26 li
302.16 397.56 li
303.06 397.86 li
304.08 398.16 li
304.02 398.16 li
305.1 398.46 li
306.24 398.7 li
307.44 399 li
308.7 399.24 li
308.64 399.24 li
310.02 399.48 li
309.96 399.48 li
311.4 399.72 li
311.34 399.72 li
312.78 399.9 li
319.494 400.896 326.814 401.276 333.6 401.34 cv
335.58 401.34 li
335.28 401.88 li
334.92 401.34 li
337.5 401.34 li
340.703 401.294 343.659 401.211 346.86 401.04 cv
348.66 400.92 li
348.6 400.92 li
350.34 400.8 li
354.879 400.415 359.25 399.906 363.72 399 cv
364.92 398.7 li
364.86 398.7 li
366 398.46 li
367.08 398.16 li
368.04 397.86 li
368.94 397.56 li
369.78 397.26 li
370.56 396.96 li
370.5 396.96 li
371.22 396.6 li
371.16 396.66 li
371.76 396.3 li
372.3 396 li
372.24 396 li
372.48 395.82 li
372.84 395.46 li
372.84 395.52 li
372.96 395.34 li
373.2 394.98 li
373.2 395.04 li
373.32 394.68 li
373.32 394.74 li
373.32 394.56 li
373.32 394.62 li
373.32 394.38 li
373.32 394.44 li
373.32 394.26 li
373.32 394.32 li
373.32 394.14 li
373.26 393.96 li
373.26 394.02 li
373.2 393.84 li
372.96 393.48 li
372.96 393.54 li
372.84 393.36 li
372.48 393 li
372.48 393.06 li
372.24 392.88 li
372.3 392.88 li
371.76 392.52 li
371.16 392.22 li
371.22 392.22 li
370.5 391.86 li
370.56 391.92 li
369.78 391.56 li
368.038 390.881 366.655 390.566 364.86 390.12 cv
363.66 389.88 li
363.72 389.88 li
362.46 389.58 li
354.22 388.146 345.853 387.61 337.5 387.48 cv
335.34 387.48 li
335.28 387.3 li
335.52 387.48 li
333.6 387.48 li
328.123 387.537 322.848 387.778 317.4 388.38 cv
315.84 388.56 li
315.84 388.5 li
314.28 388.74 li
312.78 388.92 li
311.34 389.16 li
309.96 389.34 li
310.02 389.34 li
308.7 389.58 li
307.44 389.88 li
306.24 390.12 li
305.1 390.42 li
304.02 390.66 li
304.08 390.66 li
303.06 390.96 li
302.16 391.26 li
301.32 391.56 li
300.54 391.92 li
300.6 391.86 li
299.88 392.22 li
299.94 392.22 li
299.34 392.52 li
298.62 393.06 li
298.62 393 li
298.26 393.36 li
298.32 393.36 li
298.14 393.54 li
298.14 393.48 li
297.9 393.84 li
297.96 393.84 li
297.84 394.02 li
297.84 393.96 li
297.78 394.14 li
297.84 394.14 li
297.78 394.32 li
297.78 394.26 li
297.78 394.44 li
297.78 394.38 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
303.78 397.68 mo
(y.name:y.type)
[4.67703 2.93442 5.9877 5.9877 9.21191 5.56854 3.12424 4.61649 2.63528 3.90414 5.15659 5.93765 
0 ]xsh
373.74 394.68 mo
376.32 394.62 li
376.38 395.28 li
373.8 395.34 li
cp
378.3 394.56 mo
380.82 394.5 li
380.88 395.1 li
378.3 395.22 li
cp
382.8 394.44 mo
384 394.38 li
384 395.04 li
382.8 395.04 li
cp
380.22 392.28 mo
384.66 394.68 li
380.4 397.38 li
380.16 397.38 li
379.92 397.26 li
379.92 397.02 li
380.04 396.78 li
383.82 394.44 li
383.88 394.98 li
379.92 392.82 li
379.74 392.64 li
379.8 392.4 li
379.98 392.28 li
380.22 392.28 li
.92929 .879301 .889677 .799283 cmyk
f
gsave
65.28 420.72 mo
529.74 420.72 li
529.74 507.78 li
65.28 507.78 li
cp
eclp
65.28 507.8 mo
529.74 507.8 li
529.74 420.68 li
65.28 420.68 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
126.66 419.82 mo
126.72 419.4 li
126.84 418.98 li
131.083 410.079 177.303 410.069 181.62 418.98 cv
181.74 419.4 li
181.74 420.3 li
180.301 425.61 164.01 427.11 159.72 427.26 cv
158.4 427.32 li
157.02 427.38 li
150.612 427.642 131.981 426.956 127.32 421.5 cv
127.02 421.14 li
126.84 420.72 li
126.72 420.3 li
cp
127.38 420.18 mo
127.32 420.12 li
127.44 420.48 li
127.44 420.42 li
127.62 420.84 li
127.56 420.78 li
127.8 421.14 li
127.8 421.08 li
128.1 421.44 li
128.46 421.74 li
128.4 421.74 li
128.82 422.1 li
129.3 422.4 li
129.84 422.7 li
130.44 423 li
131.1 423.3 li
131.04 423.3 li
131.76 423.6 li
132.54 423.9 li
133.32 424.14 li
134.16 424.44 li
135.06 424.68 li
136.02 424.92 li
135.96 424.92 li
136.98 425.16 li
142.793 426.354 148.263 426.782 154.2 426.78 cv
157.02 426.72 li
156.96 426.72 li
158.34 426.72 li
163.407 426.488 168.48 425.947 173.4 424.68 cv
174.3 424.44 li
174.24 424.44 li
175.14 424.14 li
175.92 423.9 li
176.7 423.6 li
176.64 423.6 li
177.36 423.3 li
178.02 423 li
178.62 422.7 li
178.56 422.7 li
179.16 422.4 li
179.1 422.4 li
179.58 422.1 li
180 421.74 li
180 421.8 li
180.36 421.44 li
180.66 421.08 li
180.6 421.14 li
180.84 420.78 li
180.84 420.84 li
181.02 420.42 li
180.96 420.48 li
181.08 420.12 li
181.08 420.18 li
181.14 419.82 li
181.14 419.88 li
181.08 419.52 li
181.08 419.58 li
180.96 419.22 li
181.02 419.22 li
180.84 418.86 li
180.84 418.92 li
180.6 418.56 li
180.66 418.62 li
180.36 418.26 li
180 417.9 li
180 417.96 li
179.58 417.6 li
179.1 417.3 li
179.16 417.3 li
178.56 417 li
178.62 417 li
178.02 416.7 li
177.36 416.4 li
176.64 416.1 li
176.7 416.1 li
175.92 415.8 li
175.14 415.56 li
174.24 415.26 li
174.3 415.26 li
173.4 415.02 li
171.48 414.54 li
170.46 414.36 li
169.38 414.12 li
169.38 414.18 li
168.3 413.94 li
164.959 413.421 161.716 413.141 158.34 412.98 cv
156.96 412.98 li
157.02 412.98 li
154.2 412.92 li
149.443 412.924 144.859 413.2 140.16 413.94 cv
139.08 414.18 li
139.08 414.12 li
138 414.36 li
136.98 414.54 li
135.96 414.78 li
136.02 414.78 li
135.06 415.02 li
134.16 415.26 li
133.32 415.56 li
132.54 415.8 li
131.76 416.1 li
131.04 416.4 li
131.1 416.4 li
130.44 416.7 li
129.84 417 li
129.3 417.3 li
128.82 417.6 li
128.4 417.96 li
128.46 417.9 li
128.1 418.26 li
127.8 418.62 li
127.8 418.56 li
127.56 418.92 li
127.62 418.86 li
127.44 419.22 li
127.32 419.58 li
127.38 419.52 li
127.32 419.88 li
127.32 419.82 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
gsave
140.58 426.18 mo
167.58 426.18 li
167.58 420.72 li
140.58 420.72 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
140.58 423.06 mo
(null:T)
[6.00168 6.00166 2.68423 2.68423 3.1382 0 ]xsh
grestore
gsave
166.8 427.98 mo
170.7 427.98 li
170.7 420.72 li
166.8 420.72 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [7.74 0 0 -7.74 0 0 ]msf
166.8 425.88 mo
(0)sh
grestore
gsave
65.28 420.72 mo
529.74 420.72 li
529.74 507.78 li
65.28 507.78 li
cp
eclp
86.76 412.92 mo
86.88 412.74 li
87.06 412.62 li
116.1 412.62 li
116.34 412.74 li
116.46 412.92 li
116.46 427.44 li
116.34 427.68 li
116.1 427.8 li
87.06 427.8 li
86.88 427.68 li
86.76 427.44 li
cp
87.42 427.44 mo
87.06 427.14 li
116.1 427.14 li
115.8 427.44 li
115.8 412.92 li
116.1 413.28 li
87.06 413.28 li
87.42 412.92 li
f
grestore
gsave
97.02 425.58 mo
106.2 425.58 li
106.2 420.72 li
97.02 420.72 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
97.02 422.46 mo
(m)sh
grestore
gsave
65.28 420.72 mo
529.74 420.72 li
529.74 507.78 li
65.28 507.78 li
cp
eclp
192 419.1 mo
192 418.92 li
193.293 412.417 225.746 411.296 230.52 411.54 cv
230.64 411.66 li
230.4 411.54 li
232.38 411.54 li
281.03 412.371 281.048 425.925 232.38 426.66 cv
230.4 426.66 li
230.7 426.18 li
231.06 426.72 li
228.48 426.72 li
223.412 426.754 194.11 425.676 192.06 419.58 cv
192 419.34 li
cp
192.66 419.28 mo
192.66 419.22 li
192.66 419.46 li
192.66 419.4 li
192.78 419.76 li
192.78 419.7 li
193.02 420.06 li
193.02 420 li
193.14 420.18 li
193.5 420.54 li
193.5 420.48 li
193.74 420.66 li
193.68 420.66 li
194.22 421.02 li
194.82 421.32 li
194.76 421.32 li
195.48 421.68 li
195.42 421.68 li
196.2 421.98 li
197.04 422.28 li
197.94 422.58 li
198.9 422.88 li
199.98 423.18 li
201.12 423.42 li
201.06 423.42 li
202.26 423.66 li
204.404 424.225 206.944 424.493 209.16 424.8 cv
210.72 425.04 li
210.72 424.98 li
212.28 425.16 li
217.727 425.765 223.003 426.001 228.48 426.06 cv
230.4 426.06 li
230.16 426.6 li
229.8 426.06 li
232.38 426.06 li
237.26 425.912 242.035 425.805 246.9 425.34 cv
248.58 425.16 li
248.52 425.16 li
250.14 424.98 li
251.7 424.8 li
253.2 424.62 li
254.64 424.38 li
254.58 424.38 li
256.02 424.2 li
255.96 424.2 li
257.34 423.96 li
257.28 423.96 li
258.54 423.66 li
259.74 423.42 li
260.88 423.18 li
261.96 422.88 li
261.9 422.88 li
262.92 422.58 li
263.82 422.28 li
264.66 421.98 li
265.38 421.68 li
266.1 421.32 li
266.04 421.32 li
266.64 421.02 li
267.36 420.48 li
267.36 420.54 li
267.72 420.18 li
267.66 420.18 li
267.84 420 li
267.84 420.06 li
267.96 419.88 li
268.08 419.7 li
268.02 419.76 li
268.14 419.58 li
268.2 419.4 li
268.14 419.46 li
268.2 419.22 li
268.2 419.28 li
268.2 419.1 li
268.2 419.16 li
268.2 418.98 li
268.14 418.8 li
268.2 418.86 li
268.14 418.68 li
268.02 418.5 li
268.08 418.56 li
267.84 418.2 li
267.84 418.26 li
267.66 418.08 li
267.72 418.08 li
267.36 417.72 li
267.12 417.54 li
267.12 417.6 li
266.64 417.24 li
266.04 416.88 li
266.1 416.94 li
265.38 416.58 li
265.44 416.58 li
264.66 416.28 li
262.537 415.467 260.742 415.045 258.54 414.54 cv
257.28 414.3 li
257.34 414.3 li
255.96 414.06 li
256.02 414.06 li
254.58 413.82 li
254.64 413.82 li
253.2 413.64 li
245.806 412.558 237.75 412.172 230.28 412.2 cv
230.16 412.08 li
230.4 412.2 li
228.48 412.2 li
224.255 412.186 219.861 412.454 215.64 412.74 cv
213.9 412.92 li
213.96 412.92 li
212.28 413.04 li
208.926 413.406 205.569 413.873 202.26 414.54 cv
201.06 414.84 li
201.12 414.84 li
199.98 415.08 li
198.9 415.38 li
197.94 415.68 li
197.04 415.98 li
196.2 416.28 li
195.42 416.58 li
195.48 416.58 li
194.76 416.94 li
194.82 416.94 li
194.22 417.24 li
193.68 417.6 li
193.74 417.54 li
193.5 417.72 li
193.14 418.08 li
193.02 418.26 li
193.02 418.2 li
192.78 418.56 li
192.78 418.5 li
192.72 418.68 li
192.66 418.86 li
192.66 418.8 li
192.66 419.16 li
192.66 419.1 li
f
grestore
gsave
196.68 424.5 mo
263.04 424.5 li
263.04 420.72 li
196.68 420.72 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
196.92 421.38 mo
(x.name:x.type)
[5.03195 2.92513 5.9749 5.9749 9.1991 5.55574 3.11143 5.03195 2.63528 3.89133 5.19501 5.97491 
0 ]xsh
grestore
gsave
65.28 420.72 mo
529.74 420.72 li
529.74 507.78 li
65.28 507.78 li
cp
eclp
116.1 419.88 mo
126.36 419.52 li
126.36 420.18 li
116.1 420.54 li
cp
122.58 417.48 mo
127.02 419.82 li
122.76 422.52 li
122.52 422.58 li
122.28 422.4 li
122.28 422.16 li
122.4 421.98 li
126.18 419.58 li
126.18 420.18 li
122.28 418.02 li
122.1 417.84 li
122.16 417.6 li
122.34 417.42 li
122.58 417.48 li
f
181.68 419.16 mo
184.26 419.04 li
184.26 419.7 li
181.68 419.82 li
cp
186.18 418.98 mo
188.76 418.92 li
188.76 419.58 li
186.18 419.64 li
cp
190.68 418.86 mo
191.94 418.8 li
191.94 419.46 li
190.74 419.52 li
cp
188.16 416.7 mo
192.54 419.1 li
188.28 421.8 li
188.04 421.86 li
187.86 421.68 li
187.8 421.44 li
187.98 421.26 li
191.76 418.86 li
191.76 419.4 li
187.8 417.3 li
187.68 417.12 li
187.68 416.88 li
187.86 416.7 li
188.16 416.7 li
f
grestore
173.88 455.52 mo
173.88 455.1 li
173.94 454.68 li
176.663 445.716 204.376 445.732 207.06 454.68 cv
207.12 455.1 li
207.18 455.52 li
206.017 465.409 177.166 465.379 174.06 456.72 cv
173.94 456.36 li
173.88 455.94 li
cp
174.54 455.88 mo
174.54 455.82 li
174.6 456.24 li
174.6 456.18 li
174.66 456.54 li
174.66 456.48 li
174.78 456.84 li
174.96 457.2 li
174.96 457.14 li
175.2 457.5 li
175.44 457.8 li
175.38 457.8 li
175.68 458.16 li
175.68 458.1 li
176.04 458.46 li
175.98 458.4 li
176.34 458.76 li
176.34 458.7 li
176.76 459.06 li
176.7 459 li
177.12 459.3 li
178.512 460.168 179.292 460.51 180.84 461.04 cv
181.5 461.22 li
181.44 461.22 li
182.82 461.58 li
182.76 461.58 li
184.2 461.88 li
185.7 462.12 li
187.26 462.3 li
188.88 462.42 li
188.82 462.42 li
190.5 462.48 li
192.18 462.42 li
193.8 462.3 li
193.74 462.3 li
195.3 462.12 li
196.8 461.88 li
198.24 461.58 li
198.18 461.58 li
199.56 461.22 li
200.515 460.915 201.542 460.577 202.44 460.14 cv
202.98 459.84 li
202.92 459.84 li
203.46 459.6 li
203.4 459.6 li
203.88 459.3 li
204.3 459 li
204.3 459.06 li
204.66 458.7 li
204.66 458.76 li
205.02 458.4 li
205.02 458.46 li
205.32 458.1 li
205.32 458.16 li
205.62 457.8 li
205.56 457.8 li
205.86 457.5 li
206.04 457.14 li
206.04 457.2 li
206.22 456.84 li
206.34 456.48 li
206.34 456.54 li
206.46 456.18 li
206.46 456.24 li
206.52 455.82 li
206.52 455.88 li
206.52 455.16 li
206.52 455.22 li
206.46 454.86 li
206.34 454.5 li
206.34 454.56 li
206.22 454.2 li
206.04 453.84 li
206.04 453.9 li
205.86 453.54 li
205.62 453.24 li
205.32 452.94 li
205.02 452.58 li
205.02 452.64 li
204.66 452.28 li
204.66 452.34 li
204.3 452.04 li
203.88 451.74 li
203.4 451.44 li
203.46 451.44 li
202.92 451.2 li
202.98 451.2 li
202.44 450.9 li
202.44 450.96 li
201.9 450.66 li
201.36 450.42 li
201.36 450.48 li
200.16 450 li
199.56 449.82 li
198.18 449.46 li
198.24 449.46 li
196.8 449.16 li
195.3 448.92 li
193.74 448.74 li
193.8 448.74 li
192.18 448.62 li
190.5 448.56 li
188.82 448.62 li
188.88 448.62 li
187.26 448.74 li
185.7 448.92 li
184.2 449.16 li
182.76 449.46 li
182.82 449.46 li
181.44 449.82 li
181.5 449.82 li
180.84 450 li
179.64 450.48 li
179.64 450.42 li
179.1 450.66 li
178.56 450.96 li
177.6 451.44 li
177.12 451.74 li
176.7 452.04 li
176.76 452.04 li
176.34 452.34 li
176.34 452.28 li
175.98 452.64 li
176.04 452.58 li
175.38 453.24 li
175.44 453.24 li
175.14 453.54 li
175.2 453.54 li
174.96 453.9 li
174.96 453.84 li
174.78 454.2 li
174.66 454.56 li
174.66 454.5 li
174.6 454.86 li
174.54 455.22 li
174.54 455.16 li
174.48 455.52 li
f
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
182.34 458.76 mo
(p:T)
[5.99353 3.13005 0 ]xsh
217.38 448.62 mo
217.5 448.38 li
217.74 448.32 li
246.78 448.32 li
246.96 448.38 li
247.08 448.62 li
247.08 463.14 li
246.96 463.38 li
246.78 463.44 li
217.74 463.44 li
217.5 463.38 li
217.38 463.14 li
cp
218.04 463.14 mo
217.74 462.78 li
246.78 462.78 li
246.42 463.14 li
246.42 448.62 li
246.78 448.92 li
217.74 448.92 li
218.04 448.62 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
227.64 458.16 mo
(m)sh
206.82 455.58 mo
217.08 455.22 li
217.08 455.88 li
206.82 456.18 li
cp
213.3 453.12 mo
217.74 455.52 li
213.48 458.22 li
213.24 458.22 li
213 458.1 li
213 457.86 li
213.12 457.68 li
216.9 455.28 li
216.96 455.82 li
213 453.72 li
212.82 453.48 li
212.88 453.24 li
213.06 453.12 li
213.3 453.12 li
.92929 .879301 .889677 .799283 cmyk
f
86.76 456.24 mo
86.76 456.06 li
87.962 449.556 120.564 448.395 125.28 448.68 cv
125.4 448.8 li
125.16 448.68 li
127.14 448.68 li
175.774 449.463 175.809 463.088 127.14 463.8 cv
125.16 463.8 li
125.46 463.32 li
125.82 463.86 li
123.24 463.8 li
118.266 463.977 88.785 462.763 86.82 456.72 cv
86.76 456.48 li
cp
87.42 456.42 mo
87.42 456.36 li
87.42 456.54 li
87.48 456.72 li
87.48 456.66 li
87.54 456.84 li
87.78 457.2 li
87.78 457.14 li
87.9 457.32 li
88.26 457.68 li
88.26 457.62 li
88.5 457.8 li
88.44 457.8 li
88.98 458.16 li
89.52 458.46 li
90.24 458.82 li
90.18 458.76 li
90.96 459.12 li
91.8 459.42 li
92.7 459.72 li
93.66 460.02 li
94.74 460.32 li
94.74 460.26 li
95.88 460.56 li
95.82 460.56 li
97.02 460.8 li
105.405 462.553 114.689 463.029 123.24 463.2 cv
125.16 463.2 li
124.92 463.74 li
124.56 463.2 li
127.14 463.2 li
132.049 463.087 136.764 462.884 141.66 462.48 cv
143.34 462.3 li
143.28 462.3 li
144.9 462.12 li
146.46 461.94 li
147.96 461.76 li
149.4 461.52 li
149.34 461.52 li
150.78 461.34 li
150.72 461.34 li
152.1 461.1 li
152.04 461.1 li
153.3 460.8 li
154.5 460.56 li
155.64 460.26 li
155.64 460.32 li
156.72 460.02 li
156.66 460.02 li
157.68 459.72 li
158.58 459.42 li
159.42 459.12 li
160.14 458.76 li
160.14 458.82 li
160.86 458.46 li
160.8 458.46 li
161.4 458.16 li
162.12 457.62 li
162.12 457.68 li
162.48 457.32 li
162.42 457.32 li
162.6 457.14 li
162.6 457.2 li
162.84 456.84 li
162.78 456.9 li
162.9 456.66 li
162.9 456.72 li
162.96 456.54 li
162.9 456.6 li
162.96 456.36 li
162.96 456.42 li
162.96 456.24 li
162.96 456.3 li
162.96 456.12 li
162.9 455.94 li
162.96 456 li
162.9 455.82 li
162.78 455.64 li
162.84 455.7 li
162.6 455.34 li
162.42 455.16 li
162.48 455.22 li
162.12 454.86 li
161.88 454.68 li
161.88 454.74 li
161.4 454.38 li
160.8 454.02 li
160.86 454.08 li
160.14 453.72 li
160.2 453.72 li
159.42 453.42 li
157.297 452.607 155.502 452.185 153.3 451.68 cv
152.04 451.44 li
152.1 451.44 li
150.72 451.2 li
150.78 451.2 li
149.34 450.96 li
149.4 450.96 li
147.96 450.78 li
140.566 449.698 132.51 449.312 125.04 449.34 cv
124.92 449.22 li
125.16 449.28 li
123.18 449.34 li
123.24 449.34 li
121.26 449.34 li
119.4 449.4 li
117.48 449.46 li
117.54 449.46 li
115.68 449.52 li
112.08 449.76 li
110.34 449.88 li
110.4 449.88 li
108.66 450.06 li
108.72 450.06 li
107.04 450.18 li
103.686 450.546 100.329 451.013 97.02 451.68 cv
95.82 451.98 li
95.88 451.98 li
94.74 452.22 li
93.66 452.52 li
92.7 452.82 li
91.8 453.12 li
90.96 453.42 li
90.18 453.72 li
90.24 453.72 li
89.52 454.08 li
89.58 454.02 li
88.98 454.38 li
88.44 454.74 li
88.5 454.68 li
88.26 454.86 li
87.9 455.22 li
87.9 455.16 li
87.54 455.7 li
87.54 455.64 li
87.48 455.82 li
87.42 456 li
87.42 455.94 li
87.42 456.3 li
87.42 456.24 li
f
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
91.68 458.52 mo
(x.name:x.type)
[5.03196 2.92512 5.9749 5.9749 9.1991 5.55573 3.11143 5.03197 2.63528 3.89133 5.19501 5.97488 
0 ]xsh
163.26 455.88 mo
165.84 455.82 li
165.9 456.48 li
163.32 456.54 li
cp
167.82 455.76 mo
170.4 455.7 li
170.4 456.3 li
167.82 456.42 li
cp
172.32 455.64 mo
173.52 455.58 li
173.52 456.24 li
172.32 456.24 li
cp
169.74 453.48 mo
174.18 455.88 li
169.92 458.52 li
169.68 458.58 li
169.44 458.46 li
169.44 458.22 li
169.56 457.98 li
173.34 455.64 li
173.4 456.18 li
169.44 454.02 li
169.26 453.84 li
169.32 453.6 li
169.5 453.48 li
169.74 453.48 li
.92929 .879301 .889677 .799283 cmyk
f
173.88 484.56 mo
173.88 484.14 li
173.94 483.72 li
176.632 474.737 204.404 474.752 207.06 483.72 cv
207.18 484.56 li
206.015 494.416 177.184 494.411 174.06 485.76 cv
173.94 485.34 li
173.88 484.98 li
cp
174.54 484.92 mo
174.54 484.86 li
174.6 485.22 li
174.66 485.58 li
174.66 485.52 li
174.78 485.88 li
174.96 486.24 li
174.96 486.18 li
175.2 486.54 li
175.14 486.54 li
175.44 486.84 li
175.38 486.84 li
176.04 487.5 li
175.98 487.44 li
176.34 487.74 li
176.76 488.04 li
176.7 488.04 li
177.12 488.34 li
177.6 488.64 li
178.56 489.12 li
179.1 489.42 li
179.1 489.36 li
179.64 489.6 li
180.84 490.08 li
181.5 490.26 li
181.44 490.26 li
182.82 490.62 li
182.76 490.62 li
184.2 490.92 li
185.7 491.16 li
187.26 491.34 li
188.88 491.46 li
188.82 491.46 li
192.18 491.46 li
193.8 491.34 li
193.74 491.34 li
195.3 491.16 li
196.8 490.92 li
198.24 490.62 li
198.18 490.62 li
199.56 490.26 li
200.16 490.08 li
201.36 489.6 li
201.9 489.36 li
201.9 489.42 li
202.44 489.12 li
202.98 488.88 li
202.92 488.88 li
203.46 488.64 li
203.4 488.64 li
203.88 488.34 li
204.3 488.04 li
205.02 487.44 li
205.02 487.5 li
205.32 487.14 li
205.62 486.84 li
205.86 486.54 li
206.04 486.18 li
206.04 486.24 li
206.22 485.88 li
206.34 485.52 li
206.34 485.58 li
206.46 485.22 li
206.52 484.86 li
206.52 484.92 li
206.52 484.2 li
206.52 484.26 li
206.46 483.84 li
206.46 483.9 li
206.34 483.54 li
206.34 483.6 li
206.22 483.24 li
206.04 482.88 li
206.04 482.94 li
205.86 482.58 li
205.56 482.28 li
205.62 482.28 li
205.32 481.92 li
205.32 481.98 li
205.02 481.62 li
205.02 481.68 li
204.66 481.32 li
204.3 481.02 li
204.3 481.08 li
203.88 480.78 li
203.4 480.48 li
203.46 480.48 li
202.92 480.24 li
202.98 480.24 li
202.44 479.94 li
201.542 479.503 200.514 479.165 199.56 478.86 cv
198.18 478.5 li
198.24 478.5 li
196.8 478.2 li
195.3 477.96 li
193.74 477.78 li
193.8 477.78 li
192.18 477.66 li
190.5 477.6 li
188.82 477.66 li
188.88 477.66 li
187.26 477.78 li
185.7 477.96 li
184.2 478.2 li
182.76 478.5 li
182.82 478.5 li
181.44 478.86 li
181.5 478.86 li
180.84 479.04 li
179.292 479.57 178.512 479.912 177.12 480.78 cv
176.7 481.08 li
176.76 481.02 li
176.34 481.32 li
175.98 481.68 li
176.04 481.62 li
175.68 481.98 li
175.68 481.92 li
175.38 482.28 li
175.44 482.28 li
175.2 482.58 li
174.96 482.94 li
174.96 482.88 li
174.78 483.24 li
174.66 483.54 li
174.6 483.9 li
174.6 483.84 li
174.54 484.26 li
174.54 484.2 li
174.48 484.56 li
f
217.38 477.66 mo
217.5 477.42 li
217.74 477.3 li
246.78 477.3 li
246.96 477.42 li
247.08 477.66 li
247.08 492.18 li
246.96 492.42 li
246.78 492.48 li
217.74 492.48 li
217.5 492.42 li
217.38 492.18 li
cp
218.04 492.18 mo
217.74 491.82 li
246.78 491.82 li
246.42 492.18 li
246.42 477.66 li
246.78 477.96 li
217.74 477.96 li
218.04 477.66 li
f
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
227.64 487.2 mo
(m)sh
KYNPNS+Calibri-Italic*1 [7.74 0 0 -7.74 0 0 ]msf
236.82 490.02 mo
(1)sh
206.82 484.56 mo
217.08 484.26 li
217.08 484.92 li
206.82 485.22 li
cp
213.3 482.16 mo
217.74 484.56 li
213.48 487.2 li
213.24 487.26 li
213 487.14 li
213 486.9 li
213.12 486.66 li
216.9 484.32 li
216.96 484.86 li
213 482.7 li
212.82 482.52 li
212.88 482.28 li
213.06 482.16 li
213.3 482.16 li
.92929 .879301 .889677 .799283 cmyk
f
86.76 485.28 mo
86.76 485.04 li
88.184 478.587 120.444 477.437 125.28 477.72 cv
125.4 477.78 li
125.16 477.72 li
127.14 477.72 li
175.78 478.484 175.817 492.12 127.14 492.84 cv
125.16 492.84 li
125.46 492.36 li
125.82 492.9 li
123.24 492.84 li
118.324 493.029 88.738 491.772 86.82 485.76 cv
86.76 485.52 li
cp
87.42 485.46 mo
87.42 485.4 li
87.42 485.58 li
87.48 485.76 li
87.48 485.7 li
87.54 485.88 li
87.66 486.06 li
87.66 486 li
87.9 486.36 li
88.08 486.54 li
88.26 486.66 li
88.5 486.84 li
88.44 486.84 li
88.98 487.2 li
88.98 487.14 li
89.52 487.5 li
90.24 487.8 li
90.18 487.8 li
90.96 488.16 li
91.8 488.46 li
92.7 488.76 li
93.66 489.06 li
94.74 489.3 li
95.88 489.6 li
95.82 489.6 li
97.02 489.84 li
105.642 491.607 114.464 492.024 123.24 492.24 cv
125.16 492.24 li
124.92 492.72 li
124.5 492.24 li
127.14 492.18 li
132.008 492.201 136.811 491.887 141.66 491.52 cv
143.34 491.34 li
143.28 491.34 li
144.9 491.16 li
146.46 490.98 li
147.96 490.8 li
149.4 490.56 li
149.34 490.56 li
150.78 490.32 li
150.72 490.32 li
152.1 490.08 li
152.04 490.08 li
153.3 489.84 li
154.5 489.6 li
155.64 489.3 li
156.72 489.06 li
156.66 489.06 li
157.68 488.76 li
158.58 488.46 li
159.42 488.16 li
160.14 487.8 li
160.86 487.5 li
160.8 487.5 li
161.4 487.2 li
162.12 486.66 li
162.3 486.54 li
162.48 486.36 li
162.42 486.36 li
162.6 486.18 li
162.72 486 li
162.72 486.06 li
162.84 485.88 li
162.78 485.88 li
162.9 485.7 li
162.9 485.76 li
162.96 485.58 li
162.9 485.58 li
162.96 485.4 li
162.96 485.46 li
162.96 485.28 li
162.96 485.34 li
162.96 485.1 li
162.96 485.16 li
162.9 484.98 li
162.96 485.04 li
162.9 484.86 li
162.78 484.68 li
162.84 484.74 li
162.6 484.38 li
162.42 484.2 li
162.48 484.26 li
162.12 483.9 li
161.88 483.72 li
161.4 483.42 li
160.8 483.06 li
160.86 483.06 li
160.14 482.76 li
160.2 482.76 li
159.42 482.46 li
157.297 481.647 155.502 481.225 153.3 480.72 cv
152.04 480.48 li
152.1 480.48 li
150.72 480.24 li
150.78 480.24 li
149.34 480 li
149.4 480 li
147.96 479.82 li
140.508 478.736 132.567 478.329 125.04 478.38 cv
124.92 478.26 li
125.16 478.32 li
123.18 478.38 li
123.24 478.38 li
121.26 478.38 li
119.4 478.44 li
117.48 478.5 li
117.54 478.5 li
115.68 478.56 li
112.08 478.8 li
110.34 478.92 li
110.4 478.92 li
108.66 479.04 li
108.72 479.04 li
107.04 479.22 li
103.686 479.586 100.329 480.053 97.02 480.72 cv
95.82 480.96 li
95.88 480.96 li
94.74 481.26 li
93.66 481.56 li
92.7 481.86 li
91.8 482.16 li
90.96 482.46 li
90.18 482.76 li
90.24 482.76 li
89.52 483.06 li
89.58 483.06 li
88.98 483.42 li
88.44 483.72 li
88.5 483.72 li
88.26 483.9 li
87.9 484.26 li
87.9 484.2 li
87.54 484.74 li
87.54 484.68 li
87.42 485.04 li
87.42 484.98 li
87.42 485.16 li
87.42 485.1 li
87.42 485.34 li
87.42 485.28 li
f
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
91.68 487.56 mo
(x.name:x.type)
[5.03196 2.92512 5.9749 5.9749 9.1991 5.55573 3.11143 5.03197 2.63528 3.89133 5.19501 5.97488 
0 ]xsh
163.26 484.92 mo
165.84 484.86 li
165.9 485.52 li
163.32 485.58 li
cp
167.82 484.8 mo
170.4 484.68 li
170.4 485.34 li
167.82 485.46 li
cp
172.32 484.62 mo
173.52 484.62 li
173.52 485.22 li
172.32 485.28 li
cp
169.74 482.52 mo
174.18 484.92 li
169.92 487.56 li
169.68 487.62 li
169.44 487.5 li
169.44 487.26 li
169.56 487.02 li
173.34 484.68 li
173.4 485.22 li
169.44 483.06 li
169.26 482.88 li
169.32 482.64 li
169.5 482.46 li
169.74 482.52 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
180.12 486.84 mo
(p:T)
[5.99353 3.13005 0 ]xsh
KYNPNS+Calibri-Italic*1 [7.74 0 0 -7.74 0 0 ]msf
194.94 489.66 mo
(1)sh
257.34 484.56 mo
257.34 484.14 li
257.46 483.72 li
261.539 474.751 308.205 474.756 312.24 483.72 cv
312.36 484.14 li
312.42 484.56 li
312.36 484.98 li
311.025 490.338 294.597 491.811 290.34 492 cv
289.02 492.06 li
287.64 492.12 li
281.046 492.349 262.834 491.676 257.94 486.24 cv
257.46 485.4 li
257.34 484.98 li
cp
258 484.92 mo
258 484.86 li
258.12 485.22 li
258.06 485.16 li
258.24 485.52 li
258.24 485.46 li
258.48 485.82 li
258.42 485.82 li
258.72 486.18 li
258.72 486.12 li
259.08 486.48 li
259.5 486.78 li
259.98 487.14 li
259.92 487.08 li
260.52 487.44 li
260.46 487.44 li
261.06 487.74 li
261.72 488.04 li
262.44 488.34 li
262.38 488.28 li
263.16 488.58 li
267.911 490.271 273.1 490.868 278.1 491.28 cv
279.42 491.34 li
279.36 491.34 li
280.74 491.4 li
282.06 491.46 li
287.64 491.46 li
289.02 491.4 li
288.96 491.4 li
290.34 491.34 li
295.658 491.031 301.496 490.364 306.54 488.58 cv
307.32 488.28 li
307.32 488.34 li
308.04 488.04 li
307.98 488.04 li
308.64 487.74 li
309.24 487.44 li
309.78 487.08 li
309.78 487.14 li
310.26 486.78 li
310.2 486.78 li
310.68 486.48 li
310.62 486.48 li
310.98 486.12 li
310.98 486.18 li
311.28 485.82 li
311.52 485.46 li
311.46 485.52 li
311.64 485.16 li
311.64 485.22 li
311.76 484.86 li
311.7 484.92 li
311.76 484.5 li
311.76 484.56 li
311.7 484.2 li
311.76 484.26 li
311.64 483.9 li
311.64 483.96 li
311.46 483.6 li
311.52 483.6 li
311.28 483.3 li
310.98 482.94 li
310.98 483 li
310.62 482.64 li
310.68 482.64 li
310.2 482.28 li
310.26 482.34 li
309.78 481.98 li
309.24 481.68 li
308.64 481.38 li
307.98 481.08 li
308.04 481.08 li
307.32 480.78 li
301.877 478.836 296.085 478.105 290.34 477.78 cv
288.96 477.72 li
289.02 477.72 li
287.64 477.66 li
284.88 477.6 li
282.06 477.66 li
280.74 477.72 li
279.36 477.78 li
279.42 477.78 li
278.1 477.84 li
273.1 478.252 267.911 478.849 263.16 480.54 cv
262.38 480.78 li
262.44 480.78 li
261.72 481.08 li
261.06 481.38 li
260.46 481.68 li
260.52 481.68 li
259.92 481.98 li
259.98 481.98 li
259.5 482.34 li
259.5 482.28 li
259.08 482.64 li
258.72 483 li
258.72 482.94 li
258.42 483.3 li
258.48 483.3 li
258.24 483.6 li
258.06 483.96 li
258.12 483.9 li
258 484.26 li
258 484.2 li
257.94 484.56 li
257.94 484.5 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: QJJAAA+Calibri-Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QJJAAA+Calibri-Italic gcheck setglobal} if
1 6662 1006 <00010020000003ca0521004300a6ba027d027e00582bb10102435558b900
45ffc040090f024d0045010f0340b80230b71212270027000d1ab80264b2
380d2ebb01300024001f012c40091a133f030833531240b80126b3400854
282b183f1a4dfdc13f121739fdd4ed012fd4ed1239392f2f3910ed31305f
5e5d2b1bb50045010f032ebb01300024001f012c40091a133f0308335312
40b80126b3400854282b183f1a4dfdc13f121739fdd4ed3130015f5e5d59
25140e042321222e0235343e0237013e0535342e0223220e022322263534
3e04373e0333321e0215140e04070721321603520306090d100afd350d12
0a05030c1815014d4e714d2e1a080f254434396854390b0a0c030307090b
070b415c703c607e491d0c233f658f63fa0228110e6906161718120c060b
0f0a0a20262712012444776757483b171837302022292314130813161614
13070b2422193652602b29565f6a7b8f54d61900>QJJAAA+Calibri-Italic AddT42Char 
QJJAAA+Calibri-Italic /CharStrings get begin
/two 1006 def
end
QJJAAA+Calibri-Italic /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KYNPNS+Calibri-Italic*1 
[32{/.notdef}rp /ellipsis 13{/.notdef}rp /period /.notdef /zero /one /two 
7{/.notdef}rp /colon 25{/.notdef}rp /T 12{/.notdef}rp /a /b 2{/.notdef}rp 
/e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n 
/.notdef /p /.notdef /r /.notdef /t /u /v 
/.notdef /x /y /z 133{/.notdef}rp]
KYNPNS+Calibri-Italic nf
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
271.26 487.8 mo
(null:T)
[6.00168 6.00168 2.6842 2.68423 3.13821 0 ]xsh
KYNPNS+Calibri-Italic*1 [7.74 0 0 -7.74 0 0 ]msf
297.48 490.62 mo
(2)sh
246.72 484.62 mo
256.98 484.26 li
257.04 484.92 li
246.78 485.28 li
cp
253.2 482.22 mo
257.64 484.56 li
253.38 487.26 li
253.14 487.32 li
252.96 487.14 li
252.9 486.9 li
253.02 486.72 li
256.86 484.32 li
256.86 484.92 li
252.9 482.76 li
252.78 482.58 li
252.78 482.34 li
252.96 482.16 li
253.2 482.22 li
.92929 .879301 .889677 .799283 cmyk
f
gsave
65.28 420.72 mo
529.74 420.72 li
529.74 507.78 li
65.28 507.78 li
cp
eclp
268.2 506.34 mo
268.2 505.92 li
268.32 505.5 li
270.903 496.578 298.64 496.464 301.44 505.5 cv
301.5 505.92 li
301.5 506.34 li
300.649 516.002 271.696 516.341 268.44 507.54 cv
268.32 507.12 li
268.2 506.76 li
cp
268.86 506.7 mo
268.86 506.64 li
268.92 507 li
269.04 507.36 li
269.04 507.3 li
269.16 507.66 li
269.34 508.02 li
269.34 507.96 li
269.52 508.32 li
270.014 508.969 270.83 509.657 271.5 510.12 cv
271.92 510.42 li
271.92 510.36 li
272.4 510.66 li
272.94 510.9 li
272.88 510.9 li
273.42 511.14 li
274.02 511.38 li
274.56 511.62 li
275.22 511.86 li
275.16 511.86 li
277.14 512.4 li
278.58 512.7 li
280.08 512.94 li
280.02 512.94 li
281.58 513.12 li
284.155 513.346 287.12 513.312 289.68 512.94 cv
291.18 512.7 li
291.12 512.7 li
292.56 512.4 li
294.3 512.009 295.719 511.45 297.3 510.66 cv
297.78 510.36 li
297.78 510.42 li
299.04 509.52 li
298.98 509.52 li
299.4 509.22 li
299.34 509.22 li
299.7 508.92 li
299.64 508.92 li
299.94 508.62 li
300.18 508.32 li
300.42 507.96 li
300.42 508.02 li
300.6 507.66 li
300.54 507.66 li
300.72 507.3 li
300.72 507.36 li
300.78 507 li
300.84 506.64 li
300.84 506.7 li
300.84 506.28 li
300.84 506.34 li
300.84 505.98 li
300.78 505.62 li
300.78 505.68 li
300.72 505.32 li
300.54 504.96 li
300.54 505.02 li
300.36 504.66 li
300.42 504.66 li
300.18 504.36 li
299.94 504 li
299.94 504.06 li
299.64 503.7 li
299.7 503.76 li
299.34 503.4 li
298.98 503.1 li
299.04 503.1 li
298.62 502.8 li
297.689 502.227 296.768 501.635 295.74 501.24 cv
295.14 501 li
295.14 501.06 li
294.54 500.82 li
292.56 500.28 li
291.12 499.98 li
291.18 499.98 li
289.68 499.74 li
286.899 499.37 284.378 499.266 281.58 499.56 cv
280.02 499.74 li
280.08 499.74 li
278.58 499.98 li
277.14 500.28 li
275.16 500.82 li
275.22 500.82 li
274.56 501.06 li
274.56 501 li
274.02 501.24 li
273.42 501.48 li
272.88 501.72 li
272.94 501.72 li
272.4 502.02 li
271.755 502.325 270.891 502.912 270.36 503.4 cv
270.06 503.76 li
270.06 503.7 li
269.76 504.06 li
269.76 504 li
269.52 504.36 li
269.34 504.66 li
269.16 505.02 li
269.16 504.96 li
268.92 505.68 li
268.92 505.62 li
268.86 505.98 li
268.86 506.34 li
268.86 506.28 li
f
217.38 499.44 mo
217.5 499.2 li
217.74 499.08 li
246.78 499.08 li
246.96 499.2 li
247.08 499.44 li
247.08 513.96 li
246.96 514.14 li
246.78 514.26 li
217.74 514.26 li
217.5 514.14 li
217.38 513.96 li
cp
218.04 513.96 mo
217.74 513.6 li
246.78 513.6 li
246.42 513.96 li
246.42 499.44 li
246.78 499.74 li
217.74 499.74 li
218.04 499.44 li
f
grestore
gsave
227.64 507.78 mo
236.82 507.78 li
236.82 497.82 li
227.64 497.82 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
227.64 508.92 mo
(m)sh
grestore
gsave
236.82 507.78 mo
240.72 507.78 li
240.72 504.36 li
236.82 504.36 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [7.74 0 0 -7.74 0 0 ]msf
236.82 511.74 mo
(2)sh
grestore
gsave
65.28 420.72 mo
529.74 420.72 li
529.74 507.78 li
65.28 507.78 li
cp
eclp
268.56 506.64 mo
247.38 507 li
247.38 506.34 li
268.5 505.98 li
cp
251.16 509.16 mo
246.78 506.7 li
251.04 504.06 li
251.28 504.06 li
251.52 504.18 li
251.52 504.42 li
251.4 504.6 li
247.56 506.94 li
247.56 506.4 li
251.46 508.56 li
251.64 508.8 li
251.58 509.04 li
251.4 509.16 li
251.16 509.16 li
f
grestore
gsave
274.38 507.78 mo
290.04 507.78 li
290.04 497.52 li
274.38 497.52 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
274.44 508.62 mo
(p:T)
[5.99353 3.13007 0 ]xsh
grestore
gsave
289.26 507.78 mo
293.16 507.78 li
293.16 504.06 li
289.26 504.06 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [7.74 0 0 -7.74 0 0 ]msf
289.26 511.44 mo
(2)sh
grestore
gsave
65.28 420.72 mo
529.74 420.72 li
529.74 507.78 li
65.28 507.78 li
cp
eclp
141.18 506.94 mo
141.24 506.52 li
141.36 506.1 li
145.411 497.158 191.944 497.131 196.14 506.1 cv
196.26 506.52 li
196.26 507.36 li
194.929 512.702 178.483 514.219 174.24 514.38 cv
172.92 514.44 li
171.54 514.5 li
164.836 514.719 146.79 514.098 141.78 508.62 cv
141.54 508.2 li
141.36 507.78 li
141.24 507.36 li
cp
141.9 507.3 mo
141.84 507.24 li
141.96 507.6 li
141.96 507.54 li
142.14 507.9 li
142.08 507.9 li
142.32 508.2 li
142.62 508.56 li
142.62 508.5 li
142.98 508.86 li
142.92 508.86 li
143.34 509.16 li
143.82 509.52 li
144.36 509.82 li
144.96 510.12 li
145.62 510.42 li
145.56 510.42 li
146.28 510.72 li
147.06 510.96 li
147 510.96 li
147.84 511.26 li
148.68 511.5 li
149.58 511.74 li
150.54 511.98 li
150.48 511.98 li
152.52 512.46 li
153.6 512.64 li
153.54 512.64 li
154.68 512.82 li
159.273 513.592 164.069 513.831 168.72 513.9 cv
171.54 513.84 li
171.48 513.84 li
172.86 513.78 li
176.558 513.641 180.256 513.29 183.9 512.64 cv
184.98 512.46 li
184.92 512.46 li
186 512.22 li
187.92 511.74 li
188.82 511.5 li
188.76 511.5 li
189.66 511.26 li
189.6 511.26 li
190.44 510.96 li
191.16 510.72 li
191.88 510.42 li
192.54 510.12 li
193.14 509.82 li
193.08 509.82 li
193.62 509.52 li
194.1 509.16 li
194.52 508.86 li
194.88 508.5 li
194.82 508.56 li
195.18 508.2 li
195.12 508.2 li
195.36 507.9 li
195.54 507.54 li
195.48 507.6 li
195.6 507.24 li
195.6 507.3 li
195.6 506.94 li
195.6 507 li
195.6 506.58 li
195.6 506.64 li
195.48 506.28 li
195.54 506.34 li
195.36 505.98 li
195.36 506.04 li
195.12 505.68 li
195.18 505.68 li
194.82 505.32 li
194.88 505.38 li
194.52 505.02 li
194.1 504.72 li
193.62 504.36 li
193.68 504.42 li
193.08 504.06 li
193.14 504.06 li
192.54 503.76 li
191.88 503.46 li
191.16 503.16 li
190.44 502.92 li
189.6 502.62 li
189.66 502.62 li
188.76 502.38 li
188.82 502.38 li
187.92 502.14 li
186 501.66 li
184.98 501.42 li
183.9 501.24 li
182.76 501.06 li
182.82 501.06 li
181.68 500.88 li
178.817 500.474 175.749 500.197 172.86 500.1 cv
171.48 500.04 li
171.54 500.04 li
168.72 499.98 li
162.997 500.062 157.1 500.419 151.5 501.66 cv
150.48 501.9 li
150.54 501.9 li
149.58 502.14 li
148.68 502.38 li
147.84 502.62 li
147 502.92 li
147.06 502.92 li
146.28 503.16 li
145.56 503.46 li
145.62 503.46 li
144.96 503.76 li
144.36 504.06 li
143.82 504.42 li
143.82 504.36 li
143.34 504.72 li
142.92 505.02 li
142.98 505.02 li
142.62 505.38 li
142.62 505.32 li
142.32 505.68 li
142.08 506.04 li
142.14 505.98 li
141.96 506.34 li
141.96 506.28 li
141.84 506.64 li
141.9 506.58 li
141.84 507 li
141.84 506.94 li
f
grestore
gsave
155.1 507.78 mo
182.1 507.78 li
182.1 499.08 li
155.1 499.08 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
155.1 510.18 mo
(null:T)
[6.00168 6.00166 2.68423 2.68423 3.1382 0 ]xsh
grestore
gsave
65.28 420.72 mo
529.74 420.72 li
529.74 507.78 li
65.28 507.78 li
cp
eclp
217.74 507.48 mo
196.56 507.36 li
196.56 506.76 li
217.74 506.82 li
cp
200.28 509.58 mo
195.96 507.06 li
200.28 504.54 li
200.58 504.48 li
200.76 504.66 li
200.76 504.9 li
200.64 505.08 li
196.74 507.36 li
196.74 506.76 li
200.64 509.04 li
200.76 509.28 li
200.7 509.52 li
200.52 509.64 li
200.28 509.58 li
f
grestore
284.58 491.88 mo
284.58 494.46 li
283.92 494.4 li
283.98 491.82 li
cp
284.58 496.38 mo
284.52 498.48 li
283.86 498.48 li
283.92 496.38 li
cp
286.8 494.76 mo
284.22 499.08 li
281.7 494.76 li
281.7 494.46 li
281.82 494.28 li
282.06 494.28 li
282.3 494.4 li
284.52 498.3 li
283.92 498.3 li
286.26 494.46 li
286.44 494.34 li
286.68 494.34 li
286.8 494.52 li
286.8 494.76 li
f
438.78 471.6 mo
439.44 471.6 li
439.44 481.86 li
438.78 481.86 li
cp
439.44 471.6 mo
cp
441.66 478.2 mo
439.08 482.52 li
436.56 478.14 li
436.56 477.9 li
436.68 477.72 li
436.92 477.66 li
437.1 477.84 li
439.38 481.68 li
438.84 481.68 li
441.06 477.84 li
441.3 477.72 li
441.54 477.72 li
441.66 477.9 li
441.66 478.2 li
f
gsave
65.28 420.72 mo
529.74 420.72 li
529.74 507.78 li
65.28 507.78 li
cp
eclp
439.56 497.64 mo
439.2 503.64 li
438.6 503.64 li
438.9 497.64 li
cp
441.66 500.1 mo
438.9 504.3 li
436.56 499.8 li
436.56 499.56 li
436.74 499.38 li
436.98 499.38 li
437.16 499.5 li
439.2 503.52 li
438.66 503.46 li
441.12 499.74 li
441.3 499.56 li
441.54 499.62 li
441.66 499.86 li
441.66 500.1 li
f
411.42 509.82 mo
411.48 509.34 li
411.6 508.92 li
415.851 500.025 462.078 500.018 466.32 508.92 cv
466.44 509.34 li
466.5 509.82 li
466.44 510.24 li
465.318 515.458 448.525 517.136 444.48 517.2 cv
443.1 517.32 li
441.78 517.32 li
435.437 517.69 416.653 516.819 412.02 511.44 cv
411.78 511.08 li
411.6 510.66 li
411.48 510.24 li
cp
412.08 510.12 mo
412.08 510.06 li
412.2 510.48 li
412.2 510.42 li
412.38 510.78 li
412.32 510.72 li
412.56 511.08 li
412.86 511.38 li
412.8 511.38 li
413.22 511.74 li
413.16 511.68 li
413.58 512.04 li
414.06 512.34 li
414.6 512.64 li
415.2 513 li
415.2 512.94 li
415.8 513.24 li
416.52 513.54 li
417.3 513.84 li
417.24 513.84 li
418.08 514.14 li
418.08 514.08 li
418.92 514.38 li
420.72 514.86 li
421.74 515.1 li
422.76 515.28 li
423.84 515.52 li
423.78 515.52 li
424.92 515.7 li
431.796 516.732 438.806 517.029 445.74 516.48 cv
447.06 516.42 li
447 516.42 li
448.32 516.3 li
449.52 516.18 li
450.72 516 li
451.92 515.88 li
453.06 515.7 li
453 515.7 li
454.14 515.52 li
455.22 515.28 li
455.16 515.28 li
456.24 515.1 li
456.18 515.1 li
457.2 514.86 li
458.16 514.62 li
458.1 514.62 li
459 514.38 li
459.9 514.08 li
459.84 514.14 li
460.68 513.84 li
462.12 513.24 li
462.78 512.94 li
462.72 513 li
463.32 512.64 li
463.86 512.34 li
464.34 512.04 li
464.76 511.68 li
464.76 511.74 li
465.12 511.38 li
465.06 511.38 li
465.36 511.08 li
465.6 510.72 li
465.6 510.78 li
465.78 510.42 li
465.72 510.48 li
465.84 510.06 li
465.84 510.12 li
465.84 509.76 li
465.84 509.82 li
465.84 509.46 li
465.84 509.52 li
465.72 509.16 li
465.72 509.22 li
465.6 508.86 li
465.36 508.5 li
465.36 508.56 li
465.06 508.2 li
465.12 508.2 li
464.76 507.9 li
464.34 507.54 li
463.86 507.24 li
463.32 506.94 li
462.72 506.64 li
462.78 506.64 li
462.12 506.34 li
460.68 505.74 li
459.84 505.5 li
459.9 505.5 li
459 505.2 li
458.1 504.96 li
458.16 504.96 li
457.2 504.72 li
456.18 504.54 li
456.24 504.54 li
455.16 504.3 li
455.22 504.3 li
454.14 504.12 li
453 503.88 li
453.06 503.88 li
451.92 503.76 li
449.52 503.4 li
449.52 503.46 li
448.32 503.28 li
447 503.16 li
447.06 503.16 li
445.74 503.1 li
440.561 502.707 434.854 502.802 429.66 503.28 cv
428.4 503.46 li
428.4 503.4 li
427.2 503.58 li
426.06 503.76 li
424.92 503.88 li
423.78 504.12 li
423.84 504.12 li
422.76 504.3 li
421.173 504.68 419.629 504.878 418.08 505.5 cv
417.24 505.74 li
417.3 505.74 li
416.52 506.04 li
415.569 506.419 414.441 506.982 413.58 507.54 cv
413.16 507.9 li
413.22 507.9 li
412.8 508.2 li
412.86 508.2 li
412.56 508.56 li
412.56 508.5 li
412.32 508.86 li
412.38 508.86 li
412.2 509.22 li
412.2 509.16 li
412.08 509.52 li
412.08 509.46 li
412.08 509.82 li
412.08 509.76 li
f
grestore
gsave
425.34 507.78 mo
452.34 507.78 li
452.34 501.96 li
425.34 501.96 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
425.34 513.06 mo
(nullT)
[6.00284 6.00284 2.68539 5.81421 0 ]xsh
grestore
424.26 482.52 mo
424.32 482.28 li
424.56 482.16 li
453.6 482.16 li
453.84 482.28 li
453.9 482.52 li
453.9 497.04 li
453.84 497.28 li
453.6 497.34 li
424.56 497.34 li
424.32 497.28 li
424.26 497.04 li
cp
424.92 497.04 mo
424.56 496.68 li
453.6 496.68 li
453.3 497.04 li
453.3 482.52 li
453.6 482.82 li
424.56 482.82 li
424.92 482.52 li
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: QJJAAA+Calibri-Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QJJAAA+Calibri-Italic gcheck setglobal} if
1 1848 336 <00020042fe9303e103ca003c005100b4ba027f028000582bb10102435558
400d33343c3c3d51501d1c3d1c3d47b8021e40260b29001c343c001c0405
37491f513d33042440f9304a2809f51212174cf8244d17e140054f282b18
3f1a4ded3fed12392f00ed2b3fed1217393f121739012f332fc4edc4107d
870ec4c4c411013312393931301b4022343c001c040537491f513d330424
40f9304a2809f51212174cf8244d17e140054f282b183f1a4ded3fed1239
2f00ed2b3fed1217393f121739313059050e0323222627262635343e0433
321e0233323e02373636370e0323222e0235343e04333216173736363332
1e020707262623220e0415141e0233323e0237031d10476e97605389290f
0b0105070b10090c243c5941365741290a11220b10465c6e394b683f1c16
304b6a8b58597f3213042628141b100401d32f6d44365643321f0f0f2135
26376f604a122e50784f2821170a130f06161618130b151a16162c442f5b
7821254b3f27325777453a91938b6d42483f5b100e03080c07ec45453253
6c716f2d2b48331e3d6c9357>QJJAAA+Calibri-Italic AddT42Char 
QJJAAA+Calibri-Italic /CharStrings get begin
/g 336 def
end
QJJAAA+Calibri-Italic /Encoding get
dup 103 /g put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KYNPNS+Calibri-Italic*1 
[32{/.notdef}rp /ellipsis 13{/.notdef}rp /period /.notdef /zero /one /two 
7{/.notdef}rp /colon 25{/.notdef}rp /T 12{/.notdef}rp /a /b 2{/.notdef}rp 
/e /f /g /.notdef /i 2{/.notdef}rp /l /m 
/n /.notdef /p /.notdef /r /.notdef /t /u 
/v /.notdef /x /y /z 133{/.notdef}rp]
KYNPNS+Calibri-Italic nf
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
429.18 492.06 mo
(getx)
[5.97723 5.55804 3.89368 0 ]xsh
405.24 478.08 mo
471.36 478.08 li
471.36 459.36 li
405.24 459.36 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
409.86 472.5 mo
(variable:T)
[5.19958 5.99118 4.0007 2.67377 5.99118 5.99121 2.67374 5.57202 3.12775 0 ]xsh
KYNPNS+Calibri-Italic*1 [7.74 0 0 -7.74 0 0 ]msf
456.72 475.32 mo
(1)sh
402.24 468.78 mo
402.24 468.54 li
403.868 461.96 432.997 461.059 438.06 461.16 cv
438.18 461.22 li
438 461.16 li
439.8 461.22 li
485.096 461.939 485.082 475.567 439.8 476.34 cv
438 476.34 li
438.3 475.86 li
438.54 476.34 li
436.2 476.34 li
431.306 476.477 404.105 475.241 402.3 469.2 cv
402.24 469.02 li
cp
402.9 468.96 mo
402.9 468.9 li
402.9 469.08 li
402.9 469.02 li
402.96 469.26 li
402.96 469.2 li
403.02 469.38 li
403.02 469.32 li
403.26 469.68 li
403.2 469.68 li
403.5 470.04 li
403.5 469.98 li
403.86 470.34 li
404.34 470.64 li
404.88 471 li
405.48 471.3 li
406.2 471.6 li
406.98 471.9 li
406.92 471.9 li
407.82 472.2 li
407.76 472.2 li
409.68 472.8 li
410.76 473.1 li
410.7 473.04 li
411.84 473.34 li
419.668 475.019 428.207 475.624 436.2 475.68 cv
438 475.68 li
437.7 476.16 li
437.46 475.68 li
439.8 475.68 li
443.786 475.689 447.769 475.473 451.74 475.14 cv
453.36 474.96 li
453.3 474.96 li
454.86 474.84 li
456.36 474.66 li
457.8 474.48 li
457.74 474.48 li
459.18 474.24 li
460.5 474.06 li
463.02 473.58 li
464.16 473.34 li
465.3 473.04 li
465.24 473.1 li
466.32 472.8 li
468.24 472.2 li
468.18 472.2 li
469.08 471.9 li
469.02 471.9 li
469.8 471.6 li
470.52 471.3 li
471.12 471 li
471.66 470.64 li
472.14 470.34 li
472.5 469.98 li
472.5 470.04 li
472.8 469.68 li
472.74 469.68 li
472.98 469.32 li
472.98 469.38 li
473.1 469.02 li
473.1 469.08 li
473.1 468.9 li
473.1 468.96 li
473.1 468.72 li
473.1 468.78 li
473.1 468.6 li
473.1 468.66 li
473.1 468.42 li
473.1 468.48 li
473.04 468.3 li
473.04 468.36 li
472.98 468.18 li
472.74 467.82 li
472.8 467.88 li
472.5 467.52 li
472.14 467.22 li
471.66 466.86 li
471.12 466.56 li
470.52 466.2 li
470.52 466.26 li
469.8 465.9 li
469.02 465.6 li
469.08 465.6 li
468.18 465.3 li
468.24 465.3 li
467.28 465 li
466.32 464.76 li
465.24 464.46 li
465.3 464.46 li
464.16 464.22 li
455.658 462.345 446.565 461.917 437.88 461.82 cv
437.82 461.76 li
438 461.82 li
436.14 461.82 li
434.34 461.88 li
434.4 461.88 li
432.6 461.94 li
429.12 462.06 li
429.18 462.06 li
427.5 462.18 li
423.518 462.43 419.431 462.812 415.5 463.5 cv
414.24 463.74 li
414.24 463.68 li
412.98 463.92 li
411.84 464.22 li
410.7 464.46 li
410.76 464.46 li
409.68 464.76 li
408.72 465 li
407.76 465.3 li
407.82 465.3 li
406.92 465.6 li
406.98 465.6 li
406.2 465.9 li
405.48 466.26 li
405.48 466.2 li
404.88 466.56 li
404.34 466.86 li
403.86 467.22 li
403.5 467.52 li
403.2 467.88 li
403.26 467.82 li
403.02 468.18 li
402.96 468.36 li
402.96 468.3 li
402.9 468.48 li
402.9 468.42 li
402.9 468.66 li
402.9 468.6 li
402.9 468.78 li
402.9 468.72 li
.92929 .879301 .889677 .799283 cmyk
f
gsave
65.28 507.78 mo
529.74 507.78 li
529.74 595.02 li
65.28 595.02 li
cp
eclp
65.28 595.02 mo
529.74 595.02 li
529.74 507.74 li
65.28 507.74 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
268.2 506.34 mo
268.2 505.92 li
268.32 505.5 li
270.903 496.578 298.64 496.464 301.44 505.5 cv
301.5 505.92 li
301.5 506.34 li
300.649 516.002 271.696 516.341 268.44 507.54 cv
268.32 507.12 li
268.2 506.76 li
cp
268.86 506.7 mo
268.86 506.64 li
268.92 507 li
269.04 507.36 li
269.04 507.3 li
269.16 507.66 li
269.34 508.02 li
269.34 507.96 li
269.52 508.32 li
270.014 508.969 270.83 509.657 271.5 510.12 cv
271.92 510.42 li
271.92 510.36 li
272.4 510.66 li
272.94 510.9 li
272.88 510.9 li
273.42 511.14 li
274.02 511.38 li
274.56 511.62 li
275.22 511.86 li
275.16 511.86 li
277.14 512.4 li
278.58 512.7 li
280.08 512.94 li
280.02 512.94 li
281.58 513.12 li
284.155 513.346 287.12 513.312 289.68 512.94 cv
291.18 512.7 li
291.12 512.7 li
292.56 512.4 li
294.3 512.009 295.719 511.45 297.3 510.66 cv
297.78 510.36 li
297.78 510.42 li
299.04 509.52 li
298.98 509.52 li
299.4 509.22 li
299.34 509.22 li
299.7 508.92 li
299.64 508.92 li
299.94 508.62 li
300.18 508.32 li
300.42 507.96 li
300.42 508.02 li
300.6 507.66 li
300.54 507.66 li
300.72 507.3 li
300.72 507.36 li
300.78 507 li
300.84 506.64 li
300.84 506.7 li
300.84 506.28 li
300.84 506.34 li
300.84 505.98 li
300.78 505.62 li
300.78 505.68 li
300.72 505.32 li
300.54 504.96 li
300.54 505.02 li
300.36 504.66 li
300.42 504.66 li
300.18 504.36 li
299.94 504 li
299.94 504.06 li
299.64 503.7 li
299.7 503.76 li
299.34 503.4 li
298.98 503.1 li
299.04 503.1 li
298.62 502.8 li
297.689 502.227 296.768 501.635 295.74 501.24 cv
295.14 501 li
295.14 501.06 li
294.54 500.82 li
292.56 500.28 li
291.12 499.98 li
291.18 499.98 li
289.68 499.74 li
286.899 499.37 284.378 499.266 281.58 499.56 cv
280.02 499.74 li
280.08 499.74 li
278.58 499.98 li
277.14 500.28 li
275.16 500.82 li
275.22 500.82 li
274.56 501.06 li
274.56 501 li
274.02 501.24 li
273.42 501.48 li
272.88 501.72 li
272.94 501.72 li
272.4 502.02 li
271.755 502.325 270.891 502.912 270.36 503.4 cv
270.06 503.76 li
270.06 503.7 li
269.76 504.06 li
269.76 504 li
269.52 504.36 li
269.34 504.66 li
269.16 505.02 li
269.16 504.96 li
268.92 505.68 li
268.92 505.62 li
268.86 505.98 li
268.86 506.34 li
268.86 506.28 li
.92929 .879301 .889677 .799283 cmyk
f
217.38 499.44 mo
217.5 499.2 li
217.74 499.08 li
246.78 499.08 li
246.96 499.2 li
247.08 499.44 li
247.08 513.96 li
246.96 514.14 li
246.78 514.26 li
217.74 514.26 li
217.5 514.14 li
217.38 513.96 li
cp
218.04 513.96 mo
217.74 513.6 li
246.78 513.6 li
246.42 513.96 li
246.42 499.44 li
246.78 499.74 li
217.74 499.74 li
218.04 499.44 li
f
grestore
gsave
227.64 512.04 mo
236.82 512.04 li
236.82 507.78 li
227.64 507.78 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
227.64 508.92 mo
(m)sh
grestore
gsave
236.82 513.84 mo
240.72 513.84 li
240.72 507.78 li
236.82 507.78 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [7.74 0 0 -7.74 0 0 ]msf
236.82 511.74 mo
(2)sh
grestore
gsave
65.28 507.78 mo
529.74 507.78 li
529.74 595.02 li
65.28 595.02 li
cp
eclp
268.56 506.64 mo
247.38 507 li
247.38 506.34 li
268.5 505.98 li
cp
251.16 509.16 mo
246.78 506.7 li
251.04 504.06 li
251.28 504.06 li
251.52 504.18 li
251.52 504.42 li
251.4 504.6 li
247.56 506.94 li
247.56 506.4 li
251.46 508.56 li
251.64 508.8 li
251.58 509.04 li
251.4 509.16 li
251.16 509.16 li
f
grestore
gsave
274.38 511.74 mo
290.04 511.74 li
290.04 507.78 li
274.38 507.78 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
274.44 508.62 mo
(p:T)
[5.99353 3.13007 0 ]xsh
grestore
gsave
289.26 513.54 mo
293.16 513.54 li
293.16 507.78 li
289.26 507.78 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [7.74 0 0 -7.74 0 0 ]msf
289.26 511.44 mo
(2)sh
grestore
gsave
65.28 507.78 mo
529.74 507.78 li
529.74 595.02 li
65.28 595.02 li
cp
eclp
141.18 506.94 mo
141.24 506.52 li
141.36 506.1 li
145.411 497.158 191.944 497.131 196.14 506.1 cv
196.26 506.52 li
196.26 507.36 li
194.929 512.702 178.483 514.219 174.24 514.38 cv
172.92 514.44 li
171.54 514.5 li
164.836 514.719 146.79 514.098 141.78 508.62 cv
141.54 508.2 li
141.36 507.78 li
141.24 507.36 li
cp
141.9 507.3 mo
141.84 507.24 li
141.96 507.6 li
141.96 507.54 li
142.14 507.9 li
142.08 507.9 li
142.32 508.2 li
142.62 508.56 li
142.62 508.5 li
142.98 508.86 li
142.92 508.86 li
143.34 509.16 li
143.82 509.52 li
144.36 509.82 li
144.96 510.12 li
145.62 510.42 li
145.56 510.42 li
146.28 510.72 li
147.06 510.96 li
147 510.96 li
147.84 511.26 li
148.68 511.5 li
149.58 511.74 li
150.54 511.98 li
150.48 511.98 li
152.52 512.46 li
153.6 512.64 li
153.54 512.64 li
154.68 512.82 li
159.273 513.592 164.069 513.831 168.72 513.9 cv
171.54 513.84 li
171.48 513.84 li
172.86 513.78 li
176.558 513.641 180.256 513.29 183.9 512.64 cv
184.98 512.46 li
184.92 512.46 li
186 512.22 li
187.92 511.74 li
188.82 511.5 li
188.76 511.5 li
189.66 511.26 li
189.6 511.26 li
190.44 510.96 li
191.16 510.72 li
191.88 510.42 li
192.54 510.12 li
193.14 509.82 li
193.08 509.82 li
193.62 509.52 li
194.1 509.16 li
194.52 508.86 li
194.88 508.5 li
194.82 508.56 li
195.18 508.2 li
195.12 508.2 li
195.36 507.9 li
195.54 507.54 li
195.48 507.6 li
195.6 507.24 li
195.6 507.3 li
195.6 506.94 li
195.6 507 li
195.6 506.58 li
195.6 506.64 li
195.48 506.28 li
195.54 506.34 li
195.36 505.98 li
195.36 506.04 li
195.12 505.68 li
195.18 505.68 li
194.82 505.32 li
194.88 505.38 li
194.52 505.02 li
194.1 504.72 li
193.62 504.36 li
193.68 504.42 li
193.08 504.06 li
193.14 504.06 li
192.54 503.76 li
191.88 503.46 li
191.16 503.16 li
190.44 502.92 li
189.6 502.62 li
189.66 502.62 li
188.76 502.38 li
188.82 502.38 li
187.92 502.14 li
186 501.66 li
184.98 501.42 li
183.9 501.24 li
182.76 501.06 li
182.82 501.06 li
181.68 500.88 li
178.817 500.474 175.749 500.197 172.86 500.1 cv
171.48 500.04 li
171.54 500.04 li
168.72 499.98 li
162.997 500.062 157.1 500.419 151.5 501.66 cv
150.48 501.9 li
150.54 501.9 li
149.58 502.14 li
148.68 502.38 li
147.84 502.62 li
147 502.92 li
147.06 502.92 li
146.28 503.16 li
145.56 503.46 li
145.62 503.46 li
144.96 503.76 li
144.36 504.06 li
143.82 504.42 li
143.82 504.36 li
143.34 504.72 li
142.92 505.02 li
142.98 505.02 li
142.62 505.38 li
142.62 505.32 li
142.32 505.68 li
142.08 506.04 li
142.14 505.98 li
141.96 506.34 li
141.96 506.28 li
141.84 506.64 li
141.9 506.58 li
141.84 507 li
141.84 506.94 li
f
grestore
gsave
155.1 513.3 mo
182.1 513.3 li
182.1 507.78 li
155.1 507.78 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
155.1 510.18 mo
(null:T)
[6.00168 6.00166 2.68423 2.68423 3.1382 0 ]xsh
grestore
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: QJJAAA+Calibri-Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QJJAAA+Calibri-Italic gcheck setglobal} if
1 7012 1007 <00010023ffed03c30521005a00d9ba027d027e00582bb10102435558b900
5cffc040090f024d005c010f0320b80257400d0055290041290000294103
0f36b80254b2500f0cbb0136001600460126b63e163e163e1b39b8010440
0a4b5531ec2525074b531bb80104b3400756282b183f1a4ded3f12392fed
3910ed1139392f2f10ed10ed012fd4ed1217392f2f2f11123910ed31305f
5e5d2b1bb5005c010f030cbb0136001600460126b63e163e163e1b39b801
04400a4b5531ec2525074b531bb80104b3400756282b183f1a4ded3f1239
2fed3910ed1139392f2f10ed10ed3130015f5e5d5901140e0423222e0227
262635343e0433321e0233323e0235342e022323222635343e043333323e
0235342623220e0223222635343e02373e0333321e0215140e0207151e03
038019365375965f32594f411a0f0d020406090d08092f4c6743547b5027
1d3f65478b10110306090d100b714a7c5932515e3968543b0c090a04090f
0a0b405c733d4f774e272d537244425d3a1a019d316660553f250c151d11
0919100615181b150d1f251f345163312846331e111307161516120a2d4f
683b4752232924110f081e22200a0b2523192545633d467b60450f020731
4757>QJJAAA+Calibri-Italic AddT42Char 
QJJAAA+Calibri-Italic /CharStrings get begin
/three 1007 def
end
QJJAAA+Calibri-Italic /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KYNPNS+Calibri-Italic*1 
[32{/.notdef}rp /ellipsis 13{/.notdef}rp /period /.notdef /zero /one /two 
/three 6{/.notdef}rp /colon 25{/.notdef}rp /T 12{/.notdef}rp /a /b 
2{/.notdef}rp /e /f /g /.notdef /i 2{/.notdef}rp /l 
/m /n /.notdef /p /.notdef /r /.notdef /t 
/u /v /.notdef /x /y /z 133{/.notdef}rp]
KYNPNS+Calibri-Italic nf
KYNPNS+Calibri-Italic*1 [7.74 0 0 -7.74 0 0 ]msf
181.32 513 mo
(3)sh
gsave
65.28 507.78 mo
529.74 507.78 li
529.74 595.02 li
65.28 595.02 li
cp
eclp
217.74 507.48 mo
196.56 507.36 li
196.56 506.76 li
217.74 506.82 li
cp
200.28 509.58 mo
195.96 507.06 li
200.28 504.54 li
200.58 504.48 li
200.76 504.66 li
200.76 504.9 li
200.64 505.08 li
196.74 507.36 li
196.74 506.76 li
200.64 509.04 li
200.76 509.28 li
200.7 509.52 li
200.52 509.64 li
200.28 509.58 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
246.42 539.34 mo
246.54 539.1 li
246.78 539.04 li
275.76 539.04 li
276 539.1 li
276.12 539.34 li
276.12 553.86 li
276 554.1 li
275.76 554.16 li
246.78 554.16 li
246.54 554.1 li
246.42 553.86 li
cp
247.08 553.86 mo
246.78 553.56 li
275.76 553.56 li
275.46 553.86 li
275.46 539.34 li
275.76 539.64 li
246.78 539.64 li
247.08 539.34 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
256.68 548.88 mo
(m)sh
235.86 546.3 mo
246.12 545.94 li
246.12 546.6 li
235.86 546.9 li
cp
242.34 543.84 mo
246.78 546.24 li
242.52 548.94 li
242.28 548.94 li
242.04 548.82 li
242.04 548.58 li
242.16 548.4 li
245.94 546 li
245.94 546.54 li
242.04 544.44 li
241.86 544.2 li
241.92 543.96 li
242.1 543.84 li
242.34 543.84 li
.92929 .879301 .889677 .799283 cmyk
f
79.5 546.96 mo
79.5 546.78 li
80.584 540.549 111.474 539.202 115.98 539.4 cv
118.14 539.4 li
118.2 539.58 li
117.9 539.4 li
119.88 539.4 li
168.546 540.226 168.554 553.79 119.88 554.52 cv
117.9 554.52 li
118.2 554.04 li
118.56 554.58 li
115.98 554.58 li
110.867 554.604 81.654 553.545 79.56 547.44 cv
79.5 547.2 li
cp
80.16 547.14 mo
80.16 547.08 li
80.16 547.32 li
80.16 547.26 li
80.22 547.44 li
80.34 547.62 li
80.28 547.56 li
80.52 547.92 li
80.52 547.86 li
80.64 548.04 li
81 548.4 li
81 548.34 li
81.24 548.52 li
81.18 548.52 li
81.72 548.88 li
82.32 549.18 li
82.26 549.18 li
82.98 549.54 li
82.92 549.54 li
83.7 549.84 li
85.278 550.403 86.972 550.99 88.62 551.28 cv
89.82 551.52 li
89.76 551.52 li
91.02 551.82 li
92.34 552.06 li
93.72 552.24 li
95.16 552.48 li
96.66 552.66 li
98.22 552.9 li
98.22 552.84 li
99.78 553.02 li
101.46 553.2 li
103.14 553.32 li
104.88 553.5 li
104.82 553.5 li
106.62 553.62 li
109.821 553.791 112.777 553.874 115.98 553.92 cv
117.9 553.92 li
117.66 554.46 li
117.3 553.92 li
119.88 553.92 li
127.954 553.763 135.535 553.321 143.52 552.06 cv
144.84 551.82 li
144.78 551.82 li
146.04 551.52 li
148.384 551.116 150.686 550.459 152.88 549.54 cv
153.6 549.18 li
153.54 549.18 li
154.14 548.88 li
154.68 548.52 li
154.62 548.52 li
154.86 548.34 li
154.86 548.4 li
155.22 548.04 li
155.34 547.86 li
155.34 547.92 li
155.58 547.56 li
155.52 547.62 li
155.64 547.44 li
155.7 547.26 li
155.64 547.32 li
155.7 547.08 li
155.7 547.14 li
155.7 546.96 li
155.7 547.02 li
155.7 546.84 li
155.64 546.66 li
155.7 546.72 li
155.64 546.54 li
155.52 546.36 li
155.58 546.42 li
155.34 546.06 li
155.34 546.12 li
155.22 545.94 li
154.86 545.58 li
154.62 545.4 li
154.68 545.46 li
154.14 545.1 li
153.54 544.74 li
153.6 544.8 li
152.88 544.44 li
152.94 544.44 li
152.16 544.14 li
150.037 543.327 148.242 542.905 146.04 542.4 cv
144.78 542.16 li
144.84 542.16 li
143.52 541.92 li
139.883 541.282 136.391 540.923 132.72 540.6 cv
130.98 540.48 li
131.04 540.48 li
129.24 540.36 li
126.12 540.257 123.004 539.999 119.88 540.06 cv
117.72 540.06 li
117.66 539.88 li
117.9 540.06 li
114 540.06 li
114.06 540.06 li
112.14 540.12 li
103.214 540.474 92.155 541.097 83.7 544.14 cv
82.92 544.44 li
82.98 544.44 li
82.26 544.8 li
82.32 544.74 li
81.72 545.1 li
81.18 545.46 li
81.24 545.4 li
81 545.58 li
80.64 545.94 li
80.52 546.12 li
80.52 546.06 li
80.28 546.42 li
80.34 546.36 li
80.22 546.54 li
80.16 546.72 li
80.16 546.66 li
80.16 547.02 li
80.16 546.96 li
f
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
84.42 549.24 mo
(x.name:x.type)
[5.03196 2.92512 5.9749 5.9749 9.1991 5.55574 3.11143 5.03195 2.63528 3.89133 5.19501 5.9749 
0 ]xsh
156 546.6 mo
158.58 546.54 li
158.64 547.2 li
156.06 547.26 li
cp
160.56 546.48 mo
163.14 546.42 li
163.14 547.02 li
160.56 547.14 li
cp
165.06 546.36 mo
166.26 546.3 li
166.26 546.96 li
165.06 546.96 li
cp
162.48 544.2 mo
166.92 546.6 li
162.66 549.3 li
162.42 549.3 li
162.24 549.18 li
162.18 548.94 li
162.3 548.7 li
166.08 546.36 li
166.14 546.9 li
162.18 544.74 li
162 544.56 li
162.06 544.32 li
162.24 544.2 li
162.48 544.2 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
175.14 550.08 mo
(variable:T)
[5.19958 5.9912 4.00069 2.67375 5.9912 5.9912 2.67377 5.57202 3.12773 0 ]xsh
166.62 546.78 mo
166.62 546.54 li
167.77 540.246 195.021 539.117 199.62 539.16 cv
201.54 539.16 li
201.6 539.28 li
201.42 539.16 li
203.16 539.16 li
247.231 540.051 247.222 553.452 203.16 554.34 cv
201.36 554.34 li
201.6 553.8 li
202.2 554.34 li
199.62 554.34 li
194.739 554.407 168.475 553.231 166.68 547.2 cv
166.62 546.96 li
cp
167.28 546.9 mo
167.22 546.9 li
167.28 547.08 li
167.28 547.02 li
167.4 547.38 li
167.34 547.32 li
167.58 547.68 li
167.58 547.62 li
167.88 547.98 li
167.82 547.98 li
168.24 548.34 li
168.18 548.28 li
168.66 548.64 li
169.2 549 li
169.14 548.94 li
169.8 549.3 li
169.74 549.3 li
171.18 549.9 li
172.02 550.2 li
172.92 550.5 li
173.88 550.8 li
173.82 550.8 li
174.9 551.04 li
174.84 551.04 li
175.98 551.34 li
175.92 551.34 li
177.06 551.58 li
184.36 553.074 192.18 553.6 199.62 553.68 cv
201.42 553.68 li
201.18 554.22 li
200.58 553.68 li
203.16 553.68 li
209.03 553.61 214.8 553.271 220.62 552.48 cv
222 552.24 li
221.94 552.24 li
223.26 552.06 li
224.52 551.82 li
225.72 551.58 li
226.86 551.34 li
227.94 551.04 li
228.96 550.8 li
228.9 550.8 li
229.92 550.5 li
229.86 550.5 li
230.76 550.2 li
231.6 549.9 li
233.04 549.3 li
232.98 549.3 li
233.64 548.94 li
233.58 549 li
234.18 548.64 li
234.12 548.64 li
234.6 548.28 li
234.54 548.34 li
234.96 547.98 li
234.9 547.98 li
235.2 547.62 li
235.2 547.68 li
235.44 547.32 li
235.38 547.38 li
235.5 547.02 li
235.5 547.08 li
235.56 546.9 li
235.56 546.72 li
235.56 546.78 li
235.56 546.6 li
235.5 546.42 li
235.5 546.48 li
235.38 546.12 li
235.44 546.18 li
235.2 545.82 li
235.2 545.88 li
234.9 545.52 li
234.96 545.52 li
234.54 545.16 li
234.6 545.22 li
234.12 544.86 li
234.18 544.86 li
233.58 544.5 li
233.64 544.56 li
233.04 544.2 li
231.6 543.6 li
230.76 543.3 li
229.86 543 li
229.92 543 li
228.96 542.7 li
227.074 542.237 225.198 541.71 223.26 541.5 cv
221.94 541.26 li
222 541.26 li
220.62 541.08 li
219.24 540.84 li
217.8 540.66 li
217.8 540.72 li
216.3 540.54 li
211.99 540.024 207.497 539.905 203.16 539.82 cv
201.24 539.82 li
201.18 539.7 li
201.36 539.82 li
199.62 539.82 li
195.283 539.905 190.79 540.024 186.48 540.54 cv
184.98 540.72 li
184.98 540.66 li
183.54 540.84 li
180.921 541.286 178.54 541.526 175.92 542.16 cv
174.84 542.46 li
174.9 542.46 li
173.82 542.7 li
173.88 542.7 li
172.92 543 li
172.02 543.3 li
171.18 543.6 li
169.74 544.2 li
169.8 544.2 li
169.14 544.56 li
169.2 544.56 li
168.66 544.86 li
168.18 545.22 li
168.24 545.16 li
167.82 545.52 li
167.88 545.52 li
167.58 545.88 li
167.58 545.82 li
167.34 546.18 li
167.4 546.12 li
167.28 546.48 li
167.28 546.42 li
167.22 546.6 li
167.28 546.6 li
167.22 546.78 li
167.22 546.72 li
.92929 .879301 .889677 .799283 cmyk
f
gsave
65.28 507.78 mo
529.74 507.78 li
529.74 595.02 li
65.28 595.02 li
cp
eclp
411.42 509.82 mo
411.48 509.34 li
411.6 508.92 li
415.851 500.025 462.078 500.018 466.32 508.92 cv
466.44 509.34 li
466.5 509.82 li
466.44 510.24 li
465.318 515.458 448.525 517.136 444.48 517.2 cv
443.1 517.32 li
441.78 517.32 li
435.437 517.69 416.653 516.819 412.02 511.44 cv
411.78 511.08 li
411.6 510.66 li
411.48 510.24 li
cp
412.08 510.12 mo
412.08 510.06 li
412.2 510.48 li
412.2 510.42 li
412.38 510.78 li
412.32 510.72 li
412.56 511.08 li
412.86 511.38 li
412.8 511.38 li
413.22 511.74 li
413.16 511.68 li
413.58 512.04 li
414.06 512.34 li
414.6 512.64 li
415.2 513 li
415.2 512.94 li
415.8 513.24 li
416.52 513.54 li
417.3 513.84 li
417.24 513.84 li
418.08 514.14 li
418.08 514.08 li
418.92 514.38 li
420.72 514.86 li
421.74 515.1 li
422.76 515.28 li
423.84 515.52 li
423.78 515.52 li
424.92 515.7 li
431.796 516.732 438.806 517.029 445.74 516.48 cv
447.06 516.42 li
447 516.42 li
448.32 516.3 li
449.52 516.18 li
450.72 516 li
451.92 515.88 li
453.06 515.7 li
453 515.7 li
454.14 515.52 li
455.22 515.28 li
455.16 515.28 li
456.24 515.1 li
456.18 515.1 li
457.2 514.86 li
458.16 514.62 li
458.1 514.62 li
459 514.38 li
459.9 514.08 li
459.84 514.14 li
460.68 513.84 li
462.12 513.24 li
462.78 512.94 li
462.72 513 li
463.32 512.64 li
463.86 512.34 li
464.34 512.04 li
464.76 511.68 li
464.76 511.74 li
465.12 511.38 li
465.06 511.38 li
465.36 511.08 li
465.6 510.72 li
465.6 510.78 li
465.78 510.42 li
465.72 510.48 li
465.84 510.06 li
465.84 510.12 li
465.84 509.76 li
465.84 509.82 li
465.84 509.46 li
465.84 509.52 li
465.72 509.16 li
465.72 509.22 li
465.6 508.86 li
465.36 508.5 li
465.36 508.56 li
465.06 508.2 li
465.12 508.2 li
464.76 507.9 li
464.34 507.54 li
463.86 507.24 li
463.32 506.94 li
462.72 506.64 li
462.78 506.64 li
462.12 506.34 li
460.68 505.74 li
459.84 505.5 li
459.9 505.5 li
459 505.2 li
458.1 504.96 li
458.16 504.96 li
457.2 504.72 li
456.18 504.54 li
456.24 504.54 li
455.16 504.3 li
455.22 504.3 li
454.14 504.12 li
453 503.88 li
453.06 503.88 li
451.92 503.76 li
449.52 503.4 li
449.52 503.46 li
448.32 503.28 li
447 503.16 li
447.06 503.16 li
445.74 503.1 li
440.561 502.707 434.854 502.802 429.66 503.28 cv
428.4 503.46 li
428.4 503.4 li
427.2 503.58 li
426.06 503.76 li
424.92 503.88 li
423.78 504.12 li
423.84 504.12 li
422.76 504.3 li
421.173 504.68 419.629 504.878 418.08 505.5 cv
417.24 505.74 li
417.3 505.74 li
416.52 506.04 li
415.569 506.419 414.441 506.982 413.58 507.54 cv
413.16 507.9 li
413.22 507.9 li
412.8 508.2 li
412.86 508.2 li
412.56 508.56 li
412.56 508.5 li
412.32 508.86 li
412.38 508.86 li
412.2 509.22 li
412.2 509.16 li
412.08 509.52 li
412.08 509.46 li
412.08 509.82 li
412.08 509.76 li
f
grestore
gsave
425.34 516.18 mo
452.34 516.18 li
452.34 507.78 li
425.34 507.78 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
425.34 513.06 mo
(null)
[6.00284 6.00284 2.68539 0 ]xsh
grestore
1 /0 /CSD get_res sepcs
1 sep
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
442.74 513.06 mo
(:)sh
gsave
425.34 516.18 mo
452.34 516.18 li
452.34 507.78 li
425.34 507.78 li
cp
clp
KYNPNS+Calibri-Italic*1 [11.64 0 0 -11.64 0 0 ]msf
445.86 513.06 mo
(T)sh
grestore
KYNPNS+Calibri-Italic*1 [7.74 0 0 -7.74 0 0 ]msf
451.56 515.88 mo
(0)sh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/KYNPNS+Calibri-Italic*1 uf
/KYNPNS+Calibri-Italic uf
/QJJAAA+Calibri-Italic uf
/KYNPNR+Calibri*1 uf
/KYNPNR+Calibri uf
/HIBBAA+Calibri uf
/KYNPNQ+Calibri*1 uf
/KYNPNQ+Calibri uf
/PBAAAA+Calibri uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
