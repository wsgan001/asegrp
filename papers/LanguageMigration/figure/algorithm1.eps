%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: MAM.pdf
%%Creator: Adobe Acrobat 9.1.2
%%For: zhonghao
%%CreationDate: 2009-8-31, 18:43:25
%%BoundingBox: 313 631 557 786
%%HiResBoundingBox: 0 0 595.2701 841.8201
%%CropBox: 0 0 595.2701 841.8201
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 644 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2009-08-31T17:56:58Z"
   xmp:CreatorTool=" TeX output 2009.08.31:1756"
   pdf:Producer="DVIPDFMx (20031116), Copyright © 2002 by Jin-Hwan Cho and Shunsaku Hirata, Copyright © 1998, 1999 by Mark A. Wicks"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 4 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -841.82 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 841.82 li
595.27 841.82 li
595.27 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
60.35 168.8 mo
286.35 168.8 li
286.35 53.8 li
60.35 53.8 li
cp
clp
.24 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
63.1699 90.1 mo
63.1699 76.48 li
104.27 76.48 li
104.27 90.1 li
97.6699 87.52 90.35 87.52 83.75 90.1 cv
77.15 92.74 69.7699 92.74 63.1699 90.1 cv
cp
false sop
/1 
[/DeviceCMYK] /CSA add_res
.929688 .878906 .890625 .798828 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: OOABAA+SimSun-GBK-EUC-H-Identity-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (OOABAA+SimSun-GBK-EUC-H-Identity-H)
%%Title: (OOABAA+SimSun-GBK-EUC-H-Identity-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /OOABAA+SimSun-GBK-EUC-H-Identity-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {0 0 0 0} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 22141 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [1 0 0 1 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 10 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
89 <001C60D8A8C9B7A73DB6AC3351F1EA44553671C3675DAFCC1DDDBDA11DA1
BE45F1BFB9A9D27544E6720925D74D064B69E986D0B91B16A7F9E0EFC6D67001
E187FE048D8F098A26EBC4DCAB3FCDE99B4C7F5FCECF8AE7E9DF5086833A5DF2
C9DB7162F964CFC0FB061685D2CB2EE6CB> |
72 <001C60D8A8C9B7A73DB937B4101DBBF46DCDCD34C66331F9C4BC9617541C
58225F0813F84C9B99CE106C877AC69B6618F22D5116137A9BBCC8BBD2B6E99F
1515F40D5047C1870B45E96B1FB58B60D6847A662BC240FFE5567D9F452FAC8C
3A6A6C8EF10951B46DD67811A39E791E248501B427AEB3F7D65FADC7A32C27A8
280DAD3EE5A5DC8377> |
85 <001C60D8A8C9B7A73DB97983BCC759D7FB3A4FDCE0D7570A90897AA8C8EA
8ECEF21D0ADDAE48E4C2C151543F8FE94C2CFE5334E7C112EDD213EE7FCABA02
F4CD205203DB96FAD5A454F9150CF55CB167547B51DFFAB62E26249B4B6315E1
52E19443D6D50F823CFDA3D9AAD4D3303BA4D9AAE7C7FA1FE29108CE854B2CFB
5B30C4109037D5F7B223F54042062F52C2C78BC21D26FA34466A968737A83F11
F03801922C455FAFBE38BA73E0C12E73ECA1C41E6D6C81> |
86 <001C60D8A8C9B7A73DB923D5A49D04CBD65263719474C80BA97F6F133EAA
4FCBFFA43F60F895C3C414B7030ECA67E2674F62D2101C594B032EE90D99376A
B7F0760AFAD806D2D95642E44E5A2972877B76376DEB7CB434DCD68736F1E6E5
DBDFA54FD232EB08D99648B487B3E4ED2484C351F3C5ECD6F9DC9B48E8E90C5C
9E57A52E4F0E9F094FF68532358CE3A23923A3205C06E22076925C0822C62316
37F06A3E9B8D1291F9E72FC9834B88C703249C81A90955A609860869BCF7333D
96CF9A54D009C595DB9C0AD3F8C33F579CD709F88D0AB96D869C241E584F1BDA
4F8C3C79B3580F4553FAE866201562F5C8B6C736572DF3A478581D720C8E0B81> |
76 <001C60D8A8C9B7A73DB9569388B530AA69A814780F04C0D0891B66556132
542C171BD2EA0875B17FB62A498137AA36ED9317F24C9A265F4E9A80213C7581
7936CF88855AE783C3200ED8BAB3E514B0F3675AC005A984E1300BE3AB9F059A
1E769D0B04C27E73DE797CBE27CEE57EFD8A61BE00EE7A34C5DEA0BC68905399
8C549C598091C265DC92224E3190B4EB4422DF93A2E24E69A294E18C> |
82 <001C60D8A8C9B7A73DB69981D0C259376C8A5DD6859FA4C644174BA1BD93
78F08BC6C5746C8458A0F5EDE6F68F6FE26D9C5EB4C467C31A5FE9E90E9C2A36
375CB86A13DDC85D1181B4F95BD95E297453C2C6FDF82458BD6B7FC4C12762A2
F00ECB6B5D5B25661F7C0083F60573172BA4A0B97A5807D9A9EE9E0EA705666F
4A2711E064C01F> |
81 <001C60D8A8C9B7A73DB97D2EA733FEF9D2030029A5B2CF3B73FD3A017E40
3C7A7F9D86A600F5CA059F84CCCD28FD5E3C2836D8BCB466DDAA22DF5C96BA4E
9D33A71AF7D3DB5B984D37F308AF6E98148C08AC3D8187DD889E07605A4D6C27
91634517BDF87F17CE0B8D6E5CB87F3548E78F04628C0A6D80958439CE6AAB2F
332503B61365172184BDB9AB347893A9B5FBCB8B7E77E4909B88C3FAAA5D8ABA
37287B6C4E30FB1A38837394659F56FAACCFFEF31089BC2720E27F908DB1CF2A
91E8283B42A9> |
3 <001C60D8A8C9B7A73D40> |
21 <001C60D8A8C9B7A73DB9C40DC66A19F12FCC46A7E640D743ED53FA7295A4
3DE3EC7E9B681DA33149D24718CE5D426133EBD66F9D5E8289C5FC680EB1BD55
11E9F35487E00F68F96BABBC437694A499B7C213A6D37AB8AE4738C346FD7C7D
FC770F44C2FBE794D1804AE6C00B62E884CB9F85DCC57FE56A5E45A5D60D298F
4F6BF4F3E8DF96B64F237001E04644A1F2D9FB96DBDA12E110EC8C42272DB826
1CAE0449E62177813A4A3994D81F50552CF9F0C33E903AA9F82919DB8C7F47A2
D644C25D1DA098B0> |
0 <001C60D8A8C9B5EE31F4> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /OOABAA+SimSun-GBK-EUC-H-Identity-H-Identity-H /Identity-H 0 [/OOABAA+SimSun-GBK-EUC-H-Identity-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/YEJRQH+SimSun-GBK-EUC-H-Identity-H /OOABAA+SimSun-GBK-EUC-H-Identity-H-Identity-H findfont ct_VMDictPut
YEJRQH+SimSun-GBK-EUC-H-Identity-H [7.9767 0 0 -7.98 0 0 ]msf
65.6898 84.7 mo
(\000Y\000H\000U\000V\000L\000R\000Q\000\003\000\025)
[4.02023 4.02024 3.95963 4.02023 4.02024 3.95963 4.02023 4.02024 0 ]xsh
63.1699 70.1201 mo
63.1699 55.24 li
104.27 55.24 li
104.27 70.1201 li
97.7301 67.24 90.2898 67.24 83.75 70.1201 cv
77.2102 72.94 69.7699 72.94 63.1699 70.1201 cv
3.052e-5 3.052e-5 3.052e-5 3.052e-5 cmyk
ef
63.1699 70.1201 mo
63.1699 55.24 li
104.27 55.24 li
104.27 70.1201 li
97.7301 67.24 90.2898 67.24 83.75 70.1201 cv
77.2102 72.94 69.7699 72.94 63.1699 70.1201 cv
cp
.929688 .878906 .890625 .798828 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: OOABAA+SimSun-GBK-EUC-H-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OOABAA+SimSun-GBK-EUC-H-Identity-H 1 GetGlyphDirectory
20 <001C60D8A8C9B7A73DB9873C4F791E79ACF81EB19D63BA2E94321160B0EE
CE1160759126177329F8F00C47A8A8F4A33D8FBA50DC1553DA219B007F3C368E
FE0E3D89022F9962E4AED1DF1DE74F2DB52F8805EE1738AD59A4DE7E4CBB52EB
00> |
!
end
end end
%ADOEndSubsetFont
YEJRQH+SimSun-GBK-EUC-H-Identity-H [7.9767 0 0 -7.98 0 0 ]msf
65.6898 63.94 mo
(\000Y\000H\000U\000V\000L\000R\000Q\000\003\000\024)
[4.02023 4.02024 3.95963 4.02023 4.02024 3.95963 4.02023 4.02024 0 ]xsh
126.23 86.68 mo
203.09 86.68 li
203.09 65.4398 li
126.23 65.4398 li
cp
3.052e-5 3.052e-5 3.052e-5 3.052e-5 cmyk
f
126.23 86.68 mo
203.09 86.68 li
203.09 65.4398 li
126.23 65.4398 li
cp
.929688 .878906 .890625 .798828 cmyk
@
134.75 86.68 mo
134.75 65.44 li
@
194.63 86.68 mo
194.63 65.44 li
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: OOABAA+SimSun-GBK-EUC-H-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OOABAA+SimSun-GBK-EUC-H-Identity-H 9 GetGlyphDirectory
17 <001C60D8A8C9B7A73DB91CE24174F2CF611360AC54B6CDE32A3106439273
5D7CA4A7A886BDB7AF1F2941CD8DBC8BE2C2D14C6C9983983EB9DFB9D2C6495F
FF30BC926D91EE3877> |
38 <001C60D8A8C9B7A73DB6A70B0D1171EB2B05716A57A36051BCA4F091B1BF
0612F84D61B7DDA7F028930F1B6F2F65D4AE311456C21C70A4BA6EB2BC800B64
E94AC03D8408375BA5B0562FD8565E925E5446B85D9958703FCF4B9980751B7C
CFA3061443555EC903E3ED51AA9525E0A275B8A7EC71AEDD161C9065014AC8B2
142CFB509F91EEEA059FBF2C7B9037304598731936F4AD133E75> |
79 <001C60D8A8C9B7A73DA391D03E1B6BC0DE7B69284AD80F1502141FA17998
899BA73EBBC6B04B2D552B02EB7DB690A294A489C508FBFE236B6BA96B558970
AF94C5DBEFF7B2908845C1B4E7B3BD7D7C1D4CA395C7DA320148A1E4C330984E> |
87 <001C60D8A8C9B7A73DB95A84ADEFC27CA3118991A6B06AA4BCC9E401A199
AD2ED0215A3F452FFBD87E172E65C43C3D01B21353688DD3BB2DFBBF62609414
A723D4BE0F998947300EBE6F71534F58F1FD8E961B2033B7C6342D1571C25D27
0CD36FEE40498320DC6EEF544393F5BA4E9A1B022D> |
70 <001C60D8A8C9B7A73DB9CA3CB59A9362C567E6693756DF87B8701FBEA898
1D0FB41BC57FB14082E0302C46C467D65EA7EED5997CA9CC4C07D177F85EA614
2B8109737791C7B75F03EC4D414D20766F94E802E055EF0E5AF698799D84806F
83F6347388411C500D7944BE94549DBBADCD7CDD5F3B250E41D2BDB64BE408C8
8E0783A9CB9044EA5B4469936D654710860D0CE082D416E670610318DCB9A758
B604E445D057A118ED8BE989140932> |
71 <001C60D8A8C9B7A73DB9DE1BCDD5A807EE39F8633609A4C4F16F008DC407
3956B2C1B613960FF999659DC8B51CF2AF3898B79A73796D4AB8F60B4FFFB8C6
5DA62D8C6465F03752C32EA337C501E07BCFBE25277D880FFFCBCCBD2DCBEA7D
49F89E2FC8D0F3091ABAA3FE7CD0F6BF51D014897054208A250549C4A7BAFB58
C317A7C24E6596ABBB30409DB93B5CAA7D0EB99024D96D46DD14CDF99ED1D25E
FB7C84EF910636F16E0DA5E7D5FC5E9E9EB1C73F45CB1C28E243DC84EDAB8A20
A2BC5C3C7BC51B21903D7DFF4A4256FE25EBC7C7FA> |
68 <001C60D8A8C9B7A73DB98653E05A9FC5B5EAD8DF8918156B7D8947B72958
6A5D71329F6C61A9A77AF57C287F000D704E2B1B8CE249B18DAE67C644BB1230
47F50A6EBCD98C07AA66C4DD0A76B159CD29A711636C3E8E96322D91698FC417
EE3AF0100BFDDAD67B2B21BC41C61402F09AAFDEE7C5AD30CCB232A8E6E155DC
86AE132158E832A6F89E6610BEA8A0F39564C0D8550E916722019256CE98C6F8
5F19B9209778C83C794FC8FCC2A636A7723F212BA81A84D9872C4C2FD1780D4C
0FEF29C2CA6714F970CE098037D79A9F77359866B81A5DE84625B772E4DD2669
7EBD5449FC251873E5600E23E1D84B36167C98937F9631E4A9D2B4C07FC06858
BF43> |
74 <001C60D8A8C9B7A73DB91F11B451E7DBFA46ECBE25C9942EBDB0619EB037
A650021A696093BB4137719B4EDEFA299F43C49829D944591403F963EA7515F8
87222C06EA6926A6379751A80C74883E86856F14223DC365C156F55BCEDFE8D8
CC6C68F3D3797BD1D6D3F93B526AF593A416C1A3F5183FB8A5FB78F06619A4B4
C310395B1BE81023AC22BE829D19C71FCFB5CFA31AFAC80DF6A8632A7D75DA7A
C37D0058B187AF0E365BFECD5A314CE89421CBDB46C47AB7E88E11EA2CA3F1CD
A3D9B6C9BEC6DDDA2358204131735ECF0626CD71730DEDC2DB208A602D4DEC90
88B6423CF65F463006D9CDF6257162A3513E1EF96494B564E5081D6349C20AF1
AE4A55AAB204DAC927519DD8A1AB037CF6E7F91BBD10C20EB433E484F5E14702
A6052942B8AC20C3C3A1C86B1A992A5F5E5F8F98B2752C99D239623E22948613
4F4C0417BA7CBE5731987E3F5DF197B79DED3913E2991264B0413422BB809CE3
D8CED7BC2CCA7E12BC05DAFFCF603904D0690523A4D8C8BAC84FF5F9B0D1CAFE
558FF91780D5087C72C5E5889F3A600CC7DC6A230DB62D5DD9733A012092355B
4DABE3C092529201A3F8A4DAB27E249F07> |
80 <001C60D8A8C9B7A73DD90B4F3776B02451FBABF49548192505688CF8D4D4
9322F8D916FFB8C1CE84BB93BBE5DEDBF14EC319382BF6E61D35C8D3E4EA3057
E5A423D97EF99E6B50A024A5644F885CE43BA5467F65C4F8B9A0736E62EAB31D
FED581BC288D1C60D6B990AD0764C0032E63DA6C12FCB234B90E7A3304747BB1
0A5A563E32C4CAAD3BECD16EFC6F2A89D45EB95D5865BE4B29A71AC0E11BB912
E9732834A18D8C0D5621721869A8E4C91EE286B7A946548A352593B7AEA037A7
93574B8C10416EB233B02C04646EDE5783B4C5E2200E15A76CBE32899A86A100
EA2A0713AA700BD2190A73119895DE7E56B00EE9176BC5CEFF2969D015C6FF12
35D77A890C208E62DF27D04C2668DD079509CF7F719A4B5B1D82AA3950CB6AD8
2311C5820AE9544B66598F14> |
!
end
end end
%ADOEndSubsetFont
YEJRQH+SimSun-GBK-EUC-H-Identity-H [7.9767 0 0 -7.98 0 0 ]msf
138.65 73.6 mo
(\000\024\000\021\000&\000O\000L\000H\000Q\000W\000\003\000F\000R\000G\000H\000\003)
[3.95963 4.02023 4.02025 3.95963 4.02023 4.02023 3.95963 4.02023 4.02023 3.95963 4.02023 4.02025 
3.95961 0 ]xsh
146.63 83.2 mo
(\000D\000O\000L\000J\000Q\000P\000H\000Q\000W)
[4.02025 3.95961 4.02025 4.02023 3.95963 4.02023 4.02023 3.95963 0 ]xsh
104.27 63.7 mo
116.57 63.7 li
116.57 76.06 li
121.37 76.06 li
.929688 .878906 .890625 .798828 cmyk
@
120.71 73.3 mo
126.23 76.06 li
120.71 78.82 li
120.71 73.3 li
ef
104.27 84.28 mo
116.45 84.28 li
116.45 76.06 li
121.37 76.06 li
@
120.71 73.3 mo
126.23 76.06 li
120.71 78.82 li
120.71 73.3 li
ef
212.03 86.02 mo
212.03 63.7 li
277.91 63.7 li
277.91 86.02 li
267.35 81.82 255.53 81.82 244.97 86.02 cv
234.41 90.28 222.59 90.28 212.03 86.02 cv
3.052e-5 3.052e-5 3.052e-5 3.052e-5 cmyk
ef
212.03 86.02 mo
212.03 63.7 li
277.91 63.7 li
277.91 86.02 li
267.35 81.82 255.53 81.82 244.97 86.02 cv
234.41 90.28 222.59 90.28 212.03 86.02 cv
cp
.929688 .878906 .890625 .798828 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: OOABAA+SimSun-GBK-EUC-H-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OOABAA+SimSun-GBK-EUC-H-Identity-H 2 GetGlyphDirectory
83 <001C60D8A8C9B7A73DB908748451047989C3955B3615A9F2D9EE298C080D
8F17A9D1C3483A13F08B4EB80001FB7761FA7D0D6D5DB57802D55DBCBC6B437A
AA40FE1510E64CEA182416A019139BE7F60301A7D8A91B4F38E2718FDBC3B7ED
3031955A110C4AD1CDBB7F1E367454238726CEF3B69F05282B637168CDB9C6AA
032D0D08B972FCD2E5B226446097D0E5C40BE80E2018590029953AE8D6A5919F
42BEEBECD706A215638672E54810132F62B73FEFFB6E380BDAE51571B3B5C454
056E570D4DFC8A597357FA5C26970EA6FE6D098E87646A392A> |
75 <001C60D8A8C9B7A73DB97D2EA733FEF9D2030029A5B2CF3B73FD3A017E40
3C7A7F9D84DB8AB8AAE68C8CED4187504ECFA6198BE54C809B11FB62A82D0CAA
DBA2ABA2B0D257C3393A79CE65FA7611AC0696601C23D3D9240F91E0B37FB18C
04B0C028F5E73B4BB00C214D4D9F76A4AC84E307C9E32044986498B7B51E13AC
54FEF5B3A250E48F093BE6C3690CB4DECC0A9374BEDB6D433E93D834988C1A73
3D817FF97FC615A7D9B532137E0FB7870DF2F7AF7BE4B923A58C32898D344B60
9B0CAC50448D37> |
!
end
end end
%ADOEndSubsetFont
YEJRQH+SimSun-GBK-EUC-H-Identity-H [7.9767 0 0 -7.98 0 0 ]msf
214.91 70.84 mo
(\000F\000O\000D\000V\000V\000\003\000S\000D\000L\000U\000V\000\003\000D\000Q\000G\000\003)
[4.02023 4.02025 3.96046 4.02023 4.02025 3.95963 4.02023 4.02023 3.95963 4.02023 4.02023 3.95963 
4.02023 4.02023 3.95963 0 ]xsh
220.91 80.4399 mo
(\000P\000H\000W\000K\000R\000G\000\003\000S\000D\000L\000U\000V)
[4.02023 4.02025 3.95961 4.02025 4.02023 3.95963 4.02023 4.02023 3.95963 4.02023 4.02023 0 
]xsh
203.09 76.06 mo
207.53 76.06 li
207.53 76.48 li
212.03 76.48 li
.929688 .878906 .890625 .798828 cmyk
@
206.51 73.72 mo
212.03 76.48 li
206.51 79.24 li
206.51 73.72 li
ef
209.33 129.64 mo
280.55 129.64 li
280.55 108.34 li
209.33 108.34 li
cp
3.052e-5 3.052e-5 3.052e-5 3.052e-5 cmyk
f
209.33 129.64 mo
280.55 129.64 li
280.55 108.34 li
209.33 108.34 li
cp
.929688 .878906 .890625 .798828 cmyk
@
217.85 129.64 mo
217.85 108.34 li
@
272.09 129.64 mo
272.09 108.34 li
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: OOABAA+SimSun-GBK-EUC-H-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OOABAA+SimSun-GBK-EUC-H-Identity-H 3 GetGlyphDirectory
36 <001C60D8A8C9B7A73DB9D2D67B03BABA16DE71088E91FDA0365C2DC5F0B4
E238C107979A1BB6C942939C3841566B30D37A08137C1E84B536C3470D5FC886
B167970ABECCA7AC50839057124E257C720FD39309BA1A816166D7E735D90459
C18987BA30E000006CD065F37B91215EF51643DE4E333253E6C5E54C9253984B> |
51 <001C60D8A8C9B7A73DB987322EDD44B1DF5405863ACED3B083D42BDC3CA1
425C498E01A1A6F64FDE260D8348135FE57044BB589DB85A7B2403D17C109F67
BBA086E6D4F909213C7237AE42BC80977AD42AC646ACA0940F4F63BB92FC411C
C7E84797EB3055F01B1CBCF10D6CB38B050E79477808B065131DA19434E95AF0
401CC12700FB39D2A859560EC5A5FC62E01F1350431C233B2FD6E62066C2B556
BFF9> |
44 <001C60D8A8C9B7A73DB9696D477FC5C77CC13F785D0DEFFCFE399F815467
2C738C7542738E124DFEDA4F33708349FE4D7ECBEDDDE92AFC81C7A51B45AEEC
CE4AEBB160C3CBB2056F1DB3B4BB9EAEADC6349A0E672BA304F2323994F5EFB4
AD37BAA9> |
!
end
end end
%ADOEndSubsetFont
YEJRQH+SimSun-GBK-EUC-H-Identity-H [7.9767 0 0 -7.98 0 0 ]msf
222.95 116.56 mo
(\000\025\000\021\000$\0003\000,\000\003\000F\000O\000D\000V\000V\000\003)
[3.96048 4.02023 4.02023 3.95963 4.02023 4.02025 3.95961 4.02025 4.02023 3.95963 4.02023 0 
]xsh
232.91 126.16 mo
(\000P\000D\000S\000S\000H\000U)
[4.02023 4.02025 3.95961 4.02025 4.02023 0 ]xsh
244.97 86.02 mo
244.97 103.54 li
.929688 .878906 .890625 .798828 cmyk
@
247.73 102.82 mo
244.97 108.34 li
242.21 102.82 li
247.73 102.82 li
ef
204.11 162.28 mo
204.11 139.96 li
286.01 139.96 li
286.01 162.28 li
272.69 158.02 258.35 158.02 245.09 162.28 cv
231.77 166.54 217.43 166.54 204.11 162.28 cv
3.052e-5 3.052e-5 3.052e-5 3.052e-5 cmyk
ef
204.11 162.28 mo
204.11 139.96 li
286.01 139.96 li
286.01 162.28 li
272.69 158.02 258.35 158.02 245.09 162.28 cv
231.77 166.54 217.43 166.54 204.11 162.28 cv
cp
.929688 .878906 .890625 .798828 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: OOABAA+SimSun-GBK-EUC-H-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OOABAA+SimSun-GBK-EUC-H-Identity-H 1 GetGlyphDirectory
73 <001C60D8A8C9B7A73DB961D9EBF38D540F5418309D29F8C955899B1D0DEE
7DC8304FDB70CDB14497BB380DD267BE9E968D45AEA0846C58A9E725B52B374C
3892C2D7094F4248CC3895B28BD1051A22D0D2EF2016F19AD4A17577F610DA56
F0C8FC3438FFD85E7B329897F0A8093B4F55AABBD53E53773FC87F9D4BD69ED9
E9E3485547175CFB3F428F4F04988634824CABA09E6C415F5AC61F0C8F4D936E
9D7BA3CBBFAB98E883E0409777D1F5235437A2> |
!
end
end end
%ADOEndSubsetFont
YEJRQH+SimSun-GBK-EUC-H-Identity-H [7.9767 0 0 -7.98 0 0 ]msf
211.01 147.1 mo
(\000P\000D\000S\000S\000L\000Q\000J\000\003\000U\000H\000O\000D\000W\000L\000R\000Q\000V\000\003)
[4.02023 4.02025 3.95961 4.02025 4.02023 3.95963 4.02023 4.02023 3.95963 4.02025 4.02023 3.95961 
4.02023 4.02023 3.95963 4.02023 4.02023 0 ]xsh
217.01 156.7 mo
(\000R\000I\000\003\000$\0003\000,\000\003\000F\000O\000D\000V\000V\000H\000V)
[4.02023 4.02025 3.95961 4.02025 4.02023 3.95963 4.02023 4.02023 3.95963 4.02023 4.02023 3.95963 
4.02023 0 ]xsh
244.97 129.64 mo
244.97 135.16 li
245.09 135.16 li
245.09 139.96 li
.929688 .878906 .890625 .798828 cmyk
@
247.85 134.44 mo
245.09 139.96 li
242.33 134.44 li
247.85 134.44 li
ef
121.31 163.36 mo
190.73 163.36 li
190.73 142.12 li
121.31 142.12 li
cp
3.052e-5 3.052e-5 3.052e-5 3.052e-5 cmyk
f
121.31 163.36 mo
190.73 163.36 li
190.73 142.12 li
121.31 142.12 li
cp
.929688 .878906 .890625 .798828 cmyk
@
129.83 163.36 mo
129.83 142.12 li
@
182.27 163.36 mo
182.27 142.12 li
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: OOABAA+SimSun-GBK-EUC-H-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OOABAA+SimSun-GBK-EUC-H-Identity-H 1 GetGlyphDirectory
22 <001C60D8A8C9B7A73DB691F1F492A12A1AD970B57BB40C7B83E4ADDE6D04
415C8D07338B694E1B6536A65BBC322B80C5564E2B0096FF26D0C221A1918414
063D2A5D19E693094A776EABE510FA0F4CDBD4E5EF437243F96A1361AB4C3EF9
738520EB9A39239487A0AAD2A4BE77FCBBA53CE286A931AFD5C53C56CCAB2B7E
22EC2725AE5D53EE5C0805AD435450E1C909201A1B5A895A0C5B7C224EB7BD29
024C444FDBC67C47741571559797CB4724D0E4774F21A1DCC042166E7B9109B8
678C9E52EBF01CAA709A576B29CEEBD17C87A5A378CECECA1C70D6825A283DBC
4149ED90762AFC90C00311F03062B97501F450E1A1943A8CBD85B5873802E865
204094F69510145770CB02B8757CA4E4> |
!
end
end end
%ADOEndSubsetFont
YEJRQH+SimSun-GBK-EUC-H-Identity-H [7.9767 0 0 -7.98 0 0 ]msf
131.99 150.28 mo
(\000\026\000\021\000$\0003\000,\000\003\000P\000H\000W\000K\000R\000G\000\003)
[4.02025 3.95961 4.02025 4.02023 3.95963 4.02023 4.02023 3.95963 4.02023 4.02025 3.95963 4.02023 
0 ]xsh
143.99 159.88 mo
(\000P\000D\000S\000S\000H\000U)
[4.02025 3.95961 4.02025 4.02023 3.95963 0 ]xsh
204.11 152.74 mo
195.59 152.74 li
.929688 .878906 .890625 .798828 cmyk
@
196.25 155.5 mo
190.73 152.74 li
196.25 149.98 li
196.25 155.5 li
ef
244.97 86.02 mo
244.97 103.54 li
@
247.73 102.82 mo
244.97 108.34 li
242.21 102.82 li
247.73 102.82 li
ef
66.35 128.56 mo
66.35 106.24 li
148.25 106.24 li
148.25 128.56 li
134.93 124.3 120.59 124.3 107.33 128.56 cv
94.0102 132.82 79.6699 132.82 66.35 128.56 cv
3.052e-5 3.052e-5 3.052e-5 3.052e-5 cmyk
ef
66.35 128.56 mo
66.35 106.24 li
148.25 106.24 li
148.25 128.56 li
134.93 124.3 120.59 124.3 107.33 128.56 cv
94.0102 132.82 79.6699 132.82 66.35 128.56 cv
cp
.929688 .878906 .890625 .798828 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
YEJRQH+SimSun-GBK-EUC-H-Identity-H [7.9767 0 0 -7.98 0 0 ]msf
73.25 113.38 mo
(\000P\000D\000S\000S\000L\000Q\000J\000\003\000U\000H\000O\000D\000W\000L\000R\000Q\000V\000\003)
[4.02023 4.02024 3.95963 4.02023 4.02024 3.95963 4.02023 4.02024 3.95963 4.02023 4.02023 3.95963 
4.02024 4.02023 3.95963 4.02023 4.02023 0 ]xsh
79.25 122.98 mo
(\000R\000I\000\003\000$\0003\000,\000\003\000P\000H\000W\000K\000R\000G\000V)
[4.02024 4.02023 3.95963 4.02024 4.02023 3.95963 4.02024 4.02023 3.95963 4.02024 4.02023 3.95963 
4.02023 0 ]xsh
121.31 152.74 mo
107.33 152.74 li
107.33 133.42 li
.929688 .878906 .890625 .798828 cmyk
@
104.57 134.08 mo
107.33 128.56 li
110.09 134.08 li
104.57 134.08 li
ef
244.97 86.02 mo
244.97 100.06 li
156.05 100.06 li
156.05 137.26 li
@
158.81 136.6 mo
156.05 142.12 li
153.29 136.6 li
158.81 136.6 li
ef
grestore
false sop
0 0 0 1 cmyk
%ADOBeginSubsetFont: UGXAAA+NimbusRomNo9L-Medi Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /UGXAAA+NimbusRomNo9L-Medi def
/FontInfo 7 dict dup begin
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) def
/Weight (Bold) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 54 /six put
dup 58 /colon put
dup 70 /F put
dup 79 /O put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 117 /u put
dup 118 /v put
dup 119 /w put
def
/UniqueID 5020933 def
/FontBBox {-168 -341 1000 960} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 461 481 676 696] def
/BlueScale 0.039625 def
/StdHW [33] def
/StdVW [140] def
/StemSnapH [33 44 48 55 66 73] def
/StemSnapV [118 140 148 163 174 178] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
18 dict dup begin
/six <1C60D8A8C9B7A73D300B27356F88D686C6BBA23E774057013E23F61363
D4A17EACDEA35ECE2543B0A66524A2D0C997D71EBA8EE90DC56B54AD94AC1129
FE61BF18F5AC6CEF813F34C68E9748203DF40511FD57BB32354DB6F2B8993ACC
6B9595A45A595692BC93E86D5208F2BAA55E3F0F94C92173C669279E9EAA4FDA
A2F422BEB00498BA7BC6D2A8> |-
/colon <1C60D8A8C9B81F2CB3BAB8DE99628B3715EEB5F5DCD8492E471AEA8F
347C7F4152A34CAD1FF1315EA6B94D1CCA7607EA1CA741F1A088EC35D5D62A33
27B33F56E8EC0E96> |-
/F <1C60D8A8C9B7D8BE18D6EBF59787B8941E7537197C276FA80C62327C0EBE
1014E3FDA9A49C7CE90C8679044CCE0BCAC39BE6579A95A9063F6B53B01DFDCB
42B5DFF83E0EFCE1AAD05CD5E45A48B0A8991DC50F3A833E5C146E89FAEDEFB5
3CB9318BFDA3F7B29F943B0FBFE72219150C9BAE81BB6127F999A3FDE0D8E333
D72F22B09A90> |-
/O <1C60D8A8C9B6FF867A6C34F63CFBA483F20348D2DAD0C454E2872F1EFB83
B828C0BBAF767F3EF27D6397A2DEF68C9F347FD90275688C783EA11450BD3115
A537ED51F320BE134232B37E819BD3E39A17B19174C37C49F8C74729C0F7F969
090CA0774FFE469E38> |-
/a <1C60D8A8C9B7A73D3387F3351E8E18AD4C337D189ACB524452C5C76175D3
6A9B9EE21E61CCD032B72EA732DAB08D223F8476F8158A75DD87D53D4754BF58
8F21BBDD0B9BD8A57E8132EB5982C81AEFE1FC21DC7FEF21759B1DDD64FEC1B0
1D76B223BFE0C623B317990FF3F82C513CCA8FA63FF271DA495502242C53CA27
EA3287B2BBFC3217711C1DDF95ED56603997D39682906E04AF748FD5C8E52443
0A90FD84624F869BD880BCBADE562C810BE2A83CC20CB51E6D0CA2C7008633C4
06518E> |-
/c <1C60D8A8C9B77FE24419C765668C66977042CF4AAC33A05586CA04AB921B
B7D14E2740B1CE39960F7CFC14FBE33A3738153404F59CDC94DC3EC626A023EA
0F50958819CB5E3F42DC48646B0675A464926E4575093FB7FB37B685779CE3A0
2CD6> |-
/e <1C60D8A8C9B77FE24404D6FC75C46E8B158C7975D79013EBB5DCD53440E2
1332CFC4ECC341E7AFADF9585DB658612EC8ED47CB15CBF662FC73FBEE0045FF
CB1EC723F1B412304D1100168E2128E2060163C1E9CBFAF33B361B5A6E493F9D
F06D41DD478FF2FA297D0668847F9C36D5F5C238CA> |-
/f <1C60D8A8C9B81F2C46CB7D4B088C9644D850FF2E7D4B535086D0F5438DAF
C761104412F361FE092E9179ED2DF1120475113D9F11FCD502BC52046F3C88BB
DF27941300ABCC14ED64B8A7F615666C615610346A170729FDF8D7C8CDA401C1
95E18403D8B9F0195CD09B663946D17CB518E3599938731873FABFDA> |-
/g <1C60D8A8C9B7A73DB6986B74967860531D5C33FE655CD281C5643C14DD6E
74CB50E9F5CEBF92AB3E2DB23D8D0536338ACC1434BD74DB78E6C8972A56B5EC
A00CAED24519752EC7C275BE9E252326654566806EE44BED5B9C3C15F855C948
AE366CCB698D2FF7464E816DABCA2B9DB7D8F75909CEB8F70AAF3E4633401D87
E86EC0698BC79253BA9A49BC1498FE9CBB60BCC5D06EB4A08004B665B63A67EC
9E690E5E0DF479D3844D0B21B68EBA67DB35C98DDC948E732644238649DBC89B
54633CEF2AA882567C823C6F21331BD4F98556D8FCC8D44F10AAFF9E4FABD558
7810FF14047DFA3E5185E0955F6BD298F8306A17456D921D7D3C75CFFF140087
BB0D9FABAA9F75CEC075AC019AE213A62E888471EE6E4ACF6C4AC9422C554BB4
2C> |-
/h <1C60D8A8C9B7EF3257330F56AA26B3B4D60E1AB698B7732F7E2F8B8B1233
66FD09FD4CF17306DC3C95E7C7F49EAAA224DAF837A0D57E9845075192FEB55A
59F361EE897E2ED04657CEF5BAB80C209F8B454E76E95664E5E92A953BF5D04A
824985B9EC7D7044712DF5643ADD4D8814DFBC9F902E4D275DF69220FC0263A8
8AA2FA89922F> |-
/i <1C60D8A8C9B854D088BE03066611142D35B96CDBC6AC69CE7D90A67E607A
97F6A9B6B875C22F51FD57BA3ACC3AD42FE0C4A0E1D536D46C6FA1792B134074
70AA44206267D45F7C9D5285679ED629FF131156C24DB7D425525CB4E784EDB9
C67C53B4D02F9488FD31A7A26AA8AF73> |-
/o <1C60D8A8C9B7A73D33B29FF9A975322B3362DC44B144D77C192E90E503AC
52DEE198FC9B9A0BE397FE5C900774EEEF1E745C0E1E84056DE211BFA2C0DD56
BD867F1CEE2D1CAF0E57E72D77AF929D1611EB127B9A6B678E> |-
/p <1C60D8A8C9B7EF3227BDC2DEF081752ABC87234A787BA60BDC47984CB411
ED63EC5E4B6D9478A33F088C2CF316BB52BFDB2FED861B15237D1ED95B6588FF
AAF4CF1D5D5601B80B411956DD9A8EE126B5735EB8A2084BC88DF8086F350B74
E28D821E583543F692E28901FD341BDD4D823558AE3235E81A295B5EFBE1B545
992A1C7B5623EEB3F1D3B33C87E44AE813DE4EF7B2CC460C88EC70DF784AA774
F4201DD8AE370C53518363BFDEE9C94F8DB93BA9732F9E3008C774076C08C665
4E3E> |-
/r <1C60D8A8C9B77FE2B2290770D44CC430BF6AF79602E44809DC88D3C54004
27379EAC0B160CEE8AF2E8F72C87C0147E60F09C5282EDD102E5F476C901E4E6
9904CE6DB98CB80ACEE6CA70E710379770254DC0880BBCB5487957E5B0BB4709
CA0E4C60374912AFBC44CC6DACEA916420> |-
/u <1C60D8A8C9B7EF3243D232E8573DAAF0F171C711AF0EEFF6FE5D5256DF8D
97D672758F82C9E2E877C020A441F6EB402FD1AA5DEC8D1C598FE06768BF2DFA
7BC4F3F56A078987032C87801D09237CF0E0DAE05AD963395884A2967847A085
BC10BBCEB6CB5318E5F568F7AF4D6031693682FA630A2052D1C2FD845AE4DF2D
65> |-
/v <1C60D8A8C9B7A73D3387F3351EBA955708736DF6DBBE5A6BBDC5B16FF90B
2796A40E907DB66E209CE98B2FF10F1ADA9282D643B19551AA40F0E8C7EDCE45
DC4C2D18302D116FBDE98C490A37A0AC7CB7875902354C1228FEEAAEBBF6B6FB
B829CEB817DC78B5BCB52D2BA6B351B4> |-
/w <1C60D8A8C9B6079FE827C15FB83B1503199A092AD3822C388DB38383E9EA
D719C761150F7CF485E3FAB58FE6077627A086EE00F384828FA9E7E754FF5F0C
30816B384CDB9059951BF9BEC38694DCC4A6323065CA844FE06EB38EAF037C00
F75BE013DE6D3AF5E95CFA710380A2A2FB7E603FDAAB142167FB43E812C73774
8B7F3607A92440A3CD36587D64BB08ED3773B9A0DACCB08D014B4D591197F0AE> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/YEJRQI+NimbusRomNo9L-Medi /UGXAAA+NimbusRomNo9L-Medi findfont ct_VMDictPut
/YEJRQI+NimbusRomNo9L-Medi*1 
[54{/.notdef}rp /six 3{/.notdef}rp /colon 11{/.notdef}rp /F 8{/.notdef}rp /O 
17{/.notdef}rp /a /.notdef /c /.notdef /e /f /g 
/h /i 5{/.notdef}rp /o /p /.notdef /r 2{/.notdef}rp 
/u /v /w 136{/.notdef}rp]
YEJRQI+NimbusRomNo9L-Medi nf
YEJRQI+NimbusRomNo9L-Medi*1 [8.966 0 0 -8.966 0 0 ]msf
104.224 177.117 mo
(Figure6:Overviewofourapproach)
[5.47816 2.49255 4.483 4.98509 3.82848 6.21343 4.483 5.76508 6.97556 4.4023 3.98091 3.89125 
4.483 2.49254 3.98091 8.70598 4.483 5.22711 4.483 4.98509 6.2224 4.483 4.98511 4.98508 
3.82849 4.483 4.483 3.98091 0 ]xsh
/1 
<<
/Name (Black)
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HJCBAA+NimbusRomNo9L-Regu Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /HJCBAA+NimbusRomNo9L-Regu def
/FontInfo 7 dict dup begin
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) def
/Weight (Regular) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 35 /numbersign put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 58 /colon put
dup 65 /A put
dup 67 /C put
dup 70 /F put
dup 73 /I put
dup 74 /J put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 174 /fi put
def
/UniqueID 5020931 def
/FontBBox {-168 -281 1000 924} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 450 470 662 682] def
/BlueScale 0.039625 def
/StdHW [30] def
/StdVW [85] def
/StemSnapH [30 38 43 53 60 73] def
/StemSnapV [78 85 91 103 109 115] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
49 dict dup begin
/numbersign <1C60D8A8C9B7A73DC54C6E602D4F8C2DED6B383B4C643AF5792
55104014FE170618F452FE77C07A076BF47A2EC162387E3683501B8472F58EB9
A2A35C5250B91B47C9621B9C4AD21A6E9717CC204539021ADD84FE812C8136B8
01F4511A6B9F93690C9CC04DEE16D795EA2BB99B23CEEBDCD56BDE5B2ACCAC8D
40185A7C500> |-
/parenleft <1C60D8A8C9B81F2C34C10FB5B45A8FF20C81B99897830644196B
9F0B77D18F1E2415B32643B9BEFB32917C4D47B1853CE389710AFD496390E0F7
93FB9D427EA0C5D4BB5FDA148EAFEE0C20062EA421DE85BAC5> |-
/parenright <1C60D8A8C9B81F2C34C10FB5F8CB4FB0C01CBD8EB5118892552
E140106D8CE6C92507D29757CD6290403441A1EA7693B4F3C96FFB476C2C573B
7D2E57D40483AABB12672AA2C522BCD98D28F543A66D4C9ADFF> |-
/comma <1C60D8A8C9B8707CA2FD797333ADE4A97DDAD77B582F5CBD0659CEC2
54CCAA47E940636A08F827925CD9A1666856A55DD075D3D80919EBA1DBDA0C08
A49DC0170BF91775E03F0E3F84EA866F24DB4E0E5C25C184B2DD7B> |-
/hyphen <1C60D8A8C9B81F2C3AED63678C15FF4B0D41EAF1ADF08534F78C6CF
D85> |-
/period <1C60D8A8C9B8707CABCFCFB7572BA26C4F342CB44977C4D272DE413
3DB5EF66FB5CBCC13D7> |-
/zero <1C60D8A8C9B7A73D33BD7C9339964DD07C87D05AB7B25A68144D7948D
5D72AF545A4D3C0513F795E10E78346C3F1E06A3A564CAE7C700C7FDC9B087C8
E6354649236E324B711B953A69EB07058EA7506E73C4971A2CD8E7B56CC9E4E9
FEA40EB905B2E375D63C0419CF10FC6C14A0C10D77A69> |-
/one <1C60D8A8C9B7A73DC549024A66BCA9F4353026BD17B6210A66FD5D4176
116945A2F6BAB903CF6DE4F4D3C8542E96270F5E403BDB0773406DE9484D2E0E
A2DBD71107DE79DF70216D3BFEAA2172D8D68DEE8378CE1279ABF171> |-
/two <1C60D8A8C9B7A73DC5046156A965F0B3A5C5C92B949F09859351B744F8
D4F54DF812628245A65EF24CEAADD5DE190FFD56148C6E385D5491D13046F140
F2584C73B6FA05C320B018358B9C23ED6C9E586FC4F73E174BDB9E859FD3482F
BC3EE225AB5583DDBB> |-
/three <1C60D8A8C9B7A73D33B7A780A4FB6D478F9DFFD1DA2730E109F94628
9022DF44AA9C6B3C7A83D30909F0BAB42A6E1D1548FDDC248F7C953CDE5A28D8
689A27CB59F87D356A314D4EFED0475CC0AAF39DC03786C824DDF509843103FC
7FA496FB5DCC5A8557EAC7C07B47467CFAA928DDE85F766B75A88715FF4FBE39
5D793AA936CD181919EAA5062E994CBA144301D3C748F9AB1671C4DDDDB4E131
7F6796560BFDDC9A58> |-
/four <1C60D8A8C9B7A73DC54C6E607A6FCD37FCCF09F620AB8801B1F0077EA
3F37AB8BF3C03672891DED2FC99FFD9BAEE71DC6FF4E84D49BFD23A40AAA079B
4A5E5C982CD38A9CA8B7D76353673683E32A19F787E51F0426691> |-
/six <1C60D8A8C9B7A73D33BF1B90A18439D8A405D7C2C2CE39F3D6CF44883E
BC665B1BC22C1A295E570F87EE932C7C5AE5AD7FD71556D1DD18D897666F411A
91C0C83F9464A64F6DBA41188C7B70D6EB3CB783FF623CD0556DEA7D75906C65
3696A52A8075AF3CF1D8B71CA3050CC39364621D99C880412847981F1F9B66A2
73E16CCD8B82> |-
/colon <1C60D8A8C9B854D083E206F04B4C3DD188754390434C4FB50EB4672E
AEE8A85520BB1D78CE2A6974387875B94CD46C379E034A7804D304B20C0AC31F
F325F5883A400828> |-
/A <1C60D8A8C9B6079F1E495237E195FB086879F6BCD60DCB240CDB4816DCDA
7E7D74835F693D24CCD6C338D68869D7AF0A42511BFE8C5AA9C0FDA69D2F0CC3
FEEA1E37C9F5A5B0401E78C533D84B405A09584E86C2A416FFCA03B71FACE3A1
46D6DFD53C2043C5A98FBBF0B70EB7EE652DFCDC5B6B> |-
/C <1C60D8A8C9B64EDF7E182276F33FE64591D35477734F1A3F05995A9E21B3
849012DBE3E5D9BEEC357D7966D622D0BDA2A87D7DF76C988A3C6DB72B7AC755
68902A6FAD90FC53E6498F9E166085199E8D84083DB27D286921A07C13F283E6
EF1D868FB1C61773EE28620908EC2A5479956F05B0F020BC9E52293B72C896E3
409360C9D09608CE13546B> |-
/F <1C60D8A8C9B7EF322BCE349315DC362BCA8CFE4FA18BB639D443336F7111
E2FACF60D2E19F1D435E96E49FD0AF135C8F4D593F674BA833D2635B8F02FCB2
BA0EA4D7637689C705ACF839A843947A142679A187B852855766FB975C8A7F4A
36CBB0767C130BA6A421FFE56B2026B49CFD6C7C20869DFF5A9F134D0B5DB06E
3DBFFEF295> |-
/I <1C60D8A8C9B81F2C46F6291E6BC656A33181A7A4C9904C14F3C78DD8A216
6C79F417AFFBE3B86093B7A5C9E5643BE68ED9E3DF5945A598D6DBA4A9E1182E
708E6DE986B0C684C3> |-
/J <1C60D8A8C9B7361F880F413C1C9D6C86FEA00697E36B5763F3D600E6E512
CBB521E5C58BD7FE4FC436D4585A39A4417A2503D8A2290C1270AA4224EC5999
0BE6D6F5C4A98BC8426B0DB3A2EF57566AB690B6519C0F43> |-
/O <1C60D8A8C9B6079FE817D875D2CBFFB503E7661914031DEF82D48C90EF37
02517DD03C8E65B1C85769ED6887A24289D9AB99F5B1BDE82993DEACC2DDC39A
E11851296B5BD32A727B69731E92C7B0DB7ABEFABCF42140BCA1DA9DAA31FC27
FA6483912C36637F02E27FBD8C9B9BE19A703CEB20A6852E97F86CBFE152A658
3E5E69CA94CEFA79FBBF39D4558C7345137E92> |-
/P <1C60D8A8C9B7EF322BA184F1B466A5F9E0510ACA70CC36BD5B876749AD4F
E16EDC508BA233A1AAAC6BA273FF20CF31BB17B9F1092A4BB71099575FEA4868
93AD4E3A7525913D0CD05606C6D78ACC32E189D016D7274A626F44BE17623E20
CF682C39158B1AF28D3051A12E160F64DF843604F0E5D5C417DF0F4700F18E24
35DD56AAB71313C4C2D0A2D81AEB42E579BF0FFF6DE110A340F6AA3B51D151D4
9C34D4B8C12908> |-
/S <1C60D8A8C9B7EF3225294A5FFA2220B3A70A7F29A870B3BAEE7DFF2B94C6
9EBE02BC5C072804E44299D7CD5195B2B62440E331BF680EB99E90C8D38CE947
04C41DF179991352DDB1E57AF890781C25959AA3B7BFDF862D34BECCC3DC0893
FC4126E7ABEE67256549F5A2A6CFFEB66EFE3C866BD2872F8C1B7A2ABDDA6D8F
5E1298D98292AA28BF3CA599A78D591197DCA6EC3B7EEB172439C64EFD164E42
7DBBBA3E18B9157A9BDD8BAC44A0627E4C08D45A6CE6CCFD19F304834876F210
34F9D8D789834201D1B0F60CFC76F29AFE4E29BC48F795> |-
/T <1C60D8A8C9B7D8BE6A419732DB5F024C0509628A5C1F3C8AEF4E7D00CBC1
830EA50E7630715A3443152766048C069B0A4C72A78E94AB6D91F59E64DF9B5E
3A2935C3883FA28660A00DBD8C0553BBB6DF7158E8BBDF61D18A> |-
/a <1C60D8A8C9B77FE2B8A4D22D65455054518A9081A02F6171B4D6753717B5
C4BCFBE68C976641B0DA567300A37FD1F7BE0E53E951AF39FE7187820E58AB7E
16899451090BE178FB9A491AFEF8E37FF1C5BDD8D0256C28A39196FBCF43F894
58E78497ED2727A4DE9FADAB50CC878B363C604914D69E8722C78AB472A690DE
86045D5F8F45A8F711931993BC8981E4EC5F1265B4496A3A3138E85E75C304A4
1129F5747FC321FC219DE10F0876B8AE64C30F976EE673CA77E26C723368D2A5
BAFCD92094CBCB0C1DAAAB41901C661D72AF00> |-
/b <1C60D8A8C9B7A73DCF483CC3D064C5D3508B11AE282C299523D8D2A309C1
7B70A170029C0F65CF90DD2BE591B98673683525C4890D287920F2AE4A535CEF
E47857E6491D69196894FC8103DF0EDDDC2D4539CDA22F565FDFB14A75B6689D
6F3BBF9428A6B06753AEFCDF61504E25> |-
/c <1C60D8A8C9B77FE2B8B3EAC4BBDE029BAC315D1866DD7913AEB5D830EAFE
778D8CA9FE61C9F1D7F341AAC32F9CA6E189A5065ADF2D5F773BF6F8A8426463
FFD760FDD2A3FB2FF93A8F0D901F4D79430D0C49AB088DDE46CA955357CE80E9
61F17603291AD5A9BCF763> |-
/d <1C60D8A8C9B7A73DCF5C5F318A67A421CF99702516EE66DD46F0A19A39CD
2B5B742B889350B6027EFEDA3412AF17D7447FE125ED85A03529B863375064C8
442F844291318DB0203469A078E9359BCEB35DF8F23C36890A37B169F260AC05
C273B3B8D223D18F700437592FBE0590BD27CA2E484106160C2D3CA8D60D3B12
6EF2BAA957015ACD17B66CCB4B5794278CE2D6> |-
/e <1C60D8A8C9B77FE2B8B0813537CAE403B54DB4598F87C338598C4F359D15
4701105B91D71789866B8BBDD17C51AE2B80B6E9F47C5014A178B7C760E089E4
D6B50937639285A177B2DF2F9CD9B293DCADC3AA4DBEC7EDEC1EDE937DA59145
B9D8A5509D89ABB6F024A66CDE0F535E3C7B64> |-
/f <1C60D8A8C9B81F2C46F2EFDEFE0CB59F321E43BFD6E82BCAAF0597468DCF
77C72C9CD398FF8891FD585C23641F8AE8F6E3020ADECFAC4A393E9FF54C49FA
B5A21E2F4C1179F83C25D9862068548F63557CBD68840FA2E638617AF24BDFC9
D81568C2C6E1A315E20924BB4D9FEEC5799B976A> |-
/g <1C60D8A8C9B7A73DB582976F788935A228E33A2F9BA837718EB44913857B
7DF2B08937FF3593A626EDE6CCF55DB88F671B0ACF0E0BF6EDE603335F61508C
BD99213F6A996E978EE78EC5AD0C1CE4169AAF8ED27DA5119BB90C33C9447085
BA17B797E462B8F0977A661167FBA44D02B1BE8517861232196A81989A462F7F
2FCF08A5E9EBA1DAEB8CCBF341DCDE2423F1236D5142A49C668E169F9EAF2F25
102C1FB112EB576652F83324C585B8F161182918C8C79BC3194BCD6500A04D2D
22D177CFDF96C8E4C849F7239608F6F7453202FB5504E13F8033A5FE2FB7EA35
06AF00C9E3C825E1554EE013BCEAF50C41410225B6E0A012AC7F7FF737456D43
38> |-
/h <1C60D8A8C9B7A73DC549024A8346FE9FE9D7E1CFA5F3A3542DDBE4C5A916
A5024A59CE0EA5149D6EA79ED65490BEFEF9C3C348201E7A69F357C223E56920
09826F3A927DADAF422165EC130205D6C94EDE841416A6709F1685CEE6DEF083
AF9B4CF1705AC60AB37B96773E8FE945D56F9115B299614B0DC15F528F328117
D5F2914E00B04A31> |-
/i <1C60D8A8C9B854D08887A9543335390AEE4DB40199897ABD16F19F24E0DE
858E4CD6E00B26B1829973C0FE01CFA3E329A9D0E2AFEC96CBC670DB940EEA7C
A262004364C378CC527E7F0DFBFD9ADBA6EF6E2301F19CF6860BAC9BB8A50A02
F9217A15FCE88184A4DF0C717E46391573826F599D2DFE27F4F9D82251BA41CC> |-
/j <1C60D8A8C9B854D0F8036B9E41B2E65A80996E2E907110434A0413DE6F0F
A1CED7D44101D2CB80C53365B7D9FCFEF3C557C392B7A8BD9A59049D2FAAF659
0B303228E435BBBFF7AB6415134822B91A84512D7F51F017E320BF297D96E6DA
013E3EF49D9FE337AA59725CBCFD287E12AC43B2BA5588F15DB53EA3E4AD5969
92DAFBC9104E3366F1848F482EBDAB72B852260AA183> |-
/k <1C60D8A8C9B7A73DC549024AEE55A0365CA53932E5214D92E03447BD2708
2733F8BC4B52390213A989FF43E960E136400BFBE15D14D9BA4C2D61B09B4F05
0FBF7DCACD230C4E8767F21A80F637BF5694F2161773ADC9B25B69CFE9C32887
671F39202B1661FF55FACF361DF983E96161F84FF87D28B0AC0FA43709B6CB55
E1E44E07E3A733E7B5F64E7A67A496C0C4D5E21D4A198AB4487F8ABDBAE25A8E
986F6B42BE1053CBBD4E723DD568DBDCFB> |-
/l <1C60D8A8C9B854D08887A941088E15019368529A0C411CDB31B6270BDB21
E6F24215DA6EAB48951C8DAFF38285C17967F3E2D31A5645B4CB7848E783EC24
2D0750B83BCD4D9A2F> |-
/m <1C60D8A8C9B6FF86E3B590DB9FE94810D7AFBFE7B946F15ADC36CFC8347F
8B8E738CF4CF4D1809A80A85D86BFA110670A045293350272C5F45FB77C527D1
F2930D0378ADEDC7688C13D3561051EFE72DCA1312160E6190220B69FF2CC393
85ADB7B9FA12F1BEBDBD9D878BFF3BD03685B77D07FB95D12B8B813430FA3185
D7AFA5CE12372E2F5699928B2C0F3AE08B114EAE456B389E7295ED8892CA8D2A
68CBEB3EF1E32DB99917A5DF402A16D8590243BEA627189E26BE24948A498003
EC603B5D13E615> |-
/n <1C60D8A8C9B7A73DC549024A80DEC09E4F713BEC6C630F986F2AB3ECE6D2
578D5DEC50402B578B4E6CE0632E8947CBBCEB7543031081448F167C88EBA303
B4D2C70599E4B2DBCDA2B9DA37C571B7CFFA556EE2B6CDE54270E5EAA3F80E68
09540E2D41E62BFC6D0AC69B3E0C88DD3AF2AA5C4EA7ABFC511536F434A8C9EA
34BFE186> |-
/o <1C60D8A8C9B7A73DCF4402F5174BF7DD0D28D0C5665CB34D2E8E7AB07F99
F61992CA50ADD51C5A93B4B134C15D36CEC8323CBBE9C0D3A63155E9EC74B781
308A5B21C88AA604D5E026CDBDC830C30107F5FE4F678EF57725AF37DE4B> |-
/p <1C60D8A8C9B7A73DB58119388AD28C6EB26113B395FAEB5BB1A92787CC00
CD17996991481186ABE86940E24AB594D9A474B01D5D0752783C6F719E685638
4C42FC6FADE6220E0D5360188934499D6C788FD6225163F3ED610B71BFF6B877
481E0736BEF6EB1112BB14B3A87DE8D1E721238F8F2E426DBC236319E17981A4
C07831306A73D6A3E6AC794689B59CA316CE67D8D4C94BF2EB8F108645A3CF1B
50AB6566123326> |-
/q <1C60D8A8C9B7A73DB5811938DD329AF5702F449C4C3015239F3E0A7732DF
C9E0828332DA51F1D7FDE724DF869BE73384BD1B7136B03BB11DF051325EE7A7
668042B3ABF69CE2C13C47BD4E4C9A86DDCBB9CAE3222F43A69A8FF1ABBDD409
F18B51721F47402665B69C88AC7610BDEE6B922DEBE4B9A5509B50F0E0D3E071
713E6B4ECEE647E52C37F2D1A72629A17EE40EF1260847BDA48E1E19> |-
/r <1C60D8A8C9B81F2C46F2EFDE84D89C8CA27978F2B1BB49B09209CD1A52AA
0883E159C0BCFCEC840E4AF4AFD0AF12CC05AB7610067AFD32B1652EE398EAF1
DF9DCBDAA912A22D36A52AAB2ABE36110186ED1FE34787D24198929398156D9F
0AC35E6BD99313253DDFFC34D01333EFCC> |-
/s <1C60D8A8C9B7361F0DD2D2259B4AE3E4ACCB44FB8872BFAC621D64E450F5
14624BD4700B917EA1CE8D60019D3B1C42E0F7377CE112D5333D1612736D0EDB
07B34DD4BA1403D44985C1A0543D99F912C9BC9DC7E96430EE2781E418322823
5F9935573E82940F1E761BEFBA74A42BEDBB36268156C77D28FAFCF48800821E
AC277DD0C93425B27A2041FB9E67F885F359D5FF9B96714513F4D2945088A893
D87F8B4D3A6600FAAA0EA12384184218B424A8492A8E97821E10762E83A8B2B1
7B9DE8ED2A20C9152C561D7EAED2> |-
/t <1C60D8A8C9B854D082F829CADA2402D0C363E188624B3DC91E66507A8AF7
69E833E0645176BA592C3DD44ECFC4C7D84DE06A044A230214D945DF321A4D72
94F214FA4A69DDBFFDC37CE6C0694F8A402CC82FE94C2B9274D4DCEAB0696C3D
253D2964904B34E1D9065A46BEE535DCD936F67C56C176C8E7F77F2F60DE69B8
6A560016E73AE51935CC218444D0EB76BA0FFF40D1297093F9> |-
/u <1C60D8A8C9B7A73DB6F2A4B59B2312EBBBE2417FA44F369C1F0ED6D6A369
96AE53A137DB00AA7567A9CEC49CE2737379BD17250255FC7E3093655F665038
8D1064F7AC48308F1DF9CB661A2773CC10559E7C61A5DCDB640FF06049B6ADB9
F9495291BF4F69DA004975E0967945B04D0D1E0AADFA85B338744A9D49B5C34C
0392DD8C9A2D5D0FBF7A81667B636E9E308B1316F61183357C46ADD0B9B8732D> |-
/v <1C60D8A8C9B7A73D3387F33511357F5C470E09351F77CC276AE129494BAE
19BAE0CA39F2A5A776A3E65DC754DA89AD1C5CC64A59E7F0B5EC70F5692EBE0E
0FB9D1DB1A31CC7BBB43C8920E79F728121E780030958DB645DD328A17F8DFF9
82D1DC59D2D6959A7E783D9C1D0AA54F17D353136E> |-
/w <1C60D8A8C9B6079FE827C15FB749C5E2D59AF07BCDCB23600A9E54DC7F64
C7E827C38E4CA3EDC141AC5EDC06F362661B84CB18900C724B81D9620EF76D18
0ED63FA9D5A5F924854335916B03AA4F91AFA0C7C0C6CB02E2839A0511DD63E5
74762EF80F517D5F038A6BF8C6AA8B2D183A3AB23FCFA16E562D70F6716B39E9
98C527890272681E7128A4D20258D13EE2F2B8FA152F655FEBAEDC8C60259050
DBA81825B0CDCAC66195D9F1022749> |-
/x <1C60D8A8C9B7A73DC54C6E6F1E1B2347F151B660B24776F2E8D8FE0D08BE
B090A51431058F7336381763833F21F79669FB1758E4A45605BCF730FFBF7CFA
2C722F5A25EBB940FDF2BA7B9B5ACDDB0A61662A5F4610A72EC6495E2E42CD0D
A0ABD967E5F1DD106B1FD129929FE9D5A5F6068F5AC837D5D03F8F6EF1AB141A
71105EC102F68544C432C4D0444E5DAB600D38EB3AE2F6AF3A06CD69455C91A5
6BBAB338293B6D0E> |-
/y <1C60D8A8C9B7A73DB5828C8EB6692FACE27F93F009F946C390116926A043
617DCF82B76B3921AD1CAB060694C724481443C88DCE9CCDBD4C5105E503E45C
67DC21FA0E146B65B0F0EA2429259DEF9F5CD456C1B4E1A4CBC49AFDCA5F37B1
AD742660BF135BF9BE1A2789C070C0A4FB4767FBA0411908E30D692396427C73
1EB9FE493ECBA19FDDC5F0C50E54D346D5DA656C79E40808BBE549> |-
/fi <1C60D8A8C9B7EF32570AFF8231DCF4ABC5DEFD5B6D550686CFFCC91C267
F1252BA4F4DAA274A3A6688691900FFEF7A839B52553AB9F891F187F51351F44
C21EAFE0C45D0394141E4F8BAFD06377AA51E37B7097AD1CD66EBD9853CBF817
2875228C37FE0953ECA0AB863FE32A47EEF2B7DF444F4BC2717645C8B4ECA894
32D1027B7AF6DE75966098D9C73E00129B4A704F85D81AF7D80671478639E183
CA75D9BD8666D9EFCDBB6B3C3084DAC79574807631815CB8BE737035BB77F054
C44C971E29217D4> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/YEJRQJ+NimbusRomNo9L-Regu /HJCBAA+NimbusRomNo9L-Regu findfont ct_VMDictPut
/YEJRQJ+NimbusRomNo9L-Regu*1 
[35{/.notdef}rp /numbersign 4{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/period /.notdef /zero /one /two /three /four /.notdef 
/six 3{/.notdef}rp /colon 6{/.notdef}rp /A /.notdef /C 2{/.notdef}rp 
/F 2{/.notdef}rp /I /J 4{/.notdef}rp /O /P 2{/.notdef}rp 
/S /T 12{/.notdef}rp /a /b /c /d /e 
/f /g /h /i /j /k /l /m 
/n /o /p /q /r /s /t /u 
/v /w /x /y 52{/.notdef}rp /fi 81{/.notdef}rp]
YEJRQJ+NimbusRomNo9L-Regu nf
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
53.798 196.941 mo
(ourapproachrequiresatleasttwoversionsoftheproject\(onever-)
[4.483 4.483 5.58575 3.9809 4.483 4.483 2.98561 4.483 3.9809 3.9809 7.08315 2.98561 
3.9809 4.483 4.48299 2.49255 2.98561 3.98091 6.08798 3.98091 2.49254 2.49255 3.9809 3.98091 
3.48784 5.0927 2.49254 6.39276 7.07417 4.35748 3.98091 2.98561 3.48784 2.49255 4.483 4.48299 
6.07903 4.48299 5.58577 2.49254 4.483 6.58105 4.483 2.98561 4.483 2.49254 3.98091 3.98091 
5.09268 2.98563 4.48297 4.483 6.58105 4.35748 3.98093 2.80627 0 ]xsh
53.798 207.402 mo
(sionin)
[3.48784 2.49255 4.48299 6.18655 2.49255 0 ]xsh
%ADOBeginSubsetFont: AXNBAA+CMMI9 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /AXNBAA+CMMI9 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
dup 76 /L put
dup 77 /M put
def
/UniqueID 5087384 def
/FontBBox {-29 -250 1075 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 683 705 431 442 453 464] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [74] def
/StemSnapH [25 31] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/C <1C60D8A8C9B08A94500976F73D8143198272A1C903D9D2D270465E17B4BE
47F1F98D060391ED81D451CFEE20C69E9419348F551C6C42ECD8EF82A661EDDD
EBAE575CC86ABB1DE15A30AD92F6EF7C92479530D609EF97CAA1C957B288E329
005995087F3C79E9BB24DCF731424634C033BE9B86FD537D1AC53A3BCEFC7B0B
888582B4AF9995CC3C0347D747C92E0CD797DDA9F9F50EC929D952491A37F5E2
80B6F3A451058B45C3E05D9C2137481B18> |-
/L <1C60D8A8C9B08A945F8187ACD39A0FBDF16FC4446CE199FD68276F07F96D
A5724880CABD2E6DDFB53F2DB562D2F1EAE6303FAA10633AF6758EF118C9C19F
91B9EEA1E05F0605E496B6FFDD90CC9516459CCA16D2E2B6E1547D353689CC2F
11B06D37006E5572F2899EA30E56C8758054B379056B06957F98DBFCD825CE6D
3437CAA43EF11066B75FA0ECAF6AD5E554BD95770F8584455D82D8FE37AEC482
91D804E76709141015F6036403B3AB97D122D77ECB2697C1835F4FBB0DD4> |-
/M <1C60D8A8C9B08A94CDBF2F297ACC3F5361EA2310E8D68550DA1B1EA3AB9B
C9E0B561352B0AE6A806B2151435BE27721DA6D717F4B99F2991658258ACE2D1
638089DFBDB77C365A064B5F252E96DDD95E44CAA8083A3B1F8F8B0D547A403E
F5820C02CB1B8565137B91BB8E57396C4772291E1B5242C7041C6D1E1C38AC19
464D057203610E008879BFAE24537AB452F41EC353DB0709FDE23D4B042462FA
0085BE09C6066CC2933A824BA2F2D1C0CDF833CD73FFAE93C3A4ADF2B5D4F0A2
CEE47250844921A18FD680C7A5B52323C6D3F44D1FD7C5CB1F025CC5B6BAA00F
2E251162BE310385307489FC951F291878BB9E5A8C3F058AEC8EBB31087EF271
63A4C40731F53E13AAA557664306B78D45E9FF9C6D056C4ED15A7644449B9B88
865954EC4867> |-
/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/YEJRQK+CMMI9 /AXNBAA+CMMI9 findfont ct_VMDictPut
/YEJRQK+CMMI9*1 
[67{/.notdef}rp /C 8{/.notdef}rp /L /M 178{/.notdef}rp]
YEJRQK+CMMI9 nf
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
79.128 207.402 mo
(L)sh
%ADOBeginSubsetFont: QJJAAA+CMR6 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /QJJAAA+CMR6 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
def
/UniqueID 5000789 def
/FontBBox {-20 -250 1193 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 0 683 704 431 446 665 675] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [39] def
/StdVW [83] def
/StemSnapH [32 39] def
/StemSnapV [83 100] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/one <1C60D8A8C9B08A95F2616DBAAE74C381128F62EDE405D9F59639116DEE
861B8A58E208398095DE8BFB2AFCBF22BDBCABC7A84925ED508F5A6C2718007D
5DC1CFF9C356C2A6E988275D826A71A6A0D9C406E73806313CAAF6A626694E> |-
/two <1C60D8A8C9B08A95F2616DBAAE74C3D69CFA1175A1A3BA83C4916858A4
55FB4D7A9592BD9177C3E86C877175395646560E7164BFC803F92EFC6ADA6187
9D4A9B5C93DCB5F2EDFFFA49CD17807A86BD9790DCFCF5CAB9CE29D47C1F4687
5B0F05AD4F29EC848800BA99AB916461096A157A62CCEC53766115C96571E9CE
967D8332EC85792020DF742CFC1CBE36D5923A> |-
/.notdef <1C60D8A8C9B08A95BE2B761DD6BD68> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/YEJRQL+CMR6 /QJJAAA+CMR6 findfont ct_VMDictPut
/YEJRQL+CMR6*1 
[49{/.notdef}rp /one /two 205{/.notdef}rp]
YEJRQL+CMR6 nf
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
85.399 208.398 mo
(1)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
91.254 207.402 mo
(andtheotherversionin)
[3.9809 4.483 6.17757 2.49255 4.483 5.68445 4.483 2.49255 4.483 3.9809 4.68915 4.35748 
3.98091 2.98561 3.48784 2.49254 4.483 6.17758 2.49254 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
175.34 207.402 mo
(L)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
181.611 208.398 mo
(2)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
185.762 207.402 mo
(\).Figure6showstheoverview)
[2.98561 4.83267 4.98509 2.49255 4.483 4.483 2.9856 5.68445 6.18655 3.48784 4.48299 4.26782 
6.47345 5.18242 2.49254 4.483 5.68445 4.35748 4.34851 3.9809 2.98563 4.483 2.49252 3.75677 
0 ]xsh
53.798 217.862 mo
(ofourapproach.)
[4.483 5.22711 4.483 4.483 5.22711 3.9809 4.483 4.483 2.98561 4.48299 3.98091 3.9809 
4.483 0 ]xsh
62.765 228.323 mo
(First,ourapproachalignsclientcodeinlanguages)
[4.98509 2.49255 2.98561 3.48784 2.49255 5.61272 4.483 4.483 6.14164 3.9809 4.483 4.483 
2.98561 4.483 3.9809 3.9809 7.63007 3.98091 2.49254 2.49255 4.48299 4.483 6.64388 3.98091 
2.49255 2.49254 3.98091 4.483 5.6396 3.98091 4.483 4.483 7.13693 2.49255 7.63007 2.49255 
3.98091 4.48299 4.483 4.483 3.98091 4.483 3.9809 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
252.808 228.323 mo
(L)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
259.078 229.319 mo
(1)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
266.381 228.323 mo
(and)
[3.98093 4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
282.48 228.323 mo
(L)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
288.751 229.319 mo
(2)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
53.798 238.784 mo
(sothatthealignedsource\256lesimplementsimilarfunctionalities)
[3.48784 7.90801 2.49255 4.483 3.9809 5.91756 2.49255 4.483 7.40592 3.9809 2.49255 2.49255 
4.483 4.483 3.9809 7.90801 3.48784 4.483 4.483 2.98561 3.9809 7.40593 4.98509 2.49254 
3.98091 6.91286 2.49254 6.97556 4.483 2.49254 3.98091 6.97554 3.98091 4.483 5.91756 3.48784 
2.49255 6.97554 2.49255 2.49254 3.98091 6.41959 2.98561 4.483 4.483 3.9809 2.49255 2.49252 
4.483 4.483 3.98093 2.49252 2.49255 2.49255 2.49255 3.9809 0 ]xsh
53.798 249.245 mo
(\(Section4.1\).Second,ourapproachminesmappingrelationsof)
[2.98561 4.98509 3.9809 3.9809 2.49255 2.49255 4.48299 7.66593 4.483 2.2415 4.483 2.98561 
7.86317 4.9851 3.9809 3.98091 4.483 4.48299 4.483 5.6665 4.483 4.483 6.17751 3.98091 
4.483 4.483 2.98561 4.483 3.9809 3.98091 7.66594 6.97554 2.49255 4.483 3.9809 6.67975 
6.97554 3.98091 4.483 4.483 2.49254 4.483 7.67491 2.98561 3.9809 2.49255 3.9809 2.49255 
2.49255 4.483 4.48297 6.67078 4.483 0 ]xsh
53.798 259.705 mo
(APIclasses\(Section4.3\).Finally,ourapproachminesmapping)
[6.47345 4.98509 6.22234 3.98091 2.49255 3.9809 3.48785 3.48784 3.9809 6.73354 2.98561 4.98509 
3.98091 3.9809 2.49255 2.49255 4.483 7.72869 4.483 2.2415 4.483 2.98561 8.03352 4.98509 
2.49255 4.483 3.9809 2.49255 2.49255 3.90916 5.72928 4.483 4.483 6.23129 3.98091 4.483 
4.483 2.98561 4.483 3.9809 3.98091 7.72868 6.97556 2.49254 4.483 3.98091 6.72456 6.97552 
3.98093 4.483 4.483 2.49252 4.483 0 ]xsh
53.798 270.166 mo
(relationsofAPImethods\(Section4.3\)de\256nedbythemappedAPI)
[2.98561 3.9809 2.49255 3.9809 2.49255 2.49255 4.48299 4.483 5.75624 4.483 5.25401 6.47345 
4.98509 5.25401 6.97555 3.98091 2.49255 4.48299 4.483 4.483 5.75624 2.98561 4.98509 3.98091 
3.9809 2.49255 2.49254 4.483 6.7514 4.483 2.2415 4.483 5.25401 4.483 3.9809 4.98509 
4.483 3.98091 6.7514 4.483 6.75139 2.49255 4.483 6.2493 6.97556 3.98088 4.483 4.483 
3.98093 6.75137 6.47348 4.98508 0 ]xsh
53.798 280.627 mo
(classes.)
[3.9809 2.49255 3.9809 3.48785 3.48784 3.9809 3.48785 0 ]xsh
%ADOBeginSubsetFont: UGXAAA+NimbusRomNo9L-Medi AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
YEJRQI+NimbusRomNo9L-Medi dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B8707C5568E087A7013AEDEAB4E43FD5B4AD668B70E3E
CD4C9D9B81940C416ED75> |-
/one <1C60D8A8C9B7A73DC57077681168597E507E3B705F4F5FCA3A29C4B4D9
BE99F6D15C4C9B07805825D06989012E5041F1971C6E8E077B7915858DE71E1B
403C1705DD5AD8A94741E94A424439CF190802BA669B55> |-
/four <1C60D8A8C9B7A73DC54C6E606542DA2B13B475FF574CC2CC0CFC629B4
15D90565E7EF74AD7E2366209B4992519ED444FB7C263B7BF8CE0BCF629F8B7C
614E3DE9A361BAE93E1BE37C6116F5575B0C2C042DF037187CAF08F9EB5CEF2F
D12AFB330012CD0F2AE62EAE178292BA4AC449A48A47AAF8124BB> |-
/A <1C60D8A8C9B6079F1E726295E14B9D3E37B5679DF68031BFBD1BFE066052
926E25CE0977A152243271BE1D747B37EA89DE114D2E292EBCFA5757AB5F0742
8265AD587191DB5983F8ED99B8DB322C097F8AA32C17CF35304218F0C8E5E2CB
9D3370FBC8175B895A9A7BF3FBEB1A81A06888C0AA48BAA23BD6E670F21106> |-
/C <1C60D8A8C9B6079FED7B811C9CB98FDD2CBB73B766F3FE85D1EE3FD8DDB8
5BC465FE2BC61BAC5B5A2E845BEE1CB687D5EE8D92148AD0E5427DF74A90FB77
64CC177867BD76CAA04E6A69E2891FC8B9E96FF6DA1BBC73DDC3D80086E55449
49DB2A153C2FBD03A3FAF8D79C22F8E0F57F4EB1D994BB49218C5E945433A9F2
5B2828A5C917A6F314FC> |-
/d <1C60D8A8C9B7EF3243D232E82BE0910CC994C22771842A9ADF622B1D79E3
7DE4B68C19FCEF3730CD11E25E3272E2D5BCD269C67B73F70F41A90007DBE5E5
2CD25DBBED229B9448840D6CD8FC9C629790473304F7C27650B6E8C1752F56C8
3DB6B91FCDE4B804D81851D7DF80C983E503F4B54CFB5219587BA6339570529E
29DE5652FCE8EA96FB54198A92511FE6D7B4D6C21BE10C37FCBC2F> |-
/l <1C60D8A8C9B854D088BE0307DDE29E2DC8A57E14CCBDD0429C9D43FFDCE5
7C1979D6548F9F5B47CC0F21039A42929DCC89E93721E673DC46552B4818AF30> |-
/n <1C60D8A8C9B7EF3257330F56C94494157A7EF7FFCBD73F84DDC3CD027CBD
344CBE46734D8DBE3D0D7A5371055EA217764D1E6D19B975A4618DAFF7C83378
2DBB8AD061F2A7084A3861B8353FAB4D938BA793AC098E1E390E341D00898940
4E3478333E6F04C8A2256EF7F64BCEACA7195CAB26AF2CF435195B53F578CD79
712EFFD6BC467431370A461A8086A2496F058336> |-
/t <1C60D8A8C9B81F2CB2ACA02E0CECC7A7088ABA14D8BB1C717E776D9EDDA4
1B7C69A092B87660DC1D8821ED3D3E1FEA1F5AEA3E07AE0B68C4FA037897D267
0ED7A25F38BD082D632B2C2A93BC6E0C80> |-
systemdict /gcheck known {setglobal} if end {end} if
end
YEJRQI+NimbusRomNo9L-Medi /Encoding get
dup 46 /period put
dup 49 /one put
dup 52 /four put
dup 65 /A put
dup 67 /C put
dup 100 /d put
dup 108 /l put
dup 110 /n put
dup 116 /t put
pop
%ADOEndSubsetFont
/YEJRQI+NimbusRomNo9L-Medi*1 
[46{/.notdef}rp /period 2{/.notdef}rp /one 2{/.notdef}rp /four /.notdef /six 
3{/.notdef}rp /colon 6{/.notdef}rp /A /.notdef /C 2{/.notdef}rp /F 
8{/.notdef}rp /O 17{/.notdef}rp /a /.notdef /c /d /e 
/f /g /h /i 2{/.notdef}rp /l /.notdef /n 
/o /p /.notdef /r /.notdef /t /u /v 
/w 136{/.notdef}rp]
YEJRQI+NimbusRomNo9L-Medi nf
YEJRQI+NimbusRomNo9L-Medi*1 [11.955 0 0 -11.955 0 0 ]msf
53.798 303.288 mo
(4.1AligningClientCode)
[5.9775 2.98875 17.9325 8.63151 3.32349 3.32349 5.9775 6.64697 3.32349 6.64698 8.96626 8.6315 
3.32349 3.3235 5.30801 6.64697 6.96968 8.63152 5.97749 6.64699 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
62.765 316.24 mo
(Initially,ourapproachacceptstwoversionsofaproject\(onever-)
[2.98561 4.48299 2.49255 2.49255 2.49255 3.9809 2.49255 2.49255 3.90022 4.23195 4.483 4.483 
4.9133 3.9809 4.483 4.483 2.98561 4.483 3.9809 3.98091 6.41069 3.9809 3.98091 3.98091 
3.9809 4.483 2.49255 5.42448 2.49255 6.39276 6.40172 4.35748 3.98091 2.98561 3.48784 2.49254 
4.483 4.483 5.40657 4.483 4.9133 5.91756 4.483 2.98561 4.483 2.49255 3.9809 3.9809 
4.42026 2.9856 4.483 4.483 5.9086 4.35748 3.9809 2.80627 0 ]xsh
53.798 326.7 mo
(sionin)
[3.48784 2.49255 4.48299 6.37482 2.49255 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
79.513 326.7 mo
(L)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
85.784 327.697 mo
(1)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
91.831 326.7 mo
(andtheotherversionin)
[3.9809 4.483 6.37482 2.49255 4.483 5.8817 4.48299 2.49255 4.483 3.9809 4.87744 4.35748 
3.98091 2.98561 3.48784 2.49254 4.483 6.36586 2.49255 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
176.88 326.7 mo
(L)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
183.151 327.697 mo
(2)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
187.302 326.7 mo
(\)andalignsclassesandmeth-)
[4.87743 3.98091 4.483 6.38379 3.98091 2.49254 2.49255 4.483 4.483 5.37967 3.9809 2.49255 
3.9809 3.48785 3.48784 3.98091 5.37967 3.9809 4.483 6.38379 6.97556 3.9809 2.49255 4.483 
0 ]xsh
53.798 337.161 mo
(odsofthetwoversions.Alignedclassesormethodsbetweenthe)
[4.483 4.483 6.348 4.48299 5.84576 2.49255 4.48299 6.84106 2.49255 6.39276 7.33418 4.35748 
3.98091 2.98561 3.48784 2.49255 4.48299 4.483 3.48784 6.87692 6.47346 2.49254 2.49255 4.483 
4.48299 3.98091 7.34315 3.98091 2.49255 3.9809 3.48784 3.48785 3.98091 6.34799 4.483 5.84576 
6.97556 3.9809 2.49255 4.483 4.483 4.483 6.34799 4.483 3.9809 2.49255 6.47345 3.9809 
3.98093 7.34314 2.49255 4.483 0 ]xsh
53.798 347.622 mo
(twoversionsimplementasimilarfunctionality.Astheyimplement)
[2.49255 6.39276 6.59897 4.35748 3.98091 2.98561 3.48784 2.49255 4.483 4.483 5.60382 2.49255 
6.97555 4.483 2.49255 3.9809 6.97555 3.9809 4.483 4.61749 6.11482 3.48784 2.49254 6.97556 
2.49254 2.49255 3.98091 5.11055 2.98561 4.483 4.483 3.98091 2.49254 2.49255 4.483 4.483 
3.9809 2.49255 2.49254 2.49255 3.90918 4.97614 6.47345 5.61278 2.49255 4.483 3.85538 6.60794 
2.49254 6.97556 4.483 2.49252 3.98093 6.97552 3.98093 4.483 0 ]xsh
53.798 358.083 mo
(asimilarfunctionality,APIsusedbytheseclassesormethodscan)
[6.54518 3.48784 2.49254 6.97555 2.49255 2.49255 3.98091 5.55885 2.98561 4.48299 4.483 3.9809 
2.49255 2.49255 4.48299 4.483 3.98091 2.49255 2.49255 2.49254 3.90918 4.8775 6.47345 4.98509 
2.98561 6.06108 4.483 3.48784 3.98091 7.04727 4.483 7.05624 2.49255 4.48299 3.98091 3.48784 
6.54517 3.98091 2.49255 3.9809 3.48784 3.48785 3.9809 6.0611 4.483 5.54988 6.97554 3.98091 
2.49252 4.483 4.483 4.483 6.0611 3.9809 3.98093 0 ]xsh
53.798 368.543 mo
(bereplaceable.)
[4.483 6.22241 2.98561 3.9809 4.483 2.49255 3.9809 3.9809 3.98091 3.9809 4.483 2.49255 
3.9809 0 ]xsh
62.765 379.004 mo
(Toalignclassesandmethodsofthetwoversions,ourapproach)
[4.76087 7.08315 3.9809 2.49255 2.49255 4.483 7.08314 3.98091 2.49255 3.9809 3.48784 3.48785 
3.9809 6.09695 3.9809 4.48299 7.08315 6.97554 3.98091 2.49254 4.483 4.483 4.483 6.09695 
4.483 5.58574 2.49255 4.483 6.59001 2.49255 6.39276 7.07417 4.35747 3.98091 2.98561 3.48784 
2.49255 4.483 4.48299 3.48785 4.93129 4.483 4.483 5.58574 3.9809 4.483 4.483 2.9856 
4.483 3.98093 3.9809 0 ]xsh
53.798 389.465 mo
(usesnamesimilaritiesbetweenentities\(suchasclassnamesor)
[4.483 3.48784 3.98091 7.25356 4.483 3.98091 6.97555 7.74662 3.48785 2.49255 6.97555 2.49255 
2.49255 3.9809 2.98561 2.49255 2.49255 2.49255 3.98091 7.25356 4.483 3.98091 2.49255 6.47345 
3.9809 3.98091 8.24872 3.98091 4.483 2.49255 2.49254 2.49255 2.49254 3.98091 7.26253 2.98561 
3.48784 4.483 3.9809 8.24872 3.98091 7.25357 3.9809 2.49255 3.9809 3.48785 7.25356 4.483 
3.9809 6.97556 3.9809 7.26251 4.483 0 ]xsh
53.798 399.926 mo
(methodnames\)de\256nedbythetwoversionsoftheproject.Inour)
[6.97554 3.9809 2.49255 4.483 4.483 7.23557 4.48299 3.98091 6.97555 3.9809 3.48784 5.73817 
4.483 3.9809 4.98509 4.483 3.9809 7.24454 4.483 7.23557 2.49254 4.483 6.74243 2.49255 
6.39276 7.22659 4.35748 3.9809 2.98561 3.48784 2.49255 4.483 4.483 6.24039 4.483 5.73817 
2.49254 4.483 6.74245 4.48299 2.98561 4.483 2.49255 3.98088 3.98093 2.49255 6.56311 2.9856 
7.23557 4.483 4.483 0 ]xsh
53.798 410.386 mo
(approach,wehavetwodifferentkindsofentitynames:entitynames)
[3.9809 4.483 4.483 2.98561 4.483 3.9809 3.9809 4.483 4.05264 6.47345 5.68445 4.483 
3.81055 4.34851 5.67548 2.49255 6.39275 6.17758 4.483 2.49254 2.77043 2.98561 3.98091 2.98561 
3.9809 4.483 4.18712 4.483 2.49255 4.483 4.483 5.19138 4.483 4.68915 3.9809 4.483 
2.49255 2.49254 2.49255 6.18654 4.483 3.98091 6.97554 3.98091 3.48784 5.00304 3.98091 4.48299 
2.49255 2.49255 2.49252 6.18655 4.483 3.9809 6.97556 3.9809 0 ]xsh
53.798 420.847 mo
(de\256nedbythetwoversionsoftheprojectandentitynamesofthird-)
[4.483 3.98091 4.98509 4.483 3.9809 6.36586 4.483 6.37482 2.49255 4.48299 5.87273 2.49255 
6.39276 6.36586 4.35748 3.9809 2.98561 3.48785 2.49255 4.48299 4.483 5.36174 4.483 4.87744 
2.49254 4.483 5.87274 4.483 2.98561 4.483 2.49254 3.98091 3.98091 4.3754 3.9809 4.483 
6.37483 3.98091 4.483 2.49254 2.49255 2.49254 6.37483 4.483 3.98091 6.97554 3.98091 5.37967 
4.483 4.86844 2.49255 4.483 2.49255 2.9856 4.483 0 ]xsh
53.798 431.308 mo
(partylibrariesusedbythetwoversionsoftheproject.The\256rstkind)
[4.483 3.98091 2.98561 2.49255 6.2762 2.49255 2.49255 4.48299 2.98561 3.98091 2.98561 2.49255 
3.9809 5.29001 4.483 3.48784 3.98091 6.28516 4.483 6.27618 2.49255 4.483 5.78308 2.49254 
6.39276 6.2762 4.35748 3.98091 2.98561 3.48784 2.49254 4.483 4.483 5.27208 4.48302 4.78778 
2.49254 4.483 5.78307 4.483 2.98561 4.483 2.49255 3.9809 3.98091 2.49255 4.86853 5.47815 
4.483 5.78308 4.98508 2.98563 3.48782 4.28577 4.483 2.49255 4.48297 0 ]xsh
53.798 441.769 mo
(oftencomesfromthesameprogrammerorthesameteam,orpro-)
[4.483 2.98561 2.49255 3.9809 6.99348 3.9809 4.483 6.97554 3.98091 5.99831 2.98561 2.98561 
4.483 9.48602 2.49255 4.483 6.49138 3.48785 3.9809 6.97556 6.50035 4.483 2.98561 4.483 
4.483 2.98561 3.9809 6.97556 6.97554 3.98091 5.49609 4.483 5.49609 2.49255 4.483 6.49139 
3.48784 3.9809 6.97556 6.49139 2.49254 3.98091 3.9809 6.97556 4.8237 4.483 5.49609 4.483 
2.98563 4.48297 0 ]xsh
53.798 452.23 mo
(grammersmayrefertoexistingversionsfornamingentitiessuchas)
[4.483 2.98561 3.9809 6.97555 6.97555 3.9809 2.98561 5.36174 6.97555 3.9809 6.3569 2.98561 
3.9809 2.98561 3.9809 4.8595 2.49255 6.35689 3.85539 4.483 2.49254 3.48784 2.49255 2.49255 
4.48299 6.34793 4.35748 3.98091 2.98561 3.48784 2.49255 4.48299 4.483 5.35277 2.98561 4.483 
4.8595 4.483 3.98091 6.97554 2.49255 4.48299 6.3569 3.9809 4.483 2.49255 2.49254 2.49255 
2.49252 3.98093 5.36172 3.48785 4.483 3.9809 6.35687 3.98093 0 ]xsh
53.798 462.69 mo
(classes,methods,andvariables.Therefore,namesimilarityisof-)
[3.9809 2.49255 3.9809 3.48784 3.48785 3.9809 3.48784 5.14648 6.97555 3.9809 2.49255 4.483 
4.483 4.483 3.48784 5.14648 3.9809 4.483 7.25349 4.26782 3.98091 2.98561 2.49254 3.98091 
4.483 2.49254 3.98091 3.48784 6.60796 5.47815 4.483 3.98091 2.98561 3.98091 2.98561 4.48299 
2.98561 3.98091 5.14648 4.483 3.9809 6.97556 6.75139 3.48785 2.49254 6.97556 2.49254 2.49255 
3.9809 2.9856 2.49255 2.49255 7.25348 2.49255 6.2673 4.483 2.9856 0 ]xsh
53.798 473.151 mo
(tenreliabletodistinguishfunctionalitiesofthe\256rstkindcompared)
[2.49255 3.98091 6.69759 2.98562 3.9809 2.49255 2.49255 3.9809 4.483 2.49255 6.1955 2.49255 
6.6976 4.483 2.49255 3.48784 2.49255 2.49255 4.483 4.483 4.483 2.49255 3.48784 6.6976 
2.98561 4.483 4.48299 3.98091 2.49255 2.49254 4.483 4.483 3.98091 2.49254 2.49255 2.49254 
2.49255 3.98091 5.70244 4.483 5.20021 2.49254 4.483 6.19551 4.98509 2.98561 3.48784 4.70715 
4.483 2.49254 4.483 6.70656 3.9809 4.483 6.97556 4.483 3.9809 2.98563 3.9809 0 
]xsh
53.798 483.612 mo
(tothesecondkind.OurapproachusesSimmetrics)
[2.49255 7.53144 2.49254 4.483 7.03831 3.48784 3.9809 3.98091 4.48299 4.483 7.54041 4.483 
2.49255 4.483 4.48299 7.46867 6.47345 4.483 6.04301 3.98091 4.483 4.483 2.98561 4.483 
3.9809 3.98091 7.54041 4.483 3.48784 3.98091 6.53629 4.98509 2.49254 6.97556 6.97554 3.98091 
2.49254 2.98561 2.49255 3.98091 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [5.978 0 0 -5.978 0 0 ]msf
241.471 479.803 mo
(10)
[2.989 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
251.004 483.612 mo
(tocalculate)
[2.49255 7.53142 3.98093 3.9809 2.49255 3.9809 4.483 2.49255 3.9809 2.49255 0 ]xsh
53.798 494.073 mo
(namesimilarities.)
[4.483 3.98091 6.97554 6.22241 3.48784 2.49255 6.97555 2.49255 2.49255 3.98091 2.98561 2.49255 
2.49255 2.49255 3.9809 3.48785 0 ]xsh
62.765 504.533 mo
(Algorithm1showshowourapproachalignsclientcodeclasses.)
[6.47345 2.49255 4.483 4.483 2.98561 2.49255 2.49255 4.483 9.26188 6.77829 3.48785 4.48299 
4.26781 6.47346 5.77417 4.483 4.26782 8.75978 4.483 4.483 5.2809 3.9809 4.483 4.483 
2.98561 4.483 3.98091 3.98091 6.77829 3.98091 2.49255 2.49254 4.483 4.483 5.78314 3.98091 
2.49254 2.49255 3.9809 4.483 4.78786 3.9809 4.483 4.483 6.27618 3.98093 2.49255 3.9809 
3.48782 3.48785 3.9809 3.48785 0 ]xsh
53.798 514.994 mo
(The\256rststepisto\256ndcandidateclasspairsbynames.Fortwo)
[5.47816 4.483 7.1728 4.9851 2.98561 3.48784 5.69341 3.48785 2.49255 3.9809 7.68386 2.49255 
6.68871 2.49255 7.6749 4.98508 4.483 7.68388 3.9809 3.98091 4.483 4.483 2.49254 4.483 
3.98091 2.49254 7.18178 3.98091 2.49254 3.98091 3.48784 6.68871 4.483 3.98091 2.49254 2.98561 
6.68871 4.483 7.67491 4.483 3.9809 6.97556 3.9809 3.48782 7.89908 4.85956 4.483 6.16855 
2.49252 6.39276 0 ]xsh
53.798 525.455 mo
(setsofclasses\()
[3.48784 3.98091 2.49255 6.70663 4.483 6.21337 3.9809 2.49255 3.9809 3.48785 3.48784 3.98091 
6.7156 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
112.276 525.455 mo
(C)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
122.717 525.455 mo
(and)
[3.9809 4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
138.889 525.455 mo
(C)sh
%ADOBeginSubsetFont: OWRAAA+CMSY6 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /OWRAAA+CMSY6 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.035 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /prime put
def
/UniqueID 5000816 def
/FontBBox {-4 -948 1329 786} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-24 0 683 708] def
/OtherBlues [-129 -118] def
/BlueScale 0.039625 def
/StdHW [52] def
/StdVW [93] def
/StemSnapH [52 61] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/prime <1C60D8A8C9B08A9592B356D04039FDE552C6347506BF0D56535A15AD
D3F98701E9923FF2BAB70DF8E498A7F9497409D99EA50DD53065F2D9029A6F07
044A6741817D00CDF269561587B0D9> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/YEJRQM+CMSY6 /OWRAAA+CMSY6 findfont ct_VMDictPut
/YEJRQM+CMSY6*1 
[48{/.notdef}rp /prime 207{/.notdef}rp]
YEJRQM+CMSY6 nf
YEJRQM+CMSY6*1 [5.978 0 0 -5.978 0 0 ]msf
146.105 521.646 mo
(0)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
148.789 525.455 mo
(\),thealgorithmreturnscandidateclass)
[2.98561 5.71135 2.49254 4.483 7.19971 3.9809 2.49255 4.483 4.483 2.98561 2.49254 2.49255 
4.483 10.2033 2.98561 3.9809 2.49255 4.483 2.98561 4.48299 6.71561 3.98091 3.98091 4.483 
4.48299 2.49254 4.483 3.98093 2.49252 7.19971 3.98093 2.49252 3.98093 3.48782 0 ]xsh
53.798 535.916 mo
(pairs\()
[4.483 3.98091 2.49255 2.98561 5.8459 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
76.579 535.916 mo
(M)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
86.45 535.916 mo
(\)withasimilaritygreaterthanagiventhreshold,referred)
[5.34367 6.47345 2.49255 2.49255 6.85002 6.33897 3.48784 2.49255 6.97554 2.49255 2.49254 3.98091 
2.98561 2.49255 2.49254 6.85002 4.483 2.98561 3.98091 3.98091 2.49254 3.98091 5.35263 2.49255 
4.48299 3.98091 6.84105 6.34793 4.483 2.27737 4.3485 3.98091 6.84105 2.49255 4.483 2.98561 
3.9809 3.48784 4.483 4.483 2.49255 4.48299 4.63544 2.9856 3.9809 2.98563 3.9809 2.98563 
2.9856 3.98093 0 ]xsh
53.798 546.377 mo
(toas)
[2.49255 6.44655 3.98091 0 ]xsh
%ADOBeginSubsetFont: ELRBAA+NimbusRomNo9L-ReguItal Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /ELRBAA+NimbusRomNo9L-ReguItal def
/FontInfo 7 dict dup begin
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) def
/Weight (Regular) def
/ItalicAngle -15.5 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 68 /D put
dup 69 /E put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 95 /underscore put
def
/UniqueID 5020937 def
/FontBBox {-169 -270 1010 924} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 432 452 653 673] def
/BlueScale 0.039625 def
/StdHW [23] def
/StdVW [78] def
/StemSnapH [19 23 32 38 43 47 53 69] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
12 dict dup begin
/D <1C60D8A8C9B6079F1E7FDFFC43634C569F7C3C0560575EFD3A10CD9B5613
01A3D4623B34C74F38798106928C02210CA259028D8F88EB49BBA49432021AF1
B39DB1B71F24322E10162507DD53020705C447FA9FDB332EDAFFAE91203287AB
61F86C23575FA8C0EF47CFC776B2A49A4F13950B1A6CA35092A27FF1EB2DE677
754D9CF4D51942A0AC70C51007DAFFC2300A> |-
/E <1C60D8A8C9B7D8BE6A73E65ED764628F7720D028AD4B7404BB27D4EA381C
C3960AD10B168857817F4D002A0F8733CCA63FA391A248297F400BED1E2C57BB
C30A68FACE19FB456D48A73EAEFA36119514C647DE19964B07ABD1C95137AD00
52DA5A688DF1E05139963FBFC6F73C973CBC5368C3E2835421F8BF7CFFD298D7
07EE2C8B17039B81DAD7AA24DBE51BDDD976AA82E649C2871EA646C6FAAEFDEC
22E7CBF33DC03955228CB3F5021A0ACB4581FECF3A53C6> |-
/H <1C60D8A8C9B6079F1E495237576F18BB3EC220BA3E60B6BA0D82BF1C6BB3
A4F9F582FDE32C4BA95E4AEEBC02391A2D42E2DE34B3163EF896B80F07C801E0
10382387E38D05075101C9F46418CFED0ECDAC1BBA667A7A73018E144515E75C
29391EE47C613E2FBCADFB2B8E75E4D42DCF4395B793FC59E1F992043659B2B9
53DC38536D36E76170A4CB68C8CE18C0C951CBAE4445DCE1A3184F9BE8E4F92D
1E479E2FD4DADB8BA448> |-
/I <1C60D8A8C9B81F2C46F7F636B4557A9E7641865051D4DDBAB814C2FA5AE6
79751BAC53E1B5440B5778ACF6F349E879542312CF080291BE5189E683992C8B
8956C010DFDE515082809C0695DCFF250EFD84B02B> |-
/L <1C60D8A8C9B7EF32573FBA3773C23852FE2AF74934999517C9B92B6F40CF
AB34FD10393E7C21AD897166E6BD746717A61507CD69D6A6299BCF5FE03B8A50
3AEC95FE431B0781054386FB6A1B84FA250D1164DDDBE348378845624ED3CF9C
0D08806FAA994DBE60> |-
/M <1C60D8A8C9B6B41CC7813947883790B3C0853248F0ECD1F9DBF38C037244
A75A7AF190BAE1F090978BDA37148659B2CC77865F5A34AF40EADC984810586F
DCCF713AD98F033CC34AA788FEED3F08C8410D3462C0C49ADE851E4BD04BB905
E3FDAA8C37EDE79691C2A641923E9307AB834EFAE56EFE2D4E73386C9009F478
EA45EC9AB9ACE8F7D58965613FBFCDF573C42883F7AB3A15A437F66279717748
1452> |-
/O <1C60D8A8C9B6079FEC5DB587CE34D991871A387838AE88182D4027AE8E43
5312A9CE6828389ED1B665AB0ECE8673430CB31ABE2E68AD6BBE3A70E74F1726
B428D916692BB2A14963D5C80FE64D26C80869BF0B50A9C38621788CE71C23D2
40EC952CD6DA8D0252F95029497A34A1DD5E3B280E0BD4E2> |-
/R <1C60D8A8C9B7D8BE6A40C97BA7C979B21135958FB079C612846E30D87BA5
E372CFA1152169E42E8C7FB9D9AC3595AE634917EA8CE80C1C04D6F7EB0C8ED5
8928AFAAFD0EF60D4D9ECED60C60418D77442BE34C1B4ADCF8637D53B1A537E7
7A41AAA36B2A24C0911D8C10167A50E99826A86AF39489F1ED490E91FA6D1DBD
FD14ABCF90715F9FC510896B87E1F09B50FB6087C226AF7779BAD057910DCD23
B9132A> |-
/S <1C60D8A8C9B7A73DB792F0509DC2608B7CBB653BD3BA9507A28F8DC443B3
90601E46B47B2B6E49AE61E639F2196E81AD0184EA647BDF40A25F6E04CB235B
0CC7CD1C2C4D060E3FA61A2B76A115F793F0948249D84F5A548074EA7A8435A0
73570FC530B1B0D91E5DD2C3E5CAF452BB129AB2BF3F33E9FBD817BDD83FD5CE
9DCD34041A363E0FCC6EB83E6AAF20B69AD7E4445067C01CF6693721C9BA93D9
BA265A615F99D0EE20D9F5652D4B7923FFA1EFB41F7BC13244E162D705A41E35
57> |-
/T <1C60D8A8C9B7EF32570F064EE8BC84CAA6794699AD8873B31A4F24E7FF5A
3AFAAEDD8012A7520E0FA64E194E00C0C8BC4F8369052DE4DA371B77D7D56616
D77FE1273CB4214964204D9D10CE8E71DCABC9E0BA4D5C0ABBA8027EF00E26C4
144C2CA1D993895AC3> |-
/underscore <1C60D8A8C9B7A73DB5FD3C3CE1FF5924642D6EEC907E6174060
F> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/YEJRQN+NimbusRomNo9L-ReguItal /ELRBAA+NimbusRomNo9L-ReguItal findfont ct_VMDictPut
/YEJRQN+NimbusRomNo9L-ReguItal*1 
[68{/.notdef}rp /D /E 2{/.notdef}rp /H /I 2{/.notdef}rp /L 
/M /.notdef /O 2{/.notdef}rp /R /S /T 10{/.notdef}rp 
/underscore 160{/.notdef}rp]
YEJRQN+NimbusRomNo9L-ReguItal nf
YEJRQN+NimbusRomNo9L-ReguItal*1 [8.966 0 0 -8.966 0 0 ]msf
72.17 546.377 mo
(SIM_THRESHOLD)
[4.483 2.98561 7.46861 4.483 4.98509 6.47345 5.47816 5.47816 4.483 6.47345 6.47345 4.98509 
0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
142.896 546.377 mo
(.Assomeprojectsmayhavemanyclasses)
[4.20505 6.47345 5.4514 3.48784 4.483 6.97556 5.94446 4.483 2.98561 4.483 2.49254 3.98091 
3.9809 2.49255 5.45139 6.97556 3.9809 6.44656 4.483 3.81055 4.34851 5.93549 6.97556 3.9809 
4.35748 6.43759 3.9809 2.49255 3.9809 3.48785 3.48782 3.98093 0 ]xsh
53.798 556.837 mo
(withthesamename,)
[6.47345 2.49255 2.49254 6.86796 2.49255 4.483 6.36586 3.48785 3.9809 6.97555 6.36586 4.483 
3.9809 6.97555 3.98091 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
130.365 556.837 mo
(M)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
142.622 556.837 mo
(maycontainmorethanonematchingpair)
[6.97554 3.98091 6.86795 3.98091 4.483 4.483 2.49254 3.98091 2.49254 6.86797 6.97554 4.483 
2.98561 6.36586 2.49255 4.483 3.9809 6.86795 4.483 4.483 6.36586 6.97554 3.98091 2.49254 
3.98093 4.48297 2.49255 4.483 6.86795 4.483 3.9809 2.49255 0 ]xsh
53.798 567.298 mo
(foraclassinaversion.Toalignthoseclasses,ouralgorithmuses)
[2.98561 4.483 5.55885 6.56312 3.9809 2.49255 3.9809 3.48785 6.07005 2.49255 7.06521 6.56311 
4.35748 3.98091 2.98561 3.48784 2.49255 4.48299 4.483 6.02516 4.76984 7.05623 3.98091 2.49255 
2.49254 4.483 7.06522 2.49254 4.483 4.483 3.48784 6.56311 3.98091 2.49257 3.9809 3.48785 
3.48782 3.98093 3.48782 4.90442 4.483 4.483 5.56781 3.9809 2.49255 4.483 4.483 2.9856 
2.49255 2.49255 4.483 9.55777 4.48297 3.48785 3.9809 0 ]xsh
53.798 577.759 mo
(packagenamesoftheseclassestore\256ne)
[4.483 3.98091 3.9809 4.483 3.9809 4.483 6.88589 4.483 3.9809 6.97555 3.9809 6.40179 
4.483 5.89956 2.49255 4.48299 3.98091 3.48784 6.88589 3.98091 2.49254 3.98091 3.48784 3.48784 
3.98091 6.40179 2.49254 7.39696 2.9856 3.98091 4.98509 4.48299 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
204.648 577.759 mo
(M)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
217.431 577.759 mo
(andreturnsonlyone)
[3.98091 4.483 7.38797 2.98561 3.98091 2.49255 4.483 2.9856 4.483 6.40179 4.483 4.483 
2.49252 7.39697 4.483 4.483 0 ]xsh
53.798 588.22 mo
(matchingpairwiththemaximumsimilarity)
[6.97554 3.98091 2.49255 3.9809 4.483 2.49255 4.483 6.7245 4.48299 3.98091 2.49255 5.22711 
6.47345 2.49255 2.49255 6.7245 2.49255 4.483 6.2224 6.97556 3.9809 4.483 2.49255 6.97554 
4.483 9.21704 3.48785 2.49254 6.97556 2.49254 2.49255 3.98091 2.98561 2.49254 2.49255 0 
]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [5.978 0 0 -5.978 0 0 ]msf
209.964 584.411 mo
(11)
[2.989 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
216.439 588.22 mo
(.)sh
62.765 598.68 mo
(Ineachalignedclasspair,ourapproachfurtheralignsmeth-)
[2.98561 8.32941 3.9809 3.9809 3.9809 8.32941 3.98091 2.49255 2.49255 4.483 4.48299 3.98091 
8.32941 3.98091 2.49254 3.98091 3.48784 7.33426 4.483 3.9809 2.49255 2.63594 6.48241 4.483 
4.483 6.841 3.9809 4.483 4.483 2.98561 4.483 3.98091 3.9809 8.32942 2.98561 4.483 
2.98561 2.49255 4.483 3.9809 6.83203 3.98091 2.49255 2.49254 4.483 4.483 7.33426 6.97556 
3.9809 2.49255 4.483 0 ]xsh
53.798 609.141 mo
(odswithintheclasspair.Thealgorithmformethodsissimilar)
[4.483 4.483 7.07424 6.47345 2.49255 2.49255 4.483 2.49255 8.0694 2.49255 4.483 7.56731 
3.9809 2.49255 3.9809 3.48784 7.07425 4.483 3.98091 2.49254 2.50145 9.05566 5.47815 4.483 
7.56731 3.98091 2.49254 4.483 4.483 2.98561 2.49255 2.49254 4.48302 10.5619 2.98561 4.483 
6.57201 6.97556 3.9809 2.49255 4.483 4.483 4.48299 7.07423 2.49255 7.08319 3.48785 2.49255 
6.97552 2.49255 2.49255 3.9809 0 ]xsh
53.798 619.602 mo
(tothealgorithmforclassesbutreliesonothercriteriasuchasthe)
[2.49255 7.1997 2.49255 4.483 6.6976 3.9809 2.49255 4.48299 4.483 2.98561 2.49255 2.49255 
4.483 9.69225 2.98561 4.48299 5.70231 3.98091 2.49254 3.98091 3.48785 3.48784 3.9809 6.20454 
4.31264 4.483 5.20029 2.98561 3.9809 2.49255 2.49254 3.98091 6.20454 4.483 7.19969 4.483 
2.49255 4.483 3.9809 5.7023 3.98091 2.98561 2.49255 2.49254 3.98091 2.98561 2.49254 6.6976 
3.48784 4.483 3.9809 7.19971 3.9809 6.20453 2.49255 4.483 0 ]xsh
53.798 630.063 mo
(numberofparametersandnamesofparameterstore\256necandidate)
[4.483 4.483 6.97554 4.483 3.98091 5.26297 4.483 5.26298 4.48299 3.98091 2.98561 3.9809 
6.97555 3.9809 2.49255 3.9809 2.98561 5.7652 3.98091 4.483 6.76036 4.483 3.98091 6.97554 
3.98091 5.7652 4.483 5.25401 4.49197 3.9809 2.98561 3.9809 6.97556 3.98091 2.49254 3.98091 
2.98561 5.75624 2.49254 6.76036 2.98561 3.98091 4.98509 4.483 6.25827 3.9809 3.9809 4.483 
4.483 2.49255 4.483 3.9809 2.49255 0 ]xsh
53.798 640.523 mo
(methodpairs.Thesecandidatesmaycontainmorethanonemethod)
[6.97554 3.9809 2.49255 4.483 4.483 6.36586 4.483 3.9809 2.49255 2.98561 3.48785 4.89543 
5.47816 4.483 3.9809 3.48784 5.86376 3.98091 3.98091 4.483 4.483 2.49254 4.483 3.98091 
2.49254 3.98091 5.3707 6.97556 3.9809 6.36586 3.98091 4.483 4.483 2.49254 3.98091 2.49255 
6.36584 6.97556 4.48299 2.98561 5.86377 2.49254 4.483 3.98091 6.36584 4.483 4.48299 5.86377 
6.97556 3.9809 2.49255 4.483 4.48297 0 ]xsh
53.798 650.984 mo
(pairduetooverloading.FortheexampleshowninSection2,our)
[4.483 3.98091 2.49254 5.67542 4.48299 4.483 6.67071 2.49255 7.18177 4.35748 4.34851 3.9809 
2.98561 2.49255 4.483 3.9809 4.48299 2.49254 4.483 4.48302 6.36586 4.85956 4.483 5.66644 
2.49255 4.483 6.6707 3.85539 4.48299 3.98091 6.97556 4.483 2.49254 6.6707 3.48784 4.483 
4.26782 6.47345 7.16383 2.49254 7.17281 4.98509 3.9809 3.98091 2.49252 2.49255 4.483 7.17279 
4.483 5.04785 4.483 4.483 0 ]xsh
53.798 661.445 mo
(approachcorrectlyalignstheclass)
[3.9809 4.483 4.483 2.98561 4.483 3.9809 3.9809 7.71973 3.98091 4.48299 2.98561 2.98562 
3.9809 3.9809 2.49255 2.49255 7.72869 3.9809 2.49254 2.49255 4.483 4.483 6.73354 2.49254 
4.483 7.21764 3.9809 2.49255 3.98091 3.48784 0 ]xsh
%ADOBeginSubsetFont: MZQAAA+NimbusMonL-Regu Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /MZQAAA+NimbusMonL-Regu def
/FontInfo 7 dict dup begin
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) def
/Weight (Regular) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 70 /F put
dup 73 /I put
dup 77 /M put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 115 /s put
dup 120 /x put
def
/UniqueID 5020945 def
/FontBBox {-12 -237 650 811} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 417 437 563 583 603 623] def
/BlueScale 0.039625 def
/StdHW [43] def
/StdVW [41] def
/StemSnapH [43] def
/StemSnapV [41] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
13 dict dup begin
/F <1C60D8A8C9B7C3C99EC1586781B88A8F3CC2CB1978ED35856AC0133ED221
15C09F1F3F6DD82051E00C562560FA68B5396146D006536A42DA05F9E6C6A775
412AD758FB2B4CEAF63266D7E1472A5D26F3BB7B0D08125CFDEB1680C1185CD6
93ED3E2EDF6DA6E2998782A10A3C7F67B238B692A032817E95233A304822BA2F
60BEAAD04D33D067B5DF5731B66497A8> |-
/I <1C60D8A8C9B7C3C99EC158686D32AAC49112B8CB587D27EACC6893B95892
7511260533E72F3409434E46A5DF2E7D447911C980031FAFAE7213ABC4820B9E
ABFD16EFD6BF769EB3FB0EB64D36BF02EFD12833441690805C> |-
/M <1C60D8A8C9B7C3C99EC158686D32AAE07AFE34E925F5E07F1C011C621551
8B51EF93DF984EE5A799EEC78D22E29C1B1E8E0DFDFB92FE337F8EF0175F745E
5401CCCE7CFAB6D6EEA04C4FB9C436AAE194F48764CAA49AF9B1A5BFFA2D5C35
FC7AEDEC9163EF508F8BBC07D8AA16F166793E2CD7EBA4A9B3C5BA06598E407E
7725BE9113EBFF0EC175739B158316220605461A4B> |-
/a <1C60D8A8C9B7C3C99EC1586748A26DB33EFB4C0031C4A0921B69F41671F7
594695941F57613A087934E5B9C19DCCF1C7914CB77D324C82F54CC4C4FB222B
901F897B5862553230818B5B1CF4D289250B4F58BB32130F9B8A4572374BB899
3F9412EA104A0F264B57B9DA1D5355ADC9A0E02DD2FC98B5C6F3ED3DE659ECAA
613E9C54875642A845B3755FAF1F7A177DC49EEBB0747B64CFA131DCEB380490
90B6D887A6C59AA3113E15D439D11B76D3C07174D51763A06462987C1D7574> |-
/d <1C60D8A8C9B7C3C96E751C0E4D459EE42C292CFB65478FD596798F486833
E3DD0B30F57574DFE3876E4662AA074F1B3BE2B01379B512C33E2715ED6F9752
1391B4F07A612E7C24447738311A9F24C4C444BFD6291A1B86576E4CBBA3C557
8E887F089B22092E0BDB1C53FFF6963297B7BF7F1A74AB8A3B7B0D2EC14B471A
BDD5E72963A7BE1FD5E43544B62DFE2493C33C9975BD4A8E1DC204A61984AB72
2E9D918D05E50BFD0671D4F0825AA013> |-
/e <1C60D8A8C9B7C3C96E751C01876A5DA8A07BEF0009F1B867094A7924D2A9
4989EBC47E9108D1DE64C0196D6EBD37CD6971BBC0545D904EDF3B3BDCFD8EC3
B8C5EAB9F2D8DBA4F021C3488BD0BDF5D712FD6BA7A0AA1737E47C23F730CED7
127C2C16CEB818C1CA79> |-
/i <1C60D8A8C9B7C3C99EC15868FFF428FA4920C85425AAB7D8521091D68A84
0C5C2D43694DF7BFFCB637E7A935C52A0C361FD93985D29151A08200BBDF065F
311A9DF7E68A0AFCF4A3BCD18C64F3659B1FE3C2C14EB1E93DF8BBB4848849EA
3D38A5478188710DE744E21F> |-
/l <1C60D8A8C9B7C3C99EC158683424FE0FFE758A32C06AFE71288C507B02B2
F4A66A57575585FA8382892EFF3D38E23400C814B17B51B87B26A83C399E680B
4DEF17BAD38F4307BD531B2E> |-
/m <1C60D8A8C9B7C3C99EC15868FFF4289466AC0D8FDE9D4A323AFF900CDB87
BCA177BEDDB2A15CFED3B521896A2BD9C05BFCA5AE0B06C0A7AF7135F458F8F0
25EEC3AAABAD5A44D5F737F4B110AC1711EEF8410D20E18EB7B8614583468CE5
E1B8FA6719E78BDC87213FBD39A50AC56C3143F04D7B2B3300EE1BE982147C19
45053B6E1C947CE0459C59FD6B7332E31A4D46DC8B3B7CA5CE96F5839467D66D
0B53A161C52A816A6A6D3BF848E2544E2238007291311ADA3638270B22F5D986
7C32E9F5BA310C33FAB6F0980750BA7DF9BD3BA8836F14AE8F13587BBB29B127
936ED362BF30F38432551A3EC0> |-
/n <1C60D8A8C9B7C3C99EC15868FFF428CEAB4C061E50A3AD59F09A64B3BAB5
02B1309C5F218C5FAED58A53138B2E7679F06E5FFC54A341BF841CC40046CFBB
24FD3C2A54E708F3661A6B37AD1EF061E48C6731F21F70CD2DF554C8A7BD7317
B35890ACB61E7E2AC09CC0055991C31F1F1A4B3949BDF2B9B8A3488034DD684B
FE8C9AE524E4524926EEF6651585D1817D09EEA3757FD4B81F5CEB3B1CD357A5
59990FE63245C2906CE6BD3B1468D6D9E67CE4F8ECDAF1D2CC1F85EBDA2E> |-
/s <1C60D8A8C9B7C3C96E751C0E4D459EEB802A4C06BC62E9B5C7F7A459936F
9FA99E96BC11225A0922EC25911289BD6020953ECE656CE4F728D905B3E9070A
DCFAAF2865E6A085949596E37B984ADCCC9350F78D1F52D7B574B6089B03E807
FEEEA15A5E0BFB9CC5B5AD286D44C7A77F8FA17940D81A0432FE1BAAC4625BD0
325DD10BE5C0ABA0C8AF3B0F63BF5A0A744AAF37ACF8C35DD22D81E96176D890
93F66984E29D1DAD85AC2869B2E4BF940374F2B78533678A458D8EE9D6183D53
388A7A469959D8576891C306CED0A27AFCA070071CD852FE11FEFCFF91BB6200
56619110F41C9E7BE8F1E779D01C1664383342C792375BCB595FA90C8B7A844B
FB940B31> |-
/x <1C60D8A8C9B7C3C99EC15868FFF428F5102EEDFEE68493FB94AA5EC33666
1038F1609124444E8C80092BA2353E15A7EAF73E6AF47B76F42B9F1E452E1492
7C1A21D5F96E3C74C3D48D97F8AB44B98497DCA9DEEF94E1FFD73A8491D4DE05
5A7176443140B4CF207D9D4F00B9A9AD81D19C9F2F812B22BFDC09A3374FA132
7D22D792C4AAD3F3C280DFCDA172457D26CF62C0F34D6E74CE9349102D167307
250250624A4BFD> |-
/.notdef <1C60D8A8C9B7C3C91B> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/YEJRQO+NimbusMonL-Regu /MZQAAA+NimbusMonL-Regu findfont ct_VMDictPut
/YEJRQO+NimbusMonL-Regu*1 
[70{/.notdef}rp /F 2{/.notdef}rp /I 3{/.notdef}rp /M 19{/.notdef}rp /a 
2{/.notdef}rp /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m 
/n 4{/.notdef}rp /s 4{/.notdef}rp /x 135{/.notdef}rp]
YEJRQO+NimbusMonL-Regu nf
YEJRQO+NimbusMonL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf
184.549 661.445 mo
(IndexFiles)
[4.78204 4.78204 4.78206 4.78204 4.78206 4.78204 4.78204 4.78206 4.78204 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
235.613 661.445 mo
(andthemethod)
[3.98091 4.483 7.71971 2.49255 4.483 7.22659 6.97556 3.9809 2.49255 4.483 4.483 0 
]xsh
YEJRQO+NimbusMonL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf
53.798 671.906 mo
(main)
[4.78205 4.78205 4.78205 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
75.17 671.906 mo
(inJavatotheclass)
[2.49255 6.7245 3.48784 3.81055 4.25885 6.21344 2.49255 6.7245 2.49255 4.483 6.2224 3.9809 
2.49255 3.9809 3.48784 0 ]xsh
YEJRQO+NimbusMonL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf
144.253 671.906 mo
(IndexFiles)
[4.78204 4.78204 4.78206 4.78204 4.78204 4.78206 4.78204 4.78206 4.78204 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
194.316 671.906 mo
(andthemethod)
[3.9809 4.48302 6.72449 2.49255 4.483 6.2224 6.97556 3.9809 2.49255 4.483 4.483 0 
]xsh
YEJRQO+NimbusMonL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf
251.848 671.906 mo
(Main)
[4.78203 4.78207 4.78204 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
273.219 671.906 mo
(inC#)
[2.49255 6.72449 5.98041 0 ]xsh
53.798 682.367 mo
(astheirnamesarequitesimilar.)
[3.9809 5.72934 2.49254 4.483 3.9809 2.49255 5.22711 4.483 3.98091 6.97554 3.98091 5.72934 
3.9809 2.98561 6.22241 4.48299 4.483 2.49254 2.49255 6.22241 3.48784 2.49254 6.97556 2.49254 
2.49255 3.9809 2.50145 0 ]xsh
.398 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
53.798 696.107 mo
173.35 696.107 li
0 0 0 1 cmyk
@
YEJRQJ+NimbusRomNo9L-Regu*1 [5.978 0 0 -5.978 0 0 ]msf
51.806 702.949 mo
(10)
[2.989 0 ]xsh
%ADOBeginSubsetFont: MZQAAA+NimbusMonL-Regu AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
YEJRQO+NimbusMonL-Regu dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B7C3C96926676D4CEE81EDBAFB019020FD54C6B9FA325
93EEB166ADAE36941D0869279> |-
/slash <1C60D8A8C9B7C3C9ED5F03ABBB5C553F26024A670328B5008371BE33
92E9EB02A4FCEC0B6CDDF5A57D89D0F829800EE09B75D56AFB58E5F7F3C7> |-
/colon <1C60D8A8C9B7C3C96926676238C906B277F3ADBCB747EDD40869CA93
DAB860FA1B6AFF0783D446268A6F0EF3EDF0F2A9132C62F8F7BB8EB8999A62DC
98C1695ECB8AF0604AA43A> |-
/c <1C60D8A8C9B7C3C96E751C0E4D459EC3FBA36D8CD6FABAC40CADD91FFA0B
DBD18BEECD746A76FBD5AB40C089C1E3396D733695115B4A5FBD5AA6FEC06554
F255AE145187928DF456FA1045197CB211757F49577707C01E778C122091318B
494644E57BE95EC6656259FBE437C979E034070409105E56BDE482137B4BCCB0
75636FAE012B629E2CA6E6802CD0> |-
/f <1C60D8A8C9B7C3C99EC15868FFF428FA12CD1DF81BF1596D3A6100BD8425
60457BFB7F9A081D35D6FB66FFFD9748094AC935D4F01F599A1F982CE7852ECF
4D2A14A5F8897732AEA0C0E48EBDF6AE1A4B54C6F658915AEEEFD29E78CDCB8B
5AE6FDEDB865BEABD73FBDAA24A1A7F6B204669EFF652EA0BC83880717EE2B3C
58F6E934A8704CA4072C808B> |-
/g <1C60D8A8C9B7C3C9EEB993481EAAB4A6ABB3EB822767B4DEA07EA16E4C9A
69EB023D95B7B2F32446BA4A669B96C584039A2A4FC9BE0C06D3C41C7AFDB3D0
24BED4577A147F873A9678D51D7B35CDF041D4B049E270286330D5E68E4C8473
6873302656164EB1C65D84B87CF2420EF4F60B2A7398673972868FE215A27860
C4A3825A8A77F2D2FECC20A6B19C731DEFCE03018188D6FD9637132D550FE302
98E6DBBD3F93A39494DBC5EA544178F69A6D26568FE3C01CECD94D5609C589A0
9892F3EB843F> |-
/h <1C60D8A8C9B7C3C99EC15868E9377F0ACCFB44C479C82EE0FB0E87789B8E
FBAB383C6EA190310FA0CFBAD010D0AD8C2F10D92607D9594D49A568B35273FF
7CB010AE5B458DA318CAEE03353E67FCFDC1B2A50D3421C8DC1FD228E2E4BBFD
81BAE9126CD57E42F63319A1930E4B4C6320AAC675E8F12C181E1DDA8CDFEA92
3B2B7A6770A02CE9EE7FFD3686D22DC3E636E5559C3F262C> |-
/j <1C60D8A8C9B7C3C9EEB9934873A490E1AA5B0D1705C5E286259DF2923D94
BCB14986993B482000D1BC45110AFEFD52F5AD79AA75D62DA3C5C183428F39C8
3D58CDFDFF6F08A0EA7153EBC0D7440A2310661DF4596C75ADB0FBDB47CE> |-
/o <1C60D8A8C9B7C3C96E751C0E4D459ECF4885BDA9C6C1D2AD68BD54E53CFE
28C56C5D3626FA1E4FCD629E7E8BFAC8C49A7E48BA7987300849CCB3AA37A19E
2BAB43C8B07B256A020857B456C8B9F5CA22> |-
/p <1C60D8A8C9B7C3C9EEB993481EAAB4A6BD3E6F5F37C663682BC1393B4F83
549E7928631E8DA4D76785433069E3F4A81F05411231A530FDAFD8B5699882B9
BCCC18A05753DCCC5E5C827A32830DC08C2636F160E92B615CDD084765771549
75E64A9B2F5B538F29576B4193DC8D37966F18543F17DB430F1D85F8A087E1B5
C3F2FB2E001959AC4DE6273FCF671FAED51200E278BA2B3FCAC6D08B1594C8E5
9FCEF6976E26371420E2ADD96CD2C0C52F3DADC1CCAE302BD253F01B480359C9
97832846905B310BFE3300CF382D3B18CB16D8DE16B99A4C> |-
/r <1C60D8A8C9B7C3C99EC15868FFF428F5AEF474C8671D3FB387776DFB9AB8
70A4465E66ADCC49DCF1629E187AF21C13AC8FEE55AF7128E79EAF7D470A34B0
099C5D3E29148B67D43CB730CA6E13F1E9C69BFD6F5D176235DFDC129FD1C29B
58BCE9065BF8DFE9F45F6B65F1C581FBA94A2C51EFF75C8E4DBB6BB0BFD4F704
20EED53C99A4FE> |-
/t <1C60D8A8C9B7C3C96E751C0E5B8FBDF7DC993A9C6E80931A6165CD7CDDAD
AE161D038D015704B53B1ED122D2F0D1282F5A1D7391E4DB011CD5B576DDD7EF
B91EAD2C6B2AAAF2F1C0BCB55EB3F0614F13A9DCD01CB17DBFAE1A26342BA69E
F1F9DD5146829E35CB3810CFE459037763AA0A2F> |-
/u <1C60D8A8C9B7C3C99EC15868FFF428FA9EACF2E3DDBAD9E5F5F795698E8D
334F9E842639FF76A8404DA5C0100320FD758D74EFDC44E6F2339A668077FB20
A68A7AA8EE855C42B6F18625F77C5FF917429F10F96510B9420E40A85BB9E901
E393E7E6CC2A94968A3A2806227859204D1A5C3661D363BD3BFEEAD265C77D50
19C1462701DC783C3744305DE91DDC0D41FBA54B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
YEJRQO+NimbusMonL-Regu /Encoding get
dup 46 /period put
dup 47 /slash put
dup 58 /colon put
dup 99 /c put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 106 /j put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
pop
%ADOEndSubsetFont
/YEJRQO+NimbusMonL-Regu*1 
[46{/.notdef}rp /period /slash 10{/.notdef}rp /colon 11{/.notdef}rp /F 2{/.notdef}rp 
/I 3{/.notdef}rp /M 19{/.notdef}rp /a /.notdef /c /d 
/e /f /g /h /i /j /.notdef /l 
/m /n /o /p /.notdef /r /s /t 
/u 2{/.notdef}rp /x 135{/.notdef}rp]
YEJRQO+NimbusMonL-Regu nf
YEJRQO+NimbusMonL-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
58.281 706.758 mo
(http://sourceforge.net/projects/simmetrics/)
[5.37965 5.37965 5.37965 5.37965 5.37965 5.37965 5.37965 5.37965 5.37966 5.37965 5.37965 5.37965 
5.37965 5.37965 5.37965 5.37965 5.37965 5.37965 5.37965 5.37965 5.37965 5.37965 5.37965 5.37965 
5.37965 5.37965 5.37967 5.37965 5.37965 5.37965 5.37965 5.37965 5.37965 5.37965 5.37965 5.37965 
5.37965 5.37964 5.37967 5.37964 5.37967 5.37967 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [5.978 0 0 -5.978 0 0 ]msf
51.806 713.501 mo
(11)
[2.989 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
58.281 717.31 mo
(ForC#,werefertonamespacenamesforpackagenames.)
[4.85957 4.483 5.21815 5.98038 4.483 4.483 6.47345 6.2224 2.98561 3.98091 2.98561 3.98091 
5.2271 2.49255 6.72449 4.483 3.98091 6.97554 3.98091 3.48784 4.483 3.98091 3.98091 6.2224 
4.483 3.98091 6.97554 3.9809 5.72935 2.98561 4.483 5.22711 4.483 3.98091 3.98091 4.48299 
3.98091 4.483 6.22241 4.48299 3.98091 6.97556 3.98088 3.48785 0 ]xsh
.797 lw
316.812 57.186 mo
555.915 57.186 li
@
%ADOBeginSubsetFont: UGXAAA+NimbusRomNo9L-Medi AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
YEJRQI+NimbusRomNo9L-Medi dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/m <1C60D8A8C9B6B41C9EF86D4D6709D4B4B598121ABB5312D265CF235A834A
848ACC160F120715B6D9D9DE49A3676340531B82B90738BD6CAE6D52EC61EB6F
4100397B542B30AF3045B69D55E829A9CA2911A2131AEF0E17B862A77C80D00D
1B61DCDDB2FDD8AC1D4F6F1C38001BCEDACD3F5BD3CF61CF3007C39B156EF6E2
E67B4D6514FBC70B978E5F934A5BE1753968182C7F65657D118D3CFD8597FCFF
C0E74EEAA06DDD9859889BDB3E82F10A5B29BD59B729EB58CA91FF4B11BFABD1
8058EFD26FA1217D294C851E56C2F5CC05EF837BC32D4E3ED3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
YEJRQI+NimbusRomNo9L-Medi /Encoding get
dup 109 /m put
pop
%ADOEndSubsetFont
/YEJRQI+NimbusRomNo9L-Medi*1 
[46{/.notdef}rp /period 2{/.notdef}rp /one 2{/.notdef}rp /four /.notdef /six 
3{/.notdef}rp /colon 6{/.notdef}rp /A /.notdef /C 2{/.notdef}rp /F 
8{/.notdef}rp /O 17{/.notdef}rp /a /.notdef /c /d /e 
/f /g /h /i 2{/.notdef}rp /l /m /n 
/o /p /.notdef /r /.notdef /t /u /v 
/w 136{/.notdef}rp]
YEJRQI+NimbusRomNo9L-Medi nf
YEJRQI+NimbusRomNo9L-Medi*1 [8.966 0 0 -8.966 0 0 ]msf
321.295 65.754 mo
(Algorithm1)
[6.47345 2.49255 4.483 4.483 3.98093 2.49252 2.98563 4.98508 9.71011 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
367.866 65.754 mo
(:AlignClassesAlgorithm)
[5.272 6.47345 2.49255 2.49255 4.483 6.72449 5.98038 2.49255 3.9809 3.48785 3.48785 3.9809 
5.72934 6.47345 2.49255 4.483 4.483 2.9856 2.49255 2.49255 4.483 0 ]xsh
316.812 70.087 mo
555.915 70.087 li
@
%ADOBeginSubsetFont: UGXAAA+NimbusRomNo9L-Medi AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
YEJRQI+NimbusRomNo9L-Medi dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D <1C60D8A8C9B6079F1E72628EE41DA8DA688B90558E5030E4DB406FC0434E
8736F6D1AEB93A1671AB2809052B210583B0B968E459BD7C0A7E7330513140D6
42CFF9FD0B8ADECE1D8966485E526A66F23B586CBAFF6CA5271515B9979D83EB
A70E5DC0FFBBA1A11EF8971DF6C2DBA680CE0E17C23D3DC080DA53EB60BFBE0C
3D50341E6653A25367225B1AD9C42E18023801FF6E5C8199C71CE355A3DE37B9
B9FA4C> |-
/R <1C60D8A8C9B6079F1E72629B99242969D4642C44A229881B26D2A75EE081
1E8AA268F6F6CEA5FD57251479BD33194E41D0CEB95BC144A48621AF19F65A26
396B1416B7739BC90BED361C13BB0B05FD9313991E4C41211904C677CF9CC239
6B59923BFF4B5D45E31A7DED39E7A83D051CBEA33398D44D3FA24AE8AFF6B846
67F26954DA62A33CCD5FBB86D6754C9D7E71EFF5A074FE2111058DFA873BB6F1
E2EAB64DCD292A52FC6CABAABBF604EAE0876DC9F9D6906663AE4F9ED5> |-
/b <1C60D8A8C9B7EF32A197526A4B04A18ABDFB17B506314FEBCC967D58D37A
1BAE1D70D51387A69E33A3528C1E4C46131DD0F716CB9CD5D029861C055A88A4
7591CB3E3F2D0AE589CD946E2F4EFB67DDEE0D1973635635E163477753314CA0
CA2593426D2EDAC290CA8BDEDC3D96B7> |-
/s <1C60D8A8C9B7361F88137B0B3B9E3BE8575A6F0132A8AB9BC21CCB7EEA59
D7C1838FEEC96953798936A0666A27E1BC45EA9D786F997994F74D34DE4AFF12
ED9FE990CE76057A0B0440124651A1447CC3EB65F8E5DD21BBCCF42559B0DC72
BC23E377821A6082C09BFD65655DAD91AC241371D8EE6F35DC6A81FF8B99FAAB
CFE16B4C07309EF358F349B1ADEA227F8C0DF4EAE6353A5FFA74> |-
systemdict /gcheck known {setglobal} if end {end} if
end
YEJRQI+NimbusRomNo9L-Medi /Encoding get
dup 68 /D put
dup 82 /R put
dup 98 /b put
dup 115 /s put
pop
%ADOEndSubsetFont
/YEJRQI+NimbusRomNo9L-Medi*1 
[46{/.notdef}rp /period 2{/.notdef}rp /one 2{/.notdef}rp /four /.notdef /six 
3{/.notdef}rp /colon 6{/.notdef}rp /A /.notdef /C /D /.notdef 
/F 8{/.notdef}rp /O 2{/.notdef}rp /R 14{/.notdef}rp /a /b 
/c /d /e /f /g /h /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t /u /v /w 136{/.notdef}rp]
YEJRQI+NimbusRomNo9L-Medi nf
YEJRQI+NimbusRomNo9L-Medi*1 [7.97 0 0 -7.97 0 0 ]msf
325.778 78.611 mo
(Data)
[5.75436 3.98499 2.65396 0 ]xsh
%ADOBeginSubsetFont: HJCBAA+NimbusRomNo9L-Regu AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
YEJRQJ+NimbusRomNo9L-Regu dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/semicolon <1C60D8A8C9B854D08A49DE8ABE00A3F56845F7C789B1D092D769
97EFACFC31B8EA3193D55F08B870AB735BDAB3E62041101CDD0BD1D1D6BEFEBA
20B83E51E7F8BBC73125BF217AE48D948654CE4651FEDF3EB4DBCACEC48ADEBE
9556E72AA1D2EA8C03523F47A75C326AFDCB83105752D16B9EBFAEAB49BE8CE0
E45C5F7CC0B86B9DE5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
YEJRQJ+NimbusRomNo9L-Regu /Encoding get
dup 59 /semicolon put
pop
%ADOEndSubsetFont
/YEJRQJ+NimbusRomNo9L-Regu*1 
[35{/.notdef}rp /numbersign 4{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/period /.notdef /zero /one /two /three /four /.notdef 
/six 3{/.notdef}rp /colon /semicolon 5{/.notdef}rp /A /.notdef /C 
2{/.notdef}rp /F 2{/.notdef}rp /I /J 4{/.notdef}rp /O /P 
2{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c /d 
/e /f /g /h /i /j /k /l 
/m /n /o /p /q /r /s /t 
/u /v /w /x /y 52{/.notdef}rp /fi 81{/.notdef}rp]
YEJRQJ+NimbusRomNo9L-Regu nf
YEJRQJ+NimbusRomNo9L-Regu*1 [7.97 0 0 -7.97 0 0 ]msf
342.157 78.611 mo
(:)sh
%ADOBeginSubsetFont: WBBBAA+CMMI8 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /WBBBAA+CMMI8 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
dup 80 /P put
def
/UniqueID 5087383 def
/FontBBox {-24 -250 1110 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 0 683 704 431 441 452 463] def
/OtherBlues [-204 -194] def
/BlueScale 0.04379 def
/StdHW [32] def
/StdVW [78] def
/StemSnapH [28 32] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/C <1C60D8A8C9B08A94690D08939D14D7F2A0D9BEF417A6329ED56CDF046B3A
E1C1288426C7AB67077D9B334E33891EDA73BEBD3CCB1F3C884D036FE9A2C1B5
11EB2D7C10FB1C374485BC1B69137A3C5ED1466165ED3E4476B2A705EAF64BDB
5E31A00C821CE36BFFEE3C07974AFFBDB07D48E9D4539F72E6BAED3082C5B784
B88EEB88438E3F93CDE3AADD770FB8203AC8DB4E9AB29F2C349F72ABA46D081A
548F409F8400> |-
/P <1C60D8A8C9B08A9449D4FE61E37B44869FAC864F1BA1B3E5F8645655441D
55835BFD919C28F4DF04803AB20306313A3BFBEE1392A5A572D9E6267E9FE866
5AEA1CE61D91F3DA0B4CDD277FEA81647CDF211DBFD2295D0D32A50D0274C805
5747FDF430A3C76AAAC14153ABA9A53E64AB6CB37D8127C10751B5064F0DE5D5
049B5A7C3141135C8B48F4D3237797C5BE302937192F9F3D7F2029986B14FC04
DAFCA6E40C861688F248E43917D4FE37D0EFBC6EF5A153F471BC48> |-
/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/YEJRQP+CMMI8 /WBBBAA+CMMI8 findfont ct_VMDictPut
/YEJRQP+CMMI8*1 
[67{/.notdef}rp /C 12{/.notdef}rp /P 175{/.notdef}rp]
YEJRQP+CMMI8 nf
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
346.843 78.611 mo
(C)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [7.97 0 0 -7.97 0 0 ]msf
355.434 78.611 mo
(istheclassesofalanguage;)
[2.21567 5.0929 2.21564 3.98502 5.53116 3.5387 2.21567 3.53867 3.1004 3.10037 3.5387 5.0929 
3.98499 4.64645 5.53119 2.21567 3.53867 3.98502 3.98499 3.98502 3.53867 3.98502 3.53867 0 
]xsh
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
445.743 78.611 mo
(C)sh
YEJRQM+CMSY6*1 [5.978 0 0 -5.978 0 0 ]msf
452.341 75.798 mo
(0)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [7.97 0 0 -7.97 0 0 ]msf
457.018 78.611 mo
(istheclassesofanother)
[2.21567 5.0929 2.21564 3.98502 5.53116 3.5387 2.21567 3.53867 3.1004 3.10037 3.5387 5.0929 
3.98499 4.64645 3.5387 3.98499 3.98499 2.21564 3.98505 3.53864 0 ]xsh
346.843 87.578 mo
(language)
[2.21567 3.53867 3.98502 3.98499 3.98502 3.53867 3.98502 0 ]xsh
YEJRQI+NimbusRomNo9L-Medi*1 [7.97 0 0 -7.97 0 0 ]msf
325.778 96.544 mo
(Result)
[5.75436 3.53867 3.1004 4.4313 2.21567 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [7.97 0 0 -7.97 0 0 ]msf
347.473 96.544 mo
(:)sh
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
352.159 96.544 mo
(P)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [7.97 0 0 -7.97 0 0 ]msf
360.697 96.544 mo
(isalignedpairsofclasses)
[2.21567 5.0849 3.5387 2.21567 2.21564 3.98502 3.98499 3.5387 5.97748 3.98502 3.53867 2.21567 
2.65396 5.0929 3.98499 4.64645 3.5387 2.21567 3.53867 3.10037 3.1004 3.5387 0 ]xsh
YEJRQI+NimbusRomNo9L-Medi*1 [7.97 0 0 -7.97 0 0 ]msf
325.778 105.51 mo
(begin)
[4.43134 3.53867 3.98502 2.21567 0 ]xsh
.398 lw
330.582 196.371 mo
330.582 108.2 li
@
%ADOBeginSubsetFont: WBBBAA+CMMI8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
YEJRQP+CMMI8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B08A956F7E0F54872991CDB176BE750200DFD59F488EB
116A77194BACB9A6062AB7DCB1629515971F7A710> |-
/comma <1C60D8A8C9B08A956F7E0F548729E1EAF5C3825DA50E737C604CFBE8
1ECDDB48CC62B171BB548A4841ABAEB744D3A9AEEA4EDF77D3ED2C7EAD070AF9
4F6E0A02F5B4B0C606FC46205352B8B4E6> |-
/greater <1C60D8A8C9B08A953C5C2645FEB031E9258D7392C30BF72911A50E
43CE4047BCCA75F7A5CFF69BCEF749461AD653D4CCA02CE338D36960C6A00BE3
7CE6757C4D0A23D3F0C2A28027560848E5F8A1AED5FC2812CFC3B31D70C5CD93
7DABDD4AA043C0A7> |-
/M <1C60D8A8C9B08A94C0734F0B15E610B16844C01C45DF9E70DDE9F72DF62C
DF405970B0CEFD36984B8CE4B14B0D6016089DB7A105C4D38BD7ED1EFF61D33F
B7FEC50F0E6A10CB637ADD43AEA5A4A7CC9613B65B251DDE7FF536EFC2D1BF3A
06E16C9FC96958FCD5E9E1D030FA62BA57B309751A4DDFED7463A6BB0BC2E641
104E5076FC4FAC9485BC35DE2558D27F02148241BDCA4E14348BCFEE56E7BDFF
5066D5F8EAD76EA2D72E17BFDF8F81075CD4D2289F2FDA94535C4B4C118E1B17
AC484A8227B6979EC7D23F5B8EDB5DDB027B75FA5D18273F5CEB19346A35B853
9A4B4F548A317E7E917B670E1BDA6945BABE65E191F1EC40C2E259D12B331856
63878F86> |-
/a <1C60D8A8C9B08A95C0F1986E9293A80D2663F6B314F2AEB75CEB5638A251
0859DAD759BD734BEE361CFBEB5B9CEB0916C7BC58D0642E64FE4EAAB51CCEAE
4D571F613056E0C2D21112D992D47D073807EEA4D632A7742CFD5043C103420E
4C4E8E0ED2D1772D557F8D54DFAEFE401515E907C8B05EBB64A484D612052215
22C562AA120F09D19E467E2DA63F84354F14BBF2DD455E8521A94FE04A21F6A2
C52DE7D55A534C180EA46661C4844F416C2F98E7F2DFBD9EA0CFDD7330E5E483
2A4A2F7C> |-
/d <1C60D8A8C9B08A95C949827EED18EF1D3224F7A6AAA58385B13BE0309EC5
97A56259B856DE0953A15BC3E3C14CC11C6442858DC3C01DD0AB9F67EEB07BCE
D9821ECBF4B93B7245D2538FFE881B41790B6A2CEDF6E1D11C396F2AF62DA00A
2BAF33E6E6435C367F1D7C486DE642C8A6A43B385CBDD2FD8CCD3F1252833FAE
FF11BC2359735BFF1751F28A0BE255A49B74ECBEA38A70515B5A96397C8707EF
7B29B9F8CF0A39707C970A7759DA9BE803E845EB22EBADCFD0EC386F48AD050D
4FA2106709BB8CB14CC0FC411FB7A59F358BD0A6BFBE0FC24E5B> |-
/e <1C60D8A8C9B08A95DC90CC7F9A642F26C4D65BA54EE1B2F80C59FBAC8730
BFD5471EE0C50EB234CC21149BA3573E7CC785C850D88029AB986B775831E133
75488316E785004601D6A211AEDA51512E2141B6AD277861410C5AAAF97E43D8
398CA868684F7CCB31028692D8728FEE8317B0262EEFAE5058F1CDE094E076F2
96D4FDC52DC0AE> |-
/f <1C60D8A8C9B08A95DB28430F70146C4AD90EDBC22430B7001F4F294AC4A7
2D478B78CAEE591969301EB464FB9BA5BE5E8A43831BC35BCBA1264281C3F81E
E3CEBD75F4E07AF7915B5D472DD0429B94B7DB2B75070ABD913D9EA16680F06A
B6EA1B92948A0C7FAF3792436947FEED064E3629AE84AE978D5D8E884C4714DC
73BC08E316E695C5BAFFA2B7D1796E8E783BB2C3DE916D166417E22628C46084
8C4FFAFADF7C92B3008DCC371AD324BE6086CEBF7923D98C9F5E35752754F0AD
44066F31DAAF1A49DA51BEF3BE> |-
/i <1C60D8A8C9B08A9591D1BF6F045EB01A40BD589D128A02EAB455245FB2C3
98DEEFBD6EB95DFFD36DB798FA9C51FF8F5190CB6045559E97B928184B1CD5D7
7E8B41392D6232AFDBB9080E26290913DB4018F5783B3A1B36D92BF75A3C74E7
E68B39A5F9B6B4E22B0223FAEA3ADC84DAF35A5F682BE7D21A9355CCE46AF3E8
2F956851D7B42E06DB3946E9663075EBF3425AC9F71FC2FF9EA532948B3FBFAC
0FDDD7DD7C8CA51AF41E98AF10C8E840C60A126C9E4461FC454B> |-
/l <1C60D8A8C9B08A956720AEF9304073026CF99715F2C53175B8976680EDC9
717719E9A06ADC533B3545518EC445A9C870B4DB412010CF90FA4CBA220D1040
D982566F3477F0CAA892929A57E20530F45E92AAB72A28FB4B1335DBC0B74FFB
10242E1C49E47C7737A6DFD14A4DC07E0ED256078CE8DD79508F637B1F24CD8B
201F41E88F9CD292B70617> |-
/n <1C60D8A8C9B08A95E7230E17B0D3836FA5D4386A668849C637098B982EF0
18A659BAB8E8D8F2664538E7949784CFEE1FB12EB60BE9B93FFDD8FEC66F7FF5
BA109B6225D59A412BEE022808793BB39DCA031C6C0FF2B41FF05D5372E6B373
D5A647D58CECF3A8347081881DEEE4F9F59BA7092759B214C38D2E4854ABB313
72AC7C6B2C85FDFD3F11982B3B565BA18950600245D47479B02CC1B8C3B73C5B
7DAA5F155CFEA44257D1BAC79E2730D4BA8826DC383CA61ED5C91B5E48702122
E7A5F6F53B484575DCD9ACE04838C95928706F0EEABFB18D939C04DBB92FA6C1
E163E0118DB7F31679> |-
/r <1C60D8A8C9B08A95A71624D8C411AB2CB1544ECE46FD1CBD606C5D6F13D3
500F1BCEBB5B53666D75BA01A85D969CA4D2A5021926D3F7542261D14F5DE324
F4CDCF36A4198327F770E34202224191BE3B077517109DEA65BDB2F8E512AF3A
E7BAF659C2B9CDDEA705206BAEBEFA39B649FF8084693F4D34F4B9114507085A
0672ECEB85E29DF8CE86256BE51E80F921C6C91632BA4E22FA438C32EF1A5DC1
218A08CEB09749801D796669E7A21591CC37DDD5BE44DDCEF85AE3> |-
/s <1C60D8A8C9B08A95A3CE2FB7798456194A89B0DCD34B303F5B9F2902BFD0
0EC75E45AFA6DE88DF7BC99A9FAD90B2FCA4DDD91162396F44ECC902201F301D
7D64C92F95AAD3E690B8CB13711D90B7B213FFC453BF4494EDCB128E2A2F1D47
58B3B46742CA1FDEEBE9BDB6042B85DD777F7033AD22B647D1950C1669BF7DBA
BBB5B109CE10410EBA8D61BD227FA9B196128DC144B3C1522C8581E76CDD2152
87D2C95153091AE573D1> |-
/t <1C60D8A8C9B08A9589CB49B41630CF29923029D199184B58B00D9A93B350
170F805126A0702EA26CD5F49B077BCE4146F87010F783EC05C03A57EBD99FD9
2779C79B0D1882B9F9F7480773CDB4D0C66082C6EA1C92CF437260EA3F77380D
AEEE955975FF16F44F4B75EDB56A153DA9401ECA6BB170D9A6B70DBCE1F8E0DC
FEDC1FDE407EF1AC0FDAE9E8BB3036F3AC122497> |-
/z <1C60D8A8C9B08A95DDE96E9E71BA7253B10AA4ADEC0716DA872D5D6AA23F
E9F597235FB05B702C7F7D9BE82A4A218C1F91F27BB3BF74EE75A545289C8D09
2C0F9712D93B35ED5926FC71FB09DEDB38E4E5DCE64915A0FF3750F8B1995374
FF963204047F06FA8839DA1247C3A2CC3511021B70E1FF8F2AE1094D6E6F4A8C
88EBB5A0638910550EB3CEB68F38862F0B848AEFD320F222B714337204F44348
049BABD134D8B645EE59E32BCF9F1DE963B8FACAF9067DD19302943619C45C47
7DD8DC6AAD69108CA06C5A1475A5BA99D07A81663FE481EE3E37CAAE18556828> |-
systemdict /gcheck known {setglobal} if end {end} if
end
YEJRQP+CMMI8 /Encoding get
dup 58 /period put
dup 59 /comma put
dup 62 /greater put
dup 77 /M put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 122 /z put
pop
%ADOEndSubsetFont
/YEJRQP+CMMI8*1 
[58{/.notdef}rp /period /comma 2{/.notdef}rp /greater 4{/.notdef}rp /C 9{/.notdef}rp 
/M 2{/.notdef}rp /P 16{/.notdef}rp /a 2{/.notdef}rp /d /e 
/f 2{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 3{/.notdef}rp 
/r /s /t 5{/.notdef}rp /z 133{/.notdef}rp]
YEJRQP+CMMI8 nf
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
339.989 114.334 mo
(M)sh
%ADOBeginSubsetFont: XHFAAA+CMSY8 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /XHFAAA+CMSY8 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.035 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 195 /arrowleft put
def
/UniqueID 5000818 def
/FontBBox {-30 -955 1185 779} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-24 0 683 704] def
/OtherBlues [-126 -118] def
/BlueScale 0.039625 def
/StdHW [46] def
/StdVW [89] def
/StemSnapH [46 61] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/arrowleft <1C60D8A8C9B08A9535EEA1D3C59B7EE8167D7A433B7795339B82
1163B36D2785D28BC13BA4691E26750BE198850804E427D8D9B0C25EA9482DFA
A38000B99F2324BB625B9767D2361EB2B67FDA36E13A6E1E5B7CE7AEC48F1293
88679D10E433F43C9C42DA566703A9FC220D3634B072D053D536E54A96FAF72A
464BFC> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/YEJRQQ+CMSY8 /XHFAAA+CMSY8 findfont ct_VMDictPut
/YEJRQQ+CMSY8*1 
[195{/.notdef}rp /arrowleft 60{/.notdef}rp]
YEJRQQ+CMSY8 nf
YEJRQQ+CMSY8*1 [7.97 0 0 -7.97 0 0 ]msf
351.323 114.334 mo
(\303)sh
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
362.144 114.334 mo
(findCandidateClassPairs)
[4.94135 2.88516 5.14066 4.35959 6.59122 4.49503 5.14069 4.35959 2.88513 4.35956 4.49506 3.06049 
3.92917 6.59921 2.62213 4.49506 3.91324 3.91324 6.5513 4.49506 2.88513 4.0488 0 ]xsh
%ADOBeginSubsetFont: VIDAAA+CMR8 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /VIDAAA+CMR8 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
def
/UniqueID 5000791 def
/FontBBox {-36 -250 1070 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 0 683 704 431 446 665 675] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [33] def
/StdVW [76] def
/StemSnapH [28 33] def
/StemSnapV [76 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/parenleft <1C60D8A8C9B08A950C44F05CDCAE3556D5BFFD62B009B916EA3B
CE379FA899445528B346627042B4B978F02CC58419190BE3F5154222C5097C13
20AD20CE4B3B6E1BA9C2A9B45E682516AEED997C7277905D0E0C9C35C91EF42E
22B2A19E47421F996C4A84757FDCD9> |-
/parenright <1C60D8A8C9B08A950C44F05CDCAE3556D5BFFD62B009BCCEDB6
618D1DBA4E1B59E4D4D2EFB6FCB458A61EC0C17F9C9CAAF26CB39A69068C2FEB
C0237067110556BA02907DC81CDFFCECA1D23A0D3D124B6393F96D5EF0CC6918
BEF8FF38B9BA21B89C7FDCA41FAE319AB65FE04D68F5E> |-
/zero <1C60D8A8C9B08A95D352586DE315E2BB7C91B3CB4E5CC996813D11C6C
13D420AAA087FAB6A3E100536F206D79D0F7DF88FFE4DA0B00DD54B40020ABFA
D10B36B2BA804ABC48DA554E536341D792FB64EEFE39F5C1B51CC0F550FFB1D2
7D9936F4A4A5DECEAF0D3B5DF4D4EB0D1E61FAC775EB2816F8DAB6896A340ABC
A3A98E94D69639B105040A2B1799A11A82D0055CAEFD22984130C21CFD9> |-
/.notdef <1C60D8A8C9B08A9596FE72ACE143EF> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/YEJRQR+CMR8 /VIDAAA+CMR8 findfont ct_VMDictPut
/YEJRQR+CMR8*1 
[40{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero 207{/.notdef}rp]
YEJRQR+CMR8 nf
YEJRQR+CMR8*1 [7.97 0 0 -7.97 0 0 ]msf
462.236 114.334 mo
(\()sh
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
465.529 114.334 mo
(C;C)
[6.121 3.76181 0 ]xsh
YEJRQM+CMSY6*1 [5.978 0 0 -5.978 0 0 ]msf
482.02 111.521 mo
(0)sh
YEJRQR+CMR8*1 [7.97 0 0 -7.97 0 0 ]msf
484.704 114.334 mo
(\))sh
YEJRQI+NimbusRomNo9L-Medi*1 [7.97 0 0 -7.97 0 0 ]msf
339.989 123.3 mo
(while)
[5.75433 4.43134 2.21564 2.21567 0 ]xsh
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
360.138 123.3 mo
(M:size>)
[8.50403 2.35114 3.91324 2.88513 4.27194 6.28033 0 ]xsh
YEJRQR+CMR8*1 [7.97 0 0 -7.97 0 0 ]msf
397.295 123.3 mo
(0)sh
YEJRQI+NimbusRomNo9L-Medi*1 [7.97 0 0 -7.97 0 0 ]msf
403.522 123.3 mo
(do)
[4.4313 0 ]xsh
344.793 193.287 mo
344.793 125.99 li
@
YEJRQI+NimbusRomNo9L-Medi*1 [7.97 0 0 -7.97 0 0 ]msf
354.2 132.267 mo
(if)
[2.21567 0 ]xsh
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
361.063 132.267 mo
(M:size>)
[8.50403 2.35114 3.91324 2.88513 4.27194 6.28033 0 ]xsh
%ADOBeginSubsetFont: VIDAAA+CMR8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
YEJRQR+CMR8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B08A95D352586DE3151F73D080760F4072C70D020EFA88EA
0F309929E0C1BCC8EC8F7FDBEE4B0E2C4C76152DA2BAA2DA44AB41A567913983
670E36D005ED029A73DB21DCC5285836A93718DC3EDE9579CC5E30D6DE86A9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
YEJRQR+CMR8 /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/YEJRQR+CMR8*1 
[40{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 206{/.notdef}rp]
YEJRQR+CMR8 nf
YEJRQR+CMR8*1 [7.97 0 0 -7.97 0 0 ]msf
398.22 132.267 mo
(1)sh
YEJRQI+NimbusRomNo9L-Medi*1 [7.97 0 0 -7.97 0 0 ]msf
404.447 132.267 mo
(then)
[2.65396 4.4313 3.5387 0 ]xsh
359.004 143.325 mo
359.004 134.957 li
@
%ADOBeginSubsetFont: WBBBAA+CMMI8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
YEJRQP+CMMI8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B08A950350316B191F66319EA172996A0EA51DADB7AB15610C
CE57FF73533367197D9E028102F2FDE20CEA9AB3CD64243078EEAD3B1CBC6DAD
C9047BA5400DDE0F87458639E9A29FC85461BA23AE59EFBD816439E2C96B658E
A24A739E048E1CA6840DA1D10A2D21112019E35225962CBACA92E3C24240A759
35AC5E96A5531BE5FAD688A4649A39413D4648077B161986C65553EA533FEB1E
A3CBE2B24AE6596A9DF12527B9F6E146C088D2> |-
/N <1C60D8A8C9B08A9407D0E7DD5B8A858B2DCEED56D37CAA03ED8D51008FAA
6A52BA014F05E19C55D72E96223C03DA1D2357FFE15FA1DAE6CCC7C11A9847F4
133C84CB5778CBC1014CE05F3ABDC343DAD5B806CFD104849570DCA105EA16E9
B6B0700D75195C81C892965222298D04D93F7A89AB3F2E851CE5BA72EEE2008E
E9F52F4A1D0BA8E8A84265390EA2E376A218CAEB18A32556B078B30554E0E193
73BF0CBCF2FC1F51A891A94A1B7BE3F8E8E75E553A3CBA21DFF50A4333071397
C0152110820B8C432FEC3E5C588C4A70> |-
/c <1C60D8A8C9B08A95AF0C61ED10693C1C7BB4FDF87A1ADD41AA1432332500
7A0BA0A8AE03C88842AE6B6B51B250E072160232F1EAD6D4CB8308063451DE06
FB9C1A70F3CBD6C91A967E3FB192EC209E79A0E5502F6A4C08BD91C15D9A3A7B
876FE696D4DCD418658B42C603F698B1AF6792CFAAB90E17F5ED1199CEBEE8D8
201F> |-
/g <1C60D8A8C9B08A95D92FF3A1058A035034D62A823710ED664761FBE99D6C
E56BE2246A6679E646435A9FFC0E447ABE157499505271FC10DD508C4DA0234F
E98BB1621113228F2076604C20035F2FCD5F57CCF33E6B9EFF77AAF1DECA51D3
939D8DB41B7A51CDAA0FF0A016E7A517D08BECDA60E6B587A67E526BC0CA36A1
4FCE00CA60329490EB4373A6C1D79750D513B6784D477D710667EE3DBFEB82E4
8C18570144943428CD7D07C61319EB9DB43A3286631AC3C40BFF3D755F5F> |-
/k <1C60D8A8C9B08A95C4A2C2818A8C21B8A4D6A5FACC8E5D2F0428AA2419FF
5BC90EEDD833CDDD7E7F4DD6D84CF50754BCA9DF6646B5F24C1D7FF445AC9D23
7B6EB07F81C67EC0D4FBFE6DD8B856632A6FA1744CB323757B57996017AC7B84
BD599C8EC147A07920F2B80B6F53FF0C6AB67F7E4C49E45C2561AF82FB75DA60
4043BED50C5D8A9D4201A1DDEDAA8A5E8810CB219A0C1C38F218807ABB7811AD
FBD42A7624A98DE08C4770FD7939AE4DB7AFB6FE906B43D106C40E5D337DFEC4
A861B3DA127597469E7023DC8572C4EBF2D5504AB8A6DE3475A2BA07FC63BF8A
16A4EF50B82B9ACCB58F78C3AB47342F9D0C58F9A4BB356705FA6DED480ABF75
35A364DF637CFD553D> |-
/m <1C60D8A8C9B08A9421AB0EA3DDEFF188986F5F65440458B9745B56249441
47ABC919C849360D7B56A89DCC3A7392877E2FC80BA4E05A552DF31AAE6077A0
D8DA5A306ED489F65CE6907529180A3B5C55F1388D21E03DFBA09437CB499E94
24E20C14FF415CCC21EAFDA26536E6ED21801F346042D82A178F4E8D17F2A0AB
36CAF8AE81F6A6781A57C720021E0F6422E6F727B75BCA4612B97C8A2BDD8191
1E643AA457AEBC7F91F9EFB88B857CE5A81CC8370EEE9A33802F84F8504A3CCF
4A6EC8E5AD980883CCAD11048FDA75800C9F6C9AD290FDD9614044C8FCC61E37
57A72F589393149309575B71ECC470C61418161EC4543811E9DCB16225D79D8B
791589E6A1F8C72B233CE68277EB2EBD8DC5FDBBC51BCCB361C62DEB7644D1A9
8DE839485A57E1CDB69C1E2A7D0D458B77EB2B3D050CF249F98E7CC13A6C60A4
FA4CCC21785D> |-
/y <1C60D8A8C9B08A95D11C18B738413E33BE494BDA6CEC5400B319EC36C7FC
E84A360CAC393165AFAE430FB359BA9AA4C92A5C330688120071393EDF01C552
6397C22A477AF8B4E4E29B9D8B882B410524C7CEF70779AC31DBA3855E0CC3F6
1350AD28C3A7B7A57BABE169020394E77A0A1801FA29280B755708F7868D5398
CCE0F4400CC95A84B24309168E6114D6D99741F97DA799D69CE06E8A0DFD89D1
1F5FB77277B95942651CFEA1707C1BEED7F337E02CDA9872BA53891CB9591A94
566BA3B798967879432BF2DA2740F595EFF40E785A1A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
YEJRQP+CMMI8 /Encoding get
dup 66 /B put
dup 78 /N put
dup 99 /c put
dup 103 /g put
dup 107 /k put
dup 109 /m put
dup 121 /y put
pop
%ADOEndSubsetFont
/YEJRQP+CMMI8*1 
[58{/.notdef}rp /period /comma 2{/.notdef}rp /greater 3{/.notdef}rp /B /C 
9{/.notdef}rp /M /N /.notdef /P 16{/.notdef}rp /a /.notdef 
/c /d /e /f /g /.notdef /i /.notdef 
/k /l /m /n 3{/.notdef}rp /r /s /t 
4{/.notdef}rp /y /z 133{/.notdef}rp]
YEJRQP+CMMI8 nf
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
368.411 140.934 mo
(M)sh
YEJRQQ+CMSY8*1 [7.97 0 0 -7.97 0 0 ]msf
379.746 140.934 mo
(\303)sh
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
390.566 140.934 mo
(refineByPackageNames)
[4.0488 3.92917 4.94138 2.88513 5.14069 3.92917 6.78244 4.46313 6.5513 4.49506 3.66626 4.62253 
4.49506 4.3197 3.9292 7.56354 4.49506 7.49182 3.92917 0 ]xsh
YEJRQR+CMR8*1 [7.97 0 0 -7.97 0 0 ]msf
486.177 140.934 mo
(\()sh
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
489.471 140.934 mo
(M)sh
YEJRQR+CMR8*1 [7.97 0 0 -7.97 0 0 ]msf
498.452 140.934 mo
(\))sh
359.203 143.126 mo
363.188 143.126 li
@
YEJRQI+NimbusRomNo9L-Medi*1 [7.97 0 0 -7.97 0 0 ]msf
354.2 152.686 mo
(if)
[2.21567 0 ]xsh
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
361.063 152.686 mo
(M:size)
[8.50403 2.35114 3.91324 2.88513 4.27194 0 ]xsh
%ADOBeginSubsetFont: VIDAAA+CMR8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
YEJRQR+CMR8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/equal <1C60D8A8C9B08A953C5C2645FEB08D75A07C9DD66D4F417D3847F1D8
5F03D432DA62530330D9FCC4BF6E106019D2AB021D1F5EDEA9E0B3519B03E325
FC9B56C28E3136593C08055EA6318DD840BD19C2EBED98C886> |-
systemdict /gcheck known {setglobal} if end {end} if
end
YEJRQR+CMR8 /Encoding get
dup 61 /equal put
pop
%ADOEndSubsetFont
/YEJRQR+CMR8*1 
[40{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 11{/.notdef}rp /equal 
194{/.notdef}rp]
YEJRQR+CMR8 nf
YEJRQR+CMR8*1 [7.97 0 0 -7.97 0 0 ]msf
389.282 152.686 mo
(==1)
[6.58325 8.93439 0 ]xsh
YEJRQI+NimbusRomNo9L-Medi*1 [7.97 0 0 -7.97 0 0 ]msf
411.034 152.686 mo
(then)
[2.65396 4.4313 3.5387 0 ]xsh
359.004 181.678 mo
359.004 155.376 li
@
%ADOBeginSubsetFont: WBBBAA+CMMI8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
YEJRQP+CMMI8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o <1C60D8A8C9B08A95D43EDF65A6FEF8D8A2A2AD68965818A1A3337FAA66B8
9E5DCCA56080F6068F4E8AEA13C5C8A59A48915F1C814BD55B852467DCA316ED
81D75B69379861A8842296CB2BFF7E422351DB878510A061BD256C081CE4D41C
7D4405FF2FED015D3F3CF4E81437> |-
/v <1C60D8A8C9B08A95D65B270E6A66A083910D8991FB0BAADCA00A51242C21
AD2E0D3885F9C44C7482466F708A3316924D1CA68A8C979FE0283E228C403612
AC64C974CB39DB11A8CFCC58EA2AF32AB16704B79818C428934F4B5AE14165E1
85DFC699D3F134FDB4F0E71AC61CD8D84F512E9B8854B4E028623316881AF5C8
60A26D2157CE02B86A52B322BB9008A6C99F7F24A5BA22> |-
systemdict /gcheck known {setglobal} if end {end} if
end
YEJRQP+CMMI8 /Encoding get
dup 111 /o put
dup 118 /v put
pop
%ADOEndSubsetFont
/YEJRQP+CMMI8*1 
[58{/.notdef}rp /period /comma 2{/.notdef}rp /greater 3{/.notdef}rp /B /C 
9{/.notdef}rp /M /N /.notdef /P 16{/.notdef}rp /a /.notdef 
/c /d /e /f /g /.notdef /i /.notdef 
/k /l /m /n /o 2{/.notdef}rp /r /s 
/t /.notdef /v 2{/.notdef}rp /y /z 133{/.notdef}rp]
YEJRQP+CMMI8 nf
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
368.411 161.354 mo
(P:add)
[5.60287 2.35114 4.49506 4.35956 0 ]xsh
%ADOBeginSubsetFont: VIDAAA+CMR8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
YEJRQR+CMR8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/bracketleft <1C60D8A8C9B08A956F7E0F548729E1324E1F96A5A864A1CE91
3D3796EE4D63AD7F2FA2D7E250BD718837D29B4C6E12B77C98> |-
/bracketright <1C60D8A8C9B08A956F7E0F548729E1324E1F96A5A864A1CE9
13D370BF9480F093BBF2E71667E9E4A4339CC1FA7856FCFCA79> |-
systemdict /gcheck known {setglobal} if end {end} if
end
YEJRQR+CMR8 /Encoding get
dup 91 /bracketleft put
dup 93 /bracketright put
pop
%ADOEndSubsetFont
/YEJRQR+CMR8*1 
[40{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 11{/.notdef}rp /equal 
29{/.notdef}rp /bracketleft /.notdef /bracketright 162{/.notdef}rp]
YEJRQR+CMR8 nf
YEJRQR+CMR8*1 [7.97 0 0 -7.97 0 0 ]msf
389.581 161.354 mo
(\()sh
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
392.874 161.354 mo
(M)sh
YEJRQR+CMR8*1 [7.97 0 0 -7.97 0 0 ]msf
401.855 161.354 mo
(\))sh
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
368.412 170.32 mo
(C:remove)
[6.121 2.35114 4.05676 3.92917 7.49182 4.09665 4.39941 0 ]xsh
YEJRQR+CMR8*1 [7.97 0 0 -7.97 0 0 ]msf
404.798 170.32 mo
(\()sh
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
408.092 170.32 mo
(M)sh
YEJRQR+CMR8*1 [7.97 0 0 -7.97 0 0 ]msf
417.073 170.32 mo
([0])
[2.35114 4.23212 0 ]xsh
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
426.012 170.32 mo
(:c)
[2.35114 0 ]xsh
YEJRQR+CMR8*1 [7.97 0 0 -7.97 0 0 ]msf
432.032 170.32 mo
(\))sh
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
368.411 179.286 mo
(C)sh
YEJRQM+CMSY6*1 [5.978 0 0 -5.978 0 0 ]msf
375.01 176.474 mo
(0)sh
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
377.695 179.286 mo
(:remove)
[2.35114 4.0488 3.92917 7.49182 4.09665 4.40738 0 ]xsh
YEJRQR+CMR8*1 [7.97 0 0 -7.97 0 0 ]msf
407.953 179.286 mo
(\()sh
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
411.246 179.286 mo
(M)sh
YEJRQR+CMR8*1 [7.97 0 0 -7.97 0 0 ]msf
420.228 179.286 mo
([0])
[2.35114 4.23212 0 ]xsh
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
429.167 179.286 mo
(:c)
[2.35114 0 ]xsh
YEJRQM+CMSY6*1 [5.978 0 0 -5.978 0 0 ]msf
435.187 176.474 mo
(0)sh
YEJRQR+CMR8*1 [7.97 0 0 -7.97 0 0 ]msf
437.871 179.286 mo
(\))sh
359.203 181.478 mo
363.188 181.478 li
@
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
354.2 190.896 mo
(M)sh
YEJRQQ+CMSY8*1 [7.97 0 0 -7.97 0 0 ]msf
365.534 190.896 mo
(\303)sh
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
376.355 190.896 mo
(findCandidateClassPairs)
[4.94135 2.88516 5.14066 4.35959 6.59122 4.49503 5.14069 4.35959 2.88513 4.35956 4.49506 3.06049 
3.92917 6.59921 2.62213 4.49506 3.91324 3.91324 6.5513 4.49506 2.88513 4.0488 0 ]xsh
YEJRQR+CMR8*1 [7.97 0 0 -7.97 0 0 ]msf
476.447 190.896 mo
(\()sh
YEJRQP+CMMI8*1 [7.97 0 0 -7.97 0 0 ]msf
479.74 190.896 mo
(C;C)
[6.121 3.76181 0 ]xsh
YEJRQM+CMSY6*1 [5.978 0 0 -5.978 0 0 ]msf
496.231 188.083 mo
(0)sh
YEJRQR+CMR8*1 [7.97 0 0 -7.97 0 0 ]msf
498.915 190.896 mo
(\))sh
344.992 193.087 mo
348.977 193.087 li
@
YEJRQI+NimbusRomNo9L-Medi*1 [7.97 0 0 -7.97 0 0 ]msf
325.778 203.644 mo
(end)
[3.5387 4.4313 0 ]xsh
316.812 208.525 mo
555.915 208.525 li
@
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UGXAAA+NimbusRomNo9L-Medi AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
YEJRQI+NimbusRomNo9L-Medi dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7A73DC524371C3B3C004F1EF6620B304256306A6A0A5762
AB030A5B5760479101466BB995E20158F149E6FDC3E029D4DC73B72D7AD0739E
2501D144435CED231DC762E298F8A6A32E386057A36D7B3D6E2C3ADF2A7194B1
A5F418C97BE1E34F91FB8A35F20B990141E7EFE791C972A8> |-
/three <1C60D8A8C9B7A73D33A522A68C89F07381F759C08B76352920E51F0F
8D18FCEB9681C843B90F63025DC0880414F2D7D93AA97934014CD23413443E09
76FA212FA9F97D957B92D23C1FC0CF570D976A1207454274D9DE46AEDE47751C
76123DEF9BB8F05A0410B446B565B57B08644D6020154F60616734B8844709C4
F429D35411FD56D5C6F4754ECCE65007A3690F0B711C193F41AB8054395F62E0
60921198> |-
/I <1C60D8A8C9B7361F7E0A3182AF0840CF1C57BBC49124C1EC6790FD6C750A
84B54872ED5DCB6E653E4613CDBC21596754FD7C6BA90BB6D8B7A860C20B7641
99AB7357886C5D542D> |-
/M <1C60D8A8C9B5D6EF3EDF823525D67884CFE5E6E2D79F528AEFD30B8C24F3
F84A353EB328441BFBAE386C2334F111D031C740693356DADDA62C1815C8D910
A43D21FE1312019BC32369117BA43F900FACF9D0C8E6A1E3B5E69EA1CA878962
F0DD93613312CC0C6EF96DA429093C1285F13F509BB821E55B44A0AA1CD034> |-
/P <1C60D8A8C9B7D8BE18D5D66A87CFFD1A7BF8CC4E0780AABA6495BC6AFC3D
DEB143438D4C1D9E5741A147EA9F06E240708A25754D91340662AA255C2B4E05
8E434BC187D37A0778EF3B4D2D5852798647A8B6C151319A56F0EAF863926AC6
DBCFC58026C6FDB20C34288D03C5FF921485DEE654376A07857D9EC3297059BB
470CC19143A2BF892120648DAF8DB6374D48A42C9C6B0582F45F7555B5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
YEJRQI+NimbusRomNo9L-Medi /Encoding get
dup 50 /two put
dup 51 /three put
dup 73 /I put
dup 77 /M put
dup 80 /P put
pop
%ADOEndSubsetFont
/YEJRQI+NimbusRomNo9L-Medi*1 
[46{/.notdef}rp /period 2{/.notdef}rp /one /two /three /four /.notdef 
/six 3{/.notdef}rp /colon 6{/.notdef}rp /A /.notdef /C /D 
/.notdef /F 2{/.notdef}rp /I 3{/.notdef}rp /M /.notdef /O 
/P /.notdef /R 14{/.notdef}rp /a /b /c /d 
/e /f /g /h /i 2{/.notdef}rp /l /m 
/n /o /p /.notdef /r /s /t /u 
/v /w 136{/.notdef}rp]
YEJRQI+NimbusRomNo9L-Medi nf
YEJRQI+NimbusRomNo9L-Medi*1 [11.955 0 0 -11.955 0 0 ]msf
316.812 241.101 mo
(4.2MappingAPIclasses)
[5.97751 2.98874 17.9206 11.2855 5.97751 6.64697 6.64697 3.32349 6.64697 8.96625 8.63153 7.30441 
7.63934 5.30801 3.32349 5.97751 4.65057 4.65057 5.30804 0 ]xsh
%ADOBeginSubsetFont: HJCBAA+NimbusRomNo9L-Regu AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
YEJRQJ+NimbusRomNo9L-Regu dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/quoteright <1C60D8A8C9B81F2C3563ACD6650DD362B964D01F0CCE6A6381E
7AF5ADF5753B3592425016EDBD8EC34B3257C151FCF802999CCB500CD6DE38CD
30C802D6639CEEB7878488445> |-
/five <1C60D8A8C9B7A73D33A88FEA12959A734E0957E304D49DC85E4BE1FA3
9EAB2AF48D0318F3CC26662E787C00C247C6E0112180BCE6759D50FF9BBD9846
DFA361CDEB2512314B6E62318760F370D90F648D279E929D53983BF8D2AC98EF
81CED8855AB0EC5338E13ECD1542C111649132984A10E95D5EFD7471329778D6
74DBEAC9048068A00D504E5675BFC58E3AC> |-
/nine <1C60D8A8C9B7A73DB9A4910DA0CCBBECA0DA04663E9B3882E1E5DEE14
3B742A9F817DD3446A24A057E418BF30AF27F7FAD2F66F70A1B6D5A1487A1537
6B8264A176D2D7FF0C65A50E510656A4AB729508AE86A12EB73D4241401D8434
142B04B784C0BD286955405980DDD9F84CE9AA41E73E5A393EE6E73ADE3D0674
26A> |-
/G <1C60D8A8C9B6079FE80B2D9587063A0F42FCF180C2C0D9DB89A2D8D27614
F3B775C2888E457B564DD121D768F26DDE098413D22B9A5F0CB2CD19AEDBFFAC
36A33330BDE6B90C658E0E9792E64DB94CF67C391D10BB06977C8574E10F3929
312E77FD1B9E2DD8E6968F0669B7B77DA5CCB2A388D224061BD5C50DA8D6A6F6
BF5A46DBF2EA09B29E7A07A6A0280473B616743851101D4FF591F24A214C14E5
593E25539926> |-
/L <1C60D8A8C9B7D8BE6A6D10833A58E10E35AAFF577B959C281B432F2033A3
778270B7BC2F94F72D8EF799737B2B47855DBABFD82810DF495FF107F9807477
33A863894E18FDBBE26BF9A4CCFBEC890F8084F442A884FC2F927A7A2864CE18
84EE963B829AA2B70A1A8A> |-
/z <1C60D8A8C9B77FE2B2232EA49D913A831C97B47563501A79DCA41E417E74
E20F3E3020C6B422D96B1171C7F6A868EEF4F80EC234E8C81C6D5907680692B3
D53F97E8CC04C61D64F59B524A639C52> |-
systemdict /gcheck known {setglobal} if end {end} if
end
YEJRQJ+NimbusRomNo9L-Regu /Encoding get
dup 39 /quoteright put
dup 53 /five put
dup 57 /nine put
dup 71 /G put
dup 76 /L put
dup 122 /z put
pop
%ADOEndSubsetFont
/YEJRQJ+NimbusRomNo9L-Regu*1 
[35{/.notdef}rp /numbersign 3{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma 
/hyphen /period /.notdef /zero /one /two /three /four 
/five /six 2{/.notdef}rp /nine /colon /semicolon 5{/.notdef}rp /A 
/.notdef /C 2{/.notdef}rp /F /G /.notdef /I /J 
/.notdef /L 2{/.notdef}rp /O /P 2{/.notdef}rp /S /T 
12{/.notdef}rp /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z 51{/.notdef}rp /fi 81{/.notdef}rp]
YEJRQJ+NimbusRomNo9L-Regu nf
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
325.778 254.052 mo
(Inthisstep,ourapproachminesmappingrelationsofAPIclasses.)
[2.98563 6.18655 2.49252 4.483 2.49255 5.19138 3.48785 2.49255 3.9809 4.483 4.05264 4.48297 
4.48303 4.68915 3.9809 4.483 4.483 2.9856 4.483 3.98093 3.9809 6.18652 6.97556 2.49255 
4.483 3.9809 5.19138 6.97556 3.9809 4.483 4.483 2.49255 4.48297 6.18655 2.98563 3.9809 
2.49255 3.9809 2.49255 2.49255 4.48297 4.48303 5.19138 4.483 4.68915 6.47345 4.98511 4.68915 
3.9809 2.49255 3.9809 3.48785 3.48785 3.9809 3.48785 0 ]xsh
316.812 264.513 mo
(Asde\256nedinSection3,mappingrelationsofAPIclassesareused)
[6.47345 5.81903 4.483 3.9809 4.98508 4.483 3.98093 6.81415 2.49255 6.81415 4.98511 3.9809 
3.9809 2.49255 2.49255 4.483 6.81415 4.483 4.59958 6.97552 3.9809 4.48303 4.48297 2.49255 
4.483 6.81418 2.9856 3.9809 2.49255 3.9809 2.49255 2.49255 4.483 4.483 5.82794 4.48303 
5.31677 6.47345 4.98508 5.31677 3.98093 2.49255 3.9809 3.48785 3.48779 3.9809 5.81903 3.9809 
2.9856 6.31207 4.48303 3.48785 3.9809 0 ]xsh
316.812 274.974 mo
(totranslatevariables.Consequently,ourapproachminesmapping)
[2.49255 6.99347 2.49255 2.98563 3.9809 4.483 3.48785 2.49252 3.98093 2.49252 6.50037 4.26782 
3.9809 2.98563 2.49252 3.98093 4.483 2.49255 3.9809 3.48785 5.83685 5.98038 4.483 4.483 
3.48785 3.9809 4.483 4.483 3.9809 4.483 2.49255 2.49255 3.90918 4.81473 4.483 4.483 
5.50504 3.98093 4.483 4.48297 2.98566 4.48297 3.9809 3.98093 7.00244 6.97556 2.49255 4.48297 
3.9809 5.99835 6.97552 3.9809 4.48303 4.48297 2.49255 4.48303 0 ]xsh
316.812 285.435 mo
(relationsofAPIclassesbasedonhowalignedclientcodedeclares)
[2.98563 3.9809 2.49255 3.9809 2.49255 2.49255 4.483 4.483 5.89969 4.483 5.40643 6.47345 
4.98511 5.40643 3.9809 2.49255 3.9809 3.48785 3.48782 3.98093 5.90866 4.483 3.9809 3.48785 
3.9809 6.89484 4.483 6.90384 4.48297 4.26782 8.88531 3.9809 2.49255 2.49255 4.48297 4.48303 
3.9809 6.90381 3.9809 2.49255 2.49255 3.9809 4.48303 4.91336 3.9809 4.483 4.48297 6.39276 
4.48303 3.9809 3.9809 2.49255 3.9809 2.9856 3.9809 0 ]xsh
316.812 295.895 mo
(variablessuchas\256eldsofalignedclasses,parametersofaligned)
[4.25885 3.98093 2.9856 2.49255 3.9809 4.483 2.49255 3.9809 6.72458 3.48785 4.483 3.9809 
7.71973 3.9809 6.73355 4.98508 3.98093 2.49252 4.483 6.72458 4.483 6.23129 3.98093 2.49252 
2.49255 4.483 4.483 3.9809 7.71973 3.98093 2.49252 3.98093 3.48782 3.48782 3.98093 3.48782 
5.73825 4.483 3.9809 2.98563 3.9809 6.97556 3.9809 2.49255 3.9809 2.9856 6.72461 4.48297 
6.22235 3.9809 2.49255 2.49255 4.48297 4.48303 3.9809 0 ]xsh
316.812 306.356 mo
(methodsandlocalvariablesofalignedmethods.Inparticular,for)
[6.97556 3.9809 2.49255 4.483 4.483 4.483 6.15076 3.9809 4.483 7.15488 2.49252 4.483 
3.98093 3.9809 5.16443 4.26779 3.98093 2.9856 2.49255 3.9809 4.483 2.49255 3.9809 6.15076 
4.483 5.65747 3.9809 2.49255 2.49255 4.483 4.483 3.9809 7.1459 6.97556 3.9809 2.49255 
4.48297 4.48303 4.48297 3.48785 6.31207 2.9856 7.15491 4.48297 3.9809 2.9856 2.49255 2.49255 
3.9809 4.48303 2.49255 3.9809 2.63593 5.00305 2.9856 4.48303 0 ]xsh
316.812 316.817 mo
(eachalignedclasspair)
[3.98093 3.9809 3.9809 7.46869 3.9809 2.49255 2.49255 4.483 4.483 3.9809 7.46869 3.9809 
2.49255 3.9809 3.48785 6.47351 4.483 3.98093 2.49252 0 ]xsh
%ADOBeginSubsetFont: ULKBAA+CMSY9 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /ULKBAA+CMSY9 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.035 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /arrowright put
dup 50 /element put
dup 104 /angbracketleft put
dup 105 /angbracketright put
def
/UniqueID 5000819 def
/FontBBox {-30 -958 1146 777} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 683 705] def
/OtherBlues [-125 -119] def
/BlueScale 0.04379 def
/StdHW [43] def
/StdVW [87] def
/StemSnapH [43 56] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
5 dict dup begin
/arrowright <1C60D8A8C9B08A94DF905AB1D510D11520F1114478B24BA60B8
6D55B48B7D984C365F60613922E2C34EE38C1B366BA8B850EA1E7FCA4E9373CC
39F1A4805B6F20F5747BBE99AAA8AABB1ACD7E66FE46191597B0B28565E6127F
603D2C465C4195F92F510EE2033EEAC5020C89A0655> |-
/element <1C60D8A8C9B08A94451A438CB58EBF747EB35FF71218F14FB1E525
44E1D3762EF20347D45A02E058FA742B1E8E0AD60C648D767DFB162487F9272A
415AF1403E4ABBE3DC6740FECC7FA378D3465FB09FFEFBEF69135AFB9D147C16
B21B42A2512576BC5C2908A932C43967C450E6C0F2A2DE14EF05> |-
/angbracketleft <1C60D8A8C9B08A9580C822583BC370487009D181CBA6916
EB04144E54323D7D9B520DB7151957B6407AE8EA8D87976D12BDBF6B99BE91AE
10CA0E6E2F5D467F38FAE475E369B57F0CEF79954F5D8B637C1487AFC0E69E75
D6F625E6D785F83BCCD4B729EE3> |-
/angbracketright <1C60D8A8C9B08A9580C822583BC370487009D181CBA6A2
D74A56F005EF88AF522A22205DF2D1A21C6D3C210EC1BB975CA3BE5350167BCF
A0D481063C8A9DAAB7AE07F0ECF1E65781A5740362D761891F55858B112E0526
2B882DB5BBDD5ADB8DD2C8C254> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/YEJRQS+CMSY9 /ULKBAA+CMSY9 findfont ct_VMDictPut
/YEJRQS+CMSY9*1 
[33{/.notdef}rp /arrowright 16{/.notdef}rp /element 53{/.notdef}rp /angbracketleft /angbracketright 150{/.notdef}rp]
YEJRQS+CMSY9 nf
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
402.956 316.817 mo
(h)sh
%ADOBeginSubsetFont: AXNBAA+CMMI9 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
YEJRQK+CMMI9 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B08A9573EBC19D9789FEFF11AAE636F5DF237793441F9
7654A4167D81F8AD8932BE8705ADCDC364740746E> |-
/comma <1C60D8A8C9B08A9573EBC19D97898EED5F271860A7EC2CC8B043D15E
3407FF67DBFA41AA6DB4D52B94DB994BA91A2EDC9430DDD89B0288AB42679626
D3435AFECBB33C3175EF408DC75819ABF2609B> |-
/E <1C60D8A8C9B08A9469B32D991A4DBED6B475920CF135157533956917A18F
5B8C776ED3C017343FC4987EB2903FFB748C4F8A6ED270965E5239073E11E1A7
0FBE1406ADDE30A13FA4695F58970788A78C7E7525B5BC4296B7339F1E74EBC8
F41786A9C899B6431EA4BA67F0ECB749598936747BDC6D3B3EC49ACDCCCA56DC
7ED4B9BD34632FE46646BD5467AFAA391B378A16AA34D071F9A9F85DAD4DD49D
BD5EC4F33D33FD5259DB54184C5FB5003CA4EA61085C8D353916EB2678284FD1
8DE05B9EFA86878D8E796677A614190F6E0B91CC3BBED3190C497F5A16BFC255
8F1E2DB4521E18BD3E0BA84E864EB8C854D149169FCDB54E51704B820FE424FB
E5BE59962EBE98F46F9B609F6E6CACEAC5D4C762B9> |-
/F <1C60D8A8C9B08A944EA723ED8682EAA3254C947F7777346B3449B9192E75
6F201489C8047A0E5B1E8D1A2FC4A21A88781FF35C2C074EC990DEDB0C9F31FF
85BD1D358342C148857418F1F43F9A8A3FFC8A74108A3AE12A14870FECD018E6
961117E9F2C82CD1721131B3E89E75798528E00D596982C2C72D36D2BA47A515
F3191615144E807263D6737748EA38DE47A25CBBA51231940E2CA893143D1F28
F968C38F41435E75522E1C620E57DEAC88D713950F73280A558716684CC385C7
F8F4ADAB4C50ADDBA0942023B32A88D26D15098D616C4466981FEA32F65AF387
07246AC7A37565C0CE2D89DDE72646461F6EFBE4F761D7B3BB8DB749C7108626
09310BF1CA48C3974EFD> |-
/G <1C60D8A8C9B08A9474FE31AB4EDCE19868302EADB57192C7AFD99DC8E0B1
499E6B5AF3622A6319FFFF32A3FD6A30EF71F3450BCAF0D69CC82E09000DDE21
E2F0ABD15A08F7CEF630BAB015EC269FE0BB8DEC72CD4ACA82C6EF1ED49110C3
6EF4FF81D74217348BA572DC2EEDAF91D9EF7FE53173213EDA37764E81BD5E8E
A026003F5A00B9EB59133B9AAE490D7C727F23F82492D03809083D2E2D4A2F1D
9D48BCBA99BB3BE03D852190C41D2FD32A10DFA59BB02ADC8FB17B350412827C
98BA6D641B0E487B2F37CBE5058470630741697F8252323A107A3154E2E6A4E5
1D8FF739DD21F2825D99308AA8DA75762D4A0BFCE1B00641CD7CA70522148042
A1840C60E5C2AD90> |-
/N <1C60D8A8C9B08A953C0CA4AEA8E82BA831B925F8617E9625FD670F62E769
CB59A7CF85CA836B81E143077E3D950FADB3CD7B63125BD922C10ACEC4031886
9D0A728EC96ECF17C256885C5755CEDB5D6ECEDDE449C4DEB207E92498F1D706
FB1194AA0A798ABEAF05072CAF3D76C54729CFA59AA2CD040AD2E77978FEE006
C2CB719DFAB88DD52E3F62E596C054E69AE92CE6E0453E77B693FFCC061C45C1
EDEF24C0B433EB3F9291735A5FA6D781A695BAC2A12E77B6BF868C8C01A42452
8B80630265F9AEE671DF13D3B237AD5D8148E86EB199E047AB8F918DE370FA65
202E38> |-
/P <1C60D8A8C9B08A944EABEACDBB26F14D29F8C2E3B0FE92CDC4E0183EB86B
701129FA8DBC127EA7E8E59D13E822D8322A49C98A92191BAF18B341F49778A8
F82A1B2715436403ACF81BB0836335E037689B6C059E005499302F740D29F002
223DDC8F5DC776F3841EC6F3C0142FEFC95F32615D04A0E9189E60E527E133FE
64BE35159EB7413095A33F7AECCF083657CA04EE912CABD0897E304B59EBFCDB
4D49C0C01775A51E0126D0330BC1BB88A476CC3E56C004FF77AC6BF87CE14D17
7020F5B1DD9D2FEFBCA0DE362714AB> |-
/R <1C60D8A8C9B08A946193CE3936FA7C581DCCED333CDD095796FACC2023D5
295A4739DF5DE324F9C3C04D918C1435E10B4B852EFF17E8B892B83635C09CC7
960BED995CCAA1415E334EDECF4CE917F8F2162EA9DF17202A01843D535A755A
52810266D9F36ACA4D3C5830E86518470CD7BB800B361C6A9F7BA383A4038B9D
8F00A832903F38B98740D45E27052F49994FF61F959A9F48CCF7104A87894AA9
CF1F2DF1574889087594BA69140246534428385468BE2DE81FF5B8B0D7DBE451
FCBC9838AC0D117B1DC8E016DED77E9B26AD2E82691263DF7871FF3FEAE70220
53CCDB6A4177962C927C90BDC867F9AAA3DBBCFAD00B5DB7D899CA8CD40A1881
F5A0BA70B67FEC0742329E2B3EBBFCB359E252C02D9597E4FBD5865C4BE992CE
C48AA1E3B643321056E906BDED2CA6DCA1D7A84B7E3DE5> |-
/V <1C60D8A8C9B08A95F632EA17632DB92A09466069BBE85A4B48CA2A2066C7
6157F816C58C709CE427984AA2B2DEB769F553809D46DB98C2D08F5369EF1DD0
C3047960E6A99F14A494E87F2AC1F7B5CD27E9E56F67DE28D9FEA1D8FC01DEA6
77873933740D7FEEB107890AB52CF65F83306EAFBDCBCCB56418E2FC255004D1
95C4CF21117A8C10168459E04C5817092824984F2A07018D646C252B8EBB5760
93928517BF7518B88B4EDA8D783A2EB17E2FFF2ED6> |-
/a <1C60D8A8C9B08A95C848EB4A807FE642A51CE1B64238D46A599939260731
5AD8CD9D8791C661350EDA3F28799D683C1058F98742AA28EA0D02A1F7D8D3E6
F9856EAA84749656E21D6D8449A30C0F803ED8A6B1990B432C0591A4FFF88E7D
37197524E0B8D3D07CB227780FF19E4E4CCF8BD5BD58D3BCF2F3890E384D0647
CCCFE7AC15E8EC9DA5743507E2E059A1493BEC2DF126EFDB728E33E3BB230A92
B36555D9527E03E23C9916BBC1259703EC3C736BF05EB7C1001BA6ADAC250FB4
0F87AF8AD645> |-
/c <1C60D8A8C9B08A95B1A2589E86CB405962E49D73F583F40070BFC4988F29
91C6E94BC928E975298B0CAAF59DFF1ACFA6E1BA6036CCA80174168566E21EE8
5FAFC74E91174C773EE49F8270E788AC033E548EBAFEE8DF2B968724EB3FE7B9
D3DEF0DF89BDD3FCD91DD52E704E1BF876DAA9675B67F0F40C780CD2D618332B> |-
/d <1C60D8A8C9B08A95CC3605E4BB9D544C1ADBBC9C128A4748ED615D8BC200
E22942FF6D96955553EF7F4C3F5AE67C56603BB56896815C414B4CC88E10F0CC
552D97D742B77F8BFD67500D7BCF169473D490C3AABDE27D75721BBF81DA1774
2856C766AC943CCE44AB0BD9CC3407AF64EFB61D8B874CDDC5AE556A2115B3A6
BF643349226F65F4C42F4C128F7A1CB998010ACAA9464B2BF8C75E9F947D7CD8
839F3A9DFB5F5EE656AD2D11AAE0B53444FB3FB5036AE2004F09AC7E5E611BC4
52097467620F0144AB0CBBFE8E605A8683E5B85EC3A8AFBA009449D2A80B6F4E
3A> |-
/e <1C60D8A8C9B08A95A62BCF28713AE32D576E64049DA97416283A144CF7B8
4FEB447BFC4B6A41F684EF1E02213BA5CB54001BC571157BF97DE86C80F9C351
02986165329C8CCCE48376AD61FA793BCED67443990F510A7B2FEB830728DCD7
3FF1314C5951F45B477F85A92B0E3B5424B25E18CEDFAD30324BF6364887E0C6
2206C2CBAFCFA5> |-
/f <1C60D8A8C9B08A95DE690AFB427F50F4C9A3CF3FDC25E2AE24468B24C2E3
718B1CE533D255CB00759DC2FD99F2C20E0494A0B57DA8082EEE03481286CDE9
E0483326CF2DF3480F52C8392B4A5C474C1EFF133630A55481B16A8F213F4A2A
D1A64E26BACAA19B9D0242343C1CE2AE9BB9C84AEC5BE78243CBDC4A9F0DF7A5
F24257384742678B7004F5E26BDB84EAF2B6B13FD78ED6EBE6197B49FDF34455
A258F80A16C477708EA0C179218F533A830757877AA939AA3C4B09058F> |-
/m <1C60D8A8C9B08A942F4D69BC89177CD255F0766B8CB955F4B00BF68EC1E3
9CE1F2DA714E0924AF3EEB90A23EBAC5E1792E3FF959573209A95F43C48399AA
EDD1F6D83CF9637025614875BBE0605263FA576FCEC6310FE39AD332BC4C6251
4BBD75AD4508154C7BE16895065B146F2A41544E4C4E182DAB186FC4211CDAC8
FC8A58FF0F3062F6D1470DE9B1FCFFE8EC2541A113D6D487BBC87C8EA07854F5
A52BABD3846E477244DCBCF26397F3E78E81E4752442D6F214DBE365D6F63C00
87B55F38F7241D3E711F3486533837A16B7EAA30DC5763CD0A658A2DB0E33357
AFED461FD2FA34D7F043B596836294D7361EB11D9889F7CFE944075D54038272
F34E29049CB23CE17E4FE0DED74F5A29C24CFE1A65925344632AA96A78DD73BE
9F2206820F1B2FF8F6D87E14D3BEB3F8FF5E50C678CC190980C7003A> |-
/n <1C60D8A8C9B08A95EEB286CBA9BEDB2C3E0733D95DD50E42CCD5C9E51CA8
E81AA2C72F336EA620BDCE35F9981D3613B289C684F5F500E68D2E0ADF6E9543
D93A5B11056C40598B1CEC1447163646828D110D573BE60F4F7AEF402F050846
76D7AFAFA34693BF090C762AFA14AC26247A77AEE5A37F2FC926B7A80DB6D367
52534A82F724AA2EC6DB5AD46AD78F81896DBC1AABF51EA73B883A6DF2465FE4
D1DCB372245E7678D87181090E8500B5A0F43A158F9CEB096E086E96526B3F4E
77D7497B9CE1E4B34930F663A107E75931FD4FD2C7CEB791D20185EFABFEBE5D
D02AAB2C86F83360> |-
/p <1C60D8A8C9B08A95D5FD21A9A31E61D2F954A0DB9A6D036135759450893E
2EF5CA3BDE7583524FBB27103C840AADF73C848591B4E205A88D5CB94660A85D
CD8DBF61B21A48A052751B05C0D36000015262D5D15F6BA224787EEE23CA39F4
F22FE607BE868BE86266597E476B4E531C2D802728158DD8367253E9FD536A99
A299576C0631B92851D62B954AF1919192D71F95733A1BCDCD131DEBB7A6C80E
052861DA4D48EB40A909080E4805D359A37C8E328A0EFF9B20D7944BBF2115D4
8FD5C37C23B3F1957DE5EAFDE42DFC112D3366A94C08A43AA81197EFEB48EFA9
D8626F3992FC1404CCE81DAFE0> |-
/r <1C60D8A8C9B08A95A9DC47FF4553764D6FD72FFC16D2347BC5303A0B9AE5
7023392AD987E5D9D22AAFDB2DC4DED678EA372442BE46883EDED1371887CC65
7F16D032244380C0C599A5AEE76EE6BBA3DD5B0BA1C4E652D7BCFE853299E5F1
6CADD192EE5B3EF57BB4FBC4DE2C76832F72C1D0C52D446CBB559810A0F77588
2DCDB11B1EE7ABC47D94F938E879EE15920E8B5E7B75CB98ACF3C02301F36DA5
D3A4DE24BCF9A9FAEAD04798864C4AC9F5CA9324B0> |-
/t <1C60D8A8C9B08A958C6C343E33A42767EF62C876C8A8CB4AAF4BD2AE7378
1B1C8AFC2FD8B24F95B17C68D3D9048246C5D11F32E1D5193234C20B3689730B
60A9D9E8F173F998BEB25351E569BAC8EA052E6F2A0BD7A781AC4B46293FA121
0E4AFA96BA125FEFB0EFEC3EEA6B45FC28C5BAFBDDD4421879FB80CCD6186000
669E6014B5DFB19A20D9EAEC9A> |-
/v <1C60D8A8C9B08A95DF860D11C194BB06D9FA38493F573ACB51384AAD20D9
75F90CE4DD37AF651032047842115C177F23190EAA7895CC977D01BCA1588FCF
FFA284ADEF697AFF4CDF77A8982530920B9D51C61820E2F68D45DF687E2886F4
3FD7201A8F815BB948500FDDF9CA7A4951108C1286EE6861B8F7B45CF92D49C8
179A2D3B1C478549BFEAB448ED454934176C735F5A> |-
/y <1C60D8A8C9B08A95D914B8DD618FAA684C2BBD8E293CB2392E903E5F6AC8
8BF23BE6853EC033377CBB7E19F9591AE3FA2158FB476CE3AF6A9D172945B795
A52EF556900100361D62304E5903184D7B6E666513822B94424D3612B9F3ABA7
93DE541AE65F44F1BD841B83427018699B5E60F7818B412CF8218BF277EDDB7F
F3379294AD9649D67A0EE84A06618B786F68AB1A4EAFC3235346C13608056E81
8E9B4F7ECD179FCB24A0746E803E7E56EC995BDE9F4C820016C3533E79BDDBFD
F3ABB51866066D112B3DFE99CD7862499B3511C3229896259C996434082AC7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
YEJRQK+CMMI9 /Encoding get
dup 58 /period put
dup 59 /comma put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 86 /V put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 118 /v put
dup 121 /y put
pop
%ADOEndSubsetFont
/YEJRQK+CMMI9*1 
[58{/.notdef}rp /period /comma 7{/.notdef}rp /C /.notdef /E /F 
/G 4{/.notdef}rp /L /M /N /.notdef /P /.notdef 
/R 3{/.notdef}rp /V 10{/.notdef}rp /a /.notdef /c /d 
/e /f 6{/.notdef}rp /m /n /.notdef /p /.notdef 
/r /.notdef /t /.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]
YEJRQK+CMMI9 nf
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
406.539 316.817 mo
(c)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
410.529 317.813 mo
(1)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
414.68 316.817 mo
(;c)
[4.08853 0 ]xsh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
422.765 317.813 mo
(2)sh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
426.916 316.817 mo
(i)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
430.5 316.817 mo
(,ourapproachanalyzeseach\256eld)
[5.40649 4.483 4.483 5.98026 3.9809 4.483 4.483 2.98563 4.483 3.9809 3.9809 7.46869 
3.9809 4.483 3.9809 2.49255 4.483 3.98093 3.9809 6.47351 3.9809 3.9809 3.9809 7.46869 
4.98511 3.9809 2.49255 0 ]xsh
316.812 327.278 mo
(pair)
[4.483 3.98093 2.49252 0 ]xsh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
333.349 327.278 mo
(h)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
336.932 327.278 mo
(f)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
341.405 328.274 mo
(1)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
345.556 327.278 mo
(;f)
[4.08853 0 ]xsh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
354.125 328.274 mo
(2)sh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
358.276 327.278 mo
(i)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
364.453 327.278 mo
(andconsiders)
[3.9809 4.483 7.07419 3.9809 4.483 4.483 3.48785 2.49252 4.483 3.98093 2.9856 0 
]xsh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
416.455 327.278 mo
(h)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
420.038 327.278 mo
(f)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
424.511 328.274 mo
(1)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
428.662 327.278 mo
(:type;f)
[2.55533 3.32642 4.85059 4.6265 4.28574 4.0975 0 ]xsh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
456.889 328.274 mo
(2)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
461.04 327.278 mo
(:type)
[2.55533 3.32642 4.85059 4.6265 0 ]xsh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
480.698 327.278 mo
(i)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
486.876 327.278 mo
(asoneminedmap-)
[3.9809 6.07904 4.48297 4.483 6.57208 6.97552 2.49255 4.48303 3.9809 7.07416 6.97552 3.98096 
4.48297 0 ]xsh
316.812 337.739 mo
(pingrelationofAPIclasseswhenthesimilaritybetween)
[4.483 2.49252 4.48303 6.73346 2.9856 3.98093 2.49252 3.98093 2.49252 2.49255 4.483 6.74243 
4.483 5.23608 6.47345 4.98511 5.24503 3.98093 2.49252 3.98093 3.48782 3.48785 3.9809 5.73831 
6.47345 4.483 3.9809 6.74243 2.49255 4.483 6.23138 3.48785 2.49252 6.97556 2.49255 2.49255 
3.9809 2.9856 2.49255 2.49255 6.74243 4.483 3.98093 2.49252 6.47345 3.98093 3.9809 0 
]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
521.888 337.739 mo
(f)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
526.361 338.735 mo
(1)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
530.512 337.739 mo
(:name)
[2.55536 5.5589 4.87756 8.1142 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
316.812 348.199 mo
(and)
[3.98093 4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
333.61 348.199 mo
(f)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
338.083 349.196 mo
(2)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
342.234 348.199 mo
(:name)
[2.55533 5.5589 4.87756 8.1142 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
371.488 348.199 mo
(isgreaterthan)
[2.49255 7.33426 4.483 2.9856 3.9809 3.98093 2.49252 3.98093 6.83203 2.49252 4.483 3.98093 
0 ]xsh
%ADOBeginSubsetFont: ELRBAA+NimbusRomNo9L-ReguItal AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
YEJRQN+NimbusRomNo9L-ReguItal dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B8707CABCFCF9DA0E740BAF14381B46E7EF43F488F487
2E9294321A54B0280> |-
/one <1C60D8A8C9B7A73DC549024B5C30F8D3AC760F18998A1E08F2975F4EDC
EB0D1D1C3CF71372090E6B7A8853DBD4B4B62EB203D8D8670260D25B2759E096
4CED4702F0B641F4B93B5BCF6B8DE422C28C22DC7F38462936FCB300A7EE200E
5341BEAFF68DD47F83D8F79DE689158FD662C643260353> |-
/three <1C60D8A8C9B7A73DCA6AA5C0618EF6441CB8261C25728D7D6C57A463
60790A4F1513CD3EF414DF9DA5896C7B8705249F55111ED8EFF84ABD6C150E56
C4B1864555D643F6570D306D4C47DC5C792E59B14C76F75F1E4B37A3A77BD31E
85A62CAE35D91EE3668CB5077EA32EF47B32F7B4266F3B15C3BE756635F81922
78D21B843C4069D7062F21E79582493E12BDE5038CC2E4D006591200D2E324D2
E983F0AC91D45B1F9A3DBE52A6F1ECC894007C> |-
/four <1C60D8A8C9B7A73DC54C6E60072326F069E16067ADE230DFDA130FDFB
0FD42CE7FB87159BED92F2B315DD5D33225011B26B856A26CB2897E381271649
32B189E8D763587344BE5> |-
/A <1C60D8A8C9B7D8BE6A40C975BB4D1E1B897A90FEA982578C089DE899F707
9788190140A356A0AADFC8C0C8904A0BC758EC37A7E995F76569FB539EEA6DFF
97CE11A88E51E66E7AF27F904EBD39FF18F5A4BCB132652B8178DFC581D1C65E
B9579C4D700DF0921A1BB71A4ED2DDB126F75DA9DBF8C4> |-
/P <1C60D8A8C9B7D8BE6A40C975083C7340CD6906ECF2E3CF1D49E1FDD49037
20EF71B3A78D8667F96783ADBE5D639A1A9294E478A05AB8697E20511C51636C
79CA58D9AC0ED2B24253F3883E4BFA7A7ED2FE6DBB0541A5A1AF05898322C2BF
61032DFB5A3199D8C2D78558FCCAC63830D93433F13102D03E9BD11B84EA92C1
E67DFCB7040B8DBDE8078B21DD19424F2DBFC8E85D438E028391F0884D790AB8> |-
/a <1C60D8A8C9B7A73DCEA80DF8A035E6052CC982C976E52805ECA17E96ED85
358DAEDA8137772CDA5D0D5F7C4275C1A5E4026261E2C3B38D308543B0E1AE71
3B517F7E54F0F5CF956209F612780761A2B71144A88A7046841A56B11D93FFB7
995D2EA00522953A8040D863497047DA14446BB2067ECCA8ED4D837CAE01ACE7
B46971340ABC15D79E32B004512A5DC5059BB56C2E7C594AD5A68E2BF959502E
9DADE6C7214B6F03755BE1A81CA309BC3F4F893EA7111D43D400FD21B368B73A
A2E3205E67> |-
/f <1C60D8A8C9B854D0F80E05032B288E000DCD85BA04E3639668EA8CF33314
967F215DCF3373594481AA451E5349F27E4E02B7A9E0C010FA198738E851F805
AD4075CE4AA02ACAF4D254E4DDB04C264E0C215EB3CF2E44607705BCCF314DA0
049C748EAC09831A6CEFB594251F06374C6655B3BAEBEC9D05EAD5F04F3C23B6
AEAB01831E482C6786E731A0746FA5EDD3EFF368BCED6F94D69606B73365F8A0
6E71> |-
/g <1C60D8A8C9B7A73DB58EA1BABB86F5673E58177B13D1689217184648646A
C0CE49A237A8F103AFCDB5EC056581454943D22FAB127F5C1E1E8B9D6E918057
E41E57DC52684AD5331B647C59B7E247B500C8501462047450C98D0B8241197F
7468EEABB23B6BE6A7CBE76395CF8839E2B115BC98F6FA00D46DDFE6768E493A
3C0344DC7EA7D3699B1F8782B909183D69E072358DA2A49D119AC7EDA36AC077
37F930D0C75C1F1BCB60AF1EAF20DDD5E35335A0BC9EC8E0CE2E4A3CD6851439
F3DA9D850AF5975B35E3C0F98171603731A62B92C94E104B5375FD3CA4280A4C
C5653EBF95230E8F334DA161BDC71F51D2AC3CF2759DA1D1B2BF0F0FB9FBB3DB
4CA56B5DDF9EBC89C937B97D72AE185FFA5EE4F1CC1FCB4460BBA25A82EF5CF4
F8653AA4B26755A26D8BF3E9248CABA6BFFD30E08F> |-
/h <1C60D8A8C9B7A73DCCC2CF5CE401F1233C4539879FDA2315CCD592E8AAFB
2E4918D29F3424D89DEAEFF064A3D792A1490EDBA1C4ABF8210DC7A773E30DF8
24690DCED1024C9B211BDB612AA25F25249E3EF8B551D98FEFC1AAC679EFC32E
B47DBD03361A2D604292AC71EFDCC2750031E6E0FD4D4CE6DFB4E59CC1F5285E
96D5FE62789C95EEA8C79C8EEBD27583EEFA9E932B8E1887683720948D58687C
65BD460CE5031A57CDFE0332B5120E> |-
/i <1C60D8A8C9B854D083AFE4C873AEC1E7FDB9EE859797A45455327B9BDB70
760240E8ACF666DC8D59275277C3F3C252A46BC2A92D5BC509D2A0906FF0489A
6A2863B6C52E12014E0BA262008BDC08AE94865A26FD90663B8FE13B433E5668
3A79BB00550E9151E21E522B2D2B5D71B39AD827ED501C13C2B901FC1670356A
6C436566AF4075B7579EA6C70A85F6C747F08B> |-
/m <1C60D8A8C9B6079F178B521F79AB859140E406AE0C2925608732DA7C451C
154E79810E39F6B5B32562F5C747F43EAB8EE9FB3FB6AA02E6DDB5B640F73FD8
7203F2815F23DF37ED7B3C3D8C139F5494C5B589021482C0B49E3A45AD6BB8E3
CAD535C1815C616845611D52745E9E3A7F20A4EBDE118920053905EBB7FD273F
CEE0F7C3154EDD9B7922A8B0AA076EDCD5457FC5F23E58EA02963DE27C4A3BF9
950FE2FA1EA72709B44D0C0F0BF575E839D8A98FDCD76D9969A59CC799256EFB
31C8671E64FA561CA954E7B20BA848D7C14B1A853B062E6E8D2D0191BA5377EA
F94B1122C09634F15B> |-
/n <1C60D8A8C9B7A73DCCC2CF5CE401F1233B06D0FCF55836E538C58E814EEA
E6634460655FD290AE7488CE32E814759E0AF2C2482D7ABBAB2541CE23A2082E
8ED41FB38E252A6CF76E3507FBCD76F6FFBE5683A3516B6ED6647539D8D688FE
36EA596FC13D794F6D3DDE908BBDA3068338531638CB57995C08C38697724D14
8D71913F92B471AD67329A2D4B1A2188889C10BEBFE0E915562767D4E2D95C76
B539DE865FC66F5538DC89EE812915B3922908D3579330F65A44> |-
/o <1C60D8A8C9B7A73DCEB4B8D8F0C1B91E5FCECE20C383B5A3A04C5E300C44
73F1758AD6EBD68AF3342250ECA77E8264601968E8BB73C8BCE96E285325E4E5
F9A5427A9867F5E01A213534416D8FA7BD45D53E120FBAFC16324C55CE0B8ECC
A30F4FDCBBCADFF556EA> |-
/p <1C60D8A8C9B7A73DCE8ADACD4C270B1786D169F3E20E591ACA0CE0F9229D
EE17149E57EA8C388BBBF5AE30EF5200D4A0F04C5FB938FADE53A36AA852E300
38E1FA465FEEE81384F5AC9A894FCBDF86FEF2356D791085E73D3BAC227D40C3
D40A0ABF220A13538E735EB867A89FE7F997755F8A45044BE6AD11D1FCB29BDB
76E0B5A99487831F30A755181A44C79BEC9E7A2E620A0A8F0F68B5D6A210CFBB
2A4B6BC0BD97267D664E7703B3442231F4316A57450D866947A8A78B101E2823
43E74357967E784FE808D25ACE69CE8C0752F22F39F56CA80C2FD357DE0B> |-
/r <1C60D8A8C9B7361F7E31A316A5441472A3D5F0BBE187EC79A442CBC96388
45592AF85C4E4C7D40F5739783C28CBA686CB4EDBADD3DF864045E1617F9EF64
EF28B75F06BB7DB3735A4D1B8449A08901B30CEFEBABE09F310BAA3CE48486D6
4D9403EE527234C18BDC9B0C77031AC2437A48321C> |-
/s <1C60D8A8C9B7361F8BB5EB474F071A14F6886A6A71311E11AE8DF8D62DC3
BA85E254787E7DE96602C8D214E85040DD2CD59A86CF2994C7DBEBE3497C89DE
48A5193513118D9558DD3565C61BBDDA73580B36F71CB4E32D78B6DB4E5ED4D1
267100D1262D415027F043F562CDF11A5D7AA04FB2DDF5C58D3789142B59E5C7
AE5B5B52E6A06FCCAD6BA1E60EEC10FDF0D840DA95B7FF8BF26E189AC01FA90D
B18C7828CCC68A7BB8906A516C79B12ED0B2A14494F039D484536482D2FB3F95
00> |-
/t <1C60D8A8C9B854D083A90EFBC938A92D26787E8A2985BDD732F5F3979320
973AE05469589D37F6710993FA8C4F22B07BA5CDB62E8203EBC0D0A817CECF14
3F719975302FFF456E372C07C4540089BA89691B08F22F6B687DBA322D090528
19E08BEFEC85E919D4B4433340CE06E3E3F5538367ACD04AC81520E078F70831
E1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
YEJRQN+NimbusRomNo9L-ReguItal /Encoding get
dup 46 /period put
dup 49 /one put
dup 51 /three put
dup 52 /four put
dup 65 /A put
dup 80 /P put
dup 97 /a put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
pop
%ADOEndSubsetFont
/YEJRQN+NimbusRomNo9L-ReguItal*1 
[46{/.notdef}rp /period 2{/.notdef}rp /one /.notdef /three /four 12{/.notdef}rp 
/A 2{/.notdef}rp /D /E 2{/.notdef}rp /H /I 2{/.notdef}rp 
/L /M /.notdef /O /P /.notdef /R /S 
/T 10{/.notdef}rp /underscore /.notdef /a 4{/.notdef}rp /f /g 
/h /i 3{/.notdef}rp /m /n /o /p /.notdef 
/r /s /t 139{/.notdef}rp]
YEJRQN+NimbusRomNo9L-ReguItal nf
YEJRQN+NimbusRomNo9L-ReguItal*1 [8.966 0 0 -8.966 0 0 ]msf
429.35 348.199 mo
(SIM_THRESHOLD)
[4.483 2.9856 7.46863 4.483 4.98508 6.47348 5.47815 5.47815 4.483 6.47345 6.47345 4.98511 
0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
500.076 348.199 mo
(.Similarly,for)
[6.08792 4.98508 2.49255 6.97552 2.49255 2.49255 3.9809 2.9856 2.49255 3.90918 6.48242 2.9856 
4.48303 0 ]xsh
316.812 358.66 mo
(eachalignedmethodpair)
[3.9809 3.9809 3.98093 7.61212 3.98093 2.49252 2.49255 4.483 4.483 3.9809 7.61215 6.97556 
3.9809 2.49255 4.48297 4.48303 7.62109 4.483 3.9809 2.49255 0 ]xsh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
413.007 358.66 mo
(h)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
416.591 358.66 mo
(m)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
424.71 359.656 mo
(1)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
428.861 358.66 mo
(;m)
[4.08853 0 ]xsh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
441.075 359.656 mo
(2)sh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
445.226 358.66 mo
(i)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
448.81 358.66 mo
(,ourapproachanalyzeseach)
[5.59479 4.483 4.483 6.11475 3.9809 4.483 4.483 2.9856 4.483 3.98093 3.9809 7.61212 
3.98093 4.483 3.9809 2.49255 4.48297 3.9809 3.98096 6.62592 3.9809 3.9809 3.98096 0 
]xsh
316.812 369.121 mo
(localvariablepair)
[2.49255 4.483 3.9809 3.98093 4.19608 4.26782 3.9809 2.98563 2.49255 3.9809 4.483 2.49255 
5.67548 4.483 3.9809 2.49255 0 ]xsh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
381.952 369.121 mo
(h)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
385.536 369.121 mo
(var)
[4.78778 4.87756 0 ]xsh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
399.374 370.117 mo
(1)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
403.525 369.121 mo
(;var)
[4.08853 4.79675 4.87756 0 ]xsh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
421.458 370.117 mo
(2)sh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
425.61 369.121 mo
(i)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
430.897 369.121 mo
(andconsiders)
[3.9809 4.483 6.17758 3.9809 4.483 4.483 3.48785 2.49255 4.48297 3.98093 2.9856 0 
]xsh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
481.117 369.121 mo
(h)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
484.701 369.121 mo
(var)
[4.78778 4.87756 0 ]xsh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
498.539 370.117 mo
(1)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
502.69 369.121 mo
(:type;var)
[2.55533 3.32642 4.85056 4.62653 4.28571 4.25891 4.79675 4.87756 0 ]xsh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
540.45 370.117 mo
(2)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
544.601 369.121 mo
(:type)
[2.5553 3.32642 4.85059 4.62653 0 ]xsh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
564.259 369.121 mo
(i)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
316.812 379.582 mo
(asoneminedmappingrelationofAPIclasseswhenthesimilar-)
[3.98093 6.74249 4.483 4.483 7.24454 6.97552 2.49255 4.483 3.9809 7.73767 6.97556 3.9809 
4.483 4.483 2.49255 4.483 7.74661 2.98563 3.9809 2.49255 3.9809 2.49255 2.49255 4.48297 
7.73767 4.483 6.24924 6.47345 4.98511 6.24026 3.9809 2.49255 3.9809 3.48785 3.48782 3.98093 
6.74249 6.47348 4.48297 3.9809 7.74664 2.49255 4.48297 7.2356 3.48785 2.49255 6.97552 2.49255 
2.49255 3.9809 2.81525 0 ]xsh
316.812 390.042 mo
(itybetween)
[2.49255 2.49255 7.23557 4.483 3.9809 2.49255 6.47345 3.98093 3.9809 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
361.675 390.042 mo
(var)
[4.78778 4.87756 0 ]xsh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
375.513 391.039 mo
(1)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
379.664 390.042 mo
(:name)
[2.55533 5.5589 4.87756 8.1142 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
407.827 390.042 mo
(and)
[3.9809 4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
423.534 390.042 mo
(var)
[4.78778 4.87756 0 ]xsh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
437.372 391.039 mo
(2)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
441.523 390.042 mo
(:name)
[2.55533 5.5589 4.87756 8.1142 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
469.687 390.042 mo
(isgreaterthanathresh-)
[2.49255 6.24039 4.483 2.98563 3.9809 3.9809 2.49255 3.98093 5.74713 2.49255 4.48297 3.9809 
7.24457 6.73346 2.49255 4.48297 2.9856 3.98096 3.48779 4.48303 0 ]xsh
316.812 400.503 mo
(old.Also,ourapproachanalyzeseachparameterpair)
[4.483 2.49252 4.48303 9.91638 6.47345 2.49255 3.48785 4.48297 6.52725 4.483 4.483 6.86789 
3.9809 4.48303 4.48297 2.98563 4.483 3.9809 3.9809 8.35632 3.9809 4.48303 3.9809 2.49255 
4.48297 3.98093 3.9809 7.36118 3.9809 3.9809 3.9809 8.35632 4.483 3.9809 2.98563 3.9809 
6.97552 3.98093 2.49255 3.9809 6.86789 4.48297 3.98096 2.49255 0 ]xsh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
526.817 400.503 mo
(h)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
530.401 400.503 mo
(para)
[4.62653 4.87756 4.41132 0 ]xsh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
549.205 401.499 mo
(1)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
553.356 400.503 mo
(;)sh
316.812 410.964 mo
(para)
[4.6265 4.87756 4.41132 0 ]xsh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
335.616 411.96 mo
(2)sh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
339.767 410.964 mo
(i)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
346.112 410.964 mo
(of)
[4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
356.343 410.964 mo
(m)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
364.462 411.96 mo
(1)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
371.374 410.964 mo
(and)
[3.9809 4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
387.083 410.964 mo
(m)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
395.202 411.96 mo
(2)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
399.353 410.964 mo
(,andourapproachconsiders)
[5.12854 3.98093 4.483 7.24451 4.483 4.483 5.74716 3.9809 4.483 4.483 2.9856 4.483 
3.98093 3.9809 7.24451 3.98093 4.483 4.483 3.48782 2.49255 4.483 3.9809 2.98563 0 
]xsh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
507.159 410.964 mo
(h)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
510.742 410.964 mo
(para)
[4.62653 4.87756 4.41125 0 ]xsh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
529.547 411.96 mo
(1)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
533.698 410.964 mo
(:type;)
[2.5553 3.32642 4.85059 4.62653 4.28571 0 ]xsh
316.812 421.425 mo
(para)
[4.62653 4.87756 4.41132 0 ]xsh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
335.616 422.421 mo
(2)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
339.767 421.425 mo
(:type)
[2.55533 3.32642 4.85059 4.6265 0 ]xsh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
359.425 421.425 mo
(i)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
365.794 421.425 mo
(asoneminedmappingrelationofAPIclasseswhen)
[3.9809 6.2673 4.483 4.483 6.76935 6.97552 2.49255 4.483 3.9809 7.26248 6.97552 3.98093 
4.483 4.48297 2.49255 4.483 7.27142 2.98563 3.9809 2.49255 3.9809 2.49255 2.49255 4.483 
7.27142 4.483 5.76508 6.47345 4.98508 5.77405 3.98087 2.49255 3.98096 3.48779 3.48785 3.9809 
6.27631 6.47345 4.48297 3.9809 0 ]xsh
316.812 431.886 mo
(thesimilaritybetween)
[2.49255 4.48297 7.31628 3.48782 2.49255 6.97556 2.49255 2.49252 3.98093 2.9856 2.49255 2.49255 
7.81833 4.483 3.98093 2.49255 6.47345 3.9809 3.9809 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
402.032 431.886 mo
(para)
[4.62653 4.87756 4.41129 0 ]xsh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
420.836 432.882 mo
(1)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
424.987 431.886 mo
(:name)
[2.55533 5.5589 4.87756 8.1142 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
453.728 431.886 mo
(and)
[3.9809 4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
470.012 431.886 mo
(para)
[4.62653 4.87753 4.41132 0 ]xsh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
488.816 432.882 mo
(2)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
492.967 431.886 mo
(:name)
[2.55533 5.5589 4.87756 8.11417 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
521.708 431.886 mo
(isgreater)
[2.49255 6.82318 4.48303 2.9856 3.9809 3.9809 2.49255 3.9809 0 ]xsh
316.812 442.346 mo
(than)
[2.49255 4.48297 3.98093 0 ]xsh
YEJRQN+NimbusRomNo9L-ReguItal*1 [8.966 0 0 -8.966 0 0 ]msf
334.494 442.346 mo
(SIM_THRESHOLD)
[4.483 2.9856 7.46863 4.483 4.98508 6.47345 5.47818 5.47815 4.483 6.47345 6.47345 4.98511 
0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
405.22 442.346 mo
(.)sh
325.778 452.807 mo
(FortheexampleshowninSection2,ourapproachminesthe)
[4.85959 4.483 6.50027 2.49255 4.483 7.51352 3.85538 4.483 3.9809 6.97556 4.483 2.49255 
7.50452 3.48785 4.483 4.26782 6.47345 8.00662 2.49255 8.01563 4.98508 3.9809 3.98093 2.49252 
2.49255 4.483 8.01563 4.48297 6.09689 4.483 4.483 6.51822 3.9809 4.48297 4.48303 2.9856 
4.483 3.98093 3.9809 8.01556 6.97559 2.49255 4.48297 3.9809 7.01147 2.49255 4.48303 0 
]xsh
316.812 463.268 mo
(mappingrelationbetween)
[6.97556 3.9809 4.483 4.483 2.49255 4.483 6.17758 2.99457 3.9809 2.49255 3.98093 2.49252 
2.49255 4.483 6.18655 4.48297 3.98093 2.49255 6.47345 3.9809 3.98093 0 ]xsh
%ADOBeginSubsetFont: MZQAAA+NimbusMonL-Regu AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
YEJRQO+NimbusMonL-Regu dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/O <1C60D8A8C9B7C3C96E751C0EFCB9B702962B91E8CC8D6F9EC1F6ACE6C30A
E0F47EE5AABCA7B5CEB257E288548B68005B4E72782911993DFA82FA6EBC39A6
6E109D437279A0044E4A5CE28F78B465115710F3FB4AD53F44E5887AB460726D
01FBDC3A9E29> |-
/S <1C60D8A8C9B7C3C96E751C0EFCB9B74BF8812DD6966A079E5A2601D57119
EA4CA3F66D44A71F2B3CDDB5FF05E2E7EC9896C53520128D3B94CA85A254242C
6453C1643C88928F5B3655B609029C652C643DE57E7671416B0A1A113CA6E2B4
11281BF04F1D71DBCACC474E647DB9F9F5ECA5737CB4B4A4FCCDB8796FF83DA2
466F358CAF51AB13DF6EC6E3E1EF3508421A67D6D9C8FADD84246DB4DD19591C
09FFEC670081E44201C9B84582696D6D86E953EB984518E249F6999200ECB1AD
EA65BF2109554204C0C1B5B68757A9888C0A14FF830D9B09C992AAD01AD173E8
339925630EBF318A17F9B429AB9C3C6E8143C4633C3CA674670E58088F39ACE5
C441BC719C4E34> |-
/v <1C60D8A8C9B7C3C99EC15868FFF428F52917FDDA5D7FBEFB7BC1451E6B80
721BF0A0F3B82DF2A459F492F1E7BF577B7662014870450F668B50EB14AD4ACB
B74CBA0E63A222218D6A6A7F1D3456A604BECBBDEE9562CF5286CD4116BB510B
6C17> |-
/y <1C60D8A8C9B7C3C9EEB9D037A0D0ACE7F4258B49B1792FFD9114DB499F75
35DBFF657585ACDE2021C7C7510EE01C907845B38A8338A124A7983E59DA11D0
4CEE4AB95E1977D46ABC8962EADFAE9E82A54E2B955F9F930429A6DAB2D9306A
A5AA3560C06E93E7BEFD03B3659CE9C6B1BCE555ADA4F75CA8B93E122103A5A7
82A5C8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
YEJRQO+NimbusMonL-Regu /Encoding get
dup 79 /O put
dup 83 /S put
dup 118 /v put
dup 121 /y put
pop
%ADOEndSubsetFont
/YEJRQO+NimbusMonL-Regu*1 
[46{/.notdef}rp /period /slash 10{/.notdef}rp /colon 11{/.notdef}rp /F 2{/.notdef}rp 
/I 3{/.notdef}rp /M /.notdef /O 3{/.notdef}rp /S 13{/.notdef}rp 
/a /.notdef /c /d /e /f /g /h 
/i /j /.notdef /l /m /n /o /p 
/.notdef /r /s /t /u /v /.notdef /x 
/y 134{/.notdef}rp]
YEJRQO+NimbusMonL-Regu nf
YEJRQO+NimbusMonL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf
410.573 463.268 mo
(java.io.File)
[4.78204 4.78204 4.78204 4.78207 4.78204 4.78204 4.78204 4.78204 4.78207 4.78204 4.78204 0 
]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
469.661 463.268 mo
(and)
[3.9809 4.483 0 ]xsh
YEJRQO+NimbusMonL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf
484.312 463.268 mo
(System.IO.FileInfo)
[4.78204 4.78204 4.78204 4.78207 4.78204 4.78201 4.78204 4.78204 4.7821 4.78204 4.78204 4.78204 
4.78204 4.78204 4.78204 4.78204 4.78204 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
316.812 473.729 mo
(basedonthematched\256eldsofLines4and9\(Figure3\).Themap-)
[4.483 3.9809 3.48785 3.9809 6.82312 4.483 6.82315 2.49252 4.483 6.32104 6.97556 3.9809 
2.49255 3.9809 4.483 3.98093 6.82312 4.98508 3.98093 2.49252 4.483 5.82797 4.483 5.32574 
5.47815 2.49255 4.48297 3.98093 5.82797 6.83209 3.9809 4.483 6.82312 6.82315 2.9856 4.98511 
2.49252 4.483 4.483 2.98563 6.32101 4.483 2.9856 5.31683 5.47815 4.48303 6.32104 6.97552 
3.9809 4.48303 0 ]xsh
316.812 484.189 mo
(pingrelationofAPIclasseshelpstranslatethevariabledeclaredin)
[4.483 2.49252 4.48303 6.75137 2.98563 3.9809 2.49255 3.9809 2.49255 2.49255 4.483 6.7514 
4.483 5.254 6.47345 4.98511 5.254 3.9809 2.49255 3.98093 3.48782 3.48785 3.9809 5.75626 
4.483 3.9809 2.49255 4.483 5.75623 2.49255 2.98563 3.9809 4.483 3.48782 2.49255 3.9809 
2.49255 6.24933 2.49255 4.48297 6.24933 4.26782 3.9809 2.9856 2.49255 3.9809 4.483 2.49255 
6.24033 4.48303 3.9809 3.9809 2.49255 3.9809 2.9856 3.9809 6.76038 2.49255 0 ]xsh
316.812 494.65 mo
(Line1\(Figure2\)tothevariabledeclaredinLine16\(Figure5\).)
[5.47815 2.49255 4.483 6.21344 6.72449 2.98563 4.98511 2.49252 4.483 4.483 2.98563 6.22238 
4.483 5.22711 2.49255 6.72452 2.49252 4.483 6.22241 4.26782 3.9809 2.98563 2.49255 3.9809 
4.483 2.49252 6.21344 4.483 3.98093 3.9809 2.49255 3.9809 2.9856 3.98093 6.72449 2.49255 
6.72452 5.47815 2.49255 4.48297 6.22241 4.483 6.72452 2.9856 4.98511 2.49249 4.48303 4.48297 
2.98566 6.22241 4.48297 2.9856 0 ]xsh
YEJRQI+NimbusRomNo9L-Medi*1 [11.955 0 0 -11.955 0 0 ]msf
316.812 514.573 mo
(4.3MappingAPImethods)
[5.97748 2.98877 17.9205 11.2855 5.97751 6.64697 6.647 3.32349 6.64697 8.96625 8.6315 7.30441 
7.63934 9.95844 5.30801 3.98093 6.64697 5.97751 6.64697 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
325.778 527.524 mo
(Inthisstep,ourapproachminesmappingrelationsofAPImeth-)
[2.98563 6.6438 2.49255 4.483 2.49255 5.65759 3.48785 2.49255 3.9809 4.483 4.4292 4.483 
4.483 5.14642 3.9809 4.483 4.483 2.98563 4.483 3.9809 3.9809 6.65277 6.97556 2.49255 
4.483 3.9809 5.65759 6.97556 3.98093 4.48297 4.48303 2.49252 4.483 6.65277 2.98563 3.9809 
2.49255 3.98093 2.49252 2.49255 4.483 4.48297 5.65765 4.48297 5.1554 6.47345 4.98511 5.14642 
6.97552 3.9809 2.49255 4.48297 0 ]xsh
316.812 537.985 mo
(ods.Thisstephastwomajorsub-steps.First,ourapproachbuilds)
[4.483 4.483 3.48785 5.73825 5.47815 4.483 2.49255 5.97141 3.48785 2.49255 3.9809 6.96658 
4.483 3.9809 5.97144 2.49255 6.39276 6.95758 6.97556 3.98093 2.49252 4.483 5.46921 3.48782 
4.48303 4.48297 2.98563 3.48782 2.49255 3.9809 4.48303 3.48782 5.74722 4.98508 2.49255 2.98563 
3.48782 2.49252 4.78787 4.483 4.483 5.46921 3.9809 4.48297 4.48303 2.9856 4.48297 3.98096 
3.9809 6.95758 4.31268 4.48297 2.49255 2.49255 4.48297 0 ]xsh
316.812 548.446 mo
(agraph,referredasAPItransformationgraph,foreachclientcode)
[6.27621 4.483 2.98563 3.9809 4.483 4.483 4.54575 2.98563 3.9809 2.98563 3.9809 2.9856 
2.98563 3.9809 6.78726 3.98093 5.78314 6.47345 4.98508 5.28091 2.49255 2.9856 3.9809 4.483 
3.48785 2.9856 4.483 2.98563 6.97556 3.9809 2.49255 2.49255 4.48297 6.77832 4.48297 2.98563 
3.98093 4.48297 4.48303 4.55469 2.98563 4.483 5.28091 3.9809 3.98093 3.9809 6.77826 3.98096 
2.49255 2.49249 3.98096 4.48297 4.78784 3.9809 4.48303 4.48297 0 ]xsh
316.812 558.907 mo
(method.Second,ourapproachcomparesthetwographsofeach)
[6.97556 3.9809 2.49255 4.483 4.483 4.483 7.50455 4.98511 3.9809 3.9809 4.483 4.483 
4.483 5.51407 4.48303 4.48297 6.06097 3.9809 4.483 4.483 2.9856 4.483 3.98093 3.9809 
7.54938 3.9809 4.483 6.97556 4.483 3.9809 2.98563 3.9809 6.56317 2.49255 4.48303 7.04727 
2.49252 6.39276 7.54041 4.483 2.98563 3.9809 4.48297 4.48303 6.56317 4.48297 6.052 3.9809 
3.9809 3.9809 0 ]xsh
316.812 569.367 mo
(pairedclientcodemethodsforminingmappingrelationsofAPI)
[4.483 3.98093 2.49252 2.98563 3.9809 7.74664 3.9809 2.49255 2.49255 3.9809 4.483 5.76514 
3.9809 4.483 4.483 7.24454 6.97556 3.9809 2.49255 4.483 4.483 4.48297 6.76044 2.98563 
4.483 6.24924 6.97556 2.49252 4.483 2.49255 4.483 7.75558 6.97552 3.98093 4.483 4.483 
2.49252 4.48303 7.74661 2.98563 3.9809 2.49255 3.9809 2.49255 2.49255 4.48297 4.48303 6.76038 
4.48303 6.24921 6.47351 4.98505 0 ]xsh
316.812 579.828 mo
(methods.)
[6.97556 3.9809 2.49255 4.483 4.483 4.483 3.48785 0 ]xsh
YEJRQN+NimbusRomNo9L-ReguItal*1 [10.959 0 0 -10.959 0 0 ]msf
319.552 599.751 mo
(4.3.1APItransformationgraph)
[5.47949 2.73975 5.47952 2.73975 16.4275 6.69586 6.69589 6.38901 3.0466 4.10971 5.47949 5.47949 
4.26315 3.0466 5.47949 4.26312 7.91241 5.47949 3.0466 3.0466 5.47949 8.20831 5.47949 4.10971 
5.47949 5.47952 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
325.778 612.702 mo
(AnAPItransformationgraph\(ATG\)ofaclientcodemethod)
[6.47348 6.95761 6.47345 4.98508 5.46921 2.49255 2.9856 3.98093 4.48297 3.48785 2.9856 4.48303 
2.9856 6.97556 3.9809 2.49255 2.49252 4.48303 6.95758 4.48303 2.9856 3.9809 4.483 6.96658 
2.98563 5.48718 5.47818 6.47345 5.46021 4.48303 5.46021 6.46448 3.98093 2.49252 2.49255 3.9809 
4.48303 4.97614 3.9809 4.483 4.483 6.45551 6.97559 3.9809 2.49255 4.48297 4.48303 0 
]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
547.797 612.702 mo
(m)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
316.812 623.163 mo
(isadirectedgraph)
[2.49255 6.11487 6.61694 4.48297 2.49255 2.98563 3.9809 3.9809 2.49255 3.9809 7.11902 4.483 
2.98563 3.9809 4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
386.609 623.163 mo
(G)sh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
393.825 623.163 mo
(h)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
397.409 623.163 mo
(N)sh
%ADOBeginSubsetFont: GFNBAA+CMMI6 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /GFNBAA+CMMI6 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 100 /d put
dup 109 /m put
dup 116 /t put
def
/UniqueID 5087381 def
/FontBBox {11 -250 1241 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 0 683 704 431 441 452 463] def
/OtherBlues [-204 -194] def
/BlueScale 0.04379 def
/StdHW [35] def
/StdVW [85] def
/StemSnapH [35 39] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
5 dict dup begin
/a <1C60D8A8C9B08A9449569822B74CC1788C081D6D81371E850F0B23B02524
A25F17CEACF2C9880CE8FDF4C392787734B2DB57D379AA6431C318698D94D5E0
5119485866F8F8FFEBC66C373AAE03DD974021C54A8E658E26BCC5E39E9B15BA
B6649ABA2A51AA3967220EACDEA4E65B8D8340EC904B34AFEBD043B88545DC7A
AAB2F1E19596F006132A2CFE509E6EC3ED526423AC78E0645306C1BA88E37B77
38B4C46A636BD6DA9DA68A03BC775596EB72> |-
/d <1C60D8A8C9B08A95E6DEFFF1B7223E9ACC2958EEFB5CB42A3CF3618729AD
8F5C295E16DCF5EA64771DD3682725F4EF8129933720C16A8573202C02ACE0B9
2A7BC6BD6726561EB229E6115300443CEB5632952B8AE4068D4248FE26B879A2
9193839D49B809A0D2B8F5E51864E84CC0DB0CD73F63021F20F05177C260B384
A0DC3575525994B1E06B05F707092056F3024952E65C87E39B0D3A28ED8161A3
D5DEDC890855D61040019D43B32E0A11E16D48FD35D1039A4A04829903846710
1B49F84FF7FEC8F388383D810E6313971A9BA1DF38C0> |-
/m <1C60D8A8C9B08A94E5FF3A432A198A675EBF8914CCAAE2200613066E9CBE
BDFC4D4F8D8041E3994E54933D929448F40C6230C57C43CEDFE5243229ABB3A7
E9404BFE4395800006310E06F8A4A4EE8EA708050B412B848340A3CBC2B3C261
4F1A58F645C6CA56D85384BC8CB8E12A54F5E8F7246A08BC27304D027EED986E
CB9B57E59BD56A0AF374B9B4B590C6F58647B19A987207864411F5D3E7B8D6DC
7C3AA912972745F68B80301BECD88730A64B3A2AADF24EE9B39F598E3A1DDEB5
48E3ADB7EE284B4A4FF6E70216D642798CE80057472C077418755DD2AA8145A3
E21CD9A38AF94BD3689074B96472D76B421912A6E800A13CB41D16D5676F74F8
1A6D1DF332D0E32DEB47D7155C4BE03128AAB27F3D4C89CB0C928EF88CD06C0C
59826564E38C22D453279A6766B7573D3DB3BD32B82BCC154134> |-
/t <1C60D8A8C9B08A95A6CBCB6021F916B54110945F2479DD096049837A9073
ABB31909823A3129C8C2EAAF025002E280FC8D7D5AB10E20DE0F0F3958DFEC65
C39BEE140CBCE4225C8ABC1308158C7080181CD61F9F4B1B714371E412C87E92
FEA097B9FDCF40F8F22CDB3C1619BE64741A1D65D8DA4AD2A2195B25A6D8A74D
F84B61D041499AE685970155F52ACC46D4C7E476D7E86011BC061CC610ADDF92
27398930323CF4> |-
/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/YEJRQT+CMMI6 /GFNBAA+CMMI6 findfont ct_VMDictPut
/YEJRQT+CMMI6*1 
[97{/.notdef}rp /a 2{/.notdef}rp /d 8{/.notdef}rp /m 6{/.notdef}rp /t 
139{/.notdef}rp]
YEJRQT+CMMI6 nf
YEJRQT+CMMI6*1 [5.978 0 0 -5.978 0 0 ]msf
404.776 624.226 mo
(data)
[3.83786 4.03519 2.85153 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
420.033 623.163 mo
(;N)
[4.08853 0 ]xsh
YEJRQT+CMMI6*1 [5.978 0 0 -5.978 0 0 ]msf
431.496 624.159 mo
(m)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
438.532 623.163 mo
(;E)
[4.08853 0 ]xsh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
449.919 623.163 mo
(i)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
453.503 623.163 mo
(.)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
459.704 623.163 mo
(N)sh
YEJRQT+CMMI6*1 [5.978 0 0 -5.978 0 0 ]msf
467.071 624.226 mo
(data)
[3.83786 4.03519 2.85153 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
484.963 623.163 mo
(isasetofthe\256elds)
[2.49255 6.11487 6.61691 3.48785 3.9809 5.12854 4.48297 5.62164 2.49255 4.48297 6.61694 4.98511 
3.9809 2.49255 4.48297 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
316.812 633.624 mo
(F)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
326.955 633.624 mo
(of)
[4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
337.403 633.624 mo
(m)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
345.522 633.624 mo
('sdeclaringclass,localvariables)
[2.50143 6.4556 4.483 3.9809 3.98093 2.49252 3.98093 2.9856 2.49255 4.483 7.45972 3.9809 
2.49255 3.9809 3.48785 3.48782 5.40652 2.49252 4.483 3.98093 3.9809 5.46924 4.26782 3.9809 
2.98563 2.49255 3.9809 4.483 2.49255 3.9809 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
469.193 633.624 mo
(V)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
479.594 633.624 mo
(of)
[4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
490.043 633.624 mo
(m)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
498.161 633.624 mo
(,parameters)
[5.39752 4.483 3.9809 2.9856 3.9809 6.97559 3.9809 2.49255 3.9809 2.9856 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
545.881 633.624 mo
(P)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
551.765 634.62 mo
(1)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
316.812 644.085 mo
(of)
[4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
326.709 644.085 mo
(m)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
334.828 644.085 mo
(,parameters)
[4.70715 4.483 3.9809 2.98563 3.9809 6.97556 3.9809 2.49255 3.9809 2.98563 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
381.307 644.085 mo
(P)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
387.191 645.081 mo
(2)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
393.77 644.085 mo
(ofmethodscalledby)
[4.483 5.40643 6.97556 3.9809 2.49255 4.483 4.48297 4.48303 5.9176 3.98093 3.9809 2.49255 
2.49252 3.98093 6.91278 4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
471.717 644.085 mo
(m)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
479.835 644.085 mo
(,andreturnvalues)
[4.71613 3.9809 4.483 6.90381 2.98563 3.9809 2.49255 4.483 2.9856 6.91278 4.26782 3.9809 
2.49255 4.48297 3.98096 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
548.88 644.085 mo
(R)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
316.812 654.545 mo
(ofallmethods.)
[4.483 5.49609 3.9809 2.49255 5.01199 6.97556 3.9809 2.49255 4.483 4.483 4.483 3.48782 
0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
374.512 654.545 mo
(N)sh
YEJRQT+CMMI6*1 [5.978 0 0 -5.978 0 0 ]msf
381.879 655.542 mo
(m)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
391.431 654.545 mo
(isasetofmethodscalledby)
[2.49255 5.99832 6.50034 3.48785 3.9809 5.00302 4.483 5.50507 6.97556 3.9809 2.49255 4.483 
4.483 4.483 6.00726 3.98093 3.9809 2.49255 2.49255 3.9809 6.99347 4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
497.202 654.545 mo
(m)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
505.321 654.545 mo
(.)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
511.166 654.545 mo
(E)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
520.975 654.545 mo
(isasetof)
[2.49255 5.99835 6.50031 3.48785 3.9809 5.00305 4.48297 0 ]xsh
316.812 665.006 mo
(directededges.Anedge)
[4.483 2.49252 2.98563 3.98093 3.9809 2.49255 3.9809 7.07416 3.98093 4.483 4.483 3.9809 
3.48785 6.07895 6.47345 7.08313 3.9809 4.483 4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
407.864 665.006 mo
(d)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
412.638 666.002 mo
(1)sh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
420.023 665.006 mo
(!)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
432.472 665.006 mo
(d)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
437.247 666.002 mo
(2)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
443.993 665.006 mo
(fromadatum)
[2.98563 2.9856 4.483 9.56671 6.57208 4.483 3.9809 2.49255 4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
495.607 665.006 mo
(d)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
500.382 666.002 mo
(1)sh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
507.766 665.006 mo
(2)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
517.144 665.006 mo
(N)sh
YEJRQT+CMMI6*1 [5.978 0 0 -5.978 0 0 ]msf
524.51 666.069 mo
(data)
[3.83789 4.03516 2.85156 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
542.363 665.006 mo
(toa)
[2.49255 7.07416 0 ]xsh
316.812 675.467 mo
(datum)
[4.483 3.9809 2.49255 4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
341.415 675.467 mo
(d)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
346.189 676.463 mo
(2)sh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
352.9 675.467 mo
(2)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
361.604 675.467 mo
(N)sh
YEJRQT+CMMI6*1 [5.978 0 0 -5.978 0 0 ]msf
368.97 676.53 mo
(data)
[3.83786 4.03519 2.85153 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
386.415 675.467 mo
(denotesthedatadependencyfrom)
[4.483 3.9809 4.483 4.483 2.49255 3.9809 5.6666 2.49255 4.48297 6.16864 4.48297 3.98093 
2.49252 6.16864 4.48297 3.98093 4.483 3.9809 4.483 4.483 3.9809 4.483 3.85538 6.66174 
2.98563 2.9856 4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
510.755 675.467 mo
(d)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
515.529 676.463 mo
(1)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
521.867 675.467 mo
(to)
[2.49255 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
531.03 675.467 mo
(d)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
535.805 676.463 mo
(2)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
539.956 675.467 mo
(.An)
[4.99408 6.47345 0 ]xsh
316.812 685.928 mo
(edge)
[3.98093 4.483 4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
336.18 685.928 mo
(d)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
340.954 686.924 mo
(1)sh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
348.042 685.928 mo
(!)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
360.193 685.928 mo
(m)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
368.312 686.924 mo
(1)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
374.902 685.928 mo
(fromadatum)
[2.98563 2.9856 4.483 9.41431 6.41965 4.483 3.9809 2.49255 4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
426.048 685.928 mo
(d)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
430.823 686.924 mo
(1)sh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
437.91 685.928 mo
(2)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
446.99 685.928 mo
(N)sh
YEJRQT+CMMI6*1 [5.978 0 0 -5.978 0 0 ]msf
454.356 686.99 mo
(data)
[3.83786 4.03519 2.85153 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
472.053 685.928 mo
(toamethod)
[2.49255 6.92175 6.41965 6.97556 3.9809 2.49255 4.483 4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
517.227 685.928 mo
(m)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
525.346 686.924 mo
(1)sh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
532.433 685.928 mo
(2)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
541.513 685.928 mo
(N)sh
YEJRQT+CMMI6*1 [5.978 0 0 -5.978 0 0 ]msf
548.879 686.924 mo
(m)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
316.812 696.389 mo
(denotes)
[4.483 3.98093 4.483 4.483 2.49252 3.98093 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
347.529 696.389 mo
(d)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
352.304 697.385 mo
(1)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
359.78 696.389 mo
(isaparameterorarelatedvariableof)
[2.49255 6.80527 7.30728 4.483 3.9809 2.98563 3.9809 6.97556 3.9809 2.49255 3.9809 6.31201 
4.483 6.31198 7.30728 2.98563 3.9809 2.49255 3.98093 2.49252 3.98093 7.80939 4.26779 3.98093 
2.9856 2.49255 3.9809 4.483 2.49255 7.29831 4.48303 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
504.163 696.389 mo
(m)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
512.282 697.385 mo
(1)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
516.433 696.389 mo
(.Anedge)
[8.26666 6.47345 7.80939 3.9809 4.48303 4.48297 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
316.812 706.849 mo
(m)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
324.931 707.846 mo
(1)sh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
333.916 706.849 mo
(!)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
347.966 706.849 mo
(d)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
352.741 707.846 mo
(1)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
360.328 706.849 mo
(fromamethod)
[2.98563 2.9856 4.483 10.4095 7.41489 6.97556 3.9809 2.49255 4.483 4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
418.949 706.849 mo
(m)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
427.068 707.846 mo
(1)sh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
436.053 706.849 mo
(2)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
447.031 706.849 mo
(N)sh
YEJRQT+CMMI6*1 [5.978 0 0 -5.978 0 0 ]msf
454.398 707.846 mo
(m)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
464.871 706.849 mo
(toadatum)
[2.49255 7.91696 7.41489 4.483 3.98093 2.49252 4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
508.553 706.849 mo
(d)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
513.328 707.846 mo
(1)sh
YEJRQS+CMSY9*1 [8.966 0 0 -8.966 0 0 ]msf
522.313 706.849 mo
(2)sh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
533.291 706.849 mo
(N)sh
YEJRQT+CMMI6*1 [5.978 0 0 -5.978 0 0 ]msf
540.658 707.912 mo
(data)
[3.83783 4.03522 2.8515 0 ]xsh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
316.812 717.31 mo
(denotes)
[4.483 3.98093 4.483 4.483 2.49252 3.98093 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
346.446 717.31 mo
(d)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
351.22 718.306 mo
(1)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
357.613 717.31 mo
(isthereturnvalueof)
[2.49255 5.72037 2.49255 4.483 6.22241 2.9856 3.9809 2.49255 4.483 2.98563 6.72449 4.26782 
3.9809 2.49255 4.483 6.21344 4.483 0 ]xsh
YEJRQK+CMMI9*1 [8.966 0 0 -8.966 0 0 ]msf
433.835 717.31 mo
(m)sh
YEJRQL+CMR6*1 [5.978 0 0 -5.978 0 0 ]msf
441.954 718.306 mo
(1)sh
YEJRQJ+NimbusRomNo9L-Regu*1 [8.966 0 0 -8.966 0 0 ]msf
446.105 717.31 mo
(.)sh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 ]]
] del_res
/YEJRQQ+CMSY8*1 uf
/YEJRQQ+CMSY8 uf
/XHFAAA+CMSY8 uf
/YEJRQM+CMSY6*1 uf
/YEJRQM+CMSY6 uf
/OWRAAA+CMSY6 uf
/YEJRQI+NimbusRomNo9L-Medi*1 uf
/YEJRQI+NimbusRomNo9L-Medi uf
/UGXAAA+NimbusRomNo9L-Medi uf
/YEJRQO+NimbusMonL-Regu*1 uf
/YEJRQO+NimbusMonL-Regu uf
/MZQAAA+NimbusMonL-Regu uf
/YEJRQN+NimbusRomNo9L-ReguItal*1 uf
/YEJRQN+NimbusRomNo9L-ReguItal uf
/ELRBAA+NimbusRomNo9L-ReguItal uf
/YEJRQR+CMR8*1 uf
/YEJRQR+CMR8 uf
/VIDAAA+CMR8 uf
/YEJRQH+SimSun-GBK-EUC-H-Identity-H-Identity-H uf
/YEJRQH+SimSun-GBK-EUC-H-Identity-H /CIDFont ur
/YEJRQS+CMSY9*1 uf
/YEJRQS+CMSY9 uf
/ULKBAA+CMSY9 uf
/YEJRQT+CMMI6*1 uf
/YEJRQT+CMMI6 uf
/GFNBAA+CMMI6 uf
/YEJRQL+CMR6*1 uf
/YEJRQL+CMR6 uf
/QJJAAA+CMR6 uf
/YEJRQJ+NimbusRomNo9L-Regu*1 uf
/YEJRQJ+NimbusRomNo9L-Regu uf
/HJCBAA+NimbusRomNo9L-Regu uf
/YEJRQK+CMMI9*1 uf
/YEJRQK+CMMI9 uf
/AXNBAA+CMMI9 uf
/YEJRQP+CMMI8*1 uf
/YEJRQP+CMMI8 uf
/WBBBAA+CMMI8 uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
