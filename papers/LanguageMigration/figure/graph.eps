%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: dd.pdf
%%Creator: Adobe Acrobat 9.2.0
%%For: zhonghao
%%CreationDate: 2010-1-20, 17:06:44
%%BoundingBox: 64 350 533 551
%%HiResBoundingBox: 0 0 595.2200 842
%%CropBox: 0 0 595.2200 842
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1067 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2010-01-20T17:06:33+08:00"
   xmp:CreatorTool="PScript5.dll Version 5.2.2"
   xmp:ModifyDate="2010-01-20T17:06:33+08:00"
   pdf:Producer="Acrobat Distiller 9.2.0 (Windows)"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:1ef6ed80-31e0-4ba2-8070-c039b517bef0"
   xmpMM:InstanceID="uuid:e5b42be0-1f0c-4b17-bf73-55f054fdcc5f">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Microsoft PowerPoint - figure.ppt [兼容模式]</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>zhonghao</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -842 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 842 li
595.22 842 li
595.22 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
18 18 mo
577.02 18 li
577.02 118.68 li
18 118.68 li
cp
eclp
18 118.7 mo
577.02 118.7 li
577.02 18 li
18 18 li
cp
false sop
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
grestore
false sop
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /PBAAAA+Calibri def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
def
/FontBBox {-476 -194 1214 952} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/.notdef <1C60D8A8C9B7A086528E2CBE7FD4F03CC1C545DFC3C53F52C69233
4252531335C4AFD91E9493A7B9787114ADBF50CAD0D8D8F4E0FD112CA0EDC244
BC77AFB35E52902467E4B7D65BC23E8AB084EE08EDC3C9FE17948A4E93ECA5D5
D8A99AF099DAB98A96A7EEC3487AD5909F63F36A9F52E364FE794F0586CEACB0
693AEA3E3B131EDB924E9018AC085D5D058B3A8419D5096479413ADE107D9F53
02816818EECEB683CD82FAAA79E358EAA71283CC02664EE09C62BDF6E0D9BC98
D9F308DF8AEA61A9B7C090BD7FD96A3223C7AE0D3D1A8F2E623FA6B7C467CA6F
ECDBA0B792188DFEEBD3D01BCE6CC077D778842DE1B5E36F7F8EB4C68A439269
E0981B28AD1790AA058065E4B6AD27A659E12C7322A5BE1E7DF9729C0030192F
3688A380035351BB0945D5DC7515959F458727E2B8854977E466D6DDC900E997
B52F6BAB4C73A178A3B47EBB3C3FC842F51CC6E114336F3E4E5E72B20D8F94A7
BA3BA965E83BF37BAA664C34B8502BB9E9B9BEDD7EBC5DCBC4FFF5EBCA9C0324
49885D42A9DCCBA2A816B59D7978373DF4208E5608F69A2EAF492AC156CC637D
5A11AF573B17CF9F38> |-
/zero <1C60D8A8C9B7A0860A0ABA2698AC8E090156BBF2C9C30ADDAE7DCB3D9
7848CC5D38A5C6D85B8937F2533AAB8D6BFA0DD62B7BCE11E4F148006AA53F16
B7661785227AEDEF098A1104625EF68DF52BAE87BC71C0E793E6FAD1A965E4D3
8BA9CF4CEDAADD0504EE4CE20EF80FE3B0F494717869AEF9FD48C1A316DF08AD
A9E5D4CE0C25CB68B43C1EB2B9FE55F89B0B22C758BDED5FDD580CE702C559F6
E1F276FBE929DD9A2C3557CE4E2CABBF3EDF814307556BE2579995A57ECC922B
3376DB39CC4DC2518F12025BDC7A3EE507BE357864FDBF8F62FBD571913B8657
13255C738D4AEB39D8820C2AC5F5D7DF55CB64B7CD192349742D481F16CF8009
5A893636D91177B06233710432F07D42A84BDDC> |-
/one <1C60D8A8C9B7A0860A305D7D1540DECC7BE2F83965065BA1F58088FE75
1F51768999AF3CB0CBD98712B4A20A30CFDD23F3D718AE6664545AA64C90E87A
977C061638AE7B9844BD53D39E1CD919540EC0AFC0ADDD639213BAA3C2156ECF
4D5FEFDF4B77C92C9A62F21FEF596A47F254F30F662D97990A276CD1E50761DD
9D07D78B626617E74128BC5D647B42ED807FE6DD0588AD25D211834DAC9410A0
AEBD06E6565C1DCBD86013B11A7BE0A2010B12635869FAC3323D92D6BCCC10D0
2550F431D6753E5E6C65DB63D883AF6BCE4C75C5A66BF9AE47A5570BA4B61C57
63C152A7FDEC11C0C748631E999D604A7F2938BB57220CBE02AE758E60183316
61C475AA9DED7C59> |-
/two <1C60D8A8C9B7A0860A3F41F4B5F8C84A302144D2A68052268BA33C08F1
4E9024203A43F9861DB1372AE620C85B5997156713B3D52B841947202E77B0C2
CB414A698B86ABC8A4E75821012456D5020DA227DFEF8C5D8DB95EBE919EE715
28F7186EAF21E351CBD957516793A596628548012B490542857EE9AD26B93BE0
9822488FFA92D417AEC74A1F7CD3F4086D2106FC51C85A2037F2B9A0C7F20F95
265886609863A1C5F24DF7B0A900E498DA2F78FC8847FC48711DA5F7718C543A
B1317AD922AE297322A814FAE4926A273690C557D10E81AE194D331B49C1AE8C
81F09FF9C6C0138B7CA170F398B4828657BCD8F518515EBEE88F3E7CAAF8D53D
FF51CD8B58FC43A0393FF3BAAC61C4C54BAED846AB03C5029732B46B642E71B9
F477640318C582068EEDAD42004E409178DCD37800E9D052502DD85B334EBD67
9CA70294673E8EE8A3969E138989BAAC7D6DF5921118D0D203FDC015CB80084F
99BE2DC9C90C6E2171BED79C2858C6> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/HHKXOW+Calibri /PBAAAA+Calibri findfont ct_VMDictPut
/HHKXOW+Calibri*1 
[48{/.notdef}rp /zero /one /two 205{/.notdef}rp]
HHKXOW+Calibri nf
HHKXOW+Calibri*1 [13.02 0 0 -13.02 0 0 ]msf
514.98 34.0797 mo
(2010)
[6.60248 6.60248 6.60254 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+Calibri Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /HIBBAA+Calibri def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g882 put
def
/FontBBox {-476 -194 1214 952} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B7A086528E2CBE7FD4F03CC1C545DFC3C53F52C69233
4252531335C4AFD91E9493A7B9787114ADBF50CAD0D8D8F4E0FD112CA0EDC244
BC77AFB35E52902467E4B7D65BC23E8AB084EE08EDC3C9FE17948A4E93ECA5D5
D8A99AF099DAB98A96A7EEC3487AD5909F63F36A9F52E364FE794F0586CEACB0
693AEA3E3B131EDB924E9018AC085D5D058B3A8419D5096479413ADE107D9F53
02816818EECEB683CD82FAAA79E358EAA71283CC02664EE09C62BDF6E0D9BC98
D9F308DF8AEA61A9B7C090BD7FD96A3223C7AE0D3D1A8F2E623FA6B7C467CA6F
ECDBA0B792188DFEEBD3D01BCE6CC077D778842DE1B5E36F7F8EB4C68A439269
E0981B28AD1790AA058065E4B6AD27A659E12C7322A5BE1E7DF9729C0030192F
3688A380035351BB0945D5DC7515959F458727E2B8854977E466D6DDC900E997
B52F6BAB4C73A178A3B47EBB3C3FC842F51CC6E114336F3E4E5E72B20D8F94A7
BA3BA965E83BF37BAA664C34B8502BB9E9B9BEDD7EBC5DCBC4FFF5EBCA9C0324
49885D42A9DCCBA2A816B59D7978373DF4208E5608F69A2EAF492AC156CC637D
5A11AF573B17CF9F38> |-
/g882 <1C60D8A8C9B83844CBABF75256C23589A050D2F18EC6AAEA2DCAA879D
629F0698E85A7558DC3794B984219238EC694626573D368F005AA7EB3DEDB55C
E7021DF056336AEE3D77182F0055C3CB6954365C7523BFC42E70B7DCDE95A> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/HHKXOX+Calibri /HIBBAA+Calibri findfont ct_VMDictPut
/HHKXOX+Calibri*1 
[32{/.notdef}rp /g882 223{/.notdef}rp]
HHKXOX+Calibri nf
HHKXOX+Calibri*1 [13.02 0 0 -13.02 0 0 ]msf
541.379 34.0797 mo
( )sh
HHKXOW+Calibri*1 [13.02 0 0 -13.02 0 0 ]msf
545.339 34.0797 mo
(1)sh
HHKXOX+Calibri*1 [13.02 0 0 -13.02 0 0 ]msf
551.939 34.0797 mo
( )sh
HHKXOW+Calibri*1 [13.02 0 0 -13.02 0 0 ]msf
555.898 34.0797 mo
(20)
[6.60248 0 ]xsh
gsave
18 118.68 mo
577.02 118.68 li
577.02 219.36 li
18 219.36 li
cp
eclp
18 219.38 mo
577.02 219.38 li
577.02 118.64 li
18 118.64 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
grestore
gsave
18 219.36 mo
577.02 219.36 li
577.02 320.04 li
18 320.04 li
cp
eclp
18 320.06 mo
577.02 320.06 li
577.02 219.32 li
18 219.32 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
grestore
gsave
18 320.04 mo
577.02 320.04 li
577.02 420.72 li
18 420.72 li
cp
eclp
18 420.74 mo
577.02 420.74 li
577.02 320 li
18 320 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
grestore
gsave
18 420.72 mo
577.02 420.72 li
577.02 521.4 li
18 521.4 li
cp
eclp
18 521.42 mo
577.02 521.42 li
577.02 420.68 li
18 420.68 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
grestore
gsave
18 521.4 mo
577.02 521.4 li
577.02 622.08 li
18 622.08 li
cp
eclp
18 622.1 mo
577.02 622.1 li
577.02 521.36 li
18 521.36 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
grestore
gsave
18 622.08 mo
577.02 622.08 li
577.02 722.76 li
18 722.76 li
cp
eclp
18 722.78 mo
577.02 722.78 li
577.02 622.04 li
18 622.04 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
grestore
gsave
18 722.76 mo
577.02 722.76 li
577.02 823.86 li
18 823.86 li
cp
eclp
18 823.88 mo
577.02 823.88 li
577.02 722.72 li
18 722.72 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
grestore
HHKXOW+Calibri*1 [13.02 0 0 -13.02 0 0 ]msf
562.5 816.42 mo
(1)sh
gsave
57.12 240.6 mo
537.9 240.6 li
537.9 330.72 li
57.12 330.72 li
cp
eclp
57.12 330.74 mo
537.9 330.74 li
537.9 240.6 li
57.12 240.6 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
263.4 316.32 mo
265.38 316.32 li
268.08 316.38 li
280.973 316.68 295.008 317.576 307.68 320.04 cv
309.36 320.4 li
312.039 320.995 317.938 322.211 319.8 324.36 cv
320.04 324.84 li
320.1 324.84 li
320.16 325.08 li
320.16 325.32 li
320.22 325.56 li
320.22 325.5 li
320.28 325.68 li
320.22 325.62 li
320.34 325.86 li
320.46 325.98 li
322.203 327.906 327.215 328.898 329.64 329.52 cv
331.32 329.88 li
344.509 332.545 358.215 333.322 371.64 333.72 cv
376.32 333.72 li
376.32 334.38 li
371.64 334.38 li
357.788 333.996 343.096 333.127 329.52 330.18 cv
327.96 329.82 li
326.306 329.42 319.781 327.799 319.56 325.62 cv
319.5 325.38 li
319.5 325.2 li
319.5 325.26 li
319.44 325.08 li
319.5 325.14 li
319.26 324.78 li
317.678 322.948 312.312 321.741 310.02 321.18 cv
309.24 321 li
308.4 320.88 li
295.524 318.272 281.196 317.346 268.08 317.04 cv
265.38 316.98 li
263.4 316.98 li
cp
267.18 319.32 mo
262.74 316.68 li
267.24 314.04 li
267.48 314.04 li
267.66 314.16 li
267.72 314.4 li
267.54 314.64 li
263.52 316.92 li
263.58 316.38 li
267.54 318.72 li
267.72 318.9 li
267.66 319.2 li
267.48 319.32 li
267.18 319.32 li
cp
372.48 331.44 mo
376.98 334.08 li
372.48 336.66 li
372.24 336.72 li
372 336.54 li
372 336.3 li
372.12 336.12 li
376.14 333.78 li
376.14 334.38 li
372.12 331.98 li
372 331.8 li
372.06 331.56 li
372.24 331.38 li
372.48 331.44 li
.92929 .879301 .889677 .799283 cmyk
f
263.4 316.32 mo
265.38 316.32 li
268.08 316.38 li
280.973 316.68 295.008 317.576 307.68 320.04 cv
309.36 320.4 li
312.039 320.995 317.938 322.211 319.8 324.36 cv
320.04 324.84 li
320.1 324.84 li
320.16 325.08 li
320.16 325.32 li
320.22 325.56 li
320.22 325.5 li
320.28 325.68 li
320.22 325.62 li
320.34 325.86 li
320.46 325.98 li
322.203 327.906 327.215 328.898 329.64 329.52 cv
331.32 329.88 li
344.509 332.545 358.215 333.322 371.64 333.72 cv
376.32 333.72 li
376.32 334.38 li
371.64 334.38 li
357.788 333.996 343.096 333.127 329.52 330.18 cv
327.96 329.82 li
326.306 329.42 319.781 327.799 319.56 325.62 cv
319.5 325.38 li
319.5 325.2 li
319.5 325.26 li
319.44 325.08 li
319.5 325.14 li
319.26 324.78 li
317.678 322.948 312.312 321.741 310.02 321.18 cv
309.24 321 li
308.4 320.88 li
295.524 318.272 281.196 317.346 268.08 317.04 cv
265.38 316.98 li
263.4 316.98 li
cp
267.18 319.32 mo
262.74 316.68 li
267.24 314.04 li
267.48 314.04 li
267.66 314.16 li
267.72 314.4 li
267.54 314.64 li
263.52 316.92 li
263.58 316.38 li
267.54 318.72 li
267.72 318.9 li
267.66 319.2 li
267.48 319.32 li
267.18 319.32 li
cp
372.48 331.44 mo
376.98 334.08 li
372.48 336.66 li
372.24 336.72 li
372 336.54 li
372 336.3 li
372.12 336.12 li
376.14 333.78 li
376.14 334.38 li
372.12 331.98 li
372 331.8 li
372.06 331.56 li
372.24 331.38 li
372.48 331.44 li
f
grestore
259.62 298.56 mo
274.38 298.62 li
282 298.74 li
317.445 299.232 352.906 300.68 388.2 304.08 cv
390.72 304.38 li
393.06 304.62 li
395.4 304.92 li
400.572 305.525 405.828 306.149 410.94 307.14 cv
412.5 307.44 li
413.94 307.74 li
416.797 308.386 420.05 309.025 422.64 310.44 cv
423.06 310.8 li
423.12 310.86 li
423.36 311.16 li
422.88 311.58 li
422.64 311.28 li
422.64 311.34 li
422.28 311.04 li
421.8 310.74 li
413.882 307.411 401.501 306.47 393 305.28 cv
390.6 305.04 li
388.14 304.74 li
352.954 301.343 317.329 299.928 282 299.4 cv
274.38 299.28 li
259.62 299.22 li
cp
263.46 301.5 mo
258.96 298.86 li
263.46 296.28 li
263.76 296.22 li
263.94 296.4 li
263.94 296.64 li
263.82 296.88 li
259.8 299.16 li
259.8 298.62 li
263.82 300.96 li
263.94 301.14 li
263.94 301.38 li
263.7 301.56 li
263.46 301.5 li
cp
424.2 306.84 mo
423.36 312 li
419.28 308.76 li
419.16 308.52 li
419.28 308.28 li
419.46 308.16 li
419.7 308.22 li
423.36 311.1 li
422.82 311.34 li
423.54 306.72 li
423.66 306.54 li
423.9 306.48 li
424.14 306.6 li
424.2 306.84 li
.92929 .879301 .889677 .799283 cmyk
f
259.62 298.56 mo
274.38 298.62 li
282 298.74 li
317.445 299.232 352.906 300.68 388.2 304.08 cv
390.72 304.38 li
393.06 304.62 li
395.4 304.92 li
400.572 305.525 405.828 306.149 410.94 307.14 cv
412.5 307.44 li
413.94 307.74 li
416.797 308.386 420.05 309.025 422.64 310.44 cv
423.06 310.8 li
423.12 310.86 li
423.36 311.16 li
422.88 311.58 li
422.64 311.28 li
422.64 311.34 li
422.28 311.04 li
421.8 310.74 li
413.882 307.411 401.501 306.47 393 305.28 cv
390.6 305.04 li
388.14 304.74 li
352.954 301.343 317.329 299.928 282 299.4 cv
274.38 299.28 li
259.62 299.22 li
cp
263.46 301.5 mo
258.96 298.86 li
263.46 296.28 li
263.76 296.22 li
263.94 296.4 li
263.94 296.64 li
263.82 296.88 li
259.8 299.16 li
259.8 298.62 li
263.82 300.96 li
263.94 301.14 li
263.94 301.38 li
263.7 301.56 li
263.46 301.5 li
cp
424.2 306.84 mo
423.36 312 li
419.28 308.76 li
419.16 308.52 li
419.28 308.28 li
419.46 308.16 li
419.7 308.22 li
423.36 311.1 li
422.82 311.34 li
423.54 306.72 li
423.66 306.54 li
423.9 306.48 li
424.14 306.6 li
424.2 306.84 li
f
209.82 322.32 mo
210.48 322.32 li
210.48 327.48 li
209.82 327.48 li
cp
210.48 322.32 mo
cp
212.76 323.64 mo
210.12 328.14 li
207.54 323.64 li
207.48 323.4 li
207.66 323.22 li
207.9 323.16 li
208.08 323.34 li
210.42 327.36 li
209.82 327.36 li
212.16 323.34 li
212.4 323.16 li
212.64 323.22 li
212.82 323.4 li
212.76 323.64 li
f
209.82 322.32 mo
210.48 322.32 li
210.48 327.48 li
209.82 327.48 li
cp
210.48 322.32 mo
cp
212.76 323.64 mo
210.12 328.14 li
207.54 323.64 li
207.48 323.4 li
207.66 323.22 li
207.9 323.16 li
208.08 323.34 li
210.42 327.36 li
209.82 327.36 li
212.16 323.34 li
212.4 323.16 li
212.64 323.22 li
212.82 323.4 li
212.76 323.64 li
f
157.56 316.68 mo
157.56 313.5 181.08 310.98 210.12 310.98 cv
239.16 310.98 262.74 313.5 262.74 316.68 cv
262.74 319.8 239.16 322.32 210.12 322.32 cv
181.08 322.32 157.56 319.8 157.56 316.68 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
157.2 316.68 mo
157.2 316.62 li
157.26 316.44 li
157.26 316.38 li
157.32 316.26 li
157.32 316.2 li
157.44 316.02 li
157.56 315.84 li
157.62 315.84 li
157.74 315.66 li
157.98 315.54 li
160.174 314.067 164.638 313.497 167.22 313.02 cv
167.94 312.9 li
168.72 312.84 li
181.305 311.138 194.728 310.806 207.42 310.62 cv
210.12 310.62 li
210.36 310.74 li
210.12 310.62 li
212.82 310.68 li
215.52 310.68 li
228.701 310.928 243.433 311.264 256.44 313.62 cv
257.04 313.74 li
258.12 313.98 li
259.504 314.315 261.13 314.747 262.32 315.54 cv
262.5 315.66 li
262.68 315.84 li
262.8 316.02 li
262.86 316.08 li
262.92 316.2 li
262.98 316.26 li
263.04 316.38 li
263.04 316.92 li
262.98 317.04 li
262.92 317.1 li
262.86 317.28 li
262.74 317.46 li
262.68 317.46 li
262.5 317.64 li
260.458 319.129 256.252 319.698 253.8 320.16 cv
253.08 320.28 li
252.3 320.4 li
240.114 321.993 227.799 322.456 215.52 322.62 cv
210.12 322.62 li
210.36 322.08 li
210.42 322.14 li
210.42 322.5 li
210.3 322.62 li
210.12 322.68 li
207.42 322.68 li
204.78 322.62 li
202.14 322.62 li
196.98 322.5 li
194.52 322.38 li
192.06 322.32 li
189.66 322.2 li
187.32 322.08 li
181.645 321.833 175.978 321.384 170.34 320.7 cv
169.5 320.58 li
168.72 320.46 li
167.94 320.4 li
165.308 319.898 159.926 319.283 157.8 317.64 cv
157.62 317.46 li
157.56 317.46 li
157.32 317.1 li
157.32 317.04 li
157.26 316.92 li
157.26 316.86 li
cp
157.92 316.74 mo
157.92 316.68 li
157.92 316.86 li
157.92 316.8 li
157.98 316.86 li
158.1 317.04 li
158.04 316.98 li
158.16 317.1 li
158.34 317.22 li
160.382 318.553 164.183 319.014 166.56 319.5 cv
167.28 319.62 li
168.06 319.74 li
180.225 321.334 192.52 321.798 204.78 321.96 cv
207.42 321.96 li
210.12 322.02 li
209.88 322.56 li
209.88 322.5 li
209.82 322.32 li
209.82 322.14 li
209.94 322.02 li
210.12 321.96 li
215.52 321.96 li
218.16 321.9 li
220.74 321.84 li
225.78 321.72 li
228.18 321.66 li
230.58 321.54 li
236.732 321.259 242.878 320.838 249 320.16 cv
250.68 319.92 li
251.46 319.8 li
254.384 319.41 259.315 318.732 261.9 317.28 cv
262.08 317.16 li
262.2 316.98 li
262.2 317.04 li
262.26 316.92 li
262.38 316.8 li
262.32 316.86 li
262.38 316.68 li
262.38 316.74 li
262.38 316.62 li
262.38 316.68 li
262.38 316.56 li
262.38 316.62 li
262.32 316.5 li
262.38 316.5 li
262.26 316.38 li
262.32 316.44 li
262.08 316.2 li
260.266 314.824 255.892 314.221 253.68 313.8 cv
252.24 313.56 li
239.179 311.879 225.981 311.414 212.82 311.34 cv
210.12 311.34 li
209.88 311.22 li
210.12 311.28 li
207.42 311.34 li
204.78 311.34 li
193.028 311.521 180.489 311.9 168.84 313.5 cv
168.06 313.56 li
167.34 313.68 li
165.015 314.12 160.334 314.716 158.4 316.08 cv
158.04 316.32 li
158.1 316.26 li
157.98 316.38 li
157.92 316.56 li
157.92 316.44 li
157.92 316.62 li
157.92 316.56 li
157.92 316.68 li
157.92 316.62 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
HHKXOW+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B86ED904792469819B411F782D644953F5FB87FEF6645
79CE5AF47E01D6D9A7DF6EB24F15E9AD1EE074A41E03462D7DE0F1E92BD9640F
3458F7DADF49E5D4EB0B3> |-
/colon <1C60D8A8C9B85EE3AA09F13AFE1EA1D5487D04185C635E2F65BD02BB
7DF22BBFE5051B7512FEE106F66F66184353AFCBEED1CB5314B7B80F3E52B269
54A6CFEC4A802D718865FBD1339BE6AD949F7F886C41CCF2B4B54575279543A1
80F06A1CDE595E8DAED7162EF75EED02C4368BFD960D814A5603A0093EE2ABF2
B8EFC6D527E7309A7D085984A9616E0355BBE99B23383E635D8345EE503BB7E7
F606D03708C2AC02168B9980286B030538C369A5588A9CD5E4A8087241AB991E
45CC89FF12CB4C89B42B01621767D0EDD116D84098233D0CC562EF89698FB414
CFA2163D7ED0B4F71F70D57FA8F1C7830EE5D4CDF38F5B> |-
/S <1C60D8A8C9B770DA42E8D37F1E32882D4AD6464D850106A0DE7A83B47F0E
C65143E84B8F9887D8EF560BBB7DAED9582F38B6974AE06071D74243DE04377A
9E38C603D44A0AA623BF84EDE575A39EAD4593C4B3F424F5317061A5AEF0FCBD
5198E5F9AB43FD8C228E541FA391BADB0ACDBD5FBBD08EBCA2700B6A1105DB45
395D242F8C44AC433C3725A9D5F6A91B5DF820F4E2F6E66101242BAA426ABA58
4BF91A7E8CBD825612324F28F3BB6B5F4B6A98D5678C5683C423898401C97DB6
AEBB3B08F0E49015B8C09294559F0324646775C30687BA8725A301A8E7ACA559
E180CD1BA525300AD3D8DFA8A8C34309FA6E01CA0BA9F33D60D410C3785C9A35
A4D33DC4DA697FAAF83556B3BAF038631153B21CFA05AC7F6B965B6C9DD580EC
DAA5E19D631487362428CB6C15F8951776CB9C454AE2ECDA7CED1F00599F6057
8050870FD9F672ABB02F7641BFFDFC908D98DE75282B9085EDCE585EED996ACD
325E186C6CC942676730FDB64EACBC2CC9670AC8631DB84FE5F13182767EAE21
F9BC28BA89B244DFD720C9DF35E92F57747BB59E5AF5F4663BAF9B03DC716D74
DBD0D4D1BB2703443369B43A50F5B2916833184106C2158995BEF98CEF08C3DF
5A6182> |-
/a <1C60D8A8C9B75CBB53379352952B97D633633CE49B1F5650B8155AFDFA57
F94D359804093E4912F3B89577762AB5877203F1CDAD240C521DE74183EDA105
01967DB6487C182138B12C453C5DB9629F7EF021028117511EFEAB941896E32D
9CC68D6E66540771999A4E30C4826A52D7536EDDF7E00016C895CE43408B44BE
33E2D9A6163827E05AB8B1144BC909A74F6D7828DE6E08164A25E320920E3540
20A41D59E9E3B008A20EC107F9E18745DE21F9AF293EB0F319B529D840D8BA93
19522EDDCACA13336C059581181C082BF0D7F4117FAEB429D871E099AEE4394F
ED2FB3A1C712D1799055BA832AD846B95DA8BB4E63B103C908FA309FAA3B7814
0CE2A22AE06B2A1EA5BD3AA13DD1ED75DA4AD37493780FE662EF5D1B53C4AF41
845C0C77655CE94F0C9DEBE29248A1EAAF3A6EA79D5BB5C090457B818DD62F70
E197CEA94F90229AB4FD685A1ADB5E4E4C1DBDB28AA3854323EE2FD22692EC70> |-
/e <1C60D8A8C9B7A9C0DC897A849B356D31E2254DD2E5BDA9320580C3E0839C
715C00D9D27B634D4BEEF0FE1F6AD3CCFBCCE9FDE38A84A563FB744619F62FCB
F09ACBF7337FE050BE068BCA744FAC4471C4195B7CEC353B3CAECCCEC91AAE22
E8955469041D97A8837F9398CE520ABB35C688EEF4229957FD92C79439BF99D2
4AD4D8B3CAC5B975D966AB01856E8FAEAE3BEB03E1CC76DF299391134BFB02DD
61F6D73B2AAAA0D725ABCA9FE504FB3A1EC1E2449C5D921F0DE45A9278013CF0
832F39E3771D2B318D27AFF5849066ED5A64AA8E3E404B520DE5F08BE74DD8D5
8BD1B0FA461EBCBB4DC632B680CFAE62B61DD4FC04FC017D59147CB2E0FBEAAF
A402B5BFBD0C4F13F4BD9227D1353527A23B3EF7CA3E7F599CB51DDAF43A5674
78E4C81011D9D8D5DAD9CB1F948F5FCE67> |-
/f <1C60D8A8C9B83BB8632FB1D3D91BD66E5512F6DD2CCB59074315803E2F43
0B096626F50C9126DF15B1D22935F28B97AB5D3B7DB8B1B8EC17F9868DFC8B9B
A6A909CA8727D3C9D8FCF13C3B6D5F4F33EA07DFD158F20416D4C6EEC8FD3EF1
4FC86346A94355FA1C2B6FA55C0124FFA9705858D4628EE39DA0E3A156A386DF
00613D8189EFFC0AEADC5BE3915D9C022BA6356303A46539775608C62B3D24CB
372AF4E663162E7C4ACC81D2F2C5F206BB702A5D73C1A974C0BFD7875757B79A
A73010AE51501D97B980E0F2ACE1EF1ED3F60A9C6E02B8D29057E3D98A685003
06E46C9A2B914F56A55773A150BF63B33B5E351FC714462135973FE682DBCBC0
C1B38B7A71A2F4C684D75344384C54C140B13A70313E2F4EDF68E127B4C55F26
525A530E7BB82AEC944EFDC27B6BB93FA6C499E5069AA3B6387EF0576DB7B6BE
E15BB0B269E8ACB562> |-
/g <1C60D8A8C9B7445140600976780BBEB6A3D2658D3A4C7F919C88C52D412C
8E364C5F7636792196FD221C121AC8A143979AFAA3A09359F0F2A21E651450F6
F05ACC0E82C2760ECA4A653600DE52AE0D5358458AF930D6BDEB0904E4313A0C
BCA78B5C6EE35CCCF928264F350C0A023EDD3B664C736748E408C524202A3326
D95C7DCABC59764E7D97C53C3E04189FF055F0A0F707215CE9EBCE6A5429EBED
17A701726A8DEDD69C85101530BFD06F1546D47732DA28D5440C29DB9FD39281
2122E25828F7402340CB2AAD1BBC054F22EBE3B4068E1189E1BBFDEDCE3380BE
2A1BC64D61665F8EA89BD12E55203D2F412C82771F2C0ABF3E56A249110A5F4D
FD7E943B7CBB3957D78564ABEBC14037C62116307C9CC2770007504568A496F0
E371B5E27EA91CE4ED6B158CDD56E512A87B38DA763ADE44907E57CB7229D283
C8A7D867519E31285088BE518A70B9193ED1297DE2FF3E929169124C3A44E72E
DA1A3B2C0E0DA57F0E79BC1C7BEFED8509DD8CC00683DBCDE9C2A776B95D5831
197913BF75A301F1EB13F5C4E48D99B31FDB0B54BB7B640060AFF7A1619C4EE7
C3CA0DE734198387C7205D8F2F952A1BC7A9DB628AB7F298888007AA604549FA
9EA5ECD6ED4A814A52FD636085B1A8D57F31E70472C30EB60858254A7B95E2F6
778797B84C60B2ED0823FE7265B0CE1B1A64D8F159C443134DC16E39D207947A
0FD5903276> |-
/i <1C60D8A8C9B887F0644B8F9A77200B5B21E7A46843656F48CC872DF3AFB5
8D86B9B1B70DF0F8BF4F1A9D845350075385C2FAC40F64A57A633024956B42D2
D155265D68692B1DD96FCB1CFEA6F03B67B191D75D9251636A71B366F484AC7D
D61A648087A690F42FCD56728047D5F145B28180BC49A70304D616C17E08688B
C2AB34D235D029750826D6A02D57888DCAF080A15DCB2D8AE91CB7938E088D74
26B3BCAD6531F243F29763FBDE3F087E3965B6148DD52590D1BA20021D15293C
FC> |-
/l <1C60D8A8C9B887F0644B8EDF7E394B2B17D648B60040EB6DBE2B8847CEEB
752ACB6F5AD37E1FA4A050E94786AD18088ED8DC4464B0DE1BE6F00A802A61F4
A34EAA84659717045B37042963C71284B8AC29AE9E0F8305F213AE4489E2DB55
EC12AFE94E44F64596D135D1BEB997D5B9A0BB5A35AE0E0CE05B7B1F89372931
9FB81429> |-
/m <1C60D8A8C9B6D24F7D3842850F4949AEB6B9100F2B78F4C8889450CED823
786FEB32A1B63E88AD56EE02413123CB64791A93EF92133FE4595DA2691E3035
F9F72C6031AE554C5E100D6D83A5170AEAC660F3CD2D2E423C32E393EEDCE69B
38CE6373F6B6777FFB71A30474298882FF21A6474EA00B23874CB701D4949FDA
B683EF52B401CF01FBFB5320858391C36D1B0A5131B6AD88B31FBA5AF7369B53
8683192205F94F973772FC0D1A80750F5CA55E65F4A8760D9FFB5A3E462EB76A
F894987A3AB123C31C6F61A2DE381C11A73194BB9FA663DEB4E0E047953FDCCB
40254C512459EA81EABD29705BEDA8917220B4CD736962EC932D0F91B2A5DC80
8623631D3854D7B6297589945BF94293721596CC4C62C71F5A8040654672D59A
8C73FC39F2C6919502A1FD8EB49A6BB72701DD42520B2F6CD223AC11A22A5CED
8614ABBE01C624D0AED39BB3AE4E8B513F61C37C6BA440280E139545B39C87A0
6867746DDC81F39BACA8E048A7276011988ACE081223D841AEA6DE2418F28BD5
9A30A454BE8DAE3786DDCC7D1BEEFB13E445F279EE7EA8CB61C194C9B25497E6
925AF3BEE4F64F897F4A57BD4C4A1E06EBC8223C35049061> |-
/n <1C60D8A8C9B78E05EAADB0123115B3BD5BA83FAABE276A1BF5A23DB55CF4
C30D8A20FB7C70B167834EB1FCB2A451DA55CBA774B9C40CA48F3B7AD8E41B3F
0C2665E2AF85619561E070ABE3E4EFEC9983825210D2A0599E48D162F3133798
2CE0D843D2D41F1F7924A343E37439CC75937984C88A0080C28B8BFBFB8F444A
FA11CBAA4BCF4C8D3087770F88F26B0A8B30E46AE29C6BF9720949C50E19D624
8BB58DE961D63651843F9B3B8EE9AA75CDE28D1F95D7703116FE7AA23945B580
8B97F9947888D114BE2523F872057145410E975A2CA83D430B49A7CAE2661901
2C2444BEBF6DC1397EFC38FADD0435CE6D4A1478744BC983827B31CF502C4487
AF1E48BBC2EB6153C1C5367B96A212BCD3FEE3B9DEC12C4E> |-
/r <1C60D8A8C9B80F37F21112BA81A46E1A1A16E843530DEF66F6901DB9A722
A358478F1B0799F6041BFFF7D05EE602307D474F1DB84BF73C4EC1FF13A4D2D5
B370042C9A314A700782F944BCE36786AFBD72FA62259FABABA90F1F2BE008B7
993D5E1813324C60BD953524A1040FB1A790007846FA5DED6ACE6C7D436FF1C0
B97E4BBDDDA28F066E204B37F8321753E1473DDD8EE76C12A0011B04832F5C47
D3FF30EE31FE70EF82623D628622FAE52A70984ACD43F9718BC02CE5AA3F5832
FAB343FD6D53F2375C811D54E6B415E257D8BB3A2542930D7E0D6DF96FAA0688
822B6655966904164F87FA904C272BFAD51FAFF11CA14EBB5F6472235CA20889
D111211CF90F83807D99EF12B3B6827C1CA4720D03729BEEEA22A1313C4BDCE8
78453F5E6DCAD449D1F3B7D54D32C49DA0> |-
/s <1C60D8A8C9B7347873EC11B675AA6F6B461106EA2C61A0AE571750A08267
9294B529694EFA74202690239BCD02BDE93B33BD8DE0F0F0056B04093EE6C4E8
3D6F00E22E61E0A53509E628E3614EF2EF2CA3A8502F22A560E46ED3E4AED0BF
D271CCE464114B6332D17C4A046EF74FFF1283283A642C8C06B85A0D72357B56
65CD862A8E3D30EFFEE242F88B9C12DF917A74252DB462B49970474974786963
8F8FD8E70AF4405F95B11DFD154B7101933A31068AA1E65CC021277CCB9EC0EA
A7B978A081D1A4252A6693984AAF2CEC4413666DCF8B310A71A67C6E7B1DB954
E186EA16C83551DD0516966C156876A3DE36ED7253FFBBC1504668DC98301370
300A04E6753189718288CD7EF0ED409765A888272FDB25977C8A74BC113E188B
3DF6A69F7851A7E60496291AA0B15532572787EAC7F32F09F1E72589E0E74E03
49313472D872E64E7DB78BAB05598FE04B70E52D818F2F7B0B56A5688299352E
62F16B011595A7D7701FD641BB2FCFCADB2E33263B8A208C4183E753AD5C2586
1BF542F2009EA70BB7A67B3BE61085D37469DCDCB97CB2B41A0E2B4DB3BE67C2
BA9A1482E51611AB708AAB8BC978B06758006F3287DD3A3CABA09A9F59A21B0D
386F88> |-
/t <1C60D8A8C9B81D89610FFBFD2F87712D18AB3F2201A6640C86A2CD8B533C
9E9613B748962BD3321D998A13FF4A410946A55D4AE3CDBD806BF0BBD38F8435
DE762245288A30426FF012946D0E2E36D4EBD7E81C44D06926164FB6F91AA67E
EAF9AC4BC77C470E117D4634F7F90C1771292F30769DD575DD5B3F0D104730DE
CDCF41E7D59747B6A2D0EF143B06FA6BBA4F9E744BD6E4827C627C6619571415
1061BE64BA6B45A36E91B80557E1CF613697CA2B60F02790B7CBE3BBB5ABEC19
0F88D2844D8139B7D141D834706D11BA3108576C531B823977B908AC9FF80DF3
22060C351BA43A8EA770319D1AF8085E209B940EDEE1B85419EF87F01EED1C4E
0307B2BC95989AC0998A9EA8A0DFB99539E7D0B836F4EB9E9D6147AFB55082A1
E63F64D57A8E7F63465BA308FA03AEB2787221627AF8F99523DB260C> |-
/y <1C60D8A8C9B776A06C625D9575F6DBFFEE93EC1CB9A335325BD9E365428E
EA1BD5B7A305D96437BF24D2E59BF0DFE2360EDCA01120D4DA769624265DE986
6EA970971BD84B20E81D769B1F13D7A21674FB5E8C4844518680BB1DE710B743
8090302965C932285C6A137B1923CFCED74D1C71B686BDF1263BE348B2F06F53
4EDA8A2856376F820F03A76FD878686946B3B179B9CD823AA55541A535E0CCC6
D2D21B3D6A73597DDD43BBEFD829B55A26664F2F8221FA6814449CF6D0CFA134
92A2A7CF82E9D18F6E0413> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HHKXOW+Calibri /Encoding get
dup 46 /period put
dup 58 /colon put
dup 83 /S put
dup 97 /a put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 121 /y put
pop
%ADOEndSubsetFont
/HHKXOW+Calibri*1 
[46{/.notdef}rp /period /.notdef /zero /one /two 7{/.notdef}rp /colon 
24{/.notdef}rp /S 13{/.notdef}rp /a 3{/.notdef}rp /e /f /g 
/.notdef /i 2{/.notdef}rp /l /m /n 3{/.notdef}rp /r 
/s /t 4{/.notdef}rp /y 134{/.notdef}rp]
HHKXOW+Calibri nf
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
178.92 318.84 mo
(filename:System.String)
[2.03792 1.49652 1.49652 3.3027 3.47714 3.18018 5.32797 3.3027 1.79158 3.0636 3.00235 2.57945 
2.23781 3.3027 5.32797 1.68497 3.0636 2.23781 2.33099 1.49652 3.47714 0 ]xsh
210.48 304.62 mo
210.42 307.32 li
209.76 307.32 li
209.82 304.62 li
cp
210.42 309.3 mo
210.42 310.32 li
209.7 310.32 li
209.76 309.3 li
cp
212.76 306.54 mo
210.06 310.98 li
207.48 306.42 li
207.48 306.18 li
207.6 306 li
207.84 305.94 li
208.08 306.12 li
210.36 310.14 li
209.76 310.14 li
212.16 306.18 li
212.4 306 li
212.64 306.06 li
212.76 306.24 li
212.76 306.54 li
.92929 .879301 .889677 .799283 cmyk
f
210.48 304.62 mo
210.42 307.32 li
209.76 307.32 li
209.82 304.62 li
cp
210.42 309.3 mo
210.42 310.32 li
209.7 310.32 li
209.76 309.3 li
cp
212.76 306.54 mo
210.06 310.98 li
207.48 306.42 li
207.48 306.18 li
207.6 306 li
207.84 305.94 li
208.08 306.12 li
210.36 310.14 li
209.76 310.14 li
212.16 306.18 li
212.4 306 li
212.64 306.06 li
212.76 306.24 li
212.76 306.54 li
f
161.34 298.86 mo
161.34 295.74 183.18 293.22 210.12 293.22 cv
237.12 293.22 258.96 295.74 258.96 298.86 cv
258.96 301.98 237.12 304.56 210.12 304.56 cv
183.18 304.56 161.34 301.98 161.34 298.86 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
160.98 298.92 mo
160.98 298.68 li
161.04 298.62 li
161.04 298.5 li
161.1 298.44 li
161.16 298.26 li
161.28 298.08 li
161.34 298.08 li
161.46 297.9 li
161.64 297.78 li
163.53 296.399 167.348 295.827 169.62 295.38 cv
170.94 295.14 li
182.988 293.44 195.445 293.002 207.6 292.86 cv
210.18 292.86 li
210.12 292.86 li
212.64 292.86 li
215.16 292.92 li
226.655 293.035 238.64 293.561 250.02 295.26 cv
251.34 295.5 li
253.462 295.949 257.068 296.492 258.78 297.9 cv
258.96 298.08 li
259.08 298.26 li
259.14 298.26 li
259.2 298.44 li
259.2 298.5 li
259.26 298.62 li
259.26 298.68 li
259.32 298.86 li
259.32 298.92 li
259.26 299.04 li
259.26 299.16 li
259.2 299.28 li
259.2 299.34 li
259.14 299.46 li
258.96 299.64 li
258.96 299.7 li
258.78 299.82 li
258.6 300 li
257.022 301.2 253.286 301.889 251.34 302.28 cv
250.02 302.52 li
238.402 304.252 226.83 304.636 215.1 304.86 cv
210.12 304.86 li
210.36 304.32 li
210.48 304.5 li
210.42 304.68 li
210.3 304.86 li
207.6 304.86 li
194.816 304.711 181.591 304.366 168.96 302.28 cv
168.3 302.16 li
167.7 302.04 li
167.16 301.92 li
165.87 301.694 164.639 301.26 163.38 300.9 cv
163.02 300.72 li
162.72 300.6 li
162.314 300.487 161.21 299.792 161.1 299.34 cv
161.04 299.28 li
161.04 299.16 li
160.98 299.04 li
cp
161.64 298.98 mo
161.64 298.92 li
161.7 299.04 li
161.64 298.98 li
161.7 299.1 li
161.82 299.28 li
161.82 299.22 li
162.06 299.46 li
163.746 300.626 167.085 301.227 169.08 301.62 cv
169.68 301.74 li
170.4 301.86 li
181.934 303.6 193.493 303.971 205.14 304.2 cv
210.12 304.2 li
209.88 304.8 li
209.88 304.74 li
209.76 304.62 li
209.82 304.38 li
209.94 304.26 li
210.12 304.2 li
215.683 304.228 221.362 304.098 226.92 303.84 cv
229.14 303.78 li
231.3 303.66 li
236.224 303.37 241.361 303.05 246.24 302.34 cv
247.74 302.16 li
249.24 301.92 li
249.9 301.86 li
252.119 301.405 256.356 300.828 258.18 299.46 cv
258.36 299.34 li
258.48 299.22 li
258.42 299.28 li
258.54 299.16 li
258.6 298.98 li
258.6 299.04 li
258.66 298.92 li
258.6 298.98 li
258.66 298.86 li
258.66 298.92 li
258.6 298.8 li
258.6 298.86 li
258.6 298.68 li
258.6 298.74 li
258.48 298.5 li
258.36 298.44 li
258.24 298.26 li
258 298.14 li
257.82 298.02 li
257.58 297.9 li
256.98 297.66 li
256.68 297.48 li
256.32 297.36 li
255.9 297.24 li
254.556 296.836 253.196 296.547 251.82 296.28 cv
251.22 296.16 li
249.9 295.92 li
237.73 294.066 224.936 293.709 212.64 293.52 cv
210.06 293.52 li
210.12 293.52 li
207.6 293.52 li
205.14 293.58 li
193.894 293.722 182.203 294.213 171.06 295.8 cv
169.08 296.16 li
167.789 296.387 166.51 296.679 165.24 297 cv
164.4 297.24 li
163.752 297.378 162.885 297.85 162.24 298.14 cv
162.12 298.26 li
161.94 298.38 li
161.82 298.56 li
161.82 298.5 li
161.76 298.62 li
161.64 298.74 li
161.7 298.68 li
161.64 298.86 li
161.64 298.74 li
161.64 298.92 li
161.64 298.86 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
HHKXOW+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/quotedblleft <1C60D8A8C9B719BD263A1AF354EC5380226ABD66C3588D767
3C4206603902C686158EAAE3EE1FD179896D204689DF1D1FF08A68E2411768E8
F84B943A800246C140705D7DAB71B09FDC07EC25206FF9E83DCE61DDD8F4E123
FB60FC12D0DB1BF237975613E80CB5BD25AB9F5DEB82B12BCB099D5E2825C445
BC4A8485C3A9B3D8BFAEF6372C53168A8C037AA4299CF6B3A2ACC438B09A5327
702123764F4619C2AF3D1855ED0C3A1FC1D390FCBE1C135FEE84A99369704984
EA61985C7F3E156921A76180EE2960068FB4F91F1203AA3272B19D31BE3064F4
A7C1E997B2E68611C1A33E24A042B6E8703E895980646B8C413E3CBFF122A3F1
EB9299440784642DECD725046B3561C0F7A9EAE20A3D9C904294621176F0302B
30B55907ABC42F137C5BED5848B81EA98E9678BB42FF478809861767BD2EE> |-
/quotedblright <1C60D8A8C9B719BD2961DC40BE12F59F3590E923CFF3F498
5D0E12C55132E7BF426E65A1E85924158623BFED17955B7EB21835F0EEE82250
D83DF4B367777642C03A1D6EAC28DBCBF8A2049E54831679A5E305C44A13B5F4
C3FEDE424B18B42E3446B0DE8151FEFE8F7A954930EA9E27EEBD1E414BEAD6E5
25D958F7A1F7AFB1D4572FAF255300E9A1FE007FF85449B20F225BB728276C72
BADB4AA88FBD70AE943909BDD5237F5CA1962CEC43AF6101FA330C278E331B97
A1FCECA825317A4BD5E5990D0252D184A5600245ED0B1395F60F577322EF5A84
F2201F9877CDC03DEE480BAD0F482CE14DDA1BE3D6EE917B2820EAAA7BC526B7
B4EE479D1581C90E4DE4778D1C5C8398F78D436FB60AD5F6C20D525210FE2268
E7C8BCDB4D4103B81253836412CF6574964073DD14E79DF03AE718EB92DC28DC
A31D3B0354> |-
/d <1C60D8A8C9B78E05EAA3CECCCC7ABA6A35E55F211820F669BFFF2D107F3F
003F84456D947B5557966A2009812B81B51372EB70EB729C8C82B63A473DB516
1C83385AAD04B71C9D388B2F86E7C2E91E06E59E76C532F8A600B530589A218B
CA1E889366120C885033631C7850C65A7F9274D24F9BF6FA89E174B53B0E1A2C
F6D783F32D4C0BE4ACD3EEAF66A8BEC8DB7AC7ADBF3C9CDF5485D002662D310A
CCD320AD0234A2F2251E7C0B1667BFFC7E10EE40C7CB623518E3E168137CE699
E133B767C86E16CACCA64A58BD9D7F6E66BED6D6FE5D80E0381141549FFB2FBF
94ECD2D262EB097909F9092B71E3573FC9B4FD273505C685B327AE9095A2A155
45986A397AE2796BDB3888D16AF3DD82BF32621BC8C1393814540227FC926F77
872F2FAF5DD33717EB461ACFE3EE5C279294EBB5AADC09C8B10C3F2CB25CCD97
C6> |-
/x <1C60D8A8C9B76A0D39202D65B3E28787C1CC43B503732F31391DBCE572A2
CA2079F64BC5B594607AA87D000626A2545C2F92C4488974BEE02BFDB5EF846B
F92A6767B071A1575D7917AC4A860992133465690B1A7D35F13489CCB65C68A5
51A50F7D5FE7268F974AE88AF02F0676DC68E49F56F9749803892469EB313C81
6FA79F4E722677598E3E97FE77F7E623BDC63C2F2C92A6A872F78617F1E4F886
E2D0FE3546DBCDFFFA5E4DDD143D076BF94A42BE3EB61D005FC9D628F696E707
AC2730FB246E5D69586A7207A5C66CA927382E61516706448C9FC049414B97AF
ACB4BF470D99F74F500BB6FED6F03C0B03924527D6EBE063E7443300BBFAE73D
541C5D7B5CED7E3DA24F8B93E2A8ABB9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HHKXOW+Calibri /Encoding get
dup 32 /quotedblleft put
dup 33 /quotedblright put
dup 100 /d put
dup 120 /x put
pop
%ADOEndSubsetFont
/HHKXOW+Calibri*1 
[32{/.notdef}rp /quotedblleft /quotedblright 12{/.notdef}rp /period /.notdef /zero /one 
/two 7{/.notdef}rp /colon 24{/.notdef}rp /S 13{/.notdef}rp /a 2{/.notdef}rp 
/d /e /f /g /.notdef /i 2{/.notdef}rp /l 
/m /n 3{/.notdef}rp /r /s /t 3{/.notdef}rp /x 
/y 134{/.notdef}rp]
HHKXOW+Calibri nf
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
180.66 301.08 mo
( index!:System.String)
[2.76723 1.50851 3.47981 3.4798 3.30005 2.86711 2.76723 1.8029 3.05693 3.00035 2.58746 2.21449 
3.30003 5.34129 1.67699 3.04028 2.21449 2.34232 1.49652 3.47981 0 ]xsh
371.28 317.58 mo
371.28 314.52 394.62 312 423.36 312 cv
452.1 312 475.38 314.52 475.38 317.58 cv
475.38 317.58 475.38 317.58 475.38 317.64 cv
475.38 320.7 452.1 323.22 423.36 323.22 cv
394.62 323.22 371.28 320.7 371.28 317.64 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
370.98 317.64 mo
370.98 317.4 li
371.04 317.34 li
371.011 317.006 371.908 316.282 372.18 316.2 cv
372.48 316.02 li
372.84 315.9 li
374.262 315.275 376.005 314.949 377.52 314.58 cv
378.12 314.46 li
379.44 314.22 li
393.967 312.116 408.696 311.677 423.36 311.64 cv
423.54 311.7 li
423.66 311.82 li
423.36 311.64 li
426 311.64 li
428.7 311.7 li
431.28 311.7 li
443.257 311.921 455.36 312.469 467.22 314.22 cv
467.94 314.34 li
469.14 314.58 li
470.499 314.835 471.822 315.248 473.16 315.6 cv
473.52 315.78 li
473.88 315.9 li
474.18 316.02 li
474.48 316.2 li
474.72 316.32 li
474.96 316.5 li
475.2 316.62 li
475.32 316.8 li
475.5 316.98 li
475.62 317.16 li
475.62 317.22 li
475.68 317.34 li
475.68 317.4 li
475.74 317.58 li
475.74 317.64 li
475.68 317.82 li
475.51 319.401 470.388 320.342 469.2 320.64 cv
468.54 320.76 li
467.94 320.88 li
455.944 322.805 443.41 323.253 431.28 323.52 cv
428.64 323.52 li
426 323.58 li
423.36 323.58 li
423.48 322.92 li
423.66 323.1 li
423.66 323.34 li
423.54 323.52 li
423.36 323.58 li
420.66 323.58 li
418.02 323.52 li
415.44 323.52 li
412.86 323.46 li
410.34 323.4 li
407.88 323.34 li
405.42 323.22 li
403.08 323.16 li
396.97 322.82 390.854 322.478 384.78 321.72 cv
383.94 321.66 li
381.6 321.3 li
379.615 321.058 377.788 320.73 375.84 320.28 cv
375.3 320.16 li
374.82 319.98 li
373.719 319.734 372.688 319.295 371.7 318.78 cv
371.34 318.42 li
371.22 318.24 li
371.16 318.24 li
371.1 318.06 li
371.04 318 li
371.04 317.88 li
370.98 317.82 li
cp
371.64 317.7 mo
371.64 317.64 li
371.7 317.82 li
371.64 317.76 li
371.76 317.88 li
371.7 317.82 li
371.94 318.06 li
373.801 319.457 377.973 320.012 380.22 320.46 cv
380.94 320.52 li
381.72 320.64 li
393.567 322.274 406.067 322.741 418.02 322.86 cv
420.66 322.92 li
423.36 322.92 li
423.18 323.52 li
423 323.34 li
423 323.16 li
423.12 322.98 li
423.3 322.92 li
426 322.92 li
428.64 322.86 li
431.28 322.86 li
436.32 322.74 li
438.78 322.68 li
441.24 322.56 li
443.58 322.44 li
445.86 322.38 li
451.471 322.063 457.08 321.618 462.66 320.94 cv
463.44 320.88 li
465 320.64 li
467.154 320.342 473.054 319.499 474.72 318.06 cv
474.84 318 li
474.96 317.82 li
474.96 317.88 li
475.02 317.76 li
475.02 317.82 li
475.08 317.64 li
475.02 317.7 li
475.08 317.58 li
475.08 317.64 li
475.02 317.52 li
475.08 317.58 li
475.02 317.4 li
475.02 317.52 li
474.96 317.4 li
474.9 317.28 li
473.413 315.93 468.382 315.051 466.44 314.82 cv
465 314.58 li
452.167 312.853 438.936 312.44 426 312.3 cv
423.36 312.3 li
423.06 312.12 li
423.36 312.3 li
420.66 312.3 li
418.02 312.36 li
406.075 312.469 393.566 312.983 381.72 314.58 cv
380.94 314.7 li
380.28 314.82 li
378.281 315.049 373.561 315.89 371.94 317.16 cv
371.7 317.4 li
371.76 317.34 li
371.64 317.46 li
371.7 317.46 li
371.64 317.58 li
371.64 317.52 li
371.64 317.64 li
371.64 317.58 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
HHKXOW+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/j <1C60D8A8C9B87DE052CBE8EA1F435A396D74A156D684A1B719256AFD088D
E495AA86AB7CCD817A938296CF0F8399FCEE3662F575F22BC642EE0CBF88CC1C
A4E7C552C32B03DACABF153EC87432328A1B586B939F59CFDC9731F30AA1A68D
B84B1EFDC126626FAA4641C6597CC22073BC4D69999C5D6D474DD6908804D154
4FDE037D86AE8A6C3A9927A20091D90229324CDD9FA2941F8BE3C5B43DD929A0
6AA1AD6E0B73E9E2E606C9A69DE2B4F2C6A9FE4A4F1F9F102378426C65CF9936
58CBD59E49F9CFE61F443718943CF94BE0B4F9059A84581CE3CF237B076901A7
8460D8D22ECAD343A9B673E5DB1B8CDBC20B31ADB6632AE6BB266CC352037837
A50F2914B3EF21D046A7AF8296D6E8210A2059C31E> |-
/v <1C60D8A8C9B77771B09AD302B4CB2C18543FBB2E7E6342969838CF2C3340
35065E921A40A75882974808107F0F5C3AC1CD7A10BA6075C83F1DE48B37CB4A
8C976EF88D75006F44747CDCEE5069475B014DB29A6BE7A1F25A9ABA2642AE0B
12F169B7C26C5BB2C6831FDDDADD15DE53220C2A354D3DB65E39662BC3F52DBE
3E6F55BA2941DB48175EDD867619C5C4F72AF6BDE0336B64DD708A70A9B30434
46299A2061A5B31F71BCE056DDAEEEA357563374E361165ED57E4A9861B82CE2
6F9B6BF6D6DD8B8E105752A19647DA81C937CF2BEAF032E992A09CE082764919
EAB1094210448A121FEB79BB41C951E6B43D3384AE29644009EB9FEBB553A8B9
5EE31D86> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HHKXOW+Calibri /Encoding get
dup 106 /j put
dup 118 /v put
pop
%ADOEndSubsetFont
/HHKXOW+Calibri*1 
[32{/.notdef}rp /quotedblleft /quotedblright 12{/.notdef}rp /period /.notdef /zero /one 
/two 7{/.notdef}rp /colon 24{/.notdef}rp /S 13{/.notdef}rp /a 2{/.notdef}rp 
/d /e /f /g /.notdef /i /j /.notdef 
/l /m /n 3{/.notdef}rp /r /s /t /.notdef 
/v /.notdef /x /y 134{/.notdef}rp]
HHKXOW+Calibri nf
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
391.68 319.8 mo
( index!:java.lang.String)
[2.76923 1.5105 3.48181 3.48181 3.30203 2.86911 2.76923 1.80292 1.61835 3.17554 2.99564 3.17551 
1.66367 1.5105 3.17551 3.48181 3.12216 1.66367 3.0423 2.21649 2.34232 1.5105 3.48181 0 
]xsh
gsave
57.12 240.6 mo
537.9 240.6 li
537.9 330.72 li
57.12 330.72 li
cp
eclp
376.98 334.14 mo
376.98 331.02 397.74 328.5 423.36 328.5 cv
448.98 328.5 469.68 331.02 469.68 334.14 cv
469.68 337.26 448.98 339.78 423.36 339.78 cv
397.74 339.78 376.98 337.26 376.98 334.14 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
376.68 334.14 mo
376.68 333.9 li
376.8 333.54 li
376.98 333.36 li
377.1 333.18 li
377.28 333 li
377.52 332.88 li
377.76 332.7 li
378 332.58 li
378.3 332.4 li
379.639 331.876 380.532 331.573 381.96 331.26 cv
383.04 331.02 li
384.84 330.66 li
389.619 329.797 394.464 329.378 399.3 328.98 cv
401.22 328.86 li
403.2 328.74 li
409.929 328.322 416.618 328.147 423.36 328.14 cv
423.54 328.2 li
423.66 328.32 li
423.66 328.38 li
423.36 328.14 li
425.76 328.2 li
428.1 328.2 li
430.44 328.26 li
441.101 328.484 453.15 328.953 463.62 331.02 cv
464.7 331.26 li
465.889 331.5 469.749 332.47 470.04 333.9 cv
470.04 334.38 li
469.811 334.987 469.62 334.998 469.2 335.4 cv
468.96 335.58 li
468.66 335.7 li
467.733 336.185 466.725 336.503 465.72 336.78 cv
465.24 336.9 li
464.7 337.02 li
464.22 337.14 li
453.438 339.363 441.366 339.738 430.38 340.02 cv
428.1 340.08 li
423.36 340.08 li
423.54 339.48 li
423.66 339.66 li
423.66 339.9 li
423.54 340.02 li
423.36 340.08 li
418.62 340.08 li
416.28 340.02 li
414 339.96 li
409.56 339.84 li
407.4 339.78 li
405.3 339.66 li
400.369 339.401 395.443 339.046 390.54 338.46 cv
388.98 338.28 li
387.54 338.04 li
386.16 337.86 li
384.005 337.393 378.861 336.722 377.16 335.1 cv
376.98 334.92 li
376.86 334.74 li
376.8 334.74 li
376.74 334.56 li
376.74 334.5 li
376.68 334.38 li
376.68 334.32 li
cp
377.34 334.26 mo
377.34 334.2 li
377.34 334.32 li
377.34 334.26 li
377.4 334.44 li
377.4 334.38 li
377.46 334.5 li
377.58 334.62 li
379.051 335.802 381.955 336.299 383.76 336.72 cv
384.96 336.96 li
386.22 337.2 li
396.939 338.818 407.795 339.202 418.62 339.42 cv
423.36 339.42 li
423.12 340.02 li
423 339.84 li
423 339.66 li
423.12 339.48 li
423.36 339.42 li
428.1 339.42 li
434.94 339.24 li
437.1 339.18 li
439.26 339.06 li
441.36 339 li
446.27 338.732 451.178 338.399 456.06 337.8 cv
457.62 337.62 li
459.06 337.38 li
460.44 337.2 li
462.551 336.729 467.354 336.105 469.08 334.62 cv
469.32 334.38 li
469.26 334.44 li
469.38 334.26 li
469.32 334.32 li
469.38 334.2 li
469.38 334.26 li
469.38 334.08 li
469.38 334.14 li
469.38 334.02 li
469.38 334.08 li
469.32 333.96 li
469.38 334.02 li
469.26 333.84 li
469.32 333.9 li
469.26 333.78 li
469.14 333.66 li
467.274 332.27 463.989 331.836 461.76 331.32 cv
460.44 331.08 li
459.06 330.9 li
457.62 330.66 li
453.565 330.151 449.518 329.785 445.44 329.52 cv
441.36 329.28 li
435.365 328.981 429.364 328.822 423.36 328.86 cv
423.18 328.8 li
423.06 328.68 li
423.06 328.62 li
423.36 328.8 li
420.96 328.86 li
418.62 328.86 li
407.904 329.011 396.831 329.507 386.22 331.08 cv
384.96 331.32 li
383.76 331.56 li
381.841 332.031 379.151 332.421 377.58 333.66 cv
377.52 333.78 li
377.4 333.9 li
377.4 333.84 li
377.34 334.02 li
377.34 333.96 li
377.34 334.08 li
377.34 334.02 li
377.34 334.14 li
377.34 334.08 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
gsave
57.12 240.6 mo
537.9 240.6 li
537.9 330.72 li
57.12 330.72 li
cp
eclp
423.72 323.22 mo
423.66 325.92 li
423 325.92 li
423.06 323.22 li
cp
426 324.06 mo
423.3 328.5 li
420.78 323.94 li
420.72 323.7 li
420.9 323.52 li
421.14 323.46 li
421.32 323.64 li
423.6 327.66 li
423 327.66 li
425.4 323.7 li
425.64 323.58 li
425.88 323.58 li
426.06 323.82 li
426 324.06 li
.92929 .879301 .889677 .799283 cmyk
f
423.72 323.22 mo
423.66 325.92 li
423 325.92 li
423.06 323.22 li
cp
426 324.06 mo
423.3 328.5 li
420.78 323.94 li
420.72 323.7 li
420.9 323.52 li
421.14 323.46 li
421.32 323.64 li
423.6 327.66 li
423 327.66 li
425.4 323.7 li
425.64 323.58 li
425.88 323.58 li
426.06 323.82 li
426 324.06 li
f
166.92 330.74 mo
253.26 330.74 li
253.26 328.14 li
166.92 328.14 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
166.56 328.14 mo
166.68 327.96 li
166.92 327.84 li
253.26 327.84 li
253.5 327.96 li
253.62 328.14 li
253.62 339.54 li
253.5 339.78 li
253.26 339.84 li
166.92 339.84 li
166.68 339.78 li
166.56 339.54 li
cp
167.22 339.54 mo
166.92 339.18 li
253.26 339.18 li
252.96 339.54 li
252.96 328.14 li
253.26 328.5 li
166.92 328.5 li
167.22 328.14 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
gsave
57.12 240.6 mo
537.9 240.6 li
537.9 330.72 li
57.12 330.72 li
cp
eclp
505.68 307.98 mo
506.46 307.98 li
507.18 308.04 li
508.076 308.108 508.265 308.087 509.1 308.34 cv
509.28 308.4 li
509.4 308.46 li
509.46 308.46 li
509.64 308.64 li
509.7 308.7 li
509.7 308.76 li
509.76 308.88 li
509.76 348.9 li
509.7 348.84 li
509.76 348.9 li
509.7 348.78 li
509.76 348.84 li
509.7 348.84 li
509.76 348.9 li
509.76 348.84 li
510 348.96 li
511.002 349.348 513.048 349.146 513.48 349.38 cv
513.54 349.56 li
513.48 349.68 li
513.3 349.8 li
512.52 349.8 li
511.8 349.86 li
511.2 349.92 li
510.9 349.92 li
510.66 349.98 li
510.42 349.98 li
510.18 350.04 li
510 350.1 li
509.76 350.22 li
509.76 350.16 li
509.7 350.22 li
509.76 350.22 li
509.7 350.28 li
509.76 350.16 li
509.7 350.22 li
509.76 350.16 li
509.76 390.18 li
509.7 390.3 li
509.7 390.36 li
509.46 390.6 li
509.4 390.6 li
509.28 390.66 li
509.1 390.72 li
508.296 390.996 508.028 390.94 507.18 391.02 cv
506.46 391.08 li
505.68 391.08 li
505.68 390.6 li
506.46 390.6 li
507.78 390.48 li
508.08 390.42 li
508.32 390.42 li
508.56 390.36 li
508.92 390.24 li
509.1 390.24 li
509.22 390.18 li
509.16 390.18 li
509.28 390.12 li
509.22 390.18 li
509.28 390.12 li
509.22 390.18 li
509.22 390.12 li
509.22 390.18 li
509.22 350.1 li
509.28 350.04 li
509.34 349.92 li
509.4 349.86 li
509.4 349.8 li
509.52 349.74 li
509.58 349.74 li
509.7 349.68 li
510.06 349.56 li
510.54 349.44 li
510.84 349.44 li
511.14 349.38 li
511.8 349.32 li
512.52 349.32 li
513.3 349.26 li
513.3 349.8 li
512.52 349.8 li
511.51 349.687 510.474 349.709 509.52 349.32 cv
509.4 349.26 li
509.4 349.2 li
509.34 349.14 li
509.28 349.02 li
509.22 348.96 li
509.22 308.88 li
509.22 308.94 li
509.22 308.88 li
509.28 308.94 li
509.22 308.88 li
509.28 308.94 li
509.16 308.88 li
509.22 308.88 li
509.1 308.82 li
508.98 308.82 li
508.8 308.76 li
508.56 308.7 li
508.32 308.64 li
508.08 308.64 li
507.78 308.58 li
507.18 308.52 li
506.46 308.46 li
505.68 308.46 li
.92929 .879301 .889677 .799283 cmyk
f
94.8 353.52 mo
94.02 353.52 li
93.3 353.46 li
92.64 353.4 li
92.34 353.4 li
92.04 353.34 li
91.8 353.28 li
91.62 353.28 li
91.38 353.22 li
91.2 353.16 li
91.08 353.1 li
90.96 352.98 li
90.9 352.98 li
90.84 352.86 li
90.78 352.8 li
90.78 352.74 li
90.72 352.68 li
90.72 323.88 li
90.78 323.94 li
90.72 323.88 li
90.78 324 li
90.72 323.94 li
90.78 323.94 li
90.66 323.88 li
90.6 323.88 li
89.715 323.413 87.352 323.64 87 323.4 cv
86.94 323.22 li
87 323.1 li
87.308 322.865 89.865 322.993 90.6 322.62 cv
90.72 322.56 li
90.78 322.5 li
90.72 322.56 li
90.78 322.5 li
90.72 322.62 li
90.78 322.56 li
90.72 322.62 li
90.72 293.82 li
90.78 293.76 li
90.78 293.7 li
90.84 293.58 li
90.9 293.52 li
90.96 293.52 li
91.08 293.4 li
91.2 293.34 li
91.38 293.28 li
91.793 293.136 92.886 293.023 93.3 292.98 cv
94.8 292.98 li
94.8 293.46 li
94.02 293.46 li
93.135 293.567 92.226 293.531 91.38 293.82 cv
91.26 293.88 li
91.32 293.88 li
91.2 293.94 li
91.26 293.88 li
91.2 293.94 li
91.26 293.82 li
91.26 293.88 li
91.26 293.82 li
91.26 322.68 li
91.2 322.74 li
91.14 322.86 li
91.08 322.92 li
91.08 322.98 li
90.96 323.04 li
90.222 323.339 88.688 323.505 87.96 323.46 cv
87.18 323.52 li
87.18 322.98 li
87.96 322.98 li
88.97 323.093 90.006 323.071 90.96 323.46 cv
91.08 323.52 li
91.08 323.58 li
91.14 323.64 li
91.2 323.76 li
91.26 323.82 li
91.26 352.68 li
91.26 352.56 li
91.26 352.62 li
91.2 352.56 li
91.26 352.62 li
91.2 352.56 li
91.32 352.62 li
91.26 352.62 li
91.5 352.74 li
91.68 352.74 li
92.4 352.92 li
92.7 352.92 li
93.3 352.98 li
94.02 353.04 li
94.8 353.04 li
f
grestore
%ADOBeginSubsetFont: QJJAAA+Calibri-Bold Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /QJJAAA+Calibri-Bold def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 76 /L put
dup 101 /e put
dup 105 /i put
dup 110 /n put
def
/FontBBox {-493 -194 1239 952} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
6 dict dup begin
/.notdef <1C60D8A8C9B7A086528E2CBE7FD4F03CC6CDCA18E09BCC917FA5F1
19478AAC0A696931453BF661861F40ACE8D15EA0278E8F88478BB0248E8D1904
2FB8B7F2BB2D4ECFE961B3EEB80565197E481D427DFF375EC95F16C0E36FE28A
EC2A0702F6CB5ACA5B242B6593847C74B58C6FBE25BCF0D4AFF25D49578CAB0D
929B025DECF86FE8C45E91FC3804785896842CEEC7085BA98EF5BCC94B208BF4
3A5FA51448171853E476E618A0AB76D0CDCEE51B8CF3FCD6DA051824D7EFC40D
8D270BAD39624CE3E5CBFE64B165BA24EF48FCEC82F8DEB8BFCD829A07FF03FF
E381E622BF0967DB53309A79D2F393F52C4B535EC59CAFAAC152061A92D31A3A
6E83C18D63056F4453027EAA702C494809677EB8C59BD219046DE492EABC7DF1
9D085C93C98D2A8DDC68AF0F5D7D82447ED6165A8DE95E6965A0F15A3F7696EA
E508CE290FD5B2FFA8A49A20B157645C3C3FEFBC64E2B40E75B90474094AF159
9689FA1EAB0D131F6DB991FC0D5943DE54CA9E5ECDA986A63CDF0394AF79DB39
8CE8AC4F02FDBD88EE6AE535CFB6C3B33C157AAFFBEC52BA3DACE77ABDA0C787
220FBA75DA1E45C945> |-
/one <1C60D8A8C9B7A0860A08766484DD98ACD9B7603C3BEB562EF73D61A05B
5DE8017F13F266C92D24BB1BFB1F10862D1ECEF20CD68A682CFB2B6B8C8D4ACC
07437E905967E49582EBFB7D7DBEE5AD89B57488088CB90B344312A00E3A768F
1A71AA7FE928885ED762CFCBE708040927416AA164E088AD1002EB33FCE0AF46
257A3940922440C00BA7E7A7473C8156D179D16C2AD8A140315C11572410BA2D
809C47C6FEFFF5CE5397A409F885D7D48F970A3D066B0BEB8881CFFB031485F2
8034B9C01B50982B8B5CF88D481078410E6E5527A96584B5B0D98325924A95F3
E8ECEF6BE4ED4F2334D96E1E4275648EF87EA38AF46A8563DFEB52852B798D29
CF4419BFAEF5> |-
/L <1C60D8A8C9B714A578A8068F50E5B4EDB2372212B01CAB615DB07C103904
450BB5A8997C47AEC5DB24EF14BA90F3927F72C67B88B43920C02E453732113C
7AE410216CD5FC3658BB4C98F6B562D30FF248875FAB34B29D29E23CEEA2E8B3
B0EA7C8373FDB3F234B4B4B3B9E0E79270793676089616B54592E9AC3C2CD064
6989D88E0723A4348B40E2DC928EDC31D0F94BB479449D0B6C60> |-
/e <1C60D8A8C9B7A4C86C545A4AC8A7D7F6C345E834CA1213E882E926387794
826A205EEEE689D37E8FC5A261291E47A8EB37515D6AFF3E8D4C2927EEA10BDE
E7B9C51B7C7E29EC21F969487478C80B6DD492C8CB06797735DBFAA0767835E1
6CF60557FF99669574049AC02AF815FE3A71EC95AE08115F25C3E55D5B1FD10C
A1E741534F0E60416081D7FA16D9DFEF57FF91FD82FC7BA4FB9689D718D9A71D
ED1EF9DCA51AF0BBC79B40093EF91CBC3D8C48A3FDFEA41B5047A65EAFDD5AF1
021F9C948AAB35D583226126C585E079DEB6D479075845CECA8ED7ED10944C11
C924501DD381B71E2F7690C30AF54ADDDF92DD4099EA219A54E3CF84E276FA78
71C8A6ED23473DBBAA6EDA7BEF929816C1760D14417F454980C243ACB7FEEE42
2DBAD62FF97870FD2250B1790169B64F76> |-
/i <1C60D8A8C9B874A685BEE7073E3D9BEB2350BB486AC62AB5FFB3F3055796
FFA7201F6E4CDF32059564C619C9CC449E2E13D3438C6F3A00A8C33DF67EED72
B4A703E19615397FBD65B8F41AB93A2D076C7948B4D6A7E1920548D052C7AB18
31CD8F1E6F01CDE398A3464141E18D2DB8A524CC3BE1885811A2FA4464E9BFA4
4F3B137A209AC07BC2D4DC8265BE2C3CDB96FC76B4E494C7989F89FD865B563D
37857FCA1A5FB165B3A362BB87A93EC69254C2AAA91985E82347B6547083A306
CE> |-
/n <1C60D8A8C9B78256DD09855002C1F642102EC28B82F48E21B28CD8D11618
04F5A9A747AD2624D941564B1DAE90411653B58E89369C53390A39373C180E92
1901CFF6CB5B97D1E2F6881105A39AF049AF7BAB6A1217A5C2B8A9279563CA12
76FC02BACD1EEE8432C4000AF8AC8B81C2B3B82F6968BF9741308293C4341FD8
C1BF06F82527B4BB1BFEB05C7AAE16687F72280798047F2DE0F0B0C1A73D4FFE
FAEDFA40DAB27F9393250746B607E6DD1B8488942E5E65DC28EF4BF61000038A
490B102DA889E711AC446FA2AE5AF546DC759185DC2C75747BB2C76E9F900921
B79B64F414F07BA72B97757066640FBFE321B86C7EC04E0E0AD1B078011E4790
36E3D4D1746C4387436B0F75E38AB678D2BFE9BAAAF021F8> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/HHKXOY+Calibri-Bold /QJJAAA+Calibri-Bold findfont ct_VMDictPut
/HHKXOY+Calibri-Bold*1 
[49{/.notdef}rp /one 26{/.notdef}rp /L 24{/.notdef}rp /e 3{/.notdef}rp /i 
4{/.notdef}rp /n 145{/.notdef}rp]
HHKXOY+Calibri-Bold nf
HHKXOY+Calibri-Bold*1 [6.66 0 0 -6.66 0 0 ]msf
65.7 326.46 mo
(Line)
[2.82719 1.64837 3.58643 0 ]xsh
%ADOBeginSubsetFont: GFNBAA+Calibri-Bold Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /GFNBAA+Calibri-Bold def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g3 put
def
/FontBBox {-493 -194 1239 952} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B7A086528E2CBE7FD4F03CC6CDCA18E09BCC917FA5F1
19478AAC0A696931453BF661861F40ACE8D15EA0278E8F88478BB0248E8D1904
2FB8B7F2BB2D4ECFE961B3EEB80565197E481D427DFF375EC95F16C0E36FE28A
EC2A0702F6CB5ACA5B242B6593847C74B58C6FBE25BCF0D4AFF25D49578CAB0D
929B025DECF86FE8C45E91FC3804785896842CEEC7085BA98EF5BCC94B208BF4
3A5FA51448171853E476E618A0AB76D0CDCEE51B8CF3FCD6DA051824D7EFC40D
8D270BAD39624CE3E5CBFE64B165BA24EF48FCEC82F8DEB8BFCD829A07FF03FF
E381E622BF0967DB53309A79D2F393F52C4B535EC59CAFAAC152061A92D31A3A
6E83C18D63056F4453027EAA702C494809677EB8C59BD219046DE492EABC7DF1
9D085C93C98D2A8DDC68AF0F5D7D82447ED6165A8DE95E6965A0F15A3F7696EA
E508CE290FD5B2FFA8A49A20B157645C3C3FEFBC64E2B40E75B90474094AF159
9689FA1EAB0D131F6DB991FC0D5943DE54CA9E5ECDA986A63CDF0394AF79DB39
8CE8AC4F02FDBD88EE6AE535CFB6C3B33C157AAFFBEC52BA3DACE77ABDA0C787
220FBA75DA1E45C945> |-
/g3 <1C60D8A8C9B888C146> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/HHKXOZ+Calibri-Bold /GFNBAA+Calibri-Bold findfont ct_VMDictPut
/HHKXOZ+Calibri-Bold*1 
[32{/.notdef}rp /g3 223{/.notdef}rp]
HHKXOZ+Calibri-Bold nf
HHKXOZ+Calibri-Bold*1 [6.66 0 0 -6.66 0 0 ]msf
77.0999 326.46 mo
( )sh
HHKXOY+Calibri-Bold*1 [6.66 0 0 -6.66 0 0 ]msf
78.5998 326.46 mo
(11)
[3.36133 0 ]xsh
329.46 295.98 mo
355.74 295.98 li
357.6 297.84 li
357.6 307.2 li
327.6 307.2 li
327.6 297.84 li
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
329.22 295.74 mo
329.46 295.62 li
355.74 295.62 li
355.98 295.74 li
357.84 297.6 li
357.96 297.84 li
357.96 307.2 li
357.84 307.44 li
357.6 307.56 li
327.6 307.56 li
327.36 307.44 li
327.24 307.2 li
327.24 297.84 li
327.36 297.6 li
cp
327.78 298.08 mo
327.9 297.84 li
327.9 307.2 li
327.6 306.9 li
357.6 306.9 li
357.3 307.2 li
357.3 297.84 li
357.36 298.08 li
355.5 296.22 li
355.74 296.28 li
329.46 296.28 li
329.7 296.22 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
HHKXOW+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/p <1C60D8A8C9B78E05EA9D973060387C73D1F6FC5283CF49F42B90E3572253
2C0305E99FC2B2F5E8253F0317294CB5BA6F51657EA79E1841CF363B43BBE54B
9E5F683986378119A60103220843BA6B4E1CF012F4407937B0EDEEE409EED971
ED71424C1DE9F58B3C06F2342302220C155C0C840BFB4693FFF8A2CFEEF274FF
E1F4AFBE9757FB2568EE33B9D585CBE0600A7110E1A53D85847EA919EFD9BF18
F44D7EE9518AE64D9DFE7C7267D6429C8F5FD0EF0AF9ABA737132F4E330A3308
77D5AECA1F6DF97EC1ACF219E33EDD988EC9A670EC23A43243C991A099EEE943
0EF67488C01ED11E3C4B1CEB11239FEDA600217AC3F2A3708004F1E2E90E2967
30C207690B19E7D8BB6E1920E2F46C4C2E0CC81AE0ED43696970A1FBC9D409BB
55BDECDE83A356A07B210C4055759107919A9C98A0B1493E8E6816D87FE47A8C
1A70E30E74BD97D6D39D9D984A0D52D9B81565B3C3A0B773497C465883E30959
64CC84> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HHKXOW+Calibri /Encoding get
dup 112 /p put
pop
%ADOEndSubsetFont
/HHKXOW+Calibri*1 
[32{/.notdef}rp /quotedblleft /quotedblright 12{/.notdef}rp /period /.notdef /zero /one 
/two 7{/.notdef}rp /colon 24{/.notdef}rp /S 13{/.notdef}rp /a 2{/.notdef}rp 
/d /e /f /g /.notdef /i /j /.notdef 
/l /m /n /.notdef /p /.notdef /r /s 
/t /.notdef /v /.notdef /x /y 134{/.notdef}rp]
HHKXOW+Calibri nf
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
334.86 304.26 mo
(Step1)
[3.04562 2.21982 3.30536 3.48514 0 ]xsh
gsave
57.12 240.6 mo
537.9 240.6 li
537.9 330.72 li
57.12 330.72 li
cp
eclp
314.4 323.22 mo
340.74 323.22 li
342.6 325.14 li
342.6 334.5 li
312.54 334.5 li
312.54 325.14 li
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
314.16 322.98 mo
314.4 322.92 li
340.74 322.92 li
340.98 322.98 li
342.84 324.9 li
342.9 325.14 li
342.9 334.5 li
342.84 334.74 li
342.6 334.86 li
312.54 334.86 li
312.3 334.74 li
312.24 334.5 li
312.24 325.14 li
312.3 324.9 li
cp
312.78 325.38 mo
312.9 325.14 li
312.9 334.5 li
312.54 334.2 li
342.6 334.2 li
342.24 334.5 li
342.24 325.14 li
342.36 325.38 li
340.5 323.46 li
340.74 323.58 li
314.4 323.58 li
314.64 323.46 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
gsave
319.86 330.72 mo
335.28 330.72 li
335.28 325.2 li
319.86 325.2 li
cp
clp
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
319.86 331.56 mo
(Step2)
[3.04562 2.21982 3.30536 3.48514 0 ]xsh
grestore
gsave
57.12 330.72 mo
537.9 330.72 li
537.9 420.84 li
57.12 420.84 li
cp
eclp
57.12 420.86 mo
537.9 420.86 li
537.9 330.68 li
57.12 330.68 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
grestore
145.14 405.6 mo
145.8 405.6 li
145.8 409.86 li
145.14 409.86 li
cp
145.8 405.6 mo
cp
148.08 406.02 mo
145.44 410.52 li
142.8 406.02 li
142.8 405.78 li
142.92 405.6 li
143.22 405.54 li
143.4 405.72 li
145.74 409.68 li
145.14 409.68 li
147.48 405.72 li
147.72 405.54 li
147.96 405.6 li
148.14 405.78 li
148.08 406.02 li
.92929 .879301 .889677 .799283 cmyk
f
145.14 405.6 mo
145.8 405.6 li
145.8 409.86 li
145.14 409.86 li
cp
145.8 405.6 mo
cp
148.08 406.02 mo
145.44 410.52 li
142.8 406.02 li
142.8 405.78 li
142.92 405.6 li
143.22 405.54 li
143.4 405.72 li
145.74 409.68 li
145.14 409.68 li
147.48 405.72 li
147.72 405.54 li
147.96 405.6 li
148.14 405.78 li
148.08 406.02 li
f
376.98 407.82 mo
377.34 415.38 li
376.68 415.38 li
376.32 407.88 li
cp
379.44 411.42 mo
377.04 416.04 li
374.22 411.66 li
374.16 411.42 li
374.34 411.24 li
374.58 411.18 li
374.76 411.3 li
377.34 415.2 li
376.74 415.2 li
378.84 411.12 li
379.08 410.94 li
379.32 410.94 li
379.5 411.18 li
379.44 411.42 li
f
376.98 407.82 mo
377.34 415.38 li
376.68 415.38 li
376.32 407.88 li
cp
379.44 411.42 mo
377.04 416.04 li
374.22 411.66 li
374.16 411.42 li
374.34 411.24 li
374.58 411.18 li
374.76 411.3 li
377.34 415.2 li
376.74 415.2 li
378.84 411.12 li
379.08 410.94 li
379.32 410.94 li
379.5 411.18 li
379.44 411.42 li
f
423.72 373.56 mo
423.66 376.26 li
423 376.2 li
423.06 373.56 li
cp
423 378.24 mo
423.66 378.24 li
423.66 378.9 li
423 378.9 li
cp
423.66 378.24 mo
cp
426 375.12 mo
423.3 379.56 li
420.72 375.06 li
420.72 374.76 li
420.84 374.58 li
421.14 374.58 li
421.32 374.7 li
423.6 378.72 li
423 378.72 li
425.4 374.76 li
425.64 374.64 li
425.88 374.64 li
426 374.88 li
426 375.12 li
f
423.72 373.56 mo
423.66 376.26 li
423 376.2 li
423.06 373.56 li
cp
423 378.24 mo
423.66 378.24 li
423.66 378.9 li
423 378.9 li
cp
423.66 378.24 mo
cp
426 375.12 mo
423.3 379.56 li
420.72 375.06 li
420.72 374.76 li
420.84 374.58 li
421.14 374.58 li
421.32 374.7 li
423.6 378.72 li
423 378.72 li
425.4 374.76 li
425.64 374.64 li
425.88 374.64 li
426 374.88 li
426 375.12 li
f
99.72 407.1 mo
190.2 407.1 li
190.2 395.82 li
99.72 395.82 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
99.36 395.82 mo
99.48 395.64 li
99.72 395.52 li
190.2 395.52 li
190.44 395.64 li
190.5 395.82 li
190.5 407.1 li
190.44 407.34 li
190.2 407.46 li
99.72 407.46 li
99.48 407.34 li
99.36 407.1 li
cp
100.02 407.1 mo
99.72 406.8 li
190.2 406.8 li
189.84 407.1 li
189.84 395.82 li
190.2 396.18 li
99.72 396.18 li
100.02 395.82 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
HHKXOW+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B83D5FF27DA8D8E6046A27BA23CC1486AB72A59E47
AACC8161CC74CDD95CC2A654D5856D60A8DC5F8C184EC1ABC4D1D2160575FE6D
70949B41A6CABCFACD73360CFC5DA53716AD56E7BCBA30E5CBADDBCE536F92B4
EFC10AF93D5AA400F7912003F9E093421F683C28EAAC53C2248A1C92A4ADDC6F
6F189A13C295B6CA124F9A4CA4E40FBBF41FDD3287A0301EBE9D805D7A4030F8
18C18B05D8592B2DBF59F7F26BA45EDE7B24A816E6CC3105B053A64C91913E22
DD3F66D2B695F53F3F722E2F8096827FF689C16601C625CCC1> |-
/parenright <1C60D8A8C9B83D5FF29F44B652980D05B9EE187D926BB2CE034
E7CDFB42233F20EA0B6A7D3053EB0C035C6C189F4DA6B49B40A0EB0636B7ACA2
CF42792FC2164693E9F6F7B6636D9708884EE48CE23B1AFB94FA912772ABED4A
B22E20E0410244F282681ABF0BF3F1FF921D275AD5C6D7F8F439D5D0B2BAD1CB
D8078F961EB6B7FB4BFFE77692BCE19880B8A84987A61F63B3F03252C231FCBB
5CB61DBA6789BB581DA0ED1802F2C6AAE0EF2092080B688E21E45FC07A90B21E
AB8701889CC58EAA06C962B> |-
/F <1C60D8A8C9B770DA42EB776051437272AB3109214F2F5AF299B91EDE1F76
8C5024668BC49B69066FA908CF8FE87EDFDF17A758EE488BEC994A194C62BD1C
9426343C7C81CA3B3F963FDAD914A0EC9F4FE665084402A52314B863A06B82A1
2C3F91EE9C0F2B145AA7D2782C4C7297D5A7A4C8227440D2EB6A6858EEAF3E8D
5172513D85C8059F336BE8B10563AA3DFEF476A6E0B2054B979D1F9B46798507
76A59C7497BC538F93679A65B973B2A534700FFE8CC98CDC2940E7759A9043FA
0F4AD602EBE420E53281F2FA075E541FDAF915055861D63FE68E0F45> |-
/I <1C60D8A8C9B86ED904793239D5A87846341C6685DE5ABE7704D2C21702B1
9492F988F7BDB944EF3CF61808A6DB9D1F22BBD335BB859C853102ABDC306BF0
344F58C180F59706796F6A9C1DD4450E8611E916B0A530128C4C5E0E96FFF301
F980705D57CD45F3B705E62B3216F34902178F51AC490CA8AF3698463F806A35
B46CD69D> |-
/O <1C60D8A8C9B64B6A243C5D499416E7BC4B22E8B629E09B8028C056D587EE
9CF3EDF2973119D5417CAB133A39C67B614E010AE0DD832BCFA4821BD97E225D
43A74776F0BFD87B432DD8C21445FC4ADD550E21897D7C9E8DE35386D83093D3
FF407F51B83131A4C29A9A19F0D66509D8A0DC226CCF6F69FBA7442E368FC0BB
3313B0C314C003045967AC913CA278D0CD495B5C5D3B104FD8FE9306C40B1E68
4F8B702E1CF50ACD13BCB247F919B2F23E586EB73CDBD82C4696F7C27EE8FF40
F1B366DF4538A9B1C7C873783BED33A9CC79EC8072551DCD083245F853F09D7B
A82936C03B9ABC832E704C4042C4CFF1A8C1165F42A0> |-
/o <1C60D8A8C9B78C66ECF3075BCC0F7D87F2E9EA9E473D66D53E6D1735C12E
AC0562A2F6FB428E7F7051A3A7B2D4CA6ED90F77808579359B7E539B5388F6F5
4555E1422B5F329989100C1CD5239E87FECD85E14E914ADC27391A1F5624B31E
E69A68B9016D73D6A01A100E004523AC53318A2FC2260E74BA80D4ABD1433EC6
7800CC9F77763DCF8156EA5CA478ABF1FAF7864EAD55939BE7FA4A9E8660CE98
DDE8CBC35F3FFF4E5C2DA4A292CE30D82057E70A8562AFB17C90FC331A4C46B4
8C7BBCED55DB7F94D559D534C59FF211B5A85F0207876BD8D6B2C7BBBC06964A
16F72BBAE841F001B71209E6C81DC64817ADE625E8FF> |-
/u <1C60D8A8C9B78E05EAA3CFED1A062DA00ACB6556B6D2C444D52FE211DC36
88D13631F07F87D2F0851361DDE2CB13BAE303424A55D9BD107D56D22322818F
C76F125ECA1DADD7E1E8164E2DF3A65B67CFAE338C319FC7D07BDCC1CF896B70
8E125021996E87E6805D1416B537CED172F9478027FB9FD1A978C49E725968E2
F5FFC6B56799F9B1D16FFE2085471316923AC7BFBC4E3BBEBA71950AD60EAA4B
EA84B8EB89079B6BEAD01C4E2BC5BF11F5FD2CB41D465D8AD649D765F2A952E2
2AC4EF1DF8297E4E5405180477A9E4F70BB10D787681535F61379438A6888E4F
660E2B1CD68547F69ECDD808A3CD50B9FBBDA239A40EE62332FADD878CD5F875
BAC27E0BDDA94455E030928A249A166F13D134EF255F5783> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HHKXOW+Calibri /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 70 /F put
dup 73 /I put
dup 79 /O put
dup 111 /o put
dup 117 /u put
pop
%ADOEndSubsetFont
/HHKXOW+Calibri*1 
[32{/.notdef}rp /quotedblleft /quotedblright 6{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 
/.notdef /zero /one /two 7{/.notdef}rp /colon 11{/.notdef}rp /F 
2{/.notdef}rp /I 5{/.notdef}rp /O 3{/.notdef}rp /S 13{/.notdef}rp /a 
2{/.notdef}rp /d /e /f /g /.notdef /i /j 
/.notdef /l /m /n /o /p /.notdef /r 
/s /t /u /v /.notdef /x /y 134{/.notdef}rp]
HHKXOW+Calibri nf
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
103.62 403.68 mo
(System.IO.FileInfo.getFullFile\(\))
[3.04295 3.00301 2.59012 2.28043 3.3027 5.34129 1.66432 1.66433 4.43957 1.67699 3.04295 1.51117 
1.51118 3.3027 1.66432 3.48248 2.03857 3.53775 1.66432 3.12282 3.36264 2.28043 3.04295 3.48247 
1.51118 1.51118 3.04294 1.5112 1.55646 3.3027 2.03857 0 ]xsh
145.8 370.32 mo
145.62 373.02 li
144.96 372.96 li
145.14 370.26 li
cp
145.44 375 mo
145.44 375.66 li
144.72 375.66 li
144.78 374.94 li
cp
147.96 372 mo
145.02 376.32 li
142.74 371.64 li
142.74 371.4 li
142.86 371.22 li
143.16 371.16 li
143.34 371.34 li
145.38 375.54 li
144.78 375.48 li
147.42 371.64 li
147.6 371.52 li
147.9 371.52 li
148.02 371.76 li
147.96 372 li
.92929 .879301 .889677 .799283 cmyk
f
145.8 370.32 mo
145.62 373.02 li
144.96 372.96 li
145.14 370.26 li
cp
145.44 375 mo
145.44 375.66 li
144.72 375.66 li
144.78 374.94 li
cp
147.96 372 mo
145.02 376.32 li
142.74 371.64 li
142.74 371.4 li
142.86 371.22 li
143.16 371.16 li
143.34 371.34 li
145.38 375.54 li
144.78 375.48 li
147.42 371.64 li
147.6 371.52 li
147.9 371.52 li
148.02 371.76 li
147.96 372 li
f
gsave
57.12 330.72 mo
537.9 330.72 li
537.9 420.84 li
57.12 420.84 li
cp
eclp
263.4 316.32 mo
265.38 316.32 li
268.08 316.38 li
280.973 316.68 295.008 317.576 307.68 320.04 cv
309.36 320.4 li
312.039 320.995 317.938 322.211 319.8 324.36 cv
320.04 324.84 li
320.1 324.84 li
320.16 325.08 li
320.16 325.32 li
320.22 325.56 li
320.22 325.5 li
320.28 325.68 li
320.22 325.62 li
320.34 325.86 li
320.46 325.98 li
322.203 327.906 327.215 328.898 329.64 329.52 cv
331.32 329.88 li
344.509 332.545 358.215 333.322 371.64 333.72 cv
376.32 333.72 li
376.32 334.38 li
371.64 334.38 li
357.788 333.996 343.096 333.127 329.52 330.18 cv
327.96 329.82 li
326.306 329.42 319.781 327.799 319.56 325.62 cv
319.5 325.38 li
319.5 325.2 li
319.5 325.26 li
319.44 325.08 li
319.5 325.14 li
319.26 324.78 li
317.678 322.948 312.312 321.741 310.02 321.18 cv
309.24 321 li
308.4 320.88 li
295.524 318.272 281.196 317.346 268.08 317.04 cv
265.38 316.98 li
263.4 316.98 li
cp
267.18 319.32 mo
262.74 316.68 li
267.24 314.04 li
267.48 314.04 li
267.66 314.16 li
267.72 314.4 li
267.54 314.64 li
263.52 316.92 li
263.58 316.38 li
267.54 318.72 li
267.72 318.9 li
267.66 319.2 li
267.48 319.32 li
267.18 319.32 li
cp
372.48 331.44 mo
376.98 334.08 li
372.48 336.66 li
372.24 336.72 li
372 336.54 li
372 336.3 li
372.12 336.12 li
376.14 333.78 li
376.14 334.38 li
372.12 331.98 li
372 331.8 li
372.06 331.56 li
372.24 331.38 li
372.48 331.44 li
f
263.4 316.32 mo
265.38 316.32 li
268.08 316.38 li
280.973 316.68 295.008 317.576 307.68 320.04 cv
309.36 320.4 li
312.039 320.995 317.938 322.211 319.8 324.36 cv
320.04 324.84 li
320.1 324.84 li
320.16 325.08 li
320.16 325.32 li
320.22 325.56 li
320.22 325.5 li
320.28 325.68 li
320.22 325.62 li
320.34 325.86 li
320.46 325.98 li
322.203 327.906 327.215 328.898 329.64 329.52 cv
331.32 329.88 li
344.509 332.545 358.215 333.322 371.64 333.72 cv
376.32 333.72 li
376.32 334.38 li
371.64 334.38 li
357.788 333.996 343.096 333.127 329.52 330.18 cv
327.96 329.82 li
326.306 329.42 319.781 327.799 319.56 325.62 cv
319.5 325.38 li
319.5 325.2 li
319.5 325.26 li
319.44 325.08 li
319.5 325.14 li
319.26 324.78 li
317.678 322.948 312.312 321.741 310.02 321.18 cv
309.24 321 li
308.4 320.88 li
295.524 318.272 281.196 317.346 268.08 317.04 cv
265.38 316.98 li
263.4 316.98 li
cp
267.18 319.32 mo
262.74 316.68 li
267.24 314.04 li
267.48 314.04 li
267.66 314.16 li
267.72 314.4 li
267.54 314.64 li
263.52 316.92 li
263.58 316.38 li
267.54 318.72 li
267.72 318.9 li
267.66 319.2 li
267.48 319.32 li
267.18 319.32 li
cp
372.48 331.44 mo
376.98 334.08 li
372.48 336.66 li
372.24 336.72 li
372 336.54 li
372 336.3 li
372.12 336.12 li
376.14 333.78 li
376.14 334.38 li
372.12 331.98 li
372 331.8 li
372.06 331.56 li
372.24 331.38 li
372.48 331.44 li
f
grestore
186.48 347.82 mo
184.02 348.84 li
183.78 348.24 li
186.24 347.22 li
cp
182.16 349.62 mo
179.7 350.64 li
179.46 350.04 li
181.92 349.02 li
cp
177.84 351.42 mo
175.38 352.44 li
175.14 351.84 li
177.6 350.82 li
cp
173.52 353.22 mo
171.06 354.24 li
170.82 353.64 li
173.28 352.62 li
cp
169.2 355.02 mo
166.74 356.04 li
166.5 355.44 li
168.96 354.42 li
cp
164.88 356.82 mo
163.08 357.6 li
162.78 357 li
164.64 356.22 li
cp
167.46 358.26 mo
162.3 357.54 li
165.48 353.4 li
165.66 353.28 li
165.9 353.34 li
166.08 353.52 li
165.96 353.82 li
163.2 357.48 li
162.96 356.94 li
167.58 357.6 li
167.76 357.72 li
167.88 357.96 li
167.7 358.14 li
167.46 358.26 li
f
186.48 347.82 mo
184.02 348.84 li
183.78 348.24 li
186.24 347.22 li
cp
182.16 349.62 mo
179.7 350.64 li
179.46 350.04 li
181.92 349.02 li
cp
177.84 351.42 mo
175.38 352.44 li
175.14 351.84 li
177.6 350.82 li
cp
173.52 353.22 mo
171.06 354.24 li
170.82 353.64 li
173.28 352.62 li
cp
169.2 355.02 mo
166.74 356.04 li
166.5 355.44 li
168.96 354.42 li
cp
164.88 356.82 mo
163.08 357.6 li
162.78 357 li
164.64 356.22 li
cp
167.46 358.26 mo
162.3 357.54 li
165.48 353.4 li
165.66 353.28 li
165.9 353.34 li
166.08 353.52 li
165.96 353.82 li
163.2 357.48 li
162.96 356.94 li
167.58 357.6 li
167.76 357.72 li
167.88 357.96 li
167.7 358.14 li
167.46 358.26 li
f
237.36 350.94 mo
239.94 351.78 li
239.7 352.38 li
237.18 351.6 li
cp
241.8 352.32 mo
244.38 353.16 li
244.2 353.76 li
241.62 352.98 li
cp
246.3 353.7 mo
248.82 354.54 li
248.64 355.14 li
246.12 354.36 li
cp
250.74 355.08 mo
253.32 355.92 li
253.14 356.52 li
250.56 355.74 li
cp
252.12 353.1 mo
255.6 356.94 li
250.56 358.14 li
250.32 358.08 li
250.14 357.9 li
250.2 357.66 li
250.38 357.48 li
254.94 356.46 li
254.76 357 li
251.64 353.58 li
251.52 353.34 li
251.64 353.1 li
251.88 353.04 li
252.12 353.1 li
f
237.36 350.94 mo
239.94 351.78 li
239.7 352.38 li
237.18 351.6 li
cp
241.8 352.32 mo
244.38 353.16 li
244.2 353.76 li
241.62 352.98 li
cp
246.3 353.7 mo
248.82 354.54 li
248.64 355.14 li
246.12 354.36 li
cp
250.74 355.08 mo
253.32 355.92 li
253.14 356.52 li
250.56 355.74 li
cp
252.12 353.1 mo
255.6 356.94 li
250.56 358.14 li
250.32 358.08 li
250.14 357.9 li
250.2 357.66 li
250.38 357.48 li
254.94 356.46 li
254.76 357 li
251.64 353.58 li
251.52 353.34 li
251.64 353.1 li
251.88 353.04 li
252.12 353.1 li
f
103.74 363.66 mo
103.74 360 122.4 357.06 145.44 357.06 cv
168.48 357.06 187.2 360 187.2 363.66 cv
187.2 367.32 168.48 370.32 145.44 370.32 cv
122.4 370.32 103.74 367.32 103.74 363.66 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
103.38 363.72 mo
103.38 363.66 li
103.917 357.428 141.668 356.384 145.68 356.76 cv
145.8 356.94 li
145.44 356.7 li
147.6 356.7 li
149.7 356.76 li
151.8 356.76 li
161.283 357.11 170.823 357.599 180.12 359.64 cv
181.2 359.94 li
182.22 360.18 li
183.564 360.625 187.216 361.635 187.5 363.42 cv
187.5 363.72 li
187.174 369.538 153.344 370.691 149.7 370.62 cv
145.44 370.62 li
145.68 370.08 li
145.8 370.26 li
145.74 370.44 li
145.62 370.62 li
143.28 370.62 li
133.227 370.515 123.123 370.052 113.22 368.22 cv
111.96 367.98 li
110.76 367.74 li
109.042 367.229 104.289 366.223 103.44 364.14 cv
103.44 363.9 li
cp
104.04 363.78 mo
104.1 363.96 li
104.1 363.9 li
104.16 364.02 li
104.22 364.14 li
104.28 364.32 li
104.725 364.718 104.913 364.903 105.48 365.22 cv
106.08 365.52 li
107.293 366.055 108.557 366.513 109.86 366.78 cv
110.94 367.08 li
112.08 367.32 li
113.34 367.56 li
122.356 369.248 132.023 369.743 141.18 369.96 cv
145.44 369.96 li
145.2 370.56 li
145.14 370.38 li
145.14 370.2 li
145.26 370.02 li
145.44 369.96 li
149.7 369.96 li
151.8 369.9 li
155.88 369.78 li
157.86 369.66 li
159.78 369.6 li
161.7 369.48 li
165.65 369.148 169.525 368.774 173.46 368.28 cv
174.9 368.04 li
176.28 367.8 li
177.6 367.56 li
179.398 367.225 185.425 366.025 186.66 364.2 cv
186.78 364.08 li
186.84 363.9 li
186.78 363.96 li
186.84 363.84 li
186.84 363.66 li
186.84 363.72 li
186.84 363.54 li
186.84 363.6 li
186.84 363.48 li
186.78 363.3 li
186.78 363.36 li
186.72 363.18 li
186.6 363.06 li
185.332 361.45 180.594 360.411 178.86 360.06 cv
177.6 359.76 li
176.28 359.52 li
166.002 357.854 155.837 357.452 145.44 357.36 cv
145.26 357.3 li
145.14 357.12 li
145.44 357.36 li
143.34 357.36 li
141.18 357.42 li
132.026 357.554 122.361 358.141 113.34 359.76 cv
112.08 360.06 li
110.94 360.3 li
109.86 360.54 li
108.736 360.921 107.093 361.273 106.08 361.86 cv
105.78 361.98 li
105.48 362.16 li
105.078 362.386 104.558 362.65 104.34 363.06 cv
104.22 363.18 li
104.16 363.3 li
104.1 363.48 li
104.1 363.42 li
104.1 363.54 li
104.04 363.72 li
104.04 363.66 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
HHKXOW+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D <1C60D8A8C9B7D4743405E233890E0A55534F43CA9133B29299791AB3DBBE
2A168EA78A7CB17DB0B060289D007AE138DDD7A874C20C0D1520156DF13FACE4
9220AECA91409AE8B52232B88DA851C2DCC83FF3926F0A798122A50015C04B7E
00C749CF9804781F643848BCD8EE92B57CB757A23284ECD5E56D8CA18327E984
54C09854624F1CB0E6F9646D20C4617F03B71EB8405F3505A5816E6439DF15D9
1294CE077BD16B66305872E9E54213ED4B2F> |-
/E <1C60D8A8C9B75378CEF864E8E645E238F010DC67C4EDB2AB6204D0088CBC
DD1DEE9C8C2CECE062788346A01E3802B2091033ED5950E4C033A20CCD093D28
9D2F26A5FD341F46577D4549CD89253F9A6A8D03D896A47E90D75A9B095338D4
F1A428EFD6368B03F3457933B96836318838D6ECFD4EE598A6ACB918E7DEB21F
D5DF405153F50F967DA33761036143519A115970687B392DB7F04F6DFA832832
EFCCEC991D7C99016AF229E38C2C2CB9F54CE4D5FFFF9ABBA880E56F5C9CF0D6
C000EF7BE5CDA2F2ABD168F271B1C1D0D0D56ECDD1C59923F3DD9E4C7BEDD7EE
3581E1726538020B2D60F1F9E52CFA> |-
/N <1C60D8A8C9B67B16EC17A11C9303513193038382E210A42B5CE850AFC118
B8F8E20755C8A90C95C89303B8AF97DF2083371B19301E0DB8111A384A8E035C
8C8FD179B5FF5DEE9371CE5D28447AD71E5F20621DEE2C342616335A1AAB1669
E519E232E79C4980DE37E3F1E4DCD25C4506A181A5E635190DDA595BDDE1573C
B44863FF5A83BD7D7E515B71492920EF87FE789C8908736F38EB074EA06C50C8
F913E2E6E48D5D36311F7C911CB6784E303E758C4B3B979518975255BBF01EB8
B827E2459ECECE07A833BA1FB2794232A02C9AD337BE827A573B5E9CE89F5D6E
BE26850BF2926DF1667989BD0A0C14BF6B80D7EA27888CC10DB4AF2B2A5C69A8
F8245C9A4E02EC85AC1422B48B35F04B8FEAA16155CD67FB40B03E773C1C5BCA
284053C42517C1397CDE066EE439C5025920AAC2AF0AA2792D9E710F7897AACD
F305> |-
/R <1C60D8A8C9B79C5FEE44F314FFC38CE4EF87FC1BC5BA498FDD47672E37A5
F29CF58ECF31C007FDE4A3817F15E647D623C8D6D1F4A73D7B6832B4D42989C1
A55BCD585ED57C222CC2F78A215F05F4E9A80BA1FCD1DB376BCE47D9921733E4
4EDE5BEAEC1D2153F2FA8A2E1C22E242D6C1A4BADF7B3C9D6692C8957849B7C7
57134864A498CBD963474EEA254A542992BCD7D23FC8C03B24B3B32CB8DE36B1
F672A455AF821729B85730506FEACB3392B97578F79A301DEE39865FDBFD8731
B3029E0DE4CAFE78BFA5CB852575D437DF1324ED582E9AF5A0234A2594A744CB
D8A820BF84E58BCFA0173DA6F4633F9CBE6F24B1E9A9AA3FBA2EC97D071CB6D5
A774FEB91C9639FD6744C0FCD372B9710A9F8B9537B94D2F3171FFE5B9719953
51C2AE63C69CA08EAE162057803FEFCA06736258DDA27C02FD926DA3B7BF59E5
B7BF6347045A4700726CA8EDCBC532E0E356415CE7BCA89E1BE403BD462A4226
BC0587B5B955AD2652D9A4B9A806727D8110> |-
/X <1C60D8A8C9B7B4A13FE37E4E4AE04CF732416FFB07F139E9B6EAA7B7A06C
56BC443C8243C0872DFE8DE982665F349E067F9BCDF9A17BFCF97EA8B46B4933
95B6C89AC20C2ACC789E366FAD93C3071E155B72F03931241212B5C0D191B403
2280EB645610365C15B95D2EFE06379A73B9B2931A2D760F2D77F1F0D4D5B250
4E6CD2AAA4282B5F952495D15685BBA33CCBE04563FC243AF6735203379D1EDA
256ED162ED6E48E34CE5D89848BEEA0CFD753E753082613C45B883A7DDA26238
66FD3C8FEF001DB63359A63BFBC48DFD4D9E1D57F1A66ABB39147803190CC473
A3DB82F8DE0E20AB3D37464C54B02D48B1DF503BD5E2EA36788457810607FF07
A03016E8AA1841002139BBC107D275FB831B0A9C> |-
/underscore <1C60D8A8C9B7A9C0DC58F18DEDB91BDBFC54C3FDDF37B6CA911
85FD0AEC37230B0FE788BEC21A1290444307EA1394BF937670B579A99833B8B4
DE721169F14C676B400CE5D12B7D5D793DC07AA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HHKXOW+Calibri /Encoding get
dup 68 /D put
dup 69 /E put
dup 78 /N put
dup 82 /R put
dup 88 /X put
dup 95 /underscore put
pop
%ADOEndSubsetFont
/HHKXOW+Calibri*1 
[32{/.notdef}rp /quotedblleft /quotedblright 6{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 
/.notdef /zero /one /two 7{/.notdef}rp /colon 9{/.notdef}rp /D 
/E /F 2{/.notdef}rp /I 4{/.notdef}rp /N /O 2{/.notdef}rp 
/R /S 4{/.notdef}rp /X 6{/.notdef}rp /underscore /.notdef /a 
2{/.notdef}rp /d /e /f /g /.notdef /i /j 
/.notdef /l /m /n /o /p /.notdef /r 
/s /t /u /v /.notdef /x /y 134{/.notdef}rp]
HHKXOW+Calibri nf
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
129.78 362.34 mo
(INDEX_DIR:)
[1.66832 4.32298 4.08595 3.24013 3.47983 3.3067 4.08594 1.66833 3.60638 0 ]xsh
120.9 367.68 mo
(System.IO.FileInfo)
[3.05228 3.01234 2.59943 2.22649 3.31203 5.31665 1.67365 1.67366 4.40428 1.67365 3.05228 1.52051 
1.52049 3.31203 1.67365 3.49181 2.0266 0 ]xsh
gsave
57.12 330.72 mo
537.9 330.72 li
537.9 420.84 li
57.12 420.84 li
cp
eclp
102.3 416.1 mo
102.3 413.04 121.62 410.52 145.5 410.52 cv
169.32 410.52 188.7 413.04 188.7 416.1 cv
188.7 419.16 169.32 421.62 145.5 421.62 cv
121.62 421.62 102.3 419.16 102.3 416.1 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
102 416.1 mo
102 415.92 li
102.256 414.277 106.207 413.447 107.46 413.1 cv
108.48 412.86 li
109.62 412.68 li
121.199 410.566 133.755 410.32 145.5 410.16 cv
145.68 410.22 li
145.8 410.4 li
145.5 410.22 li
149.94 410.22 li
152.1 410.28 li
162.141 410.518 172.633 410.998 182.52 412.86 cv
183.54 413.1 li
184.5 413.34 li
185.626 413.636 188.795 414.51 189 415.92 cv
189 416.34 li
188.94 416.46 li
188.94 416.52 li
188.88 416.64 li
188.76 416.82 li
188.4 417.18 li
188.22 417.3 li
187.98 417.48 li
187.74 417.6 li
187.264 417.959 185.991 418.411 185.4 418.56 cv
184.98 418.68 li
183.54 419.04 li
173.747 421.216 162.124 421.599 152.1 421.86 cv
149.88 421.92 li
145.5 421.92 li
145.8 421.44 li
145.86 421.62 li
145.8 421.8 li
145.5 421.98 li
140.54 421.937 135.573 421.912 130.62 421.62 cv
128.64 421.5 li
126.78 421.44 li
122.428 421.08 117.748 420.832 113.46 420.12 cv
110.82 419.76 li
109.62 419.52 li
108.087 419.124 102.883 418.346 102.06 416.52 cv
102 416.34 li
102 416.28 li
cp
102.66 416.22 mo
102.66 416.1 li
102.66 416.22 li
102.72 416.34 li
103.678 417.636 107.207 418.228 108.6 418.62 cv
109.74 418.86 li
110.94 419.1 li
120.76 420.639 131.129 421.112 141.06 421.26 cv
143.28 421.26 li
145.5 421.32 li
145.2 421.8 li
145.2 421.44 li
145.5 421.26 li
147.72 421.26 li
157.453 421.178 167.776 420.806 177.42 419.46 cv
178.8 419.28 li
180.06 419.1 li
182.105 418.63 186.146 417.998 187.98 416.7 cv
188.1 416.58 li
188.22 416.4 li
188.22 416.46 li
188.34 416.22 li
188.34 416.28 li
188.34 416.16 li
188.34 416.22 li
188.34 416.04 li
188.34 416.1 li
188.34 415.98 li
188.34 416.04 li
188.34 415.92 li
188.28 415.86 li
187.349 414.442 182.608 413.595 181.26 413.28 cv
180.06 413.1 li
178.8 412.86 li
167.773 411.322 156.624 410.884 145.5 410.88 cv
145.32 410.82 li
145.2 410.64 li
145.5 410.82 li
143.28 410.88 li
141.06 410.88 li
131.417 411.043 121.759 411.496 112.2 412.86 cv
110.94 413.1 li
109.74 413.28 li
107.905 413.746 104.416 414.264 102.9 415.62 cv
102.78 415.74 li
102.72 415.86 li
102.72 415.8 li
102.66 415.92 li
102.66 416.04 li
102.66 415.98 li
102.66 416.1 li
102.66 416.04 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
121.14 418.26 mo
(null:System.String)
[3.48048 3.48048 1.50919 1.50917 1.8029 3.04095 3.00102 2.58812 2.21515 3.3007 5.34129 1.66234 
3.04095 2.21516 2.34232 1.50917 3.48048 0 ]xsh
387 367.92 mo
387 364.8 403.26 362.28 423.36 362.28 cv
443.4 362.28 459.72 364.8 459.72 367.92 cv
459.72 371.04 443.4 373.56 423.36 373.56 cv
403.26 373.56 387 371.04 387 367.92 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
386.64 367.98 mo
386.64 367.92 li
386.7 367.74 li
386.839 365.777 392.699 364.481 394.14 364.26 cv
395.22 364.02 li
396.36 363.84 li
405.266 362.288 414.342 362.07 423.36 361.92 cv
423.54 362.04 li
423.66 362.22 li
423.36 361.98 li
427.08 361.98 li
428.88 362.04 li
436.427 362.242 444.005 362.645 451.44 364.02 cv
452.52 364.26 li
453.54 364.44 li
455.081 364.814 459.53 365.821 460.02 367.68 cv
460.02 368.16 li
459.96 368.28 li
459.9 368.46 li
459.9 368.52 li
459.78 368.7 li
459.66 368.82 li
459.54 369 li
459.18 369.3 li
458.068 370.156 456.731 370.549 455.4 370.92 cv
454.5 371.16 li
453.54 371.4 li
452.52 371.64 li
444.737 373.162 436.788 373.565 428.88 373.86 cv
427.08 373.86 li
425.22 373.92 li
423.36 373.92 li
423.36 373.26 li
423.36 373.92 li
421.5 373.92 li
419.64 373.86 li
411.973 373.765 403.942 373.247 396.36 372.06 cv
395.22 371.82 li
394.14 371.64 li
393.12 371.4 li
391.782 371.069 390.387 370.693 389.1 370.2 cv
388.5 369.9 li
387.96 369.66 li
387.394 369.287 386.998 368.98 386.76 368.34 cv
386.7 368.28 li
386.7 368.1 li
cp
387.36 368.04 mo
387.36 367.98 li
387.36 368.16 li
387.36 368.1 li
387.48 368.34 li
389.846 370.497 393.488 370.672 396.48 371.4 cv
397.68 371.58 li
398.94 371.76 li
406.277 372.785 414.097 373.178 421.5 373.2 cv
423.36 373.26 li
423.6 373.32 li
423.66 373.56 li
423.6 373.8 li
423.36 373.92 li
423.12 373.8 li
423 373.56 li
423.12 373.32 li
426.068 373.083 429.428 373.227 432.42 373.08 cv
434.16 372.96 li
435.84 372.9 li
438.887 372.644 442.056 372.507 445.08 372.12 cv
447.72 371.76 li
448.98 371.58 li
451.201 371.186 457.93 370.253 459.3 368.22 cv
459.3 368.16 li
459.36 367.98 li
459.36 368.04 li
459.36 367.92 li
459.36 367.98 li
459.36 367.8 li
459.36 367.86 li
459.36 367.8 li
459.3 367.68 li
459.24 367.5 li
459.24 367.56 li
459.18 367.44 li
459.06 367.32 li
456.767 365.35 450.628 364.601 447.72 364.08 cv
446.4 363.9 li
445.08 363.78 li
443.64 363.6 li
441.126 363.296 438.369 363.09 435.84 363 cv
434.16 362.88 li
432.42 362.82 li
429.371 362.708 426.416 362.592 423.36 362.64 cv
423.12 362.58 li
423 362.4 li
423 362.34 li
423.36 362.64 li
419.64 362.64 li
412.669 362.822 405.855 363.103 398.94 364.08 cv
397.68 364.26 li
396.48 364.5 li
394.7 364.73 388.701 365.926 387.54 367.44 cv
387.48 367.5 li
387.42 367.68 li
387.42 367.62 li
387.36 367.74 li
387.36 367.86 li
387.36 367.8 li
387.36 367.98 li
387.36 367.92 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
403.08 370.14 mo
(null:java.io.File)
[3.47647 3.4765 1.50516 1.50519 1.80292 1.61838 3.18018 2.9903 3.1702 1.65833 1.50519 3.53775 
1.67697 3.03696 1.50519 1.50519 0 ]xsh
423.72 356.46 mo
423.66 361.62 li
423 361.62 li
423.06 356.46 li
cp
426 357.84 mo
423.3 362.28 li
420.72 357.78 li
420.72 357.54 li
420.84 357.3 li
421.14 357.3 li
421.32 357.42 li
423.6 361.5 li
423 361.44 li
425.4 357.48 li
425.64 357.36 li
425.88 357.36 li
426 357.6 li
426 357.84 li
.92929 .879301 .889677 .799283 cmyk
f
423.72 356.46 mo
423.66 361.62 li
423 361.62 li
423.06 356.46 li
cp
426 357.84 mo
423.3 362.28 li
420.72 357.78 li
420.72 357.54 li
420.84 357.3 li
421.14 357.3 li
421.32 357.42 li
423.6 361.5 li
423 361.44 li
425.4 357.48 li
425.64 357.36 li
425.88 357.36 li
426 357.6 li
426 357.84 li
f
gsave
57.12 330.72 mo
537.9 330.72 li
537.9 420.84 li
57.12 420.84 li
cp
eclp
437.82 420.86 mo
504.12 420.86 li
504.12 416.64 li
437.82 416.64 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
437.52 416.64 mo
437.58 416.4 li
437.82 416.28 li
504.12 416.28 li
504.36 416.4 li
504.42 416.64 li
504.42 427.98 li
504.36 428.22 li
504.12 428.28 li
437.82 428.28 li
437.58 428.22 li
437.52 427.98 li
cp
438.18 427.98 mo
437.82 427.62 li
504.12 427.62 li
503.76 427.98 li
503.76 416.64 li
504.12 416.94 li
437.82 416.94 li
438.18 416.64 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
gsave
444.9 420.84 mo
492.6 420.84 li
492.6 418.14 li
444.9 418.14 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
445.08 424.5 mo
(jiFildlt)
[12.658 6.71664 3.05692 1.49655 6.47687 6.77716 4.79657 0 ]xsh
grestore
gsave
492.6 420.84 mo
496.68 420.84 li
496.68 418.14 li
492.6 418.14 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
492.6 424.5 mo
(\(\))
[2.03857 0 ]xsh
grestore
gsave
57.12 330.72 mo
537.9 330.72 li
537.9 420.84 li
57.12 420.84 li
cp
eclp
376.98 334.14 mo
376.98 331.02 397.74 328.5 423.36 328.5 cv
448.98 328.5 469.68 331.02 469.68 334.14 cv
469.68 337.26 448.98 339.78 423.36 339.78 cv
397.74 339.78 376.98 337.26 376.98 334.14 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
376.68 334.14 mo
376.68 333.9 li
376.8 333.54 li
376.98 333.36 li
377.1 333.18 li
377.28 333 li
377.52 332.88 li
377.76 332.7 li
378 332.58 li
378.3 332.4 li
379.639 331.876 380.532 331.573 381.96 331.26 cv
383.04 331.02 li
384.84 330.66 li
389.619 329.797 394.464 329.378 399.3 328.98 cv
401.22 328.86 li
403.2 328.74 li
409.929 328.322 416.618 328.147 423.36 328.14 cv
423.54 328.2 li
423.66 328.32 li
423.66 328.38 li
423.36 328.14 li
425.76 328.2 li
428.1 328.2 li
430.44 328.26 li
441.101 328.484 453.15 328.953 463.62 331.02 cv
464.7 331.26 li
465.889 331.5 469.749 332.47 470.04 333.9 cv
470.04 334.38 li
469.811 334.987 469.62 334.998 469.2 335.4 cv
468.96 335.58 li
468.66 335.7 li
467.733 336.185 466.725 336.503 465.72 336.78 cv
465.24 336.9 li
464.7 337.02 li
464.22 337.14 li
453.438 339.363 441.366 339.738 430.38 340.02 cv
428.1 340.08 li
423.36 340.08 li
423.54 339.48 li
423.66 339.66 li
423.66 339.9 li
423.54 340.02 li
423.36 340.08 li
418.62 340.08 li
416.28 340.02 li
414 339.96 li
409.56 339.84 li
407.4 339.78 li
405.3 339.66 li
400.369 339.401 395.443 339.046 390.54 338.46 cv
388.98 338.28 li
387.54 338.04 li
386.16 337.86 li
384.005 337.393 378.861 336.722 377.16 335.1 cv
376.98 334.92 li
376.86 334.74 li
376.8 334.74 li
376.74 334.56 li
376.74 334.5 li
376.68 334.38 li
376.68 334.32 li
cp
377.34 334.26 mo
377.34 334.2 li
377.34 334.32 li
377.34 334.26 li
377.4 334.44 li
377.4 334.38 li
377.46 334.5 li
377.58 334.62 li
379.051 335.802 381.955 336.299 383.76 336.72 cv
384.96 336.96 li
386.22 337.2 li
396.939 338.818 407.795 339.202 418.62 339.42 cv
423.36 339.42 li
423.12 340.02 li
423 339.84 li
423 339.66 li
423.12 339.48 li
423.36 339.42 li
428.1 339.42 li
434.94 339.24 li
437.1 339.18 li
439.26 339.06 li
441.36 339 li
446.27 338.732 451.178 338.399 456.06 337.8 cv
457.62 337.62 li
459.06 337.38 li
460.44 337.2 li
462.551 336.729 467.354 336.105 469.08 334.62 cv
469.32 334.38 li
469.26 334.44 li
469.38 334.26 li
469.32 334.32 li
469.38 334.2 li
469.38 334.26 li
469.38 334.08 li
469.38 334.14 li
469.38 334.02 li
469.38 334.08 li
469.32 333.96 li
469.38 334.02 li
469.26 333.84 li
469.32 333.9 li
469.26 333.78 li
469.14 333.66 li
467.274 332.27 463.989 331.836 461.76 331.32 cv
460.44 331.08 li
459.06 330.9 li
457.62 330.66 li
453.565 330.151 449.518 329.785 445.44 329.52 cv
441.36 329.28 li
435.365 328.981 429.364 328.822 423.36 328.86 cv
423.18 328.8 li
423.06 328.68 li
423.06 328.62 li
423.36 328.8 li
420.96 328.86 li
418.62 328.86 li
407.904 329.011 396.831 329.507 386.22 331.08 cv
384.96 331.32 li
383.76 331.56 li
381.841 332.031 379.151 332.421 377.58 333.66 cv
377.52 333.78 li
377.4 333.9 li
377.4 333.84 li
377.34 334.02 li
377.34 333.96 li
377.34 334.08 li
377.34 334.02 li
377.34 334.14 li
377.34 334.08 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
395.7 336.36 mo
(arg0:java.lang.String)
[3.1835 2.31769 3.13016 3.36996 1.77826 1.61838 3.1835 3.00363 3.1835 1.67166 1.51849 3.1835 
3.48981 3.13016 1.67166 3.05026 2.22449 2.31769 1.51849 3.48981 0 ]xsh
423.72 339.78 mo
423.66 344.34 li
423 344.34 li
423.06 339.78 li
cp
426 340.56 mo
423.3 345 li
420.78 340.5 li
420.72 340.26 li
420.9 340.02 li
421.14 340.02 li
421.32 340.14 li
423.6 344.22 li
423 344.22 li
425.4 340.2 li
425.64 340.08 li
425.88 340.08 li
426.06 340.32 li
426 340.56 li
.92929 .879301 .889677 .799283 cmyk
f
423.72 339.78 mo
423.66 344.34 li
423 344.34 li
423.06 339.78 li
cp
426 340.56 mo
423.3 345 li
420.78 340.5 li
420.72 340.26 li
420.9 340.02 li
421.14 340.02 li
421.32 340.14 li
423.6 344.22 li
423 344.22 li
425.4 340.2 li
425.64 340.08 li
425.88 340.08 li
426.06 340.32 li
426 340.56 li
f
gsave
57.12 330.72 mo
537.9 330.72 li
537.9 420.84 li
57.12 420.84 li
cp
eclp
320.7 450.72 mo
321.12 450.66 li
321.66 450.6 li
327.277 449.187 331.481 442.62 331.62 437.04 cv
331.68 436.38 li
331.68 435.72 li
331.933 429.832 336.228 423.036 342.18 421.56 cv
342.78 421.5 li
343.26 421.44 li
343.32 422.1 li
342.9 422.1 li
342.36 422.22 li
336.636 423.62 332.651 430.075 332.34 435.72 cv
332.34 437.1 li
331.994 443.011 327.772 449.793 321.78 451.26 cv
321.24 451.32 li
320.76 451.38 li
cp
324.66 453.48 mo
320.04 451.08 li
324.42 448.26 li
324.66 448.2 li
324.9 448.32 li
324.9 448.62 li
324.78 448.8 li
320.88 451.32 li
320.88 450.78 li
325.02 452.88 li
325.14 453.06 li
325.14 453.36 li
324.96 453.48 li
324.66 453.48 li
cp
339.3 419.34 mo
343.92 421.74 li
339.54 424.56 li
339.3 424.62 li
339.12 424.44 li
339.06 424.2 li
339.18 424.02 li
343.08 421.5 li
343.14 422.04 li
339 419.94 li
338.82 419.7 li
338.88 419.46 li
339.06 419.28 li
339.3 419.34 li
f
320.7 450.72 mo
321.12 450.66 li
321.66 450.6 li
327.277 449.187 331.481 442.62 331.62 437.04 cv
331.68 436.38 li
331.68 435.72 li
331.933 429.832 336.228 423.036 342.18 421.56 cv
342.78 421.5 li
343.26 421.44 li
343.32 422.1 li
342.9 422.1 li
342.36 422.22 li
336.636 423.62 332.651 430.075 332.34 435.72 cv
332.34 437.1 li
331.994 443.011 327.772 449.793 321.78 451.26 cv
321.24 451.32 li
320.76 451.38 li
cp
324.66 453.48 mo
320.04 451.08 li
324.42 448.26 li
324.66 448.2 li
324.9 448.32 li
324.9 448.62 li
324.78 448.8 li
320.88 451.32 li
320.88 450.78 li
325.02 452.88 li
325.14 453.06 li
325.14 453.36 li
324.96 453.48 li
324.66 453.48 li
cp
339.3 419.34 mo
343.92 421.74 li
339.54 424.56 li
339.3 424.62 li
339.12 424.44 li
339.06 424.2 li
339.18 424.02 li
343.08 421.5 li
343.14 422.04 li
339 419.94 li
338.82 419.7 li
338.88 419.46 li
339.06 419.28 li
339.3 419.34 li
f
grestore
342.6 401.22 mo
342.6 397.56 357.84 394.62 376.62 394.62 cv
395.46 394.62 410.7 397.56 410.7 401.22 cv
410.7 404.88 395.46 407.88 376.62 407.88 cv
357.84 407.88 342.6 404.88 342.6 401.22 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
342.24 401.28 mo
342.24 401.16 li
342.3 400.86 li
342.3 400.74 li
344.724 395.139 369.821 394.235 374.88 394.26 cv
378.42 394.26 li
380.16 394.32 li
386.418 394.376 393.429 394.911 399.6 396 cv
400.8 396.18 li
401.94 396.42 li
403.02 396.66 li
404.606 397.143 405.904 397.359 407.46 398.04 cv
408.18 398.34 li
408.78 398.64 li
409.339 398.87 410.559 399.819 410.82 400.38 cv
410.82 400.44 li
410.94 400.74 li
411 400.86 li
411.06 401.16 li
411.06 401.28 li
411 401.64 li
410.94 401.7 li
410.599 403.526 406.516 404.831 405 405.24 cv
404.04 405.54 li
403.02 405.78 li
396.721 407.163 389.956 407.823 383.52 408.06 cv
380.16 408.18 li
378.42 408.18 li
371.912 408.321 346.814 407.755 342.48 402.12 cv
342.48 402.06 li
342.3 401.7 li
342.3 401.64 li
cp
342.96 401.52 mo
342.96 401.46 li
343.08 401.76 li
343.08 401.7 li
343.26 402.06 li
343.26 402 li
343.5 402.3 li
352.569 409.315 400.588 409.254 409.74 402.36 cv
410.04 402 li
410.04 402.06 li
410.22 401.7 li
410.22 401.76 li
410.34 401.46 li
410.34 401.52 li
410.4 401.16 li
410.4 401.28 li
410.34 400.92 li
410.34 401.04 li
410.22 400.68 li
410.22 400.74 li
410.04 400.38 li
410.04 400.44 li
409.8 400.14 li
400.861 393.185 352.427 393.159 343.56 400.14 cv
343.26 400.44 li
343.26 400.38 li
343.08 400.74 li
343.08 400.68 li
342.96 401.04 li
342.96 400.92 li
342.9 401.28 li
342.9 401.16 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
HHKXOW+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B714A578818061920CBD3BB0F0FEC7EB28869C0269DBFC0262
5554E339FA8F23FF202BF6BBA51F73386176CF41E41162B391BD65C46864E1ED
BE38C4A175836382F89D1B282918F37F6A98A1C310371E84DC05CA4D214BBF40
D0904F28663CAA2B1AF41B75D4680E3731D792C10C395648F8CE6283B6D2EA4E
A25EB0077385CC26E37C0D4F9F091C8BC196661820383DC1CFC26D318A92B139
8AE8D24532A475AF0A93A6DC660BFF9F07C9678F9C3412071B0DAC612FC7D6B5
FAE3214E7C7AB18E3145411FCE0CA8B75D2C8C25C05252A375257E1693A2B9D1
1EE377C95BA1746CBCD896C9D8284A96EC1B8BEF12D6460B6828EC26350E91CC
593B47372BD95FFBF8C2322BFC435A5494ED398AAAE3E6E4293369CDCFAC0147
8225F7C60BA6A2722907E6FF92F4B9457F52836FAB37F27C55593B43AB457EA2
91D6DE23> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HHKXOW+Calibri /Encoding get
dup 99 /c put
pop
%ADOEndSubsetFont
/HHKXOW+Calibri*1 
[32{/.notdef}rp /quotedblleft /quotedblright 6{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 
/.notdef /zero /one /two 7{/.notdef}rp /colon 9{/.notdef}rp /D 
/E /F 2{/.notdef}rp /I 4{/.notdef}rp /N /O 2{/.notdef}rp 
/R /S 4{/.notdef}rp /X 6{/.notdef}rp /underscore /.notdef /a 
/.notdef /c /d /e /f /g /.notdef /i 
/j /.notdef /l /m /n /o /p /.notdef 
/r /s /t /u /v /.notdef /x /y 
134{/.notdef}rp]
HHKXOW+Calibri nf
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
363.96 399.9 mo
(receiver)
[2.31833 3.3107 2.81122 3.3107 1.49652 3.00229 3.3107 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
HHKXOX+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g3 <1C60D8A8C9B888C146> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HHKXOX+Calibri /Encoding get
dup 33 /g3 put
pop
%ADOEndSubsetFont
/HHKXOX+Calibri*1 
[32{/.notdef}rp /g882 /g3 222{/.notdef}rp]
HHKXOX+Calibri nf
HHKXOX+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
385.86 399.9 mo
(!)sh
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
387.42 399.9 mo
(:)sh
362.22 405.24 mo
(java.io.File)
[1.61838 3.18018 2.99362 3.17352 1.66165 1.50854 3.53772 1.677 3.04028 1.50851 1.50851 0 
]xsh
406.56 381.9 mo
404.16 382.92 li
403.86 382.32 li
406.32 381.24 li
cp
402.3 383.76 mo
399.84 384.84 li
399.6 384.18 li
402 383.16 li
cp
398.04 385.62 mo
395.58 386.7 li
395.28 386.1 li
397.74 385.02 li
cp
393.72 387.48 mo
391.26 388.56 li
391.02 387.96 li
393.48 386.88 li
cp
389.46 389.34 mo
387 390.42 li
386.76 389.82 li
389.16 388.74 li
cp
385.14 391.26 mo
382.74 392.28 li
382.44 391.68 li
384.9 390.6 li
cp
380.88 393.12 mo
378.42 394.2 li
378.18 393.54 li
380.64 392.52 li
cp
381.84 395.22 mo
376.62 394.62 li
379.74 390.36 li
379.92 390.24 li
380.16 390.3 li
380.34 390.54 li
380.28 390.78 li
377.52 394.5 li
377.28 394.02 li
381.9 394.56 li
382.14 394.68 li
382.2 394.92 li
382.08 395.1 li
381.84 395.22 li
.92929 .879301 .889677 .799283 cmyk
f
406.56 381.9 mo
404.16 382.92 li
403.86 382.32 li
406.32 381.24 li
cp
402.3 383.76 mo
399.84 384.84 li
399.6 384.18 li
402 383.16 li
cp
398.04 385.62 mo
395.58 386.7 li
395.28 386.1 li
397.74 385.02 li
cp
393.72 387.48 mo
391.26 388.56 li
391.02 387.96 li
393.48 386.88 li
cp
389.46 389.34 mo
387 390.42 li
386.76 389.82 li
389.16 388.74 li
cp
385.14 391.26 mo
382.74 392.28 li
382.44 391.68 li
384.9 390.6 li
cp
380.88 393.12 mo
378.42 394.2 li
378.18 393.54 li
380.64 392.52 li
cp
381.84 395.22 mo
376.62 394.62 li
379.74 390.36 li
379.92 390.24 li
380.16 390.3 li
380.34 390.54 li
380.28 390.78 li
377.52 394.5 li
377.28 394.02 li
381.9 394.56 li
382.14 394.68 li
382.2 394.92 li
382.08 395.1 li
381.84 395.22 li
f
453.06 381.78 mo
455.22 383.34 li
454.86 383.88 li
452.64 382.38 li
cp
456.9 384.48 mo
459.06 385.98 li
458.7 386.52 li
456.48 385.02 li
cp
460.74 387.12 mo
462.9 388.62 li
462.54 389.16 li
460.32 387.66 li
cp
464.58 389.76 mo
466.8 391.32 li
466.38 391.86 li
464.22 390.3 li
cp
468.42 392.4 mo
470.58 393.96 li
470.22 394.5 li
468.06 393 li
cp
468.78 389.88 mo
470.94 394.62 li
465.78 394.2 li
465.54 394.08 li
465.48 393.84 li
465.6 393.6 li
465.84 393.54 li
470.46 393.9 li
470.1 394.38 li
468.12 390.18 li
468.12 389.88 li
468.3 389.7 li
468.54 389.7 li
468.78 389.88 li
f
453.06 381.78 mo
455.22 383.34 li
454.86 383.88 li
452.64 382.38 li
cp
456.9 384.48 mo
459.06 385.98 li
458.7 386.52 li
456.48 385.02 li
cp
460.74 387.12 mo
462.9 388.62 li
462.54 389.16 li
460.32 387.66 li
cp
464.58 389.76 mo
466.8 391.32 li
466.38 391.86 li
464.22 390.3 li
cp
468.42 392.4 mo
470.58 393.96 li
470.22 394.5 li
468.06 393 li
cp
468.78 389.88 mo
470.94 394.62 li
465.78 394.2 li
465.54 394.08 li
465.48 393.84 li
465.6 393.6 li
465.84 393.54 li
470.46 393.9 li
470.1 394.38 li
468.12 390.18 li
468.12 389.88 li
468.3 389.7 li
468.54 389.7 li
468.78 389.88 li
f
471.36 407.88 mo
471.3 415.98 li
470.64 415.98 li
470.7 407.88 li
cp
473.64 412.14 mo
470.94 416.64 li
468.36 412.08 li
468.36 411.84 li
468.48 411.66 li
468.78 411.6 li
468.96 411.78 li
471.24 415.8 li
470.7 415.8 li
473.04 411.78 li
473.28 411.66 li
473.52 411.72 li
473.64 411.9 li
473.64 412.14 li
f
471.36 407.88 mo
471.3 415.98 li
470.64 415.98 li
470.7 407.88 li
cp
473.64 412.14 mo
470.94 416.64 li
468.36 412.08 li
468.36 411.84 li
468.48 411.66 li
468.78 411.6 li
468.96 411.78 li
471.24 415.8 li
470.7 415.8 li
473.04 411.78 li
473.28 411.66 li
473.52 411.72 li
473.64 411.9 li
473.64 412.14 li
f
437.82 401.22 mo
437.82 397.56 452.64 394.62 470.94 394.62 cv
489.24 394.62 504.12 397.56 504.12 401.22 cv
504.12 404.88 489.24 407.88 470.94 407.88 cv
452.64 407.88 437.82 404.88 437.82 401.22 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
437.52 401.28 mo
437.52 400.86 li
437.58 400.74 li
438.058 398.867 441.808 397.672 443.4 397.2 cv
444.3 396.96 li
445.32 396.66 li
451.059 395.308 456.797 394.851 462.66 394.44 cv
465.9 394.32 li
467.58 394.32 li
469.26 394.26 li
476.052 394.21 482.803 394.498 489.54 395.4 cv
490.86 395.58 li
492.12 395.76 li
495.121 396.308 500.809 397.35 503.22 399.3 cv
503.64 399.66 li
503.94 400.02 li
504 400.02 li
504.18 400.38 li
504.24 400.44 li
504.36 400.8 li
504.36 400.86 li
504.42 401.16 li
504.42 401.28 li
504.36 401.64 li
504.36 401.7 li
504.24 402.06 li
504.18 402.06 li
504 402.42 li
503.94 402.48 li
499.087 407.542 477.555 408.242 470.94 408.18 cv
467.58 408.18 li
465.9 408.12 li
459.674 407.953 453.606 407.387 447.48 406.26 cv
446.34 406.02 li
445.32 405.78 li
443.387 405.31 438.649 404.022 437.7 402.06 cv
437.7 402 li
437.58 401.7 li
437.52 401.64 li
cp
438.18 401.52 mo
438.18 401.46 li
438.3 401.82 li
438.3 401.76 li
438.48 402.06 li
438.48 402 li
438.72 402.3 li
447.424 409.312 494.394 409.246 503.16 402.36 cv
503.46 402 li
503.46 402.06 li
503.64 401.76 li
503.76 401.46 li
503.7 401.52 li
503.76 401.22 li
503.76 401.28 li
503.7 400.92 li
503.76 400.98 li
503.64 400.68 li
503.64 400.74 li
503.46 400.38 li
503.46 400.44 li
503.22 400.14 li
494.638 393.192 447.285 393.163 438.78 400.14 cv
438.48 400.44 li
438.48 400.38 li
438.3 400.74 li
438.3 400.68 li
438.18 401.04 li
438.18 400.92 li
438.18 401.28 li
438.18 401.16 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
458.28 399.9 mo
(receiver)
[2.31833 3.3107 2.81122 3.3107 1.49652 3.00229 3.3107 0 ]xsh
HHKXOX+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
480.18 399.9 mo
(!)sh
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
481.74 399.9 mo
(:)sh
456.54 405.24 mo
(java.io.File)
[1.61838 3.18018 2.99362 3.17352 1.66165 1.50854 3.53772 1.677 3.04028 1.50851 1.50851 0 
]xsh
158.82 349.92 mo
158.82 346.8 181.74 344.28 210.12 344.28 cv
238.44 344.28 261.36 346.8 261.36 349.92 cv
261.36 353.04 238.44 355.56 210.12 355.56 cv
181.74 355.56 158.82 353.04 158.82 349.92 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
158.46 349.92 mo
158.46 349.86 li
158.52 349.74 li
158.52 349.62 li
158.58 349.5 li
158.58 349.44 li
158.64 349.32 li
159.18 348.78 li
159.42 348.66 li
159.66 348.48 li
159.96 348.36 li
160.26 348.18 li
161.693 347.628 162.841 347.363 164.34 347.04 cv
165.54 346.8 li
166.2 346.68 li
179.391 344.436 194.057 344.139 207.42 343.92 cv
210.06 343.92 li
210.24 343.98 li
210.12 343.92 li
212.76 343.92 li
215.34 343.98 li
228.008 344.214 242.153 344.557 254.64 346.8 cv
255.84 347.04 li
257.083 347.342 261.973 348.174 261.72 350.1 cv
261.66 350.16 li
261.66 350.34 li
261.6 350.34 li
261.54 350.52 li
261.48 350.58 li
260.161 352.1 255.916 352.761 254.04 353.16 cv
253.38 353.28 li
252.66 353.4 li
240.298 355.275 227.825 355.591 215.34 355.86 cv
210.06 355.86 li
210.3 355.26 li
210.42 355.44 li
210.42 355.62 li
210.3 355.8 li
210.12 355.86 li
204.84 355.86 li
202.26 355.8 li
199.74 355.74 li
194.82 355.62 li
192.48 355.56 li
190.14 355.44 li
187.86 355.32 li
182.647 355.03 177.25 354.712 172.08 354 cv
170.46 353.82 li
169.68 353.7 li
168.96 353.58 li
166.282 353.217 161.541 352.51 159.24 351.06 cv
159 350.88 li
158.82 350.76 li
158.82 350.7 li
158.58 350.34 li
158.58 350.28 li
158.52 350.16 li
158.52 350.1 li
cp
159.18 350.04 mo
159.12 349.92 li
159.18 350.1 li
159.18 350.04 li
159.24 350.16 li
159.36 350.28 li
159.3 350.22 li
159.42 350.34 li
159.6 350.46 li
161.382 351.755 165.483 352.312 167.64 352.74 cv
168.3 352.86 li
169.02 352.92 li
180.871 354.679 192.881 354.919 204.84 355.2 cv
210.12 355.2 li
209.88 355.8 li
209.76 355.62 li
209.76 355.44 li
209.88 355.26 li
210.06 355.2 li
212.7 355.2 li
215.34 355.14 li
217.92 355.14 li
220.44 355.08 li
222.9 355.02 li
225.3 354.96 li
227.7 354.84 li
230.04 354.78 li
232.32 354.66 li
237.454 354.361 242.95 354.02 248.04 353.34 cv
249.6 353.16 li
251.16 352.92 li
253.772 352.545 258.543 351.879 260.76 350.4 cv
261 350.16 li
260.94 350.16 li
261 350.04 li
261 350.1 li
261.06 349.92 li
261.06 350.04 li
261.06 349.86 li
261.06 349.98 li
261.06 349.8 li
261.06 349.86 li
261 349.74 li
261 349.8 li
260.94 349.62 li
261 349.68 li
260.76 349.44 li
258.751 348.043 254.979 347.603 252.6 347.1 cv
251.16 346.86 li
238.579 345.159 225.446 344.704 212.76 344.64 cv
210.12 344.58 li
209.94 344.58 li
210.06 344.58 li
207.42 344.58 li
204.84 344.64 li
193.006 344.783 180.755 345.272 169.02 346.86 cv
168.3 346.98 li
167.64 347.1 li
165.577 347.511 161.133 348.105 159.48 349.44 cv
159.24 349.68 li
159.24 349.62 li
159.18 349.8 li
159.18 349.74 li
159.12 349.86 li
159.18 349.8 li
159.12 349.92 li
159.12 349.86 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
178.86 352.14 mo
(null:)
[3.47182 3.47182 1.50052 1.50053 0 ]xsh
HHKXOX+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
190.62 352.14 mo
(!)sh
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
192.06 352.14 mo
(System.IO.FileInfo)
[3.05228 3.01233 2.59944 2.22649 3.31203 5.31665 1.67366 1.67365 4.40427 1.67366 3.05228 1.52049 
1.52051 3.31203 1.67366 3.49179 2.02658 0 ]xsh
210.72 338.04 mo
210.48 343.62 li
209.82 343.62 li
210.06 337.98 li
cp
212.94 339.9 mo
210.12 344.28 li
207.72 339.66 li
207.66 339.42 li
207.84 339.24 li
208.08 339.18 li
208.26 339.36 li
210.48 343.44 li
209.88 343.44 li
212.4 339.54 li
212.58 339.36 li
212.82 339.42 li
213 339.66 li
212.94 339.9 li
.92929 .879301 .889677 .799283 cmyk
f
210.72 338.04 mo
210.48 343.62 li
209.82 343.62 li
210.06 337.98 li
cp
212.94 339.9 mo
210.12 344.28 li
207.72 339.66 li
207.66 339.42 li
207.84 339.24 li
208.08 339.18 li
208.26 339.36 li
210.48 343.44 li
209.88 343.44 li
212.4 339.54 li
212.58 339.36 li
212.82 339.42 li
213 339.66 li
212.94 339.9 li
f
gsave
57.12 330.72 mo
537.9 330.72 li
537.9 420.84 li
57.12 420.84 li
cp
eclp
166.92 339.54 mo
253.26 339.54 li
253.26 330.68 li
166.92 330.68 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
166.56 328.14 mo
166.68 327.96 li
166.92 327.84 li
253.26 327.84 li
253.5 327.96 li
253.62 328.14 li
253.62 339.54 li
253.5 339.78 li
253.26 339.84 li
166.92 339.84 li
166.68 339.78 li
166.56 339.54 li
cp
167.22 339.54 mo
166.92 339.18 li
253.26 339.18 li
252.96 339.54 li
252.96 328.14 li
253.26 328.5 li
166.92 328.5 li
167.22 328.14 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
172.56 336.06 mo
(System.IO.FileInfo.FileInfo\(\))
[3.04495 3.005 2.59212 2.21916 3.30469 5.34131 1.66632 1.66632 4.43958 1.67697 3.04495 1.51318 
1.51318 3.30469 1.66632 3.48448 2.03857 3.53773 1.66634 3.04494 1.51318 1.51318 3.3047 1.66634 
3.48447 2.03857 3.53775 2.03857 0 ]xsh
378.72 356.4 mo
467.94 356.4 li
467.94 345 li
378.72 345 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
378.42 345 mo
378.48 344.82 li
378.72 344.7 li
467.94 344.7 li
468.18 344.82 li
468.3 345 li
468.3 356.4 li
468.18 356.64 li
467.94 356.7 li
378.72 356.7 li
378.48 356.64 li
378.42 356.4 li
cp
379.08 356.4 mo
378.72 356.04 li
467.94 356.04 li
467.64 356.4 li
467.64 345 li
467.94 345.36 li
378.72 345.36 li
379.08 345 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
401.34 352.92 mo
(java.io.File.File\(\))
[1.61838 3.18018 2.99564 3.17551 1.66367 1.5105 3.53775 1.677 3.04227 1.51053 1.5105 3.30203 
1.66367 3.0423 1.5105 1.51053 3.30203 2.03857 0 ]xsh
374.04 385.26 mo
374.04 382.14 396.12 379.56 423.36 379.56 cv
450.54 379.56 472.62 382.14 472.62 385.26 cv
472.62 388.38 450.54 390.9 423.36 390.9 cv
396.12 390.9 374.04 388.38 374.04 385.26 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
373.74 385.26 mo
373.74 385.02 li
373.8 384.84 li
373.86 384.78 li
373.92 384.66 li
373.92 384.6 li
374.4 384.12 li
374.64 383.94 li
374.88 383.82 li
375.18 383.7 li
375.48 383.52 li
376.541 383.031 378.234 382.589 379.38 382.32 cv
379.92 382.2 li
381.12 381.96 li
394.871 379.638 409.434 379.335 423.36 379.26 cv
423.48 379.26 li
423.36 379.26 li
428.4 379.26 li
441.188 379.563 454.757 379.837 467.34 382.32 cv
467.88 382.44 li
468.36 382.56 li
468.84 382.74 li
469.924 382.999 471.374 383.432 472.26 384.12 cv
472.44 384.24 li
472.62 384.42 li
472.8 384.612 473.133 385.28 472.92 385.5 cv
472.86 385.62 li
472.86 385.68 li
472.8 385.86 li
472.74 385.86 li
472.5 386.22 li
470.304 387.747 467.507 388.067 464.94 388.62 cv
463.62 388.86 li
452.173 390.553 439.962 391.073 428.4 391.2 cv
425.88 391.26 li
423.36 391.26 li
423.66 390.9 li
423.6 391.14 li
423.36 391.26 li
410.619 391.236 397.915 390.774 385.26 389.22 cv
383.1 388.86 li
380.688 388.376 376.488 387.813 374.46 386.4 cv
374.22 386.22 li
374.1 386.04 li
374.04 386.04 li
373.92 385.86 li
373.86 385.68 li
373.8 385.62 li
373.74 385.5 li
373.74 385.44 li
cp
374.4 385.38 mo
374.4 385.26 li
374.46 385.44 li
374.4 385.38 li
374.46 385.5 li
374.58 385.62 li
374.52 385.62 li
374.64 385.74 li
374.82 385.86 li
376.926 387.12 379.527 387.457 381.9 387.96 cv
383.22 388.2 li
394.603 389.902 406.819 390.412 418.32 390.54 cv
420.84 390.6 li
423.36 390.6 li
423 390.9 li
423.12 390.66 li
423.36 390.54 li
436.52 390.539 449.732 390.143 462.78 388.32 cv
463.5 388.2 li
464.16 388.08 li
466.286 387.611 470.48 387.076 472.14 385.62 cv
472.2 385.5 li
472.26 385.38 li
472.26 385.44 li
472.32 385.26 li
472.26 385.38 li
472.32 385.2 li
472.32 385.26 li
472.26 385.14 li
472.32 385.2 li
472.26 385.08 li
472.26 385.14 li
472.2 384.96 li
472.2 385.02 li
472.14 384.9 li
472.02 384.78 li
470.498 383.534 466.713 382.89 464.82 382.5 cv
464.16 382.38 li
463.5 382.32 li
451.072 380.359 438.439 380.1 425.88 379.92 cv
423.24 379.92 li
423.24 379.86 li
423.36 379.92 li
418.32 379.92 li
406.599 380.179 394.816 380.463 383.22 382.32 cv
382.56 382.38 li
381.9 382.5 li
379.967 382.89 376.25 383.513 374.7 384.78 cv
374.58 384.9 li
374.46 385.02 li
374.52 384.96 li
374.4 385.14 li
374.46 385.08 li
374.4 385.2 li
374.4 385.14 li
374.4 385.26 li
374.4 385.2 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
393.3 387.48 mo
(INDEX_DIR:java.io.File)
[1.66498 4.323 4.08261 3.23682 3.47983 3.30334 4.08264 1.66498 3.60306 1.80289 1.61838 3.18018 
2.99698 3.17685 1.66498 1.51187 3.53772 1.677 3.04361 1.51184 1.51184 0 ]xsh
gsave
57.12 330.72 mo
537.9 330.72 li
537.9 420.84 li
57.12 420.84 li
cp
eclp
343.92 420.86 mo
410.22 420.86 li
410.22 416.04 li
343.92 416.04 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
343.62 416.04 mo
343.68 415.8 li
343.92 415.68 li
410.22 415.68 li
410.46 415.8 li
410.52 416.04 li
410.52 427.38 li
410.46 427.62 li
410.22 427.74 li
343.92 427.74 li
343.68 427.62 li
343.62 427.38 li
cp
344.28 427.38 mo
343.92 427.08 li
410.22 427.08 li
409.86 427.38 li
409.86 416.04 li
410.22 416.4 li
343.92 416.4 li
344.28 416.04 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
gsave
352.02 420.84 mo
397.68 420.84 li
397.68 417.54 li
352.02 417.54 li
cp
clp
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
352.2 423.9 mo
(javaioFileexists)
[1.61838 3.18018 2.99231 4.85983 1.50717 5.21741 3.03894 1.50717 1.5072 4.983 3.29874 2.86578 
1.50717 2.58612 2.21317 0 ]xsh
grestore
gsave
397.68 420.84 mo
401.76 420.84 li
401.76 417.54 li
397.68 417.54 li
cp
clp
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
397.68 423.9 mo
(\(\))
[2.03857 0 ]xsh
grestore
gsave
57.12 330.72 mo
537.9 330.72 li
537.9 420.84 li
57.12 420.84 li
cp
eclp
505.68 307.98 mo
506.46 307.98 li
507.18 308.04 li
508.076 308.108 508.265 308.087 509.1 308.34 cv
509.28 308.4 li
509.4 308.46 li
509.46 308.46 li
509.64 308.64 li
509.7 308.7 li
509.7 308.76 li
509.76 308.88 li
509.76 348.9 li
509.7 348.84 li
509.76 348.9 li
509.7 348.78 li
509.76 348.84 li
509.7 348.84 li
509.76 348.9 li
509.76 348.84 li
510 348.96 li
511.002 349.348 513.048 349.146 513.48 349.38 cv
513.54 349.56 li
513.48 349.68 li
513.3 349.8 li
512.52 349.8 li
511.8 349.86 li
511.2 349.92 li
510.9 349.92 li
510.66 349.98 li
510.42 349.98 li
510.18 350.04 li
510 350.1 li
509.76 350.22 li
509.76 350.16 li
509.7 350.22 li
509.76 350.22 li
509.7 350.28 li
509.76 350.16 li
509.7 350.22 li
509.76 350.16 li
509.76 390.18 li
509.7 390.3 li
509.7 390.36 li
509.46 390.6 li
509.4 390.6 li
509.28 390.66 li
509.1 390.72 li
508.296 390.996 508.028 390.94 507.18 391.02 cv
506.46 391.08 li
505.68 391.08 li
505.68 390.6 li
506.46 390.6 li
507.78 390.48 li
508.08 390.42 li
508.32 390.42 li
508.56 390.36 li
508.92 390.24 li
509.1 390.24 li
509.22 390.18 li
509.16 390.18 li
509.28 390.12 li
509.22 390.18 li
509.28 390.12 li
509.22 390.18 li
509.22 390.12 li
509.22 390.18 li
509.22 350.1 li
509.28 350.04 li
509.34 349.92 li
509.4 349.86 li
509.4 349.8 li
509.52 349.74 li
509.58 349.74 li
509.7 349.68 li
510.06 349.56 li
510.54 349.44 li
510.84 349.44 li
511.14 349.38 li
511.8 349.32 li
512.52 349.32 li
513.3 349.26 li
513.3 349.8 li
512.52 349.8 li
511.51 349.687 510.474 349.709 509.52 349.32 cv
509.4 349.26 li
509.4 349.2 li
509.34 349.14 li
509.28 349.02 li
509.22 348.96 li
509.22 308.88 li
509.22 308.94 li
509.22 308.88 li
509.28 308.94 li
509.22 308.88 li
509.28 308.94 li
509.16 308.88 li
509.22 308.88 li
509.1 308.82 li
508.98 308.82 li
508.8 308.76 li
508.56 308.7 li
508.32 308.64 li
508.08 308.64 li
507.78 308.58 li
507.18 308.52 li
506.46 308.46 li
505.68 308.46 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
%ADOBeginSubsetFont: QJJAAA+Calibri-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
HHKXOY+Calibri-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B7A0860A0FBD5EA1E749E7E58B0F98199F07C24128E629CC
07ECEEF89EDEA0FC4001871F7033B2E80CB62D0A744FC3F7C55863E174CD81A8
4392BB0688FE7D4EF211AF052FAA0E2EACCCE4F5D064869A409F7A14738DCAD5
4C7ED4830E4B27E3F804D39E1ABEB78CA90A339FBA2D4FD4CAD47AD7AEEC552E
59598067B76D0F861550816CCA57AA37B3364F7759503952B12DE83DBD123268
D601418ED3FCDACDCD6C05C42199C6BE36F0A8F38B23CB2C98481C1790C50801
3B443E2969DC29BFC561ADBCA52925D0705238090630F70204A277F9D3D90C78
39505EE05E9185B95881ACDA1A1BA2EC642242012A268C4E96FFD84915D1AFCA
B9982BD19092B04A1ECF0CC758A1681F2B4DFD818D44BD8F650A46DC945069EC
299EFDA50BDA54E55790BD571A9B9E481BE569BF4245A289CC4F4B74083ADFD9
355C7CEACF94D0360F7BB766035B1B38C9E243AC4EB9FFD213F0C9FD370CC27F
088D79A9BA806991A21933928C2862E0D4AD98E3638D9759890616F15B49BFCF
DF1A315B74804EB26E8161B924856C962712A4570E53F329D4FE6EF95647F5E4
2C804EFA7F4E8F3FC35970463BA1DC030B281730711D9A2A797E4A2F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HHKXOY+Calibri-Bold /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/HHKXOY+Calibri-Bold*1 
[49{/.notdef}rp /one 4{/.notdef}rp /six 21{/.notdef}rp /L 24{/.notdef}rp /e 
3{/.notdef}rp /i 4{/.notdef}rp /n 145{/.notdef}rp]
HHKXOY+Calibri-Bold nf
HHKXOY+Calibri-Bold*1 [6.66 0 0 -6.66 0 0 ]msf
515.7 352.2 mo
(Line)
[2.82721 1.64838 3.58643 0 ]xsh
HHKXOZ+Calibri-Bold*1 [6.66 0 0 -6.66 0 0 ]msf
527.1 352.2 mo
( )sh
HHKXOY+Calibri-Bold*1 [6.66 0 0 -6.66 0 0 ]msf
528.6 352.2 mo
(6)sh
gsave
57.12 330.72 mo
537.9 330.72 li
537.9 420.84 li
57.12 420.84 li
cp
eclp
411.72 398.1 mo
412.5 398.1 li
413.22 398.16 li
414.061 398.209 414.354 398.239 415.14 398.46 cv
415.26 398.52 li
415.44 398.58 li
415.5 398.58 li
415.68 398.76 li
415.74 398.88 li
415.74 422.1 li
415.74 422.04 li
415.74 422.1 li
415.68 422.04 li
415.74 422.1 li
415.74 422.04 li
415.8 422.1 li
416.899 422.463 418.116 422.504 419.28 422.52 cv
419.46 422.58 li
419.52 422.76 li
419.46 422.94 li
419.28 423 li
418.56 423 li
417.84 423.06 li
417.18 423.12 li
416.94 423.18 li
416.64 423.18 li
416.4 423.24 li
416.04 423.36 li
415.86 423.36 li
415.74 423.48 li
415.74 423.42 li
415.68 423.48 li
415.74 423.42 li
415.74 423.48 li
415.74 423.42 li
415.74 446.64 li
415.68 446.76 li
415.56 446.88 li
415.32 447 li
415.14 447.06 li
414.518 447.268 413.867 447.281 413.22 447.36 cv
412.5 447.42 li
411.72 447.42 li
411.72 446.94 li
412.44 446.88 li
413.369 446.894 414.329 446.819 415.2 446.52 cv
415.26 446.46 li
415.26 446.52 li
415.32 446.4 li
415.26 446.52 li
415.26 446.46 li
415.26 446.52 li
415.26 423.24 li
415.5 423 li
415.56 423 li
415.74 422.88 li
415.92 422.82 li
416.59 422.733 416.999 422.591 417.78 422.58 cv
418.5 422.52 li
419.28 422.52 li
419.28 423 li
418.5 423 li
417.78 422.94 li
416.9 422.844 416.915 422.942 416.1 422.7 cv
415.86 422.64 li
415.68 422.58 li
415.44 422.46 li
415.32 422.34 li
415.26 422.28 li
415.26 399 li
415.26 399.06 li
415.26 399 li
415.32 399.12 li
415.26 399 li
415.26 399.06 li
415.2 399 li
415.14 399 li
414.6 398.82 li
414.36 398.76 li
414.12 398.76 li
413.82 398.7 li
413.16 398.64 li
412.44 398.64 li
411.72 398.58 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
gsave
57.12 330.72 mo
537.9 330.72 li
537.9 420.84 li
57.12 420.84 li
cp
eclp
505.8 394.32 mo
506.52 394.38 li
507.139 394.328 508.689 394.498 509.34 394.74 cv
509.52 394.8 li
509.52 394.86 li
509.64 394.92 li
509.7 394.98 li
509.76 395.1 li
509.82 395.16 li
509.82 422.1 li
509.82 422.04 li
509.82 422.1 li
509.76 422.04 li
509.82 422.1 li
509.76 422.04 li
509.88 422.1 li
510.976 422.467 512.199 422.505 513.36 422.52 cv
513.54 422.58 li
513.6 422.76 li
513.54 422.94 li
513.36 423 li
512.58 423 li
511.26 423.12 li
510.96 423.18 li
510.72 423.18 li
510.24 423.3 li
510.06 423.36 li
509.94 423.36 li
509.82 423.42 li
509.88 423.42 li
509.76 423.48 li
509.82 423.42 li
509.76 423.48 li
509.82 423.42 li
509.82 423.48 li
509.82 423.42 li
509.82 450.36 li
509.76 450.42 li
509.7 450.54 li
509.64 450.6 li
509.52 450.66 li
509.52 450.72 li
509.34 450.78 li
508.45 451.062 507.456 451.155 506.52 451.14 cv
505.8 451.2 li
505.74 450.66 li
506.52 450.66 li
507.398 450.547 508.329 450.599 509.16 450.3 cv
509.28 450.24 li
509.28 450.3 li
509.34 450.24 li
509.28 450.24 li
509.34 450.18 li
509.28 450.3 li
509.34 450.24 li
509.34 450.3 li
509.34 423.24 li
509.52 423.06 li
509.58 423 li
509.64 423 li
509.76 422.88 li
509.94 422.82 li
510.559 422.768 511.112 422.557 511.86 422.58 cv
512.58 422.52 li
513.36 422.52 li
513.36 423 li
512.58 423 li
511.86 422.94 li
511.056 422.86 510.884 422.916 510.12 422.7 cv
509.58 422.52 li
509.4 422.34 li
509.34 422.28 li
509.34 395.22 li
509.34 395.28 li
509.28 395.22 li
509.34 395.34 li
509.28 395.28 li
509.34 395.28 li
509.28 395.22 li
509.28 395.28 li
509.16 395.22 li
508.375 394.91 507.348 394.977 506.52 394.86 cv
505.74 394.86 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
gsave
57.12 330.72 mo
537.9 330.72 li
537.9 420.84 li
57.12 420.84 li
cp
eclp
94.8 353.52 mo
94.02 353.52 li
93.3 353.46 li
92.64 353.4 li
92.34 353.4 li
92.04 353.34 li
91.8 353.28 li
91.62 353.28 li
91.38 353.22 li
91.2 353.16 li
91.08 353.1 li
90.96 352.98 li
90.9 352.98 li
90.84 352.86 li
90.78 352.8 li
90.78 352.74 li
90.72 352.68 li
90.72 323.88 li
90.78 323.94 li
90.72 323.88 li
90.78 324 li
90.72 323.94 li
90.78 323.94 li
90.66 323.88 li
90.6 323.88 li
89.715 323.413 87.352 323.64 87 323.4 cv
86.94 323.22 li
87 323.1 li
87.308 322.865 89.865 322.993 90.6 322.62 cv
90.72 322.56 li
90.78 322.5 li
90.72 322.56 li
90.78 322.5 li
90.72 322.62 li
90.78 322.56 li
90.72 322.62 li
90.72 293.82 li
90.78 293.76 li
90.78 293.7 li
90.84 293.58 li
90.9 293.52 li
90.96 293.52 li
91.08 293.4 li
91.2 293.34 li
91.38 293.28 li
91.793 293.136 92.886 293.023 93.3 292.98 cv
94.8 292.98 li
94.8 293.46 li
94.02 293.46 li
93.135 293.567 92.226 293.531 91.38 293.82 cv
91.26 293.88 li
91.32 293.88 li
91.2 293.94 li
91.26 293.88 li
91.2 293.94 li
91.26 293.82 li
91.26 293.88 li
91.26 293.82 li
91.26 322.68 li
91.2 322.74 li
91.14 322.86 li
91.08 322.92 li
91.08 322.98 li
90.96 323.04 li
90.222 323.339 88.688 323.505 87.96 323.46 cv
87.18 323.52 li
87.18 322.98 li
87.96 322.98 li
88.97 323.093 90.006 323.071 90.96 323.46 cv
91.08 323.52 li
91.08 323.58 li
91.14 323.64 li
91.2 323.76 li
91.26 323.82 li
91.26 352.68 li
91.26 352.56 li
91.26 352.62 li
91.2 352.56 li
91.26 352.62 li
91.2 352.56 li
91.32 352.62 li
91.26 352.62 li
91.5 352.74 li
91.68 352.74 li
92.4 352.92 li
92.7 352.92 li
93.3 352.98 li
94.02 353.04 li
94.8 353.04 li
.92929 .879301 .889677 .799283 cmyk
f
94.8 473.46 mo
94.02 473.46 li
93.3 473.4 li
92.651 473.315 92.002 473.318 91.38 473.1 cv
91.2 473.04 li
91.08 472.98 li
91.02 472.98 li
90.84 472.8 li
90.78 472.68 li
90.78 472.62 li
90.72 472.56 li
90.72 419.4 li
90.78 419.46 li
90.72 419.4 li
90.78 419.52 li
90.72 419.4 li
90.78 419.46 li
90.66 419.4 li
90.72 419.4 li
90.6 419.34 li
90.48 419.34 li
90.3 419.28 li
89.82 419.16 li
89.58 419.16 li
89.28 419.1 li
88.68 419.04 li
87.96 419.04 li
87.18 418.98 li
87 418.92 li
86.94 418.74 li
87 418.56 li
87.18 418.5 li
87.96 418.5 li
88.68 418.44 li
89.28 418.38 li
89.58 418.38 li
90.3 418.2 li
90.48 418.2 li
90.72 418.08 li
90.78 418.02 li
90.72 418.08 li
90.78 418.02 li
90.72 418.14 li
90.78 418.08 li
90.72 418.14 li
90.72 364.92 li
90.78 364.86 li
90.78 364.8 li
90.84 364.68 li
90.9 364.62 li
90.96 364.62 li
91.02 364.56 li
91.08 364.5 li
91.2 364.44 li
91.38 364.38 li
91.793 364.236 92.886 364.123 93.3 364.08 cv
94.8 364.08 li
94.8 364.56 li
94.02 364.56 li
93.135 364.667 92.226 364.631 91.38 364.92 cv
91.26 364.98 li
91.32 364.98 li
91.2 365.04 li
91.26 364.98 li
91.2 365.04 li
91.26 364.92 li
91.26 364.98 li
91.26 364.92 li
91.26 418.2 li
91.2 418.26 li
91.14 418.38 li
90.96 418.56 li
90.42 418.74 li
89.835 418.735 89.276 419.03 88.68 418.98 cv
87.18 418.98 li
87.18 418.5 li
87.96 418.5 li
88.68 418.56 li
89.34 418.62 li
89.64 418.62 li
89.94 418.68 li
90.42 418.8 li
90.78 418.92 li
90.9 418.98 li
90.96 418.98 li
91.08 419.04 li
91.08 419.1 li
91.14 419.16 li
91.2 419.28 li
91.26 419.34 li
91.26 472.56 li
91.26 472.5 li
91.26 472.56 li
91.2 472.44 li
91.26 472.5 li
91.2 472.5 li
91.32 472.56 li
91.26 472.56 li
91.38 472.56 li
91.5 472.62 li
91.68 472.68 li
91.92 472.74 li
92.16 472.74 li
92.4 472.8 li
92.7 472.86 li
93.3 472.92 li
94.02 472.92 li
94.8 472.98 li
f
grestore
gsave
65.7 420.84 mo
85.32 420.84 li
85.32 415.38 li
65.7 415.38 li
cp
clp
%ADOBeginSubsetFont: QJJAAA+Calibri-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
HHKXOY+Calibri-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7A0860A1D63BBAFE81208885E2DA4FE3D9951802C980B9
3B8AE43E5E49D1113B36E9037348BD862EAA193D480DB2BEE688EE29F136DF74
9165B30D02B14B6A85F4072BC72AC91C5F534C7866B7807237891E48D6110512
222E5667BA704890CB9C22D99031A3EC367B3DC2EAE8A6D98E683A246839ED0E
7A56F129B494DD22C6F55AAD0040BC46F44EB4C5C27934076CA4738F2D23F3A8
F1C93C5095BB125B5166E1509F3425920C39CFC6F4EE0C82F6232328BDF3848A
9137D5B179043C0545723DD04B2E452ACE61D852CA860CB2D24B82C9ACBC8DB8
BBC946376DB6098DE5C43CA01A738EBE1DAE66212F0B5FF9BE4B5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HHKXOY+Calibri-Bold /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/HHKXOY+Calibri-Bold*1 
[49{/.notdef}rp /one 2{/.notdef}rp /four /.notdef /six 21{/.notdef}rp /L 
24{/.notdef}rp /e 3{/.notdef}rp /i 4{/.notdef}rp /n 145{/.notdef}rp]
HHKXOY+Calibri-Bold nf
HHKXOY+Calibri-Bold*1 [6.66 0 0 -6.66 0 0 ]msf
65.7 421.74 mo
(Line)
[2.82719 1.64837 3.58643 0 ]xsh
78.5998 421.74 mo
(14)
[3.36133 0 ]xsh
grestore
gsave
57.12 330.72 mo
537.9 330.72 li
537.9 420.84 li
57.12 420.84 li
cp
eclp
231.42 466.2 mo
230.64 466.2 li
229.92 466.14 li
229.565 466.075 228.592 466.051 228.24 465.9 cv
228 465.84 li
227.82 465.78 li
227.649 465.701 227.393 465.588 227.4 465.36 cv
227.4 414 li
227.4 414.06 li
227.34 414 li
227.4 414.12 li
227.34 414.06 li
227.4 414.06 li
227.34 414 li
227.34 414.06 li
227.1 413.94 li
226.92 413.88 li
226.68 413.82 li
226.44 413.82 li
226.2 413.76 li
225.9 413.7 li
225.3 413.64 li
223.8 413.64 li
223.68 413.52 li
223.56 413.34 li
223.8 413.1 li
225.3 413.1 li
225.9 413.04 li
226.5 412.92 li
226.74 412.92 li
227.1 412.8 li
227.34 412.68 li
227.34 412.74 li
227.4 412.68 li
227.34 412.68 li
227.4 412.62 li
227.34 412.74 li
227.4 412.68 li
227.4 412.74 li
227.4 361.32 li
227.46 361.2 li
227.64 361.02 li
227.7 361.02 li
227.82 360.96 li
228 360.9 li
228.548 360.688 229.34 360.683 229.92 360.6 cv
230.64 360.54 li
231.42 360.54 li
231.42 361.02 li
230.7 361.08 li
229.936 361.057 228.744 361.13 228 361.44 cv
227.88 361.44 li
227.94 361.44 li
227.82 361.5 li
227.88 361.5 li
227.82 361.56 li
227.88 361.44 li
227.88 361.5 li
227.88 361.44 li
227.88 412.8 li
227.82 412.86 li
227.76 412.98 li
227.7 413.04 li
227.7 413.1 li
227.58 413.16 li
226.715 413.512 225.482 413.595 224.58 413.58 cv
223.86 413.64 li
223.86 413.1 li
224.58 413.16 li
225.294 413.107 226.852 413.286 227.58 413.58 cv
227.7 413.64 li
227.7 413.7 li
227.76 413.76 li
227.82 413.88 li
227.88 413.94 li
227.88 465.3 li
227.88 465.24 li
227.88 465.3 li
227.82 465.18 li
227.88 465.24 li
227.82 465.24 li
227.88 465.3 li
228 465.3 li
228.12 465.36 li
228.3 465.42 li
228.54 465.48 li
228.78 465.48 li
229.02 465.54 li
229.32 465.6 li
229.98 465.66 li
230.64 465.66 li
231.42 465.72 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
%ADOBeginSubsetFont: QJJAAA+Calibri-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
HHKXOY+Calibri-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/seven <1C60D8A8C9B7A0860A0D552B75F79378D9E06D77B451DD903679D996
A6511E8FEA889AF14D9DC05168CA506ECBB85DDBB3AA073C759A3149E3D4355F
1B367F8AC029308362F0BC97CF0D605094DA9C9EE84207F2F1C3FEE86BE4FE69
A4678C8539B3A6483456169DAC756435D7F0F64112F64D4DF3B0BCE0AAB9D0B2
93592B1638579C87A3CFD01CB9ECBC9C861D42E972F187C561A2073015B42F8B
4742F25D70B37C5DC572E7DD3F875AE90073BE21D804031E7A8DC86381> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HHKXOY+Calibri-Bold /Encoding get
dup 55 /seven put
pop
%ADOEndSubsetFont
/HHKXOY+Calibri-Bold*1 
[49{/.notdef}rp /one 2{/.notdef}rp /four /.notdef /six /seven 20{/.notdef}rp 
/L 24{/.notdef}rp /e 3{/.notdef}rp /i 4{/.notdef}rp /n 145{/.notdef}rp]
HHKXOY+Calibri-Bold nf
HHKXOY+Calibri-Bold*1 [6.66 0 0 -6.66 0 0 ]msf
203.88 416.04 mo
(Line)
[2.82719 1.64836 3.58644 0 ]xsh
HHKXOZ+Calibri-Bold*1 [6.66 0 0 -6.66 0 0 ]msf
215.28 416.04 mo
( )sh
HHKXOY+Calibri-Bold*1 [6.66 0 0 -6.66 0 0 ]msf
216.78 416.04 mo
(17)
[3.36133 0 ]xsh
276.84 405.96 mo
277.5 405.96 li
277.5 410.22 li
276.84 410.22 li
cp
277.5 405.96 mo
cp
279.78 406.38 mo
277.14 410.88 li
274.56 406.38 li
274.5 406.14 li
274.68 405.9 li
274.92 405.9 li
275.1 406.02 li
277.44 410.04 li
276.9 410.04 li
279.18 406.02 li
279.42 405.9 li
279.66 405.9 li
279.84 406.14 li
279.78 406.38 li
.92929 .879301 .889677 .799283 cmyk
f
276.84 405.96 mo
277.5 405.96 li
277.5 410.22 li
276.84 410.22 li
cp
277.5 405.96 mo
cp
279.78 406.38 mo
277.14 410.88 li
274.56 406.38 li
274.5 406.14 li
274.68 405.9 li
274.92 405.9 li
275.1 406.02 li
277.44 410.04 li
276.9 410.04 li
279.18 406.02 li
279.42 405.9 li
279.66 405.9 li
279.84 406.14 li
279.78 406.38 li
f
231.9 406.38 mo
322.38 406.38 li
322.38 395.1 li
231.9 395.1 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
231.6 395.1 mo
231.72 394.86 li
231.9 394.74 li
322.38 394.74 li
322.62 394.86 li
322.74 395.1 li
322.74 406.38 li
322.62 406.62 li
322.38 406.68 li
231.9 406.68 li
231.72 406.62 li
231.6 406.38 li
cp
232.26 406.38 mo
231.9 406.02 li
322.38 406.02 li
322.08 406.38 li
322.08 395.1 li
322.38 395.4 li
231.9 395.4 li
232.26 395.1 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
235.8 402.96 mo
(System.IO.FileInfo.getFullFile\(\))
[3.04295 3.00301 2.59012 2.28043 3.3027 5.34129 1.66434 1.66431 4.43958 1.677 3.04294 1.5112 
1.51117 3.3027 1.66431 3.48248 2.03857 3.53775 1.66434 3.1228 3.36331 2.28043 3.04297 3.48245 
1.5112 1.51117 3.04294 1.5112 1.55646 3.3027 2.03857 0 ]xsh
277.5 370.32 mo
277.62 372.96 li
276.9 373.02 li
276.84 370.32 li
cp
277.68 374.94 mo
277.74 376.38 li
277.08 376.44 li
277.02 375 li
cp
279.84 372.48 mo
277.38 377.1 li
274.62 372.66 li
274.56 372.42 li
274.74 372.18 li
274.98 372.18 li
275.16 372.3 li
277.68 376.2 li
277.08 376.26 li
279.3 372.18 li
279.48 372 li
279.72 372 li
279.9 372.24 li
279.84 372.48 li
.92929 .879301 .889677 .799283 cmyk
f
277.5 370.32 mo
277.62 372.96 li
276.9 373.02 li
276.84 370.32 li
cp
277.68 374.94 mo
277.74 376.38 li
277.08 376.44 li
277.02 375 li
cp
279.84 372.48 mo
277.38 377.1 li
274.62 372.66 li
274.56 372.42 li
274.74 372.18 li
274.98 372.18 li
275.16 372.3 li
277.68 376.2 li
277.08 376.26 li
279.3 372.18 li
279.48 372 li
279.72 372 li
279.9 372.24 li
279.84 372.48 li
f
235.44 363.66 mo
235.44 360 254.1 357.06 277.14 357.06 cv
300.18 357.06 318.9 360 318.9 363.66 cv
318.9 367.32 300.18 370.32 277.14 370.32 cv
254.1 370.32 235.44 367.32 235.44 363.66 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
235.08 363.72 mo
235.08 363.66 li
235.14 363.48 li
235.14 363.24 li
235.2 363.24 li
235.26 363.06 li
238.595 357.324 271.341 356.589 277.14 356.7 cv
277.38 356.82 li
277.14 356.7 li
279.3 356.7 li
281.46 356.76 li
283.5 356.76 li
292.984 357.109 302.523 357.597 311.82 359.64 cv
312.96 359.94 li
313.92 360.18 li
315.264 360.625 318.916 361.635 319.2 363.42 cv
319.2 363.72 li
318.877 369.538 285.039 370.692 281.4 370.62 cv
277.14 370.62 li
277.2 369.96 li
277.44 370.14 li
277.5 370.32 li
277.38 370.56 li
277.14 370.62 li
272.88 370.62 li
270.78 370.56 li
266.7 370.44 li
264.72 370.32 li
262.8 370.26 li
260.88 370.14 li
256.445 369.817 252.014 369.386 247.62 368.7 cv
246.24 368.46 li
244.92 368.22 li
243.66 367.98 li
242.239 367.721 235.701 366.238 235.2 364.14 cv
235.14 364.08 li
235.14 363.9 li
cp
235.74 363.78 mo
235.8 363.96 li
235.8 363.9 li
235.86 364.02 li
239.386 369.113 269.397 370.019 275.04 369.96 cv
277.14 369.96 li
277.08 370.62 li
276.9 370.5 li
276.84 370.26 li
276.9 370.08 li
277.14 369.96 li
281.4 369.96 li
283.5 369.9 li
287.58 369.78 li
289.56 369.66 li
291.48 369.6 li
293.4 369.48 li
297.353 369.147 301.222 368.779 305.16 368.28 cv
306.6 368.04 li
307.98 367.8 li
309.3 367.56 li
311.099 367.225 317.125 366.025 318.36 364.2 cv
318.48 364.08 li
318.54 363.9 li
318.54 363.96 li
318.54 363.66 li
318.54 363.72 li
318.54 363.54 li
318.54 363.6 li
318.54 363.48 li
318.48 363.3 li
318.48 363.36 li
318.42 363.18 li
313.155 357.88 284.288 357.423 277.14 357.36 cv
276.9 357.3 li
276.9 357.24 li
277.14 357.36 li
274.98 357.36 li
272.88 357.42 li
263.714 357.552 254.074 358.144 245.04 359.76 cv
243.78 360.06 li
242.64 360.3 li
240.933 360.709 237.12 361.602 235.92 363.18 cv
235.86 363.3 li
235.8 363.48 li
235.8 363.42 li
235.8 363.54 li
235.74 363.72 li
235.74 363.66 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
261.48 362.34 mo
(INDEX_DIR:)
[1.66898 4.323 4.08661 3.24078 3.47986 3.30002 4.08661 1.66901 3.60706 0 ]xsh
252.6 367.68 mo
(System.IO.FileInfo)
[3.05228 3.01234 2.59943 2.2265 3.31201 5.31665 1.67365 1.67365 4.4043 1.67365 3.05228 1.52051 
1.52051 3.31201 1.67365 3.49179 2.02661 0 ]xsh
gsave
57.12 330.72 mo
537.9 330.72 li
537.9 420.84 li
57.12 420.84 li
cp
eclp
233.94 416.82 mo
233.94 413.76 253.26 411.3 277.14 411.3 cv
300.96 411.3 320.28 413.76 320.28 416.82 cv
320.28 419.88 300.96 422.4 277.14 422.4 cv
253.26 422.4 233.94 419.88 233.94 416.82 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
233.58 416.88 mo
233.58 416.82 li
233.756 416.293 233.47 416.721 233.88 416.1 cv
233.88 416.04 li
234.06 415.92 li
234.18 415.74 li
236.226 414.228 240.109 413.69 242.46 413.16 cv
243.72 412.98 li
245.1 412.8 li
255.583 411.3 266.559 411 277.14 410.94 cv
277.32 411.06 li
277.38 411.06 li
277.14 410.94 li
279.36 410.94 li
281.52 411 li
283.68 411 li
293.594 411.275 304.36 411.697 314.1 413.64 cv
315.18 413.88 li
316.14 414.12 li
316.56 414.24 li
317.634 414.487 318.116 414.715 319.08 415.14 cv
319.38 415.26 li
319.62 415.44 li
319.8 415.56 li
320.04 415.74 li
320.22 415.86 li
320.58 416.4 li
320.58 416.46 li
320.64 416.58 li
320.64 417.06 li
320.516 417.486 320.03 418.04 319.62 418.2 cv
319.38 418.38 li
319.08 418.5 li
318.72 418.813 317.082 419.273 316.56 419.46 cv
316.14 419.58 li
315.18 419.82 li
314.16 420.06 li
304.241 421.917 293.752 422.409 283.68 422.64 cv
281.52 422.7 li
277.14 422.7 li
277.44 422.28 li
277.44 422.46 li
277.38 422.58 li
277.14 422.7 li
272.169 422.763 267.228 422.528 262.26 422.4 cv
260.28 422.28 li
258.36 422.16 li
254.418 421.921 250.457 421.582 246.54 421.08 cv
245.1 420.9 li
243.72 420.72 li
242.46 420.48 li
240.524 420.123 235.413 419.324 233.88 417.6 cv
233.76 417.42 li
233.7 417.24 li
233.64 417.24 li
233.64 417 li
cp
234.3 416.94 mo
234.24 416.88 li
234.3 417 li
234.36 417.06 li
234.42 417.24 li
234.42 417.18 li
234.48 417.3 li
234.66 417.42 li
236.153 418.612 239.631 419.291 241.38 419.58 cv
242.58 419.82 li
243.84 420.06 li
253.399 421.427 263.055 421.851 272.7 422.04 cv
277.14 422.04 li
276.78 422.46 li
276.84 422.16 li
277.14 422.04 li
279.36 422.04 li
289.279 421.932 299.219 421.556 309.06 420.24 cv
310.38 420.06 li
311.7 419.82 li
313.697 419.395 317.848 418.821 319.56 417.42 cv
319.74 417.3 li
319.86 417.18 li
319.8 417.24 li
319.86 417.12 li
319.98 417 li
319.92 417 li
319.98 416.88 li
319.98 416.94 li
319.98 416.82 li
319.98 416.88 li
319.98 416.7 li
319.98 416.76 li
319.92 416.64 li
319.98 416.7 li
319.86 416.46 li
319.74 416.4 li
319.272 415.892 319.129 415.905 318.54 415.62 cv
317.94 415.38 li
316.65 414.934 315.309 414.604 313.98 414.3 cv
312.9 414.06 li
311.7 413.82 li
310.38 413.64 li
300.243 412.099 289.603 411.749 279.36 411.6 cv
277.14 411.6 li
276.9 411.54 li
277.14 411.6 li
274.92 411.6 li
272.7 411.66 li
263.721 411.749 254.109 412.171 245.22 413.46 cv
243.84 413.64 li
242.58 413.82 li
241.38 414.06 li
239.845 414.415 238.524 414.593 237.06 415.14 cv
236.64 415.26 li
236.34 415.38 li
235.71 415.554 235.329 415.804 234.78 416.1 cv
234.54 416.34 li
234.42 416.52 li
234.42 416.46 li
234.3 416.7 li
234.3 416.64 li
234.24 416.76 li
234.3 416.7 li
234.24 416.88 li
234.24 416.82 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
252.78 419.04 mo
(null:System.String)
[3.48047 3.48047 1.50919 1.50919 1.80289 3.04095 3.00104 2.5881 2.21518 3.30069 5.34131 1.66232 
3.04095 2.21515 2.34232 1.50919 3.48047 0 ]xsh
235.68 383.7 mo
235.68 380.04 254.34 377.04 277.38 377.04 cv
300.48 377.04 319.14 380.04 319.14 383.7 cv
319.14 387.36 300.48 390.36 277.38 390.36 cv
254.34 390.36 235.68 387.36 235.68 383.7 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
235.32 383.7 mo
235.38 383.52 li
235.38 383.28 li
235.44 383.22 li
235.5 383.04 li
235.74 382.68 li
235.92 382.5 li
236.1 382.26 li
236.34 382.08 li
236.58 381.96 li
236.82 381.78 li
237.12 381.6 li
238.514 380.802 240.092 380.394 241.62 379.92 cv
242.7 379.68 li
243.9 379.38 li
245.16 379.14 li
246.48 378.9 li
250.116 378.266 253.79 377.897 257.46 377.52 cv
259.26 377.4 li
261.12 377.28 li
266.531 376.891 271.955 376.688 277.38 376.74 cv
277.56 376.8 li
277.68 376.92 li
277.74 376.92 li
277.44 376.74 li
281.7 376.74 li
285.657 376.718 318.553 377.833 319.44 383.52 cv
319.5 383.7 li
319.5 383.76 li
319.44 383.88 li
319.332 385.476 316.357 386.482 315.12 386.88 cv
314.22 387.18 li
313.2 387.48 li
303.822 389.733 293.357 390.264 283.74 390.6 cv
281.7 390.6 li
279.54 390.66 li
277.38 390.66 li
277.62 390.06 li
277.74 390.24 li
277.74 390.48 li
277.62 390.6 li
277.44 390.66 li
273.12 390.66 li
271.08 390.6 li
268.98 390.54 li
266.94 390.48 li
264.96 390.36 li
263.04 390.3 li
261.12 390.18 li
256.64 389.804 252.312 389.405 247.86 388.74 cv
246.48 388.5 li
245.16 388.26 li
243.9 388.02 li
242.76 387.72 li
241.268 387.444 238.818 386.69 237.42 385.98 cv
236.82 385.62 li
236.313 385.381 235.557 384.771 235.44 384.18 cv
235.38 384.12 li
235.38 383.88 li
cp
236.04 383.82 mo
236.04 383.94 li
239.277 389.141 269.796 390.048 275.28 390 cv
277.44 390 li
277.2 390.6 li
277.08 390.42 li
277.08 390.24 li
277.2 390.06 li
277.38 390 li
279.54 390 li
281.64 389.94 li
283.74 389.94 li
285.78 389.88 li
287.82 389.76 li
289.8 389.7 li
293.64 389.46 li
297.505 389.237 301.573 388.848 305.4 388.26 cv
306.84 388.08 li
308.22 387.84 li
309.54 387.6 li
311.797 387.096 316.963 386.17 318.66 384.24 cv
318.72 384.06 li
318.78 383.94 li
318.78 384 li
318.78 383.82 li
318.84 383.7 li
318.84 383.76 li
318.78 383.58 li
318.78 383.64 li
318.78 383.46 li
318.72 383.34 li
317.675 381.493 312.44 380.476 310.8 380.04 cv
309.54 379.8 li
306.9 379.32 li
303.113 378.809 299.317 378.299 295.5 378.06 cv
293.64 377.94 li
291.72 377.82 li
286.945 377.52 282.224 377.403 277.44 377.4 cv
277.26 377.34 li
277.14 377.22 li
277.08 377.22 li
277.38 377.4 li
273.12 377.4 li
263.384 377.669 253.597 378.16 244.02 380.04 cv
242.88 380.34 li
241.8 380.58 li
240.648 380.88 236.598 381.999 236.04 383.46 cv
236.04 383.76 li
236.04 383.7 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
265.5 382.38 mo
(receiver:)
[2.32367 3.31601 2.81656 3.31601 1.49652 3.00232 3.31601 2.32367 0 ]xsh
252.84 387.72 mo
(System.IO.FileInfo)
[3.05228 3.01234 2.59943 2.2265 3.31201 5.31665 1.67365 1.67365 4.4043 1.67365 3.05228 1.52051 
1.52051 3.31201 1.67365 3.49182 2.02658 0 ]xsh
103.32 382.98 mo
103.32 379.26 121.98 376.32 145.02 376.32 cv
168.06 376.32 186.78 379.26 186.78 382.98 cv
186.78 386.64 168.06 389.58 145.02 389.58 cv
121.98 389.58 103.32 386.64 103.32 382.98 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
102.96 382.98 mo
102.96 382.92 li
103.02 382.74 li
103.321 380.681 107.777 379.622 109.26 379.2 cv
110.34 378.9 li
111.54 378.66 li
112.8 378.42 li
116.787 377.667 121.056 377.065 125.1 376.8 cv
126.9 376.62 li
128.76 376.5 li
134.193 376.126 139.574 375.957 145.02 375.96 cv
145.26 376.02 li
145.38 376.2 li
145.38 376.26 li
145.02 375.96 li
147.18 376.02 li
149.28 376.02 li
151.38 376.08 li
160.827 376.297 170.443 376.911 179.7 378.9 cv
180.84 379.2 li
181.8 379.5 li
182.76 379.74 li
183.82 380.098 184.679 380.449 185.64 381 cv
186.36 381.54 li
186.54 381.72 li
186.66 381.9 li
186.84 382.08 li
186.96 382.26 li
186.96 382.32 li
187.02 382.5 li
187.08 382.68 li
187.08 382.98 li
186.773 388.825 152.898 389.979 149.28 389.88 cv
147.18 389.88 li
145.02 389.94 li
145.26 389.34 li
145.38 389.52 li
145.32 389.7 li
145.2 389.88 li
145.02 389.94 li
142.86 389.94 li
138.66 389.82 li
134.58 389.7 li
132.6 389.64 li
128.76 389.4 li
124.304 389.101 119.908 388.692 115.5 387.96 cv
114.12 387.72 li
112.8 387.48 li
111.54 387.24 li
110.036 386.972 103.645 385.551 103.08 383.4 cv
103.02 383.34 li
103.02 383.22 li
cp
103.62 383.04 mo
103.68 383.22 li
103.68 383.16 li
103.74 383.28 li
103.8 383.46 li
105.032 385.047 108.817 385.873 110.52 386.34 cv
111.66 386.58 li
112.92 386.82 li
122.033 388.583 131.498 389.012 140.76 389.22 cv
142.92 389.22 li
145.02 389.28 li
144.78 389.82 li
144.72 389.64 li
144.72 389.46 li
144.84 389.28 li
145.02 389.22 li
149.28 389.22 li
151.38 389.16 li
155.46 389.04 li
157.44 388.98 li
161.28 388.74 li
165.274 388.465 169.077 388.121 173.04 387.54 cv
174.48 387.3 li
175.86 387.06 li
177.18 386.82 li
178.658 386.602 185.303 385.193 186.24 383.46 cv
186.36 383.34 li
186.42 383.16 li
186.42 383.22 li
186.42 382.92 li
186.42 382.98 li
186.42 382.8 li
186.42 382.86 li
186.42 382.74 li
186.36 382.56 li
186.36 382.62 li
186.3 382.44 li
186.18 382.32 li
184.644 380.646 180.457 379.792 178.44 379.32 cv
177.18 379.08 li
175.86 378.84 li
165.689 377.085 155.325 376.703 145.02 376.68 cv
144.84 376.56 li
144.72 376.38 li
145.02 376.62 li
142.92 376.62 li
140.76 376.68 li
131.483 376.887 122.05 377.319 112.92 379.08 cv
111.66 379.32 li
110.52 379.56 li
108.818 380.011 105.041 380.872 103.8 382.44 cv
103.74 382.56 li
103.68 382.74 li
103.68 382.68 li
103.68 382.8 li
103.62 382.98 li
103.62 382.92 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
133.14 381.6 mo
(receiver:)
[2.32367 3.31602 2.81654 3.31601 1.49654 3.00229 3.31602 2.32367 0 ]xsh
120.48 386.94 mo
(System.IO.FileInfo)
[3.05228 3.01234 2.59944 2.22649 3.31203 5.31665 1.67365 1.67365 4.40428 1.67365 3.05228 1.52051 
1.52051 3.31203 1.67365 3.49181 2.02658 0 ]xsh
145.38 389.58 mo
145.32 395.16 li
144.6 395.16 li
144.72 389.58 li
cp
147.66 391.38 mo
144.96 395.82 li
142.38 391.32 li
142.38 391.08 li
142.5 390.84 li
142.74 390.84 li
142.98 390.96 li
145.26 395.04 li
144.66 395.04 li
147.06 391.02 li
147.3 390.9 li
147.54 390.9 li
147.66 391.14 li
147.66 391.38 li
.92929 .879301 .889677 .799283 cmyk
f
145.38 389.58 mo
145.32 395.16 li
144.6 395.16 li
144.72 389.58 li
cp
147.66 391.38 mo
144.96 395.82 li
142.38 391.32 li
142.38 391.08 li
142.5 390.84 li
142.74 390.84 li
142.98 390.96 li
145.26 395.04 li
144.66 395.04 li
147.06 391.02 li
147.3 390.9 li
147.54 390.9 li
147.66 391.14 li
147.66 391.38 li
f
277.74 390.36 mo
277.5 394.44 li
276.84 394.44 li
277.08 390.3 li
cp
280.02 390.72 mo
277.14 395.1 li
274.8 390.48 li
274.74 390.18 li
274.92 390 li
275.16 390 li
275.34 390.18 li
277.5 394.26 li
276.9 394.26 li
279.48 390.36 li
279.66 390.24 li
279.9 390.3 li
280.08 390.48 li
280.02 390.72 li
f
277.74 390.36 mo
277.5 394.44 li
276.84 394.44 li
277.08 390.3 li
cp
280.02 390.72 mo
277.14 395.1 li
274.8 390.48 li
274.74 390.18 li
274.92 390 li
275.16 390 li
275.34 390.18 li
277.5 394.26 li
276.9 394.26 li
279.48 390.36 li
279.66 390.24 li
279.9 390.3 li
280.08 390.48 li
280.02 390.72 li
f
gsave
57.12 330.72 mo
537.9 330.72 li
537.9 420.84 li
57.12 420.84 li
cp
eclp
314.4 323.22 mo
340.74 323.22 li
342.6 325.14 li
342.6 334.5 li
312.54 334.5 li
312.54 325.14 li
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
314.16 322.98 mo
314.4 322.92 li
340.74 322.92 li
340.98 322.98 li
342.84 324.9 li
342.9 325.14 li
342.9 334.5 li
342.84 334.74 li
342.6 334.86 li
312.54 334.86 li
312.3 334.74 li
312.24 334.5 li
312.24 325.14 li
312.3 324.9 li
cp
312.78 325.38 mo
312.9 325.14 li
312.9 334.5 li
312.54 334.2 li
342.6 334.2 li
342.24 334.5 li
342.24 325.14 li
342.36 325.38 li
340.5 323.46 li
340.74 323.58 li
314.4 323.58 li
314.64 323.46 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
gsave
319.86 333.36 mo
335.28 333.36 li
335.28 330.72 li
319.86 330.72 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
319.86 331.56 mo
(Step2)
[3.04562 2.21982 3.30536 3.48514 0 ]xsh
grestore
gsave
57.12 420.84 mo
537.9 420.84 li
537.9 510.96 li
57.12 510.96 li
cp
eclp
57.12 510.98 mo
537.9 510.98 li
537.9 420.8 li
57.12 420.8 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
grestore
233.7 456.66 mo
320.04 456.66 li
320.04 445.44 li
233.7 445.44 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
233.34 445.44 mo
233.46 445.2 li
233.7 445.08 li
320.04 445.08 li
320.28 445.2 li
320.4 445.44 li
320.4 456.66 li
320.28 456.9 li
320.04 457.02 li
233.7 457.02 li
233.46 456.9 li
233.34 456.66 li
cp
234 456.66 mo
233.7 456.36 li
320.04 456.36 li
319.74 456.66 li
319.74 445.44 li
320.04 445.74 li
233.7 445.74 li
234 445.44 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
239.4 453.24 mo
(System.IO.Directory.Exists\(\))
[3.0536 3.01367 2.60077 2.22781 3.31337 5.31796 1.67499 1.67499 4.40561 1.67499 4.09259 1.52185 
2.32098 3.31339 2.81384 2.22784 3.50644 2.32098 3.01367 1.67499 3.2468 2.88043 1.52185 2.60077 
2.22781 2.6008 2.01459 0 ]xsh
98.52 467.46 mo
98.52 464.34 119.58 461.76 145.5 461.76 cv
171.42 461.76 192.42 464.34 192.42 467.46 cv
192.42 470.64 171.42 473.22 145.5 473.22 cv
119.58 473.22 98.52 470.64 98.52 467.46 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
98.22 467.46 mo
98.22 467.22 li
98.84 465.565 102.658 464.799 104.16 464.46 cv
104.7 464.34 li
105.3 464.22 li
117.348 461.948 130.798 461.598 143.04 461.46 cv
145.5 461.4 li
145.68 461.46 li
145.68 461.52 li
145.5 461.46 li
150.3 461.46 li
161.908 461.734 174.273 462.031 185.7 464.22 cv
186.3 464.34 li
187.38 464.58 li
188.682 464.852 189.574 465.132 190.8 465.6 cv
191.1 465.78 li
191.4 465.9 li
191.64 466.02 li
191.88 466.2 li
192.12 466.32 li
192.3 466.5 li
192.42 466.68 li
192.6 466.86 li
192.6 466.92 li
192.66 467.04 li
192.72 467.1 li
192.72 467.22 li
192.78 467.28 li
192.78 467.46 li
192.66 467.28 li
192.78 467.52 li
192.78 467.64 li
192.72 467.76 li
192.746 468.082 191.976 468.767 191.7 468.9 cv
191.4 469.08 li
191.1 469.2 li
190.159 469.704 188.957 470.028 187.92 470.28 cv
186.3 470.64 li
174.764 472.899 162.028 473.23 150.3 473.52 cv
145.5 473.52 li
145.74 472.98 li
145.8 473.04 li
145.86 473.22 li
145.8 473.34 li
145.68 473.52 li
143.1 473.52 li
130.836 473.332 117.365 473.045 105.3 470.76 cv
104.7 470.64 li
103.62 470.4 li
102.274 470.129 101.457 469.856 100.2 469.38 cv
99.9 469.2 li
99.6 469.08 li
99.36 468.96 li
98.88 468.6 li
98.7 468.48 li
98.52 468.3 li
98.4 468.12 li
98.4 468.06 li
98.34 467.94 li
98.28 467.88 li
98.22 467.76 li
98.22 467.52 li
cp
98.88 467.46 mo
98.88 467.58 li
98.88 467.52 li
98.94 467.7 li
98.88 467.64 li
99 467.76 li
98.94 467.7 li
99.06 467.82 li
99.12 467.94 li
100.552 469.194 103.601 469.683 105.42 470.1 cv
106.62 470.34 li
117.746 472.233 129.436 472.609 140.7 472.86 cv
145.5 472.86 li
145.2 473.4 li
145.14 473.22 li
145.2 473.04 li
145.32 472.92 li
145.5 472.86 li
150.3 472.86 li
152.64 472.8 li
157.2 472.68 li
159.42 472.62 li
161.64 472.5 li
163.74 472.44 li
165.84 472.32 li
170.645 472.027 175.402 471.579 180.18 471 cv
181.68 470.82 li
183.06 470.58 li
184.38 470.34 li
186.431 469.868 190.346 469.33 191.94 467.88 cv
192 467.76 li
192.12 467.64 li
192.06 467.7 li
192.12 467.52 li
192.12 467.58 li
192.12 467.46 li
192.18 467.7 li
192.12 467.52 li
192.12 467.34 li
192.12 467.46 li
192.06 467.28 li
192.06 467.34 li
192 467.22 li
192.06 467.22 li
191.94 467.16 li
191.82 467.04 li
191.017 465.975 186.245 464.91 184.98 464.76 cv
184.38 464.64 li
183.06 464.4 li
171.582 462.622 159.504 462.257 147.9 462.12 cv
145.5 462.12 li
145.32 462.06 li
145.5 462.12 li
140.7 462.12 li
129.423 462.368 117.751 462.695 106.62 464.64 cv
106.02 464.76 li
105.42 464.82 li
103.755 465.235 100.287 465.874 99.06 467.1 cv
99 467.22 li
98.88 467.34 li
98.94 467.28 li
98.88 467.46 li
98.88 467.4 li
98.88 467.46 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
HHKXOW+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B79B8E992413FDCA75477B9D7B9A04CD6123BB6F56A9FDECC0
0D9728A7991DA2934283AC0CEE01FC1FAAD5EB3AB0B14B54FBF8D20FFC398F59
61BF67E7A7D450EE96781B748894F7B28CFF64B6593527AFD517F2D837CA2212
7DD5B8B5DB428B5B30E96423884A9CB2092018BDE5D89DBC68D24BAE5CC3C4CA
2C637AD8EB033D5467D7A9D9BAF78FE973C94976565C5D2795A0EC3A3D0ED4B2
39AE94024C38DD5873724B970E93378B9D3D02710DDE1A505B0750256D404196
0A6F260BE121BC86BDB3FAD0FD5614281E7C400CB879F57DCE47C8620F9E0415
32988A66665B85DB89629C041308B88332F00521D970DDDCE6253C763E0D7021
6AA72D02079885B99C4A6EC9DBDE6F226727E35DA85B8B692471F60F36D72376
FBB59FD143F405DF154BEFC61E6D3D4E9DA3C9684B5A0AF0E5428EF3B3A4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HHKXOW+Calibri /Encoding get
dup 66 /B put
pop
%ADOEndSubsetFont
/HHKXOW+Calibri*1 
[32{/.notdef}rp /quotedblleft /quotedblright 6{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 
/.notdef /zero /one /two 7{/.notdef}rp /colon 7{/.notdef}rp /B 
/.notdef /D /E /F 2{/.notdef}rp /I 4{/.notdef}rp /N 
/O 2{/.notdef}rp /R /S 4{/.notdef}rp /X 6{/.notdef}rp /underscore 
/.notdef /a /.notdef /c /d /e /f /g 
/.notdef /i /j /.notdef /l /m /n /o 
/p /.notdef /r /s /t /u /v /.notdef 
/x /y 134{/.notdef}rp]
HHKXOW+Calibri nf
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
117.96 469.68 mo
(null:System.Boolean)
[3.48314 3.48314 1.51185 1.51184 1.77161 3.04361 3.00368 2.59079 2.21782 3.30336 5.34131 1.66498 
3.60977 3.53775 3.53773 1.49654 3.30336 3.17685 0 ]xsh
145.68 454.44 mo
145.86 460.5 li
145.2 460.56 li
145.02 454.44 li
cp
148.08 456.6 mo
145.56 461.16 li
142.8 456.78 li
142.74 456.48 li
142.92 456.3 li
143.16 456.24 li
143.4 456.42 li
145.8 460.32 li
145.2 460.38 li
147.48 456.3 li
147.66 456.12 li
147.9 456.18 li
148.08 456.36 li
148.08 456.6 li
.92929 .879301 .889677 .799283 cmyk
f
145.68 454.44 mo
145.86 460.5 li
145.2 460.56 li
145.02 454.44 li
cp
148.08 456.6 mo
145.56 461.16 li
142.8 456.78 li
142.74 456.48 li
142.92 456.3 li
143.16 456.24 li
143.4 456.42 li
145.8 460.32 li
145.2 460.38 li
147.48 456.3 li
147.66 456.12 li
147.9 456.18 li
148.08 456.36 li
148.08 456.6 li
f
280.2 472.98 mo
280.44 472.98 li
280.68 472.92 li
298.971 472.437 317.366 472.759 335.64 472.32 cv
337.86 472.14 li
340.14 471.9 li
348.243 471.31 374.295 466.04 377.4 455.88 cv
377.52 455.46 li
377.52 455.28 li
378.18 455.4 li
378.18 455.58 li
378.06 456.06 li
374.892 466.613 348.61 471.957 340.2 472.56 cv
337.92 472.8 li
335.64 472.98 li
317.363 473.425 298.983 473.125 280.68 473.58 cv
280.44 473.64 li
280.26 473.64 li
cp
284.34 475.5 mo
279.6 473.34 li
283.74 470.28 li
284.04 470.22 li
284.22 470.34 li
284.28 470.58 li
284.16 470.82 li
280.44 473.58 li
280.38 472.98 li
284.64 474.9 li
284.82 475.08 li
284.76 475.32 li
284.58 475.5 li
284.34 475.5 li
cp
374.94 459 mo
377.88 454.68 li
380.22 459.36 li
380.22 459.6 li
380.04 459.78 li
379.8 459.84 li
379.62 459.66 li
377.58 455.46 li
378.12 455.52 li
375.48 459.36 li
375.3 459.48 li
375.06 459.42 li
374.88 459.24 li
374.94 459 li
f
280.2 472.98 mo
280.44 472.98 li
280.68 472.92 li
298.971 472.437 317.366 472.759 335.64 472.32 cv
337.86 472.14 li
340.14 471.9 li
348.243 471.31 374.295 466.04 377.4 455.88 cv
377.52 455.46 li
377.52 455.28 li
378.18 455.4 li
378.18 455.58 li
378.06 456.06 li
374.892 466.613 348.61 471.957 340.2 472.56 cv
337.92 472.8 li
335.64 472.98 li
317.363 473.425 298.983 473.125 280.68 473.58 cv
280.44 473.64 li
280.26 473.64 li
cp
284.34 475.5 mo
279.6 473.34 li
283.74 470.28 li
284.04 470.22 li
284.22 470.34 li
284.28 470.58 li
284.16 470.82 li
280.44 473.58 li
280.38 472.98 li
284.64 474.9 li
284.82 475.08 li
284.76 475.32 li
284.58 475.5 li
284.34 475.5 li
cp
374.94 459 mo
377.88 454.68 li
380.22 459.36 li
380.22 459.6 li
380.04 459.78 li
379.8 459.84 li
379.62 459.66 li
377.58 455.46 li
378.12 455.52 li
375.48 459.36 li
375.3 459.48 li
375.06 459.42 li
374.88 459.24 li
374.94 459 li
f
107.88 455.94 mo
183 455.94 li
183 444.66 li
107.88 444.66 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
107.58 444.66 mo
107.64 444.42 li
107.88 444.3 li
183 444.3 li
183.24 444.42 li
183.36 444.66 li
183.36 455.94 li
183.24 456.18 li
183 456.24 li
107.88 456.24 li
107.64 456.18 li
107.58 455.94 li
cp
108.24 455.94 mo
107.88 455.58 li
183 455.58 li
182.7 455.94 li
182.7 444.66 li
183 445.02 li
107.88 445.02 li
108.24 444.66 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
115.8 452.52 mo
(System.IO.File.Exists\(\))
[3.04362 3.00368 2.59078 2.21783 3.30337 5.34196 1.66499 1.66499 4.44023 1.67764 3.04362 1.51184 
1.51186 3.30336 1.66499 3.2368 2.87045 1.51186 2.59077 2.21783 2.59079 2.03925 0 ]xsh
146.1 473.22 mo
147 473.4 li
166.293 475.499 186.851 475.241 206.22 475.62 cv
218.82 475.62 li
238.1 475.303 258.818 475.5 278.04 473.52 cv
278.64 473.4 li
278.88 473.34 li
279.06 474 li
278.76 474.06 li
278.1 474.18 li
258.907 476.164 238.072 475.985 218.82 476.28 cv
212.52 476.34 li
206.22 476.28 li
186.876 476.014 166.162 476.101 146.88 474.06 cv
146.22 473.94 li
145.92 473.82 li
cp
148.14 477.66 mo
145.44 473.22 li
150.66 473.04 li
150.9 473.1 li
151.02 473.34 li
150.9 473.58 li
150.66 473.7 li
146.04 473.88 li
146.34 473.34 li
148.74 477.3 li
148.8 477.54 li
148.62 477.78 li
148.38 477.78 li
148.14 477.66 li
cp
274.38 473.04 mo
279.6 473.34 li
276.72 477.72 li
276.54 477.9 li
276.3 477.84 li
276.12 477.66 li
276.18 477.36 li
278.7 473.46 li
279 474 li
274.32 473.7 li
274.14 473.58 li
274.02 473.34 li
274.14 473.16 li
274.38 473.04 li
.92929 .879301 .889677 .799283 cmyk
f
146.1 473.22 mo
147 473.4 li
166.293 475.499 186.851 475.241 206.22 475.62 cv
218.82 475.62 li
238.1 475.303 258.818 475.5 278.04 473.52 cv
278.64 473.4 li
278.88 473.34 li
279.06 474 li
278.76 474.06 li
278.1 474.18 li
258.907 476.164 238.072 475.985 218.82 476.28 cv
212.52 476.34 li
206.22 476.28 li
186.876 476.014 166.162 476.101 146.88 474.06 cv
146.22 473.94 li
145.92 473.82 li
cp
148.14 477.66 mo
145.44 473.22 li
150.66 473.04 li
150.9 473.1 li
151.02 473.34 li
150.9 473.58 li
150.66 473.7 li
146.04 473.88 li
146.34 473.34 li
148.74 477.3 li
148.8 477.54 li
148.62 477.78 li
148.38 477.78 li
148.14 477.66 li
cp
274.38 473.04 mo
279.6 473.34 li
276.72 477.72 li
276.54 477.9 li
276.3 477.84 li
276.12 477.66 li
276.18 477.36 li
278.7 473.46 li
279 474 li
274.32 473.7 li
274.14 473.58 li
274.02 473.34 li
274.14 473.16 li
274.38 473.04 li
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
HHKXOW+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B78E05EA9D9733F4614DDE4F3CCBD772458631C06B9585CEC3
067196C085285D4EBCA830523DBA980A7903E7CCB9545952E933EA287D309550
0A08B5FF1250FB2472C48AA643F9948B713834174A32233FFD00CE8E2A02CD92
CD0EB36D86747ABA3C4EE4A7096B26460185FCF827CE5E1862348B87101A5C9D
384541120A40C8C71F0748956E48EF5E095EAD17FBE5B28249366E6BEAFC298E
E015C31B731D6166501448A2851B390CD5E1032DCB65F726222BA5085B034CFC
917DC36E2C73558D1FCD108B1B305D16C97136B39697A594C46D2F068CC61EBC
8B61EEBACA2E9B9971F359DB93A6910B3669C04870AE086A03B453BCE1E9F2C9
24C2B94631466A458EB1B3FD708C18C058A8B05845E2D231DD130E2BCA4DCE6C
A2C90256ED106A2B8A867758EB2E1D464AB1AA657324F30AFED658994E772592
420FD616D7BD6885B5350E3F2A59010B037CCEDD5B3D83A476690BED59BBD82D
D2D74F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HHKXOW+Calibri /Encoding get
dup 98 /b put
pop
%ADOEndSubsetFont
/HHKXOW+Calibri*1 
[32{/.notdef}rp /quotedblleft /quotedblright 6{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 
/.notdef /zero /one /two 7{/.notdef}rp /colon 7{/.notdef}rp /B 
/.notdef /D /E /F 2{/.notdef}rp /I 4{/.notdef}rp /N 
/O 2{/.notdef}rp /R /S 4{/.notdef}rp /X 6{/.notdef}rp /underscore 
/.notdef /a /b /c /d /e /f /g 
/.notdef /i /j /.notdef /l /m /n /o 
/p /.notdef /r /s /t /u /v /.notdef 
/x /y 134{/.notdef}rp]
HHKXOW+Calibri nf
HHKXOW+Calibri*1 [9.36 0 0 -9.36 0 0 ]msf
210.9 488.4 mo
(\(a\))
[2.83508 4.48254 0 ]xsh
420.72 475.92 mo
(\(b\))
[2.82761 4.90552 0 ]xsh
233.7 467.52 mo
233.7 464.28 254.22 461.7 279.6 461.7 cv
304.92 461.7 325.5 464.28 325.5 467.52 cv
325.5 470.76 304.92 473.34 279.6 473.34 cv
254.22 473.34 233.7 470.76 233.7 467.52 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
233.34 467.58 mo
233.34 467.34 li
233.4 467.28 li
233.456 466.758 234.014 466.366 234.42 466.08 cv
234.66 465.9 li
234.96 465.78 li
236.097 465.15 237.401 464.943 238.62 464.52 cv
240.24 464.16 li
241.44 463.92 li
246.185 463.072 250.982 462.605 255.78 462.18 cv
257.7 462.06 li
259.68 461.94 li
266.31 461.499 272.956 461.312 279.6 461.34 cv
279.78 461.4 li
279.9 461.58 li
279.9 461.64 li
279.6 461.34 li
281.94 461.34 li
284.28 461.4 li
286.56 461.4 li
297.367 461.717 308.872 462.189 319.5 464.28 cv
320.04 464.4 li
320.52 464.52 li
321.06 464.7 li
322.06 464.946 323.279 465.287 324.18 465.78 cv
324.48 465.9 li
324.72 466.08 li
324.96 466.2 li
325.32 466.56 li
325.5 466.68 li
325.62 466.86 li
325.74 467.1 li
325.74 467.16 li
325.8 467.28 li
325.8 467.76 li
325.74 467.94 li
325.74 468 li
325.68 468.12 li
325.62 468.18 li
325.5 468.3 li
325.38 468.48 li
325.2 468.66 li
324.96 468.84 li
324.72 468.96 li
324.48 469.14 li
323.254 469.794 322.769 469.832 321.54 470.28 cv
320.58 470.52 li
320.04 470.64 li
309.37 472.912 297.448 473.307 286.56 473.64 cv
284.28 473.64 li
281.94 473.7 li
279.54 473.7 li
279.84 473.16 li
279.9 473.34 li
279.9 473.52 li
279.78 473.64 li
279.6 473.7 li
274.86 473.7 li
270.3 473.58 li
268.08 473.52 li
265.92 473.46 li
263.76 473.34 li
259.68 473.1 li
254.419 472.808 249.293 472.364 244.08 471.6 cv
241.44 471.12 li
240.24 470.88 li
239.7 470.76 li
238.466 470.502 236.763 470.076 235.62 469.56 cv
235.26 469.44 li
234.96 469.32 li
234.442 468.942 233.683 468.656 233.46 468 cv
233.4 467.94 li
233.4 467.76 li
233.34 467.7 li
cp
234 467.64 mo
234 467.58 li
234.06 467.76 li
234.06 467.7 li
234.12 467.82 li
234.06 467.82 li
234.18 467.88 li
234.24 468 li
235.613 469.228 238.614 469.831 240.36 470.22 cv
241.56 470.46 li
242.82 470.7 li
253.216 472.344 264.405 472.871 274.92 472.98 cv
277.2 473.04 li
279.6 473.04 li
279.3 473.58 li
279.24 473.4 li
279.24 473.22 li
279.42 473.1 li
279.54 473.04 li
291.269 472.981 303.316 472.58 314.94 470.94 cv
316.32 470.7 li
317.58 470.46 li
318.78 470.22 li
319.936 469.965 321.066 469.725 322.2 469.38 cv
322.56 469.2 li
322.98 469.08 li
323.789 468.802 324.208 468.524 324.9 468.06 cv
324.96 467.94 li
325.08 467.82 li
325.14 467.7 li
325.08 467.76 li
325.14 467.58 li
325.14 467.64 li
325.14 467.52 li
325.14 467.58 li
325.14 467.4 li
325.14 467.46 li
325.08 467.34 li
325.14 467.4 li
325.08 467.28 li
325.02 467.16 li
323.871 465.913 320.372 465.168 318.78 464.82 cv
317.58 464.58 li
316.32 464.34 li
304.201 462.511 291.841 462.046 279.6 462 cv
279.36 461.94 li
279.24 461.76 li
279.6 462 li
277.2 462 li
274.92 462.06 li
264.284 462.163 253.405 462.744 242.88 464.34 cv
241.56 464.58 li
240.42 464.82 li
239.82 464.94 li
238.792 465.161 237.936 465.383 236.94 465.72 cv
235.86 466.08 li
235.56 466.26 li
235.26 466.38 li
234.78 466.62 li
234.6 466.74 li
234.42 466.92 li
234.3 466.98 li
234.18 467.1 li
234.06 467.28 li
234.12 467.22 li
234.06 467.4 li
234.06 467.34 li
234 467.46 li
234 467.4 li
234 467.58 li
234 467.52 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
252 469.74 mo
(null:System.Boolean)
[3.48314 3.48314 1.51184 1.51184 1.77161 3.04361 3.00369 2.59079 2.2178 3.30338 5.34131 1.66498 
3.60977 3.53775 3.53772 1.49652 3.30338 3.17685 0 ]xsh
276.48 455.16 mo
277.14 455.16 li
277.14 462 li
276.48 462 li
cp
277.14 455.16 mo
cp
279.48 458.16 mo
276.84 462.66 li
274.2 458.16 li
274.14 457.92 li
274.32 457.74 li
274.56 457.68 li
274.8 457.86 li
277.14 461.88 li
276.54 461.88 li
278.88 457.86 li
279.06 457.68 li
279.36 457.74 li
279.48 457.92 li
279.48 458.16 li
.92929 .879301 .889677 .799283 cmyk
f
276.48 455.16 mo
277.14 455.16 li
277.14 462 li
276.48 462 li
cp
277.14 455.16 mo
cp
279.48 458.16 mo
276.84 462.66 li
274.2 458.16 li
274.14 457.92 li
274.32 457.74 li
274.56 457.68 li
274.8 457.86 li
277.14 461.88 li
276.54 461.88 li
278.88 457.86 li
279.06 457.68 li
279.36 457.74 li
279.48 457.92 li
279.48 458.16 li
f
gsave
57.12 420.84 mo
537.9 420.84 li
537.9 510.96 li
57.12 510.96 li
cp
eclp
102.3 416.1 mo
102.3 413.04 121.62 410.52 145.5 410.52 cv
169.32 410.52 188.7 413.04 188.7 416.1 cv
188.7 419.16 169.32 421.62 145.5 421.62 cv
121.62 421.62 102.3 419.16 102.3 416.1 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
102 416.1 mo
102 415.92 li
102.256 414.277 106.207 413.447 107.46 413.1 cv
108.48 412.86 li
109.62 412.68 li
121.199 410.566 133.755 410.32 145.5 410.16 cv
145.68 410.22 li
145.8 410.4 li
145.5 410.22 li
149.94 410.22 li
152.1 410.28 li
162.141 410.518 172.633 410.998 182.52 412.86 cv
183.54 413.1 li
184.5 413.34 li
185.626 413.636 188.795 414.51 189 415.92 cv
189 416.34 li
188.94 416.46 li
188.94 416.52 li
188.88 416.64 li
188.76 416.82 li
188.4 417.18 li
188.22 417.3 li
187.98 417.48 li
187.74 417.6 li
187.264 417.959 185.991 418.411 185.4 418.56 cv
184.98 418.68 li
183.54 419.04 li
173.747 421.216 162.124 421.599 152.1 421.86 cv
149.88 421.92 li
145.5 421.92 li
145.8 421.44 li
145.86 421.62 li
145.8 421.8 li
145.5 421.98 li
140.54 421.937 135.573 421.912 130.62 421.62 cv
128.64 421.5 li
126.78 421.44 li
122.428 421.08 117.748 420.832 113.46 420.12 cv
110.82 419.76 li
109.62 419.52 li
108.087 419.124 102.883 418.346 102.06 416.52 cv
102 416.34 li
102 416.28 li
cp
102.66 416.22 mo
102.66 416.1 li
102.66 416.22 li
102.72 416.34 li
103.678 417.636 107.207 418.228 108.6 418.62 cv
109.74 418.86 li
110.94 419.1 li
120.76 420.639 131.129 421.112 141.06 421.26 cv
143.28 421.26 li
145.5 421.32 li
145.2 421.8 li
145.2 421.44 li
145.5 421.26 li
147.72 421.26 li
157.453 421.178 167.776 420.806 177.42 419.46 cv
178.8 419.28 li
180.06 419.1 li
182.105 418.63 186.146 417.998 187.98 416.7 cv
188.1 416.58 li
188.22 416.4 li
188.22 416.46 li
188.34 416.22 li
188.34 416.28 li
188.34 416.16 li
188.34 416.22 li
188.34 416.04 li
188.34 416.1 li
188.34 415.98 li
188.34 416.04 li
188.34 415.92 li
188.28 415.86 li
187.349 414.442 182.608 413.595 181.26 413.28 cv
180.06 413.1 li
178.8 412.86 li
167.773 411.322 156.624 410.884 145.5 410.88 cv
145.32 410.82 li
145.2 410.64 li
145.5 410.82 li
143.28 410.88 li
141.06 410.88 li
131.417 411.043 121.759 411.496 112.2 412.86 cv
110.94 413.1 li
109.74 413.28 li
107.905 413.746 104.416 414.264 102.9 415.62 cv
102.78 415.74 li
102.72 415.86 li
102.72 415.8 li
102.66 415.92 li
102.66 416.04 li
102.66 415.98 li
102.66 416.1 li
102.66 416.04 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
342.6 448.92 mo
342.6 445.74 358.38 443.16 377.88 443.16 cv
397.32 443.16 413.1 445.74 413.1 448.92 cv
413.1 452.1 397.32 454.68 377.88 454.68 cv
358.38 454.68 342.6 452.1 342.6 448.92 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
342.24 448.92 mo
342.3 448.74 li
342.3 448.68 li
342.527 446.686 348.017 445.495 349.5 445.14 cv
350.58 444.9 li
351.72 444.72 li
360.21 443.241 369.272 442.847 377.88 442.8 cv
378.06 442.86 li
378.18 443.04 li
377.88 442.8 li
379.68 442.86 li
381.48 442.86 li
383.22 442.92 li
384.96 442.92 li
390.148 443.112 395.168 443.49 400.32 444.12 cv
401.64 444.3 li
402.84 444.54 li
405.54 444.916 409.189 445.691 411.66 446.88 cv
412.2 447.18 li
412.62 447.48 li
412.92 447.78 li
412.98 447.84 li
413.22 448.14 li
413.22 448.2 li
413.34 448.32 li
413.4 448.5 li
413.46 448.68 li
413.46 449.16 li
413.4 449.28 li
413.34 449.46 li
413.34 449.52 li
412.435 450.923 410.462 451.511 408.96 451.98 cv
408.12 452.22 li
406.2 452.7 li
405.12 452.94 li
404.04 453.12 li
391.633 455.207 378.242 455.285 365.7 454.68 cv
364.14 454.56 li
362.52 454.44 li
361.02 454.32 li
356.833 453.925 352.633 453.453 348.54 452.46 cv
346.74 451.98 li
345.49 451.622 343.032 450.819 342.42 449.52 cv
342.36 449.46 li
342.3 449.34 li
342.3 449.1 li
cp
342.96 449.04 mo
342.96 448.98 li
342.96 449.1 li
343.02 449.22 li
342.96 449.22 li
343.02 449.28 li
343.26 449.58 li
343.2 449.52 li
343.5 449.82 li
354.085 455.903 401.63 455.913 412.2 449.82 cv
412.5 449.52 li
412.44 449.58 li
412.62 449.34 li
412.74 449.22 li
412.68 449.22 li
412.74 449.16 li
412.8 448.98 li
412.8 449.04 li
412.8 448.8 li
412.8 448.86 li
412.74 448.74 li
412.74 448.62 li
412.62 448.5 li
412.68 448.56 li
412.44 448.26 li
412.5 448.26 li
412.2 448.02 li
411.84 447.78 li
409.309 446.216 404.411 445.485 401.52 444.96 cv
400.26 444.78 li
398.94 444.66 li
392.087 443.749 384.793 443.543 377.88 443.52 cv
377.64 443.46 li
377.52 443.28 li
377.88 443.46 li
376.02 443.52 li
374.28 443.52 li
368.532 443.614 362.52 443.894 356.82 444.66 cv
355.5 444.78 li
354.18 444.96 li
351.366 445.476 346.368 446.235 343.92 447.78 cv
343.2 448.26 li
343.26 448.26 li
343.08 448.5 li
342.96 448.62 li
343.02 448.62 li
342.96 448.68 li
342.96 448.86 li
342.96 448.8 li
342.9 448.92 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
360.9 451.14 mo
(null:boolean)
[3.47516 3.47513 1.50388 1.50385 1.80289 3.47516 3.53775 3.53772 1.49655 3.29535 3.16885 0 
]xsh
gsave
57.12 420.84 mo
537.9 420.84 li
537.9 510.96 li
57.12 510.96 li
cp
eclp
377.4 427.38 mo
378.18 442.5 li
377.52 442.5 li
376.74 427.38 li
cp
380.28 438.54 mo
377.88 443.16 li
375.06 438.78 li
375 438.54 li
375.12 438.36 li
375.42 438.3 li
375.6 438.42 li
378.12 442.32 li
377.58 442.32 li
379.68 438.24 li
379.86 438.06 li
380.16 438.06 li
380.28 438.3 li
380.28 438.54 li
.92929 .879301 .889677 .799283 cmyk
f
377.4 427.38 mo
378.18 442.5 li
377.52 442.5 li
376.74 427.38 li
cp
380.28 438.54 mo
377.88 443.16 li
375.06 438.78 li
375 438.54 li
375.12 438.36 li
375.42 438.3 li
375.6 438.42 li
378.12 442.32 li
377.58 442.32 li
379.68 438.24 li
379.86 438.06 li
380.16 438.06 li
380.28 438.3 li
380.28 438.54 li
f
437.82 427.98 mo
504.12 427.98 li
504.12 420.8 li
437.82 420.8 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
437.52 416.64 mo
437.58 416.4 li
437.82 416.28 li
504.12 416.28 li
504.36 416.4 li
504.42 416.64 li
504.42 427.98 li
504.36 428.22 li
504.12 428.28 li
437.82 428.28 li
437.58 428.22 li
437.52 427.98 li
cp
438.18 427.98 mo
437.82 427.62 li
504.12 427.62 li
503.76 427.98 li
503.76 416.64 li
504.12 416.94 li
437.82 416.94 li
438.18 416.64 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
gsave
444.9 426.3 mo
492.6 426.3 li
492.6 420.84 li
444.9 420.84 li
cp
clp
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
445.08 424.5 mo
(j)sh
grestore
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
446.7 424.5 mo
(ava.)
[3.18085 3.00098 3.18082 0 ]xsh
gsave
444.9 426.3 mo
492.6 426.3 li
492.6 420.84 li
444.9 420.84 li
cp
clp
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
457.74 424.5 mo
(i)sh
grestore
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
459.24 424.5 mo
(o.)
[3.53775 0 ]xsh
gsave
444.9 426.3 mo
492.6 426.3 li
492.6 420.84 li
444.9 420.84 li
cp
clp
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
464.46 424.5 mo
(Fil)
[3.0423 1.5105 0 ]xsh
grestore
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
470.52 424.5 mo
(e.)
[3.3027 0 ]xsh
gsave
444.9 426.3 mo
492.6 426.3 li
492.6 420.84 li
444.9 420.84 li
cp
clp
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
475.5 424.5 mo
(d)sh
grestore
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
478.98 424.5 mo
(e)sh
gsave
444.9 426.3 mo
492.6 426.3 li
492.6 420.84 li
444.9 420.84 li
cp
clp
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
482.28 424.5 mo
(l)sh
grestore
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
483.78 424.5 mo
(e)sh
gsave
444.9 426.3 mo
492.6 426.3 li
492.6 420.84 li
444.9 420.84 li
cp
clp
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
487.08 424.5 mo
(t)sh
grestore
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
489.3 424.5 mo
(e)sh
gsave
492.6 426.3 mo
496.68 426.3 li
496.68 420.84 li
492.6 420.84 li
cp
clp
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
492.6 424.5 mo
(\(\))
[2.03857 0 ]xsh
grestore
439.26 441.6 mo
439.26 438.42 453.54 435.9 471.18 435.9 cv
488.82 435.9 503.1 438.42 503.1 441.6 cv
503.1 444.72 488.82 447.24 471.18 447.24 cv
453.54 447.24 439.26 444.72 439.26 441.6 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
438.9 441.6 mo
438.9 441.54 li
438.96 441.24 li
438.96 441.18 li
440.832 436.48 463.732 435.605 467.88 435.6 cv
469.5 435.6 li
471.18 435.54 li
472.8 435.6 li
479.352 435.606 486.179 436.041 492.66 437.04 cv
493.8 437.22 li
494.88 437.46 li
496.845 437.809 502.141 438.935 503.22 440.82 cv
503.22 440.88 li
503.34 441.18 li
503.4 441.24 li
503.4 441.6 li
503.242 446.458 479.201 447.487 476.04 447.54 cv
474.42 447.54 li
472.8 447.6 li
466.719 447.608 443.363 447.304 439.14 442.38 cv
439.08 442.26 li
438.96 442.02 li
438.96 441.9 li
cp
439.62 441.84 mo
439.62 441.72 li
439.74 442.02 li
439.68 441.96 li
439.86 442.26 li
439.86 442.2 li
440.1 442.44 li
449.14 448.466 493.031 448.41 502.2 442.5 cv
502.5 442.2 li
502.44 442.26 li
502.68 441.96 li
502.62 442.02 li
502.74 441.72 li
502.74 441.84 li
502.74 441.54 li
502.74 441.6 li
502.74 441.36 li
502.74 441.42 li
502.62 441.12 li
502.68 441.18 li
502.44 440.88 li
502.5 440.94 li
502.26 440.7 li
501.9 440.46 li
501.48 440.16 li
498.717 438.756 495.616 438.257 492.6 437.7 cv
491.46 437.52 li
490.26 437.34 li
484.887 436.66 479.826 436.415 474.42 436.26 cv
467.94 436.26 li
462.529 436.414 457.478 436.659 452.1 437.34 cv
450.9 437.52 li
449.76 437.7 li
446.741 438.26 443.643 438.746 440.88 440.16 cv
440.46 440.4 li
440.16 440.7 li
439.86 440.94 li
439.86 440.88 li
439.68 441.18 li
439.74 441.12 li
439.62 441.42 li
439.62 441.36 li
439.56 441.6 li
439.56 441.54 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
454.26 443.76 mo
(null:boolean)
[3.47516 3.47513 1.50388 1.50385 1.80289 3.47516 3.53775 3.53772 1.49655 3.29535 3.16885 0 
]xsh
471.3 427.98 mo
471.54 435.24 li
470.88 435.24 li
470.64 427.98 li
cp
473.7 431.34 mo
471.24 435.9 li
468.42 431.46 li
468.42 431.22 li
468.54 431.04 li
468.78 430.98 li
469.02 431.16 li
471.48 435.06 li
470.88 435.06 li
473.1 430.98 li
473.28 430.86 li
473.58 430.86 li
473.7 431.04 li
473.7 431.34 li
.92929 .879301 .889677 .799283 cmyk
f
471.3 427.98 mo
471.54 435.24 li
470.88 435.24 li
470.64 427.98 li
cp
473.7 431.34 mo
471.24 435.9 li
468.42 431.46 li
468.42 431.22 li
468.54 431.04 li
468.78 430.98 li
469.02 431.16 li
471.48 435.06 li
470.88 435.06 li
473.1 430.98 li
473.28 430.86 li
473.58 430.86 li
473.7 431.04 li
473.7 431.34 li
f
gsave
57.12 420.84 mo
537.9 420.84 li
537.9 510.96 li
57.12 510.96 li
cp
eclp
320.7 450.72 mo
321.12 450.66 li
321.66 450.6 li
327.277 449.187 331.481 442.62 331.62 437.04 cv
331.68 436.38 li
331.68 435.72 li
331.933 429.832 336.228 423.036 342.18 421.56 cv
342.78 421.5 li
343.26 421.44 li
343.32 422.1 li
342.9 422.1 li
342.36 422.22 li
336.636 423.62 332.651 430.075 332.34 435.72 cv
332.34 437.1 li
331.994 443.011 327.772 449.793 321.78 451.26 cv
321.24 451.32 li
320.76 451.38 li
cp
324.66 453.48 mo
320.04 451.08 li
324.42 448.26 li
324.66 448.2 li
324.9 448.32 li
324.9 448.62 li
324.78 448.8 li
320.88 451.32 li
320.88 450.78 li
325.02 452.88 li
325.14 453.06 li
325.14 453.36 li
324.96 453.48 li
324.66 453.48 li
cp
339.3 419.34 mo
343.92 421.74 li
339.54 424.56 li
339.3 424.62 li
339.12 424.44 li
339.06 424.2 li
339.18 424.02 li
343.08 421.5 li
343.14 422.04 li
339 419.94 li
338.82 419.7 li
338.88 419.46 li
339.06 419.28 li
339.3 419.34 li
f
320.7 450.72 mo
321.12 450.66 li
321.66 450.6 li
327.277 449.187 331.481 442.62 331.62 437.04 cv
331.68 436.38 li
331.68 435.72 li
331.933 429.832 336.228 423.036 342.18 421.56 cv
342.78 421.5 li
343.26 421.44 li
343.32 422.1 li
342.9 422.1 li
342.36 422.22 li
336.636 423.62 332.651 430.075 332.34 435.72 cv
332.34 437.1 li
331.994 443.011 327.772 449.793 321.78 451.26 cv
321.24 451.32 li
320.76 451.38 li
cp
324.66 453.48 mo
320.04 451.08 li
324.42 448.26 li
324.66 448.2 li
324.9 448.32 li
324.9 448.62 li
324.78 448.8 li
320.88 451.32 li
320.88 450.78 li
325.02 452.88 li
325.14 453.06 li
325.14 453.36 li
324.96 453.48 li
324.66 453.48 li
cp
339.3 419.34 mo
343.92 421.74 li
339.54 424.56 li
339.3 424.62 li
339.12 424.44 li
339.06 424.2 li
339.18 424.02 li
343.08 421.5 li
343.14 422.04 li
339 419.94 li
338.82 419.7 li
338.88 419.46 li
339.06 419.28 li
339.3 419.34 li
f
grestore
378.36 455.16 mo
378.6 455.4 li
378.72 455.58 li
380.38 456.948 383.283 457.78 385.32 458.34 cv
386.58 458.64 li
387.96 459 li
399.058 461.331 411.025 462.228 422.34 462.36 cv
426.72 462.36 li
428.94 462.3 li
437.392 462.383 467.032 458.057 470.76 448.26 cv
470.82 447.9 li
470.82 447.84 li
471.48 447.96 li
471.48 448.02 li
471.36 448.44 li
468.252 458.201 439.103 462.809 431.1 462.84 cv
428.94 462.96 li
426.72 463.02 li
424.56 463.02 li
412.946 463.023 400.701 462.203 389.28 459.96 cv
387.84 459.66 li
386.46 459.3 li
384.165 458.767 380.062 457.642 378.24 456.06 cv
377.88 455.58 li
377.82 455.46 li
cp
376.68 459.72 mo
377.88 454.68 li
381.72 458.22 li
381.84 458.46 li
381.72 458.7 li
381.48 458.82 li
381.24 458.7 li
377.88 455.58 li
378.42 455.4 li
377.34 459.9 li
377.22 460.08 li
376.92 460.14 li
376.74 460.02 li
376.68 459.72 li
cp
468.18 451.5 mo
471.24 447.24 li
473.46 451.98 li
473.46 452.22 li
473.28 452.4 li
473.04 452.4 li
472.8 452.22 li
470.88 448.08 li
471.42 448.08 li
468.72 451.86 li
468.54 452.04 li
468.3 451.98 li
468.12 451.74 li
468.18 451.5 li
f
378.36 455.16 mo
378.6 455.4 li
378.72 455.58 li
380.38 456.948 383.283 457.78 385.32 458.34 cv
386.58 458.64 li
387.96 459 li
399.058 461.331 411.025 462.228 422.34 462.36 cv
426.72 462.36 li
428.94 462.3 li
437.392 462.383 467.032 458.057 470.76 448.26 cv
470.82 447.9 li
470.82 447.84 li
471.48 447.96 li
471.48 448.02 li
471.36 448.44 li
468.252 458.201 439.103 462.809 431.1 462.84 cv
428.94 462.96 li
426.72 463.02 li
424.56 463.02 li
412.946 463.023 400.701 462.203 389.28 459.96 cv
387.84 459.66 li
386.46 459.3 li
384.165 458.767 380.062 457.642 378.24 456.06 cv
377.88 455.58 li
377.82 455.46 li
cp
376.68 459.72 mo
377.88 454.68 li
381.72 458.22 li
381.84 458.46 li
381.72 458.7 li
381.48 458.82 li
381.24 458.7 li
377.88 455.58 li
378.42 455.4 li
377.34 459.9 li
377.22 460.08 li
376.92 460.14 li
376.74 460.02 li
376.68 459.72 li
cp
468.18 451.5 mo
471.24 447.24 li
473.46 451.98 li
473.46 452.22 li
473.28 452.4 li
473.04 452.4 li
472.8 452.22 li
470.88 448.08 li
471.42 448.08 li
468.72 451.86 li
468.54 452.04 li
468.3 451.98 li
468.12 451.74 li
468.18 451.5 li
f
183.66 450 mo
187.74 450 li
192.541 450.028 197.34 450.101 202.14 450.12 cv
202.92 450.18 li
205.02 450.18 li
205.62 450.24 li
206.7 450.24 li
207.12 450.3 li
207.78 450.3 li
208.02 450.36 li
208.38 450.36 li
208.44 450.42 li
208.56 450.42 li
208.44 450.42 li
208.56 450.42 li
216.076 450.781 223.767 450.646 231.3 450.78 cv
233.04 450.78 li
233.04 451.44 li
228.96 451.44 li
224.186 451.324 219.338 451.427 214.56 451.26 cv
212.34 451.26 li
211.68 451.2 li
210.48 451.2 li
210 451.14 li
208.92 451.14 li
208.62 451.08 li
208.32 451.08 li
208.26 451.02 li
208.14 451.02 li
208.26 451.02 li
208.14 451.02 li
200.67 450.644 192.898 450.758 185.4 450.66 cv
183.66 450.66 li
cp
187.5 452.94 mo
183 450.36 li
187.5 447.72 li
187.8 447.66 li
187.98 447.84 li
187.98 448.08 li
187.86 448.32 li
183.84 450.6 li
183.84 450.06 li
187.86 452.4 li
187.98 452.58 li
187.98 452.82 li
187.74 453 li
187.5 452.94 li
cp
229.2 448.44 mo
233.7 451.08 li
229.2 453.72 li
228.9 453.72 li
228.72 453.6 li
228.66 453.36 li
228.84 453.12 li
232.86 450.78 li
232.86 451.38 li
228.84 449.04 li
228.72 448.86 li
228.72 448.56 li
228.96 448.44 li
229.2 448.44 li
f
183.66 450 mo
187.74 450 li
192.541 450.028 197.34 450.101 202.14 450.12 cv
202.92 450.18 li
205.02 450.18 li
205.62 450.24 li
206.7 450.24 li
207.12 450.3 li
207.78 450.3 li
208.02 450.36 li
208.38 450.36 li
208.44 450.42 li
208.56 450.42 li
208.44 450.42 li
208.56 450.42 li
216.076 450.781 223.767 450.646 231.3 450.78 cv
233.04 450.78 li
233.04 451.44 li
228.96 451.44 li
224.186 451.324 219.338 451.427 214.56 451.26 cv
212.34 451.26 li
211.68 451.2 li
210.48 451.2 li
210 451.14 li
208.92 451.14 li
208.62 451.08 li
208.32 451.08 li
208.26 451.02 li
208.14 451.02 li
208.26 451.02 li
208.14 451.02 li
200.67 450.644 192.898 450.758 185.4 450.66 cv
183.66 450.66 li
cp
187.5 452.94 mo
183 450.36 li
187.5 447.72 li
187.8 447.66 li
187.98 447.84 li
187.98 448.08 li
187.86 448.32 li
183.84 450.6 li
183.84 450.06 li
187.86 452.4 li
187.98 452.58 li
187.98 452.82 li
187.74 453 li
187.5 452.94 li
cp
229.2 448.44 mo
233.7 451.08 li
229.2 453.72 li
228.9 453.72 li
228.72 453.6 li
228.66 453.36 li
228.84 453.12 li
232.86 450.78 li
232.86 451.38 li
228.84 449.04 li
228.72 448.86 li
228.72 448.56 li
228.96 448.44 li
229.2 448.44 li
f
gsave
57.12 420.84 mo
537.9 420.84 li
537.9 510.96 li
57.12 510.96 li
cp
eclp
343.92 427.38 mo
410.22 427.38 li
410.22 420.8 li
343.92 420.8 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
343.62 416.04 mo
343.68 415.8 li
343.92 415.68 li
410.22 415.68 li
410.46 415.8 li
410.52 416.04 li
410.52 427.38 li
410.46 427.62 li
410.22 427.74 li
343.92 427.74 li
343.68 427.62 li
343.62 427.38 li
cp
344.28 427.38 mo
343.92 427.08 li
410.22 427.08 li
409.86 427.38 li
409.86 416.04 li
410.22 416.4 li
343.92 416.4 li
344.28 416.04 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
gsave
352.02 425.7 mo
397.68 425.7 li
397.68 420.84 li
352.02 420.84 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
352.2 423.9 mo
(java)
[1.61838 3.18018 3.00229 0 ]xsh
grestore
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
363.18 423.9 mo
(.)sh
gsave
352.02 425.7 mo
397.68 425.7 li
397.68 420.84 li
352.02 420.84 li
cp
clp
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
364.86 423.9 mo
(io)
[1.49652 0 ]xsh
grestore
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
369.9 423.9 mo
(.)sh
gsave
352.02 425.7 mo
397.68 425.7 li
397.68 420.84 li
352.02 420.84 li
cp
clp
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
371.58 423.9 mo
(File)
[3.03561 1.50388 1.50385 0 ]xsh
grestore
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
380.94 423.9 mo
(.)sh
gsave
352.02 425.7 mo
397.68 425.7 li
397.68 420.84 li
352.02 420.84 li
cp
clp
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
382.62 423.9 mo
(exists)
[3.30136 2.86847 1.50983 2.58881 2.21582 0 ]xsh
grestore
gsave
397.68 425.7 mo
401.76 425.7 li
401.76 420.84 li
397.68 420.84 li
cp
clp
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
397.68 423.9 mo
(\(\))
[2.03857 0 ]xsh
grestore
gsave
57.12 420.84 mo
537.9 420.84 li
537.9 510.96 li
57.12 510.96 li
cp
eclp
411.72 398.1 mo
412.5 398.1 li
413.22 398.16 li
414.061 398.209 414.354 398.239 415.14 398.46 cv
415.26 398.52 li
415.44 398.58 li
415.5 398.58 li
415.68 398.76 li
415.74 398.88 li
415.74 422.1 li
415.74 422.04 li
415.74 422.1 li
415.68 422.04 li
415.74 422.1 li
415.74 422.04 li
415.8 422.1 li
416.899 422.463 418.116 422.504 419.28 422.52 cv
419.46 422.58 li
419.52 422.76 li
419.46 422.94 li
419.28 423 li
418.56 423 li
417.84 423.06 li
417.18 423.12 li
416.94 423.18 li
416.64 423.18 li
416.4 423.24 li
416.04 423.36 li
415.86 423.36 li
415.74 423.48 li
415.74 423.42 li
415.68 423.48 li
415.74 423.42 li
415.74 423.48 li
415.74 423.42 li
415.74 446.64 li
415.68 446.76 li
415.56 446.88 li
415.32 447 li
415.14 447.06 li
414.518 447.268 413.867 447.281 413.22 447.36 cv
412.5 447.42 li
411.72 447.42 li
411.72 446.94 li
412.44 446.88 li
413.369 446.894 414.329 446.819 415.2 446.52 cv
415.26 446.46 li
415.26 446.52 li
415.32 446.4 li
415.26 446.52 li
415.26 446.46 li
415.26 446.52 li
415.26 423.24 li
415.5 423 li
415.56 423 li
415.74 422.88 li
415.92 422.82 li
416.59 422.733 416.999 422.591 417.78 422.58 cv
418.5 422.52 li
419.28 422.52 li
419.28 423 li
418.5 423 li
417.78 422.94 li
416.9 422.844 416.915 422.942 416.1 422.7 cv
415.86 422.64 li
415.68 422.58 li
415.44 422.46 li
415.32 422.34 li
415.26 422.28 li
415.26 399 li
415.26 399.06 li
415.26 399 li
415.32 399.12 li
415.26 399 li
415.26 399.06 li
415.2 399 li
415.14 399 li
414.6 398.82 li
414.36 398.76 li
414.12 398.76 li
413.82 398.7 li
413.16 398.64 li
412.44 398.64 li
411.72 398.58 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
%ADOBeginSubsetFont: QJJAAA+Calibri-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
HHKXOY+Calibri-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7A0860A00C53E3E332CB251052A093934C8D702DF1D3B
8BCB20F16443C0AB5547D80438FEB53954DD46DCCF09C50D86CEA407764E6058
3E75C00FE675F5C71C05897F2974BBCCADCCCD80978903ED457F67F4194D88CF
10EE9E0B2B1DA40D6E5DBAE234021B98AF4A58036D22EA747C1990D6F4A78DB0
9FA20BA585FA554D9BB80677B890C7355D7C62FF27B74B1FB23EBF920AE96279
3CF1DED5191AE496A8EAB9E64C6992B36A3C7503A48F16347D0CF6EC430CD5AB
2F09E2FE2F7CC81E6413D5A0F26AA69E9035D52E713F97CBAB6671D28EFF9C33
D8A1D529E79BE69685C6C169439D9D02F6EFFEF54066236EC7C4A51B93F06063
B81E608E91E8DF191349648B6ECA7ED8B672426B5587EAD2DAB7F3BAC948E1AA
D9B4D753B2B03C80F721F30EFB6C9D911AA51F243D88B85E659061AC73160CC7
E0C965D41135C9B601779E8D27B20427CDA1EED8789269E1420E3059A667BB9B
3424B4913C3B9143D41F9952B98356AD8C9F113C73491731FD8D0C576E756D5E
1A5759505EF506053D8431C65E76DB0466B052739A6DCB98CAE8305CF6E197C7
C1BA30E97F51> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HHKXOY+Calibri-Bold /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/HHKXOY+Calibri-Bold*1 
[49{/.notdef}rp /one 2{/.notdef}rp /four /.notdef /six /seven /eight 
19{/.notdef}rp /L 24{/.notdef}rp /e 3{/.notdef}rp /i 4{/.notdef}rp /n 
145{/.notdef}rp]
HHKXOY+Calibri-Bold nf
HHKXOY+Calibri-Bold*1 [6.66 0 0 -6.66 0 0 ]msf
420.6 425.76 mo
(Line)
[2.82721 1.64835 3.58643 0 ]xsh
HHKXOZ+Calibri-Bold*1 [6.66 0 0 -6.66 0 0 ]msf
432 425.76 mo
( )sh
HHKXOY+Calibri-Bold*1 [6.66 0 0 -6.66 0 0 ]msf
433.5 425.76 mo
(8)sh
gsave
57.12 420.84 mo
537.9 420.84 li
537.9 510.96 li
57.12 510.96 li
cp
eclp
505.8 394.32 mo
506.52 394.38 li
507.139 394.328 508.689 394.498 509.34 394.74 cv
509.52 394.8 li
509.52 394.86 li
509.64 394.92 li
509.7 394.98 li
509.76 395.1 li
509.82 395.16 li
509.82 422.1 li
509.82 422.04 li
509.82 422.1 li
509.76 422.04 li
509.82 422.1 li
509.76 422.04 li
509.88 422.1 li
510.976 422.467 512.199 422.505 513.36 422.52 cv
513.54 422.58 li
513.6 422.76 li
513.54 422.94 li
513.36 423 li
512.58 423 li
511.26 423.12 li
510.96 423.18 li
510.72 423.18 li
510.24 423.3 li
510.06 423.36 li
509.94 423.36 li
509.82 423.42 li
509.88 423.42 li
509.76 423.48 li
509.82 423.42 li
509.76 423.48 li
509.82 423.42 li
509.82 423.48 li
509.82 423.42 li
509.82 450.36 li
509.76 450.42 li
509.7 450.54 li
509.64 450.6 li
509.52 450.66 li
509.52 450.72 li
509.34 450.78 li
508.45 451.062 507.456 451.155 506.52 451.14 cv
505.8 451.2 li
505.74 450.66 li
506.52 450.66 li
507.398 450.547 508.329 450.599 509.16 450.3 cv
509.28 450.24 li
509.28 450.3 li
509.34 450.24 li
509.28 450.24 li
509.34 450.18 li
509.28 450.3 li
509.34 450.24 li
509.34 450.3 li
509.34 423.24 li
509.52 423.06 li
509.58 423 li
509.64 423 li
509.76 422.88 li
509.94 422.82 li
510.559 422.768 511.112 422.557 511.86 422.58 cv
512.58 422.52 li
513.36 422.52 li
513.36 423 li
512.58 423 li
511.86 422.94 li
511.056 422.86 510.884 422.916 510.12 422.7 cv
509.58 422.52 li
509.4 422.34 li
509.34 422.28 li
509.34 395.22 li
509.34 395.28 li
509.28 395.22 li
509.34 395.34 li
509.28 395.28 li
509.34 395.28 li
509.28 395.22 li
509.28 395.28 li
509.16 395.22 li
508.375 394.91 507.348 394.977 506.52 394.86 cv
505.74 394.86 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
%ADOBeginSubsetFont: QJJAAA+Calibri-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
HHKXOY+Calibri-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/nine <1C60D8A8C9B7A0860A0C271ABAF186F653267A478A1F637827AC9EB68
7FD103F0CADA1BDAD48DCF23F10DFFABDB1D471144EF495899F905E532A11FC6
51E37EF5A5AE9BFA7E1146ED4653210D0A4E182E01B8F8D8304B9759CB5BE2B7
F850EB2C7C0FDC836110061435D2AE909533A5D8B2CA10290CA6D63406F2C086
A9633DE0B9877CCB33B37BB14F0C6CB6C7742B6F453B4F8D26555FDFEDE66810
75C3FC34EEA7B0564D5D5FA6C3D4693CD8184FB2A2B6C79A3D213E2A6471C53A
1870A2C16EADB4A3C9ADE39E9AE6E4103ACD45CD981E912AAF012973B8C684DC
B4F083AF4858B0FE7B17871D6413DD95F03F9A29D2299D1E961D489587F8772A
341EEB410BEA500AF706581FA866FB903720D2E51AD7EDB60451CD41E826B6E0
66AF28F08AAEFF2252AD1E2D1AC25714BAE07DCCE6054D87DC31F04B5BC6121C
D0ED15A8557D204EE622066AAD4051035AA4F99E617304C93BFE765E3D48CFE2
29389565EA8527B439E2A15E272EF2206E11A89AA49AAFD2FD6B3BDC6C9056C2
3B1BC0456563D19E7D0592277A9C05C95C8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HHKXOY+Calibri-Bold /Encoding get
dup 57 /nine put
pop
%ADOEndSubsetFont
/HHKXOY+Calibri-Bold*1 
[49{/.notdef}rp /one 2{/.notdef}rp /four /.notdef /six /seven /eight 
/nine 18{/.notdef}rp /L 24{/.notdef}rp /e 3{/.notdef}rp /i 4{/.notdef}rp 
/n 145{/.notdef}rp]
HHKXOY+Calibri-Bold nf
HHKXOY+Calibri-Bold*1 [6.66 0 0 -6.66 0 0 ]msf
515.7 425.76 mo
(Line)
[2.82721 1.64838 3.58643 0 ]xsh
HHKXOZ+Calibri-Bold*1 [6.66 0 0 -6.66 0 0 ]msf
527.1 425.76 mo
( )sh
HHKXOY+Calibri-Bold*1 [6.66 0 0 -6.66 0 0 ]msf
528.6 425.76 mo
(9)sh
276.48 437.4 mo
277.14 437.4 li
277.14 444.78 li
276.48 444.78 li
cp
277.14 437.4 mo
cp
279.48 440.94 mo
276.84 445.44 li
274.2 440.94 li
274.14 440.64 li
274.32 440.46 li
274.56 440.4 li
274.8 440.58 li
277.14 444.6 li
276.54 444.6 li
278.88 440.58 li
279.06 440.4 li
279.36 440.46 li
279.48 440.64 li
279.48 440.94 li
.92929 .879301 .889677 .799283 cmyk
f
276.48 437.4 mo
277.14 437.4 li
277.14 444.78 li
276.48 444.78 li
cp
277.14 437.4 mo
cp
279.48 440.94 mo
276.84 445.44 li
274.2 440.94 li
274.14 440.64 li
274.32 440.46 li
274.56 440.4 li
274.8 440.58 li
277.14 444.6 li
276.54 444.6 li
278.88 440.58 li
279.06 440.4 li
279.36 440.46 li
279.48 440.64 li
279.48 440.94 li
f
145.86 437.22 mo
145.8 444.06 li
145.14 444.06 li
145.2 437.22 li
cp
148.14 440.28 mo
145.44 444.72 li
142.86 440.22 li
142.86 439.98 li
142.98 439.74 li
143.28 439.74 li
143.46 439.86 li
145.74 443.94 li
145.2 443.94 li
147.54 439.92 li
147.78 439.8 li
148.02 439.8 li
148.14 440.04 li
148.14 440.28 li
f
145.86 437.22 mo
145.8 444.06 li
145.14 444.06 li
145.2 437.22 li
cp
148.14 440.28 mo
145.44 444.72 li
142.86 440.22 li
142.86 439.98 li
142.98 439.74 li
143.28 439.74 li
143.46 439.86 li
145.74 443.94 li
145.2 443.94 li
147.54 439.92 li
147.78 439.8 li
148.02 439.8 li
148.14 440.04 li
148.14 440.28 li
f
gsave
57.12 420.84 mo
537.9 420.84 li
537.9 510.96 li
57.12 510.96 li
cp
eclp
94.8 473.46 mo
94.02 473.46 li
93.3 473.4 li
92.651 473.315 92.002 473.318 91.38 473.1 cv
91.2 473.04 li
91.08 472.98 li
91.02 472.98 li
90.84 472.8 li
90.78 472.68 li
90.78 472.62 li
90.72 472.56 li
90.72 419.4 li
90.78 419.46 li
90.72 419.4 li
90.78 419.52 li
90.72 419.4 li
90.78 419.46 li
90.66 419.4 li
90.72 419.4 li
90.6 419.34 li
90.48 419.34 li
90.3 419.28 li
89.82 419.16 li
89.58 419.16 li
89.28 419.1 li
88.68 419.04 li
87.96 419.04 li
87.18 418.98 li
87 418.92 li
86.94 418.74 li
87 418.56 li
87.18 418.5 li
87.96 418.5 li
88.68 418.44 li
89.28 418.38 li
89.58 418.38 li
90.3 418.2 li
90.48 418.2 li
90.72 418.08 li
90.78 418.02 li
90.72 418.08 li
90.78 418.02 li
90.72 418.14 li
90.78 418.08 li
90.72 418.14 li
90.72 364.92 li
90.78 364.86 li
90.78 364.8 li
90.84 364.68 li
90.9 364.62 li
90.96 364.62 li
91.02 364.56 li
91.08 364.5 li
91.2 364.44 li
91.38 364.38 li
91.793 364.236 92.886 364.123 93.3 364.08 cv
94.8 364.08 li
94.8 364.56 li
94.02 364.56 li
93.135 364.667 92.226 364.631 91.38 364.92 cv
91.26 364.98 li
91.32 364.98 li
91.2 365.04 li
91.26 364.98 li
91.2 365.04 li
91.26 364.92 li
91.26 364.98 li
91.26 364.92 li
91.26 418.2 li
91.2 418.26 li
91.14 418.38 li
90.96 418.56 li
90.42 418.74 li
89.835 418.735 89.276 419.03 88.68 418.98 cv
87.18 418.98 li
87.18 418.5 li
87.96 418.5 li
88.68 418.56 li
89.34 418.62 li
89.64 418.62 li
89.94 418.68 li
90.42 418.8 li
90.78 418.92 li
90.9 418.98 li
90.96 418.98 li
91.08 419.04 li
91.08 419.1 li
91.14 419.16 li
91.2 419.28 li
91.26 419.34 li
91.26 472.56 li
91.26 472.5 li
91.26 472.56 li
91.2 472.44 li
91.26 472.5 li
91.2 472.5 li
91.32 472.56 li
91.26 472.56 li
91.38 472.56 li
91.5 472.62 li
91.68 472.68 li
91.92 472.74 li
92.16 472.74 li
92.4 472.8 li
92.7 472.86 li
93.3 472.92 li
94.02 472.92 li
94.8 472.98 li
f
grestore
gsave
65.7 423.54 mo
85.32 423.54 li
85.32 420.84 li
65.7 420.84 li
cp
clp
1 /0 /CSD get_res sepcs
1 sep
HHKXOY+Calibri-Bold*1 [6.66 0 0 -6.66 0 0 ]msf
65.7 421.74 mo
(Line)
[2.82719 1.64837 3.58643 0 ]xsh
grestore
1 /0 /CSD get_res sepcs
1 sep
HHKXOZ+Calibri-Bold*1 [6.66 0 0 -6.66 0 0 ]msf
77.1 421.74 mo
( )sh
gsave
65.7 423.54 mo
85.32 423.54 li
85.32 420.84 li
65.7 420.84 li
cp
clp
HHKXOY+Calibri-Bold*1 [6.66 0 0 -6.66 0 0 ]msf
78.6 421.74 mo
(14)
[3.36133 0 ]xsh
grestore
gsave
57.12 420.84 mo
537.9 420.84 li
537.9 510.96 li
57.12 510.96 li
cp
eclp
231.42 466.2 mo
230.64 466.2 li
229.92 466.14 li
229.565 466.075 228.592 466.051 228.24 465.9 cv
228 465.84 li
227.82 465.78 li
227.649 465.701 227.393 465.588 227.4 465.36 cv
227.4 414 li
227.4 414.06 li
227.34 414 li
227.4 414.12 li
227.34 414.06 li
227.4 414.06 li
227.34 414 li
227.34 414.06 li
227.1 413.94 li
226.92 413.88 li
226.68 413.82 li
226.44 413.82 li
226.2 413.76 li
225.9 413.7 li
225.3 413.64 li
223.8 413.64 li
223.68 413.52 li
223.56 413.34 li
223.8 413.1 li
225.3 413.1 li
225.9 413.04 li
226.5 412.92 li
226.74 412.92 li
227.1 412.8 li
227.34 412.68 li
227.34 412.74 li
227.4 412.68 li
227.34 412.68 li
227.4 412.62 li
227.34 412.74 li
227.4 412.68 li
227.4 412.74 li
227.4 361.32 li
227.46 361.2 li
227.64 361.02 li
227.7 361.02 li
227.82 360.96 li
228 360.9 li
228.548 360.688 229.34 360.683 229.92 360.6 cv
230.64 360.54 li
231.42 360.54 li
231.42 361.02 li
230.7 361.08 li
229.936 361.057 228.744 361.13 228 361.44 cv
227.88 361.44 li
227.94 361.44 li
227.82 361.5 li
227.88 361.5 li
227.82 361.56 li
227.88 361.44 li
227.88 361.5 li
227.88 361.44 li
227.88 412.8 li
227.82 412.86 li
227.76 412.98 li
227.7 413.04 li
227.7 413.1 li
227.58 413.16 li
226.715 413.512 225.482 413.595 224.58 413.58 cv
223.86 413.64 li
223.86 413.1 li
224.58 413.16 li
225.294 413.107 226.852 413.286 227.58 413.58 cv
227.7 413.64 li
227.7 413.7 li
227.76 413.76 li
227.82 413.88 li
227.88 413.94 li
227.88 465.3 li
227.88 465.24 li
227.88 465.3 li
227.82 465.18 li
227.88 465.24 li
227.82 465.24 li
227.88 465.3 li
228 465.3 li
228.12 465.36 li
228.3 465.42 li
228.54 465.48 li
228.78 465.48 li
229.02 465.54 li
229.32 465.6 li
229.98 465.66 li
230.64 465.66 li
231.42 465.72 li
.92929 .879301 .889677 .799283 cmyk
f
145.86 421.62 mo
145.86 424.32 li
145.14 424.32 li
145.2 421.62 li
cp
145.14 426.3 mo
145.8 426.3 li
145.8 427.56 li
145.14 427.56 li
cp
145.8 426.3 mo
cp
148.14 423.78 mo
145.44 428.22 li
142.86 423.72 li
142.86 423.42 li
143.04 423.24 li
143.28 423.18 li
143.46 423.36 li
145.74 427.38 li
145.2 427.38 li
147.54 423.42 li
147.78 423.24 li
148.02 423.3 li
148.2 423.54 li
148.14 423.78 li
f
145.86 421.62 mo
145.86 424.32 li
145.14 424.32 li
145.2 421.62 li
cp
145.14 426.3 mo
145.8 426.3 li
145.8 427.56 li
145.14 427.56 li
cp
145.8 426.3 mo
cp
148.14 423.78 mo
145.44 428.22 li
142.86 423.72 li
142.86 423.42 li
143.04 423.24 li
143.28 423.18 li
143.46 423.36 li
145.74 427.38 li
145.2 427.38 li
147.54 423.42 li
147.78 423.24 li
148.02 423.3 li
148.2 423.54 li
148.14 423.78 li
f
233.94 416.82 mo
233.94 413.76 253.26 411.3 277.14 411.3 cv
300.96 411.3 320.28 413.76 320.28 416.82 cv
320.28 419.88 300.96 422.4 277.14 422.4 cv
253.26 422.4 233.94 419.88 233.94 416.82 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
233.58 416.88 mo
233.58 416.82 li
233.756 416.293 233.47 416.721 233.88 416.1 cv
233.88 416.04 li
234.06 415.92 li
234.18 415.74 li
236.226 414.228 240.109 413.69 242.46 413.16 cv
243.72 412.98 li
245.1 412.8 li
255.583 411.3 266.559 411 277.14 410.94 cv
277.32 411.06 li
277.38 411.06 li
277.14 410.94 li
279.36 410.94 li
281.52 411 li
283.68 411 li
293.594 411.275 304.36 411.697 314.1 413.64 cv
315.18 413.88 li
316.14 414.12 li
316.56 414.24 li
317.634 414.487 318.116 414.715 319.08 415.14 cv
319.38 415.26 li
319.62 415.44 li
319.8 415.56 li
320.04 415.74 li
320.22 415.86 li
320.58 416.4 li
320.58 416.46 li
320.64 416.58 li
320.64 417.06 li
320.516 417.486 320.03 418.04 319.62 418.2 cv
319.38 418.38 li
319.08 418.5 li
318.72 418.813 317.082 419.273 316.56 419.46 cv
316.14 419.58 li
315.18 419.82 li
314.16 420.06 li
304.241 421.917 293.752 422.409 283.68 422.64 cv
281.52 422.7 li
277.14 422.7 li
277.44 422.28 li
277.44 422.46 li
277.38 422.58 li
277.14 422.7 li
272.169 422.763 267.228 422.528 262.26 422.4 cv
260.28 422.28 li
258.36 422.16 li
254.418 421.921 250.457 421.582 246.54 421.08 cv
245.1 420.9 li
243.72 420.72 li
242.46 420.48 li
240.524 420.123 235.413 419.324 233.88 417.6 cv
233.76 417.42 li
233.7 417.24 li
233.64 417.24 li
233.64 417 li
cp
234.3 416.94 mo
234.24 416.88 li
234.3 417 li
234.36 417.06 li
234.42 417.24 li
234.42 417.18 li
234.48 417.3 li
234.66 417.42 li
236.153 418.612 239.631 419.291 241.38 419.58 cv
242.58 419.82 li
243.84 420.06 li
253.399 421.427 263.055 421.851 272.7 422.04 cv
277.14 422.04 li
276.78 422.46 li
276.84 422.16 li
277.14 422.04 li
279.36 422.04 li
289.279 421.932 299.219 421.556 309.06 420.24 cv
310.38 420.06 li
311.7 419.82 li
313.697 419.395 317.848 418.821 319.56 417.42 cv
319.74 417.3 li
319.86 417.18 li
319.8 417.24 li
319.86 417.12 li
319.98 417 li
319.92 417 li
319.98 416.88 li
319.98 416.94 li
319.98 416.82 li
319.98 416.88 li
319.98 416.7 li
319.98 416.76 li
319.92 416.64 li
319.98 416.7 li
319.86 416.46 li
319.74 416.4 li
319.272 415.892 319.129 415.905 318.54 415.62 cv
317.94 415.38 li
316.65 414.934 315.309 414.604 313.98 414.3 cv
312.9 414.06 li
311.7 413.82 li
310.38 413.64 li
300.243 412.099 289.603 411.749 279.36 411.6 cv
277.14 411.6 li
276.9 411.54 li
277.14 411.6 li
274.92 411.6 li
272.7 411.66 li
263.721 411.749 254.109 412.171 245.22 413.46 cv
243.84 413.64 li
242.58 413.82 li
241.38 414.06 li
239.845 414.415 238.524 414.593 237.06 415.14 cv
236.64 415.26 li
236.34 415.38 li
235.71 415.554 235.329 415.804 234.78 416.1 cv
234.54 416.34 li
234.42 416.52 li
234.42 416.46 li
234.3 416.7 li
234.3 416.64 li
234.24 416.76 li
234.3 416.7 li
234.24 416.88 li
234.24 416.82 li
.92929 .879301 .889677 .799283 cmyk
f
grestore
233.94 433.26 mo
233.94 430.14 253.26 427.62 277.14 427.62 cv
300.96 427.62 320.28 430.14 320.28 433.26 cv
320.28 436.38 300.96 438.9 277.14 438.9 cv
253.26 438.9 233.94 436.38 233.94 433.26 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
233.58 433.32 mo
233.58 433.26 li
233.756 432.733 233.47 433.161 233.88 432.54 cv
233.88 432.48 li
234.06 432.36 li
234.18 432.18 li
236.038 430.738 240.318 429.917 242.46 429.6 cv
243.72 429.36 li
245.1 429.18 li
255.508 427.647 266.626 427.364 277.14 427.32 cv
277.32 427.38 li
277.38 427.38 li
277.14 427.32 li
281.52 427.32 li
283.68 427.38 li
293.753 427.621 304.197 428.063 314.1 430.02 cv
315.18 430.26 li
316.14 430.5 li
317.461 430.916 320.141 431.568 320.64 433.02 cv
320.64 433.5 li
320.582 433.803 320.294 434.203 320.04 434.4 cv
319.86 434.52 li
319.62 434.7 li
318.803 435.166 317.949 435.531 317.04 435.78 cv
316.62 435.9 li
315.18 436.26 li
305.162 438.502 293.921 438.827 283.68 439.2 cv
281.52 439.2 li
279.36 439.26 li
277.14 439.26 li
277.14 438.6 li
277.14 439.26 li
274.92 439.26 li
272.7 439.2 li
263.596 439.096 254.131 438.605 245.1 437.4 cv
243.72 437.16 li
242.46 436.98 li
240.12 436.439 236.244 435.941 234.24 434.4 cv
234.06 434.22 li
233.88 434.1 li
233.88 434.04 li
233.76 433.86 li
233.7 433.74 li
233.64 433.68 li
233.64 433.44 li
cp
234.3 433.38 mo
234.24 433.32 li
234.3 433.5 li
234.3 433.44 li
234.36 433.5 li
234.42 433.68 li
234.42 433.62 li
234.48 433.74 li
234.66 433.86 li
236.261 435.251 240.736 435.93 242.58 436.32 cv
243.84 436.5 li
245.22 436.74 li
254.954 438.053 265.106 438.506 274.92 438.54 cv
277.14 438.6 li
277.38 438.66 li
277.44 438.9 li
277.38 439.14 li
277.14 439.26 li
276.9 439.14 li
276.78 438.9 li
276.9 438.66 li
277.14 438.6 li
279.36 438.54 li
281.52 438.54 li
283.68 438.48 li
285.84 438.48 li
287.88 438.42 li
292.868 438.171 297.97 437.955 302.94 437.46 cv
304.56 437.28 li
306.12 437.1 li
307.62 436.92 li
310.838 436.413 316.705 435.817 319.56 433.92 cv
319.86 433.62 li
319.8 433.68 li
319.86 433.56 li
319.98 433.44 li
319.92 433.5 li
319.98 433.32 li
319.98 433.38 li
319.98 433.26 li
319.98 433.32 li
319.98 433.14 li
319.98 433.2 li
319.92 433.08 li
319.98 433.14 li
319.86 432.96 li
319.92 433.02 li
319.86 432.9 li
319.74 432.78 li
317.992 431.376 314.983 430.977 312.9 430.44 cv
311.7 430.26 li
310.38 430.02 li
300.123 428.455 289.721 428.111 279.36 427.98 cv
277.14 427.98 li
276.9 427.86 li
277.14 427.98 li
272.7 427.98 li
263.058 428.216 253.383 428.542 243.84 430.02 cv
242.58 430.26 li
241.38 430.44 li
239.695 430.849 235.733 431.488 234.42 432.9 cv
234.36 432.96 li
234.3 433.14 li
234.3 433.08 li
234.24 433.2 li
234.3 433.14 li
234.24 433.32 li
234.24 433.26 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
HHKXOW+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/h <1C60D8A8C9B78E05EAADB0123115B3BD5BA83FAABE276A1BF5A23DB55CF4
C30D8A20FB7C70B167834EB7C5767A7762DBDEADBE99BB9DD1507EDF7CB5B44C
FB5AE7F50CE798A09AFFC2F8A1E21C8BA96A3248C2464366A8BF234A7465BA6B
08C9AB7474ED94583744D778660448C601BC1D9C2E8788B65F173F45C272BBE3
CD6AC55E870CEE94D478E3D51C8A2E608A02982A9D048914B7569407A83B9D3C
DA9FE7ECB2AF4F7816F117CC85330A774976280DEB1A8C317A8A170186F61B3F
5FC1D130A0DA1A6A5AE24C0FB08191CD76F47EDEDB0EAC8DE369D515B3B14661
497F94A2412A37D63D31ABC4AE50DD37B3DDB58CFDBCD2A17246A6058BA85E12
DAD2711083774A128264C809F70CFC31D164703798D4642E5D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HHKXOW+Calibri /Encoding get
dup 104 /h put
pop
%ADOEndSubsetFont
/HHKXOW+Calibri*1 
[32{/.notdef}rp /quotedblleft /quotedblright 6{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 
/.notdef /zero /one /two 7{/.notdef}rp /colon 7{/.notdef}rp /B 
/.notdef /D /E /F 2{/.notdef}rp /I 4{/.notdef}rp /N 
/O 2{/.notdef}rp /R /S 4{/.notdef}rp /X 6{/.notdef}rp /underscore 
/.notdef /a /b /c /d /e /f /g 
/h /i /j /.notdef /l /m /n /o 
/p /.notdef /r /s /t /u /v /.notdef 
/x /y 134{/.notdef}rp]
HHKXOW+Calibri nf
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
251.58 435.48 mo
(path:System.String)
[3.48846 3.18217 2.22314 3.48846 1.77695 3.04895 3.009 2.5961 2.22314 3.30872 5.31329 1.67035 
3.04892 2.22318 2.31631 1.51718 3.48846 0 ]xsh
277.5 422.4 mo
277.44 425.04 li
276.78 425.04 li
276.84 422.4 li
cp
277.44 427.08 mo
277.44 427.74 li
276.78 427.74 li
276.78 427.02 li
cp
279.78 423.9 mo
277.08 428.4 li
274.5 423.84 li
274.5 423.6 li
274.62 423.42 li
274.92 423.36 li
275.1 423.54 li
277.38 427.56 li
276.78 427.56 li
279.18 423.6 li
279.42 423.42 li
279.66 423.48 li
279.78 423.66 li
279.78 423.9 li
.92929 .879301 .889677 .799283 cmyk
f
277.5 422.4 mo
277.44 425.04 li
276.78 425.04 li
276.84 422.4 li
cp
277.44 427.08 mo
277.44 427.74 li
276.78 427.74 li
276.78 427.02 li
cp
279.78 423.9 mo
277.08 428.4 li
274.5 423.84 li
274.5 423.6 li
274.62 423.42 li
274.92 423.36 li
275.1 423.54 li
277.38 427.56 li
276.78 427.56 li
279.18 423.6 li
279.42 423.42 li
279.66 423.48 li
279.78 423.66 li
279.78 423.9 li
f
102.3 433.8 mo
102.3 430.68 121.62 428.16 145.5 428.16 cv
169.32 428.16 188.7 430.68 188.7 433.8 cv
188.7 436.86 169.32 439.38 145.5 439.38 cv
121.62 439.38 102.3 436.86 102.3 433.8 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
102 433.8 mo
102 433.62 li
102.172 431.979 106.298 431.114 107.46 430.74 cv
108.48 430.5 li
109.62 430.32 li
110.82 430.08 li
114.743 429.409 119.092 428.954 123.06 428.64 cv
124.86 428.46 li
126.72 428.34 li
132.947 428.004 139.265 427.761 145.5 427.8 cv
145.68 427.86 li
145.8 427.98 li
145.8 428.04 li
145.5 427.8 li
147.72 427.8 li
149.94 427.86 li
152.1 427.86 li
162.201 428.094 172.571 428.643 182.52 430.5 cv
183.54 430.74 li
184.5 430.98 li
185.782 431.456 188.578 431.988 189 433.56 cv
189 434.04 li
188.819 434.547 188.77 434.494 188.4 434.88 cv
188.22 435.06 li
187.98 435.18 li
187.303 435.682 186.21 436.035 185.4 436.26 cv
184.98 436.44 li
183.54 436.8 li
173.494 438.96 162.351 439.39 152.1 439.68 cv
149.88 439.68 li
147.72 439.74 li
145.5 439.74 li
145.74 439.14 li
145.8 439.32 li
145.8 439.56 li
145.68 439.68 li
145.5 439.74 li
143.28 439.74 li
141.06 439.68 li
138.9 439.68 li
134.7 439.56 li
132.66 439.5 li
130.62 439.38 li
128.64 439.32 li
126.78 439.2 li
122.331 438.863 117.873 438.56 113.46 437.88 cv
112.14 437.7 li
110.82 437.46 li
109.62 437.28 li
108.162 436.942 102.825 435.989 102.06 434.22 cv
102 434.04 li
102 433.92 li
cp
102.66 433.92 mo
102.66 433.8 li
102.66 433.92 li
102.72 434.04 li
102.78 434.1 li
103.343 434.685 102.971 434.431 103.8 434.88 cv
104.4 435.12 li
105.458 435.63 106.439 435.855 107.58 436.14 cv
108.6 436.38 li
109.74 436.62 li
110.94 436.8 li
120.708 438.415 131.168 438.91 141.06 439.02 cv
143.28 439.08 li
145.5 439.08 li
145.26 439.62 li
145.14 439.44 li
145.2 439.26 li
145.32 439.14 li
145.5 439.08 li
147.72 439.08 li
149.88 439.02 li
152.04 439.02 li
154.2 438.96 li
156.3 438.9 li
158.34 438.84 li
160.32 438.72 li
164.57 438.539 168.693 438.266 172.92 437.76 cv
174.48 437.58 li
175.98 437.4 li
177.42 437.22 li
180.375 436.75 185.364 436.152 187.98 434.4 cv
188.1 434.28 li
188.22 434.1 li
188.16 434.16 li
188.28 434.04 li
188.34 433.92 li
188.34 433.98 li
188.34 433.8 li
188.34 433.86 li
188.34 433.74 li
188.34 433.8 li
188.34 433.68 li
188.34 433.74 li
188.34 433.56 li
188.34 433.62 li
188.28 433.5 li
188.16 433.38 li
188.22 433.44 li
187.98 433.2 li
185.893 431.561 181.19 431.008 178.8 430.5 cv
177.42 430.32 li
175.98 430.14 li
174.48 429.96 li
170.999 429.48 167.692 429.321 164.22 429 cv
162.3 428.94 li
160.32 428.82 li
155.419 428.524 150.413 428.505 145.5 428.46 cv
145.32 428.4 li
145.2 428.28 li
145.2 428.22 li
145.5 428.46 li
141.06 428.46 li
131.245 428.644 121.927 429.116 112.2 430.5 cv
110.94 430.74 li
109.74 430.98 li
108.315 431.161 103.934 432.139 102.78 433.38 cv
102.72 433.5 li
102.66 433.62 li
102.66 433.56 li
102.66 433.74 li
102.66 433.68 li
102.66 433.8 li
102.66 433.74 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
119.94 435.96 mo
(path:System.String)
[3.48846 3.18217 2.22316 3.48846 1.77692 3.04895 3.009 2.59612 2.22316 3.30869 5.31332 1.67032 
3.04895 2.22314 2.31635 1.51717 3.48846 0 ]xsh
412.08 454.68 mo
438.36 454.68 li
440.22 456.54 li
440.22 465.96 li
410.22 465.96 li
410.22 456.54 li
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
411.84 454.44 mo
412.08 454.32 li
438.36 454.32 li
438.6 454.44 li
440.46 456.3 li
440.58 456.54 li
440.58 465.96 li
440.46 466.2 li
440.22 466.26 li
410.22 466.26 li
409.98 466.2 li
409.86 465.96 li
409.86 456.54 li
409.98 456.3 li
cp
410.46 456.78 mo
410.52 456.54 li
410.52 465.96 li
410.22 465.6 li
440.22 465.6 li
439.92 465.96 li
439.92 456.54 li
440.04 456.78 li
438.12 454.92 li
438.36 455.04 li
412.08 455.04 li
412.32 454.92 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
HHKXOW+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7A0860A2FEF09FCB80607108B3B71A30E2FFE5A0F53F1
F3CE33E25BDD9A37F12480657F287B11234D872A9341B8D761BAC5B337758ED3
4FBDB0155B2DB8FB089986F2CBFC580855A552E4E7BA3E50F802AF5BABA1A72C
62BC1E6D108EEB3A3C66741F416B352CC414FB931072A8C5863DBBAA93C49B22
4ADC9F8CAA75F5C9BFEB2915D3505CD6144D20AF6779286AAF407AAC26D69248
C394FBB9BF32373F684ACA2E19C0F36192202ACAF72B1025D6F0CF7066494E82
7BB306A2A776E0F2B6F3F0E76AC8A13169FA8D6AD525762CBAE08E1976BA0FA8
68484244B2C6286C74EE91A2C98728E442E286200142B1A5906E7DF9201821B2
7907537A9A18D5757AABAE23C46953763B0140A749D71AFB31CB71FE8CEB3596
B5D9F27628C8660D823DA7A912BCD8F676248CEB1E8BAEB1BE8A438B018DEAB6
2C462D1458D0606C924EBCEC79E3D916B8F995C300564C3F71FF08DB1F5BD306
FF743BF5E6C612870C09ECDB532B05A7DD75F09723F8164F23FA51923DA26610
7C0EB4976641F969687AA087A6CC3FBA3B6B49CB68C88F765064561D586CDB15
837CCCDF95B1ED2288DB0948C8291CEF223BB458BF8475B7D75BEC1205D90B55
55DC2429D51153DF3C83901B6982E60F7C7F061954215DB5FAEB8718AB7756E4
DAA99626BD231EE3CF4090380F8238B83D56E35DB5099A025EA0320D1A3DE89D
5285DD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HHKXOW+Calibri /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/HHKXOW+Calibri*1 
[32{/.notdef}rp /quotedblleft /quotedblright 6{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 
/.notdef /zero /one /two /three 6{/.notdef}rp /colon 7{/.notdef}rp 
/B /.notdef /D /E /F 2{/.notdef}rp /I 4{/.notdef}rp 
/N /O 2{/.notdef}rp /R /S 4{/.notdef}rp /X 6{/.notdef}rp 
/underscore /.notdef /a /b /c /d /e /f 
/g /h /i /j /.notdef /l /m /n 
/o /p /.notdef /r /s /t /u /v 
/.notdef /x /y 134{/.notdef}rp]
HHKXOW+Calibri nf
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
417.48 462.96 mo
(Step3)
[3.04562 2.21982 3.30536 3.48514 0 ]xsh
340.74 462.66 mo
367.02 462.66 li
368.88 464.58 li
368.88 473.94 li
338.82 473.94 li
338.82 464.58 li
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
340.5 462.48 mo
340.74 462.36 li
367.02 462.36 li
367.26 462.48 li
369.12 464.34 li
369.24 464.58 li
369.24 473.94 li
369.12 474.18 li
368.88 474.3 li
338.82 474.3 li
338.58 474.18 li
338.52 473.94 li
338.52 464.58 li
338.58 464.34 li
cp
339.06 464.82 mo
339.18 464.58 li
339.18 473.94 li
338.82 473.64 li
368.88 473.64 li
368.58 473.94 li
368.58 464.58 li
368.64 464.82 li
366.78 462.9 li
367.02 463.02 li
340.74 463.02 li
340.98 462.9 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
346.14 471 mo
(Step3)
[3.04562 2.21982 3.30536 3.48514 0 ]xsh
197.52 468.18 mo
223.8 468.18 li
225.66 470.1 li
225.66 479.46 li
195.6 479.46 li
195.6 470.1 li
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
197.28 467.94 mo
197.52 467.88 li
223.8 467.88 li
224.04 467.94 li
225.9 469.86 li
226.02 470.1 li
226.02 479.46 li
225.9 479.7 li
225.66 479.82 li
195.6 479.82 li
195.36 479.7 li
195.3 479.46 li
195.3 470.1 li
195.36 469.86 li
cp
195.84 470.28 mo
195.96 470.1 li
195.96 479.46 li
195.6 479.1 li
225.66 479.1 li
225.3 479.46 li
225.3 470.1 li
225.42 470.28 li
223.56 468.42 li
223.8 468.54 li
197.52 468.54 li
197.7 468.42 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
202.92 476.52 mo
(Step3)
[3.04561 2.21983 3.30536 3.48514 0 ]xsh
325.68 432.12 mo
351.96 432.12 li
353.88 434.04 li
353.88 443.4 li
323.82 443.4 li
323.82 434.04 li
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
325.44 431.88 mo
325.68 431.82 li
351.96 431.82 li
352.2 431.88 li
354.12 433.8 li
354.18 434.04 li
354.18 443.4 li
354.12 443.64 li
353.88 443.76 li
323.82 443.76 li
323.58 443.64 li
323.46 443.4 li
323.46 434.04 li
323.58 433.8 li
cp
324.06 434.28 mo
324.12 434.04 li
324.12 443.4 li
323.82 443.1 li
353.88 443.1 li
353.52 443.4 li
353.52 434.04 li
353.64 434.28 li
351.72 432.36 li
351.96 432.48 li
325.68 432.48 li
325.92 432.36 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
HHKXOW+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7A0860A05CDAB07FCC8C6F1456010984E043BC1080A8E4
004C7A6F96FF4AD7F2A4B870B666CC1C7EA11B61E750FAAE008DD2598CE85BEE
4C2722299D9BDE6BD901B361B9FFD1A74A6881105044BA6119A67BABA2C5AA34
4BC5F5DC3AF8B4A3D3F44101FD3AF23A3469D02149FFD63F48CC3EA80D9EB13A
8494F7709B008152FFA0D84385AFFDE11B5FA65E8FC9AAD2BCC7E5E382783235
F954A8738DCC9A5760FEB582741B59F3C495CA1895A9F6120A54415FC0BB4494
CFF5A03D1CB88055E001BDA6B35B19BB5CD64D26C1A126C3877F4B0A8ECE9817
BE4A2EC5FA3C6FC9FCDEF6FA038892760F02C70AC24D1AFF24D0C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HHKXOW+Calibri /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/HHKXOW+Calibri*1 
[32{/.notdef}rp /quotedblleft /quotedblright 6{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 
/.notdef /zero /one /two /three /four 5{/.notdef}rp /colon 
7{/.notdef}rp /B /.notdef /D /E /F 2{/.notdef}rp /I 
4{/.notdef}rp /N /O 2{/.notdef}rp /R /S 4{/.notdef}rp /X 
6{/.notdef}rp /underscore /.notdef /a /b /c /d /e 
/f /g /h /i /j /.notdef /l /m 
/n /o /p /.notdef /r /s /t /u 
/v /.notdef /x /y 134{/.notdef}rp]
HHKXOW+Calibri nf
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
331.08 440.46 mo
(Step4)
[3.04562 2.21982 3.30536 3.48514 0 ]xsh
194.22 445.44 mo
220.5 445.44 li
222.42 447.3 li
222.42 456.66 li
192.36 456.66 li
192.36 447.3 li
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
193.98 445.2 mo
194.22 445.08 li
220.5 445.08 li
220.74 445.2 li
222.66 447.06 li
222.72 447.3 li
222.72 456.66 li
222.66 456.9 li
222.42 457.02 li
192.36 457.02 li
192.12 456.9 li
192 456.66 li
192 447.3 li
192.12 447.06 li
cp
192.6 447.54 mo
192.72 447.3 li
192.72 456.66 li
192.36 456.36 li
222.42 456.36 li
222.06 456.66 li
222.06 447.3 li
222.18 447.54 li
220.32 445.62 li
220.5 445.74 li
194.22 445.74 li
194.46 445.62 li
.92929 .879301 .889677 .799283 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
HHKXOW+Calibri*1 [6.66 0 0 -6.66 0 0 ]msf
199.68 453.72 mo
(Step4)
[3.04561 2.21983 3.30536 3.48514 0 ]xsh
gsave
57.12 510.96 mo
537.9 510.96 li
537.9 601.14 li
57.12 601.14 li
cp
eclp
57.12 601.14 mo
537.9 601.14 li
537.9 510.92 li
57.12 510.92 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/HHKXOW+Calibri*1 uf
/HHKXOW+Calibri uf
/PBAAAA+Calibri uf
/HHKXOY+Calibri-Bold*1 uf
/HHKXOY+Calibri-Bold uf
/QJJAAA+Calibri-Bold uf
/HHKXOX+Calibri*1 uf
/HHKXOX+Calibri uf
/HIBBAA+Calibri uf
/HHKXOZ+Calibri-Bold*1 uf
/HHKXOZ+Calibri-Bold uf
/GFNBAA+Calibri-Bold uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
