org.xbill.DNS.security.DSASignature#byte[],fromDNS(byte[])#byte[],toDNS(java.security.interfaces.DSAParams,byte[])#void,#ExtendsOrImplements#()#
org.xbill.DNS.utils.base64#java.lang.String,toString(byte[])#java.lang.String,formatString(byte[],int,java.lang.String,boolean)#byte[],fromString(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.Options#void,refresh()#void,clear()#void,set(java.lang.String)#void,set(java.lang.String,java.lang.String)#void,unset(java.lang.String)#boolean,check(java.lang.String)#java.lang.String,value(java.lang.String)#int,intValue(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.TSIGRecord#org.xbill.DNS.TSIGRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name,java.util.Date,int,byte[],int,int,byte)#org.xbill.DNS.Name,getAlgorithm()#java.util.Date,getTimeSigned()#int,getFudge()#byte[],getSignature()#int,getOriginalID()#int,getError()#byte[],getOther()#void,#ExtendsOrImplements#()#
org.xbill.DNS.ZoneTransferException#org.xbill.DNS.ZoneTransferException,CONSTRUCTOR()#org.xbill.DNS.ZoneTransferException,CONSTRUCTOR(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.Flags#java.lang.String,string(int)#int,value(java.lang.String)#boolean,isFlag(int)#void,#ExtendsOrImplements#()#
org.xbill.DNS.SimpleResolver#org.xbill.DNS.SimpleResolver,CONSTRUCTOR(java.lang.String)#org.xbill.DNS.SimpleResolver,CONSTRUCTOR()#void,setDefaultResolver(java.lang.String)#void,setPort(int)#void,setAddress(java.net.InetSocketAddress)#void,setAddress(java.net.InetAddress)#void,setLocalAddress(java.net.InetSocketAddress)#void,setLocalAddress(java.net.InetAddress)#void,setTCP(boolean)#void,setIgnoreTruncation(boolean)#void,setEDNS(int,int,int,java.util.List)#void,setEDNS(int)#void,setTSIGKey(org.xbill.DNS.TSIG)#void,setTimeout(int,int)#void,setTimeout(int)#org.xbill.DNS.Message,send(org.xbill.DNS.Message)#java.lang.Object,sendAsync(org.xbill.DNS.Message,org.xbill.DNS.ResolverListener)#void,#ExtendsOrImplements#()#
org.xbill.DNS.Header#org.xbill.DNS.Header,CONSTRUCTOR(int)#org.xbill.DNS.Header,CONSTRUCTOR()#org.xbill.DNS.Header,CONSTRUCTOR(byte[])#byte[],toWire()#void,setFlag(int)#void,unsetFlag(int)#boolean,getFlag(int)#int,getID()#void,setID(int)#void,setRcode(int)#int,getRcode()#void,setOpcode(int)#int,getOpcode()#int,getCount(int)#java.lang.String,printFlags()#java.lang.String,toString()#java.lang.Object,clone()#void,#ExtendsOrImplements#()#
org.xbill.DNS.CERTRecord.CertificateType#java.lang.String,string(int)#int,value(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.NameTooLongException#org.xbill.DNS.NameTooLongException,CONSTRUCTOR()#org.xbill.DNS.NameTooLongException,CONSTRUCTOR(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.ExtendedFlags#java.lang.String,string(int)#int,value(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.KEYRecord#org.xbill.DNS.KEYRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,int,int,int,byte[])#void,#ExtendsOrImplements#()#
org.xbill.DNS.Compression.Entry#void,#ExtendsOrImplements#()#
org.xbill.DNS.LOCRecord#org.xbill.DNS.LOCRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,double,double,double,double,double,double)#double,getLatitude()#double,getLongitude()#double,getAltitude()#double,getSize()#double,getHPrecision()#double,getVPrecision()#void,#ExtendsOrImplements#()#
org.xbill.DNS.SingleNameBase#org.xbill.DNS.SingleNameBase,CONSTRUCTOR()#org.xbill.DNS.SingleNameBase,CONSTRUCTOR(org.xbill.DNS.Name,int,int,long)#org.xbill.DNS.SingleNameBase,CONSTRUCTOR(org.xbill.DNS.Name,int,int,long,org.xbill.DNS.Name,java.lang.String)#org.xbill.DNS.Name,getSingleName()#void,#ExtendsOrImplements#()#
org.xbill.DNS.InvalidDClassException#org.xbill.DNS.InvalidDClassException,CONSTRUCTOR(int)#void,#ExtendsOrImplements#()#
org.xbill.DNS.Zone.ZoneIterator#boolean,hasNext()#java.lang.Object,next()#void,remove()#void,#ExtendsOrImplements#()#
org.xbill.DNS.ReverseMap#org.xbill.DNS.Name,fromAddress(byte[])#org.xbill.DNS.Name,fromAddress(int[])#org.xbill.DNS.Name,fromAddress(java.net.InetAddress)#org.xbill.DNS.Name,fromAddress(java.lang.String,int)#org.xbill.DNS.Name,fromAddress(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.Section#java.lang.String,string(int)#java.lang.String,longString(int)#java.lang.String,updString(int)#int,value(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.DNSOutput#org.xbill.DNS.DNSOutput,CONSTRUCTOR(int)#org.xbill.DNS.DNSOutput,CONSTRUCTOR()#int,current()#void,jump(int)#void,save()#void,restore()#void,writeU8(int)#void,writeU16(int)#void,writeU32(long)#void,writeByteArray(byte[],int,int)#void,writeByteArray(byte[])#void,writeCountedString(byte[])#byte[],toByteArray()#void,#ExtendsOrImplements#()#
org.xbill.DNS.Message#org.xbill.DNS.Message,CONSTRUCTOR(int)#org.xbill.DNS.Message,CONSTRUCTOR()#org.xbill.DNS.Message,newQuery(org.xbill.DNS.Record)#org.xbill.DNS.Message,newUpdate(org.xbill.DNS.Name)#org.xbill.DNS.Message,CONSTRUCTOR(byte[])#void,setHeader(org.xbill.DNS.Header)#org.xbill.DNS.Header,getHeader()#void,addRecord(org.xbill.DNS.Record,int)#boolean,removeRecord(org.xbill.DNS.Record,int)#void,removeAllRecords(int)#boolean,findRecord(org.xbill.DNS.Record,int)#boolean,findRecord(org.xbill.DNS.Record)#boolean,findRRset(org.xbill.DNS.Name,int,int)#boolean,findRRset(org.xbill.DNS.Name,int)#org.xbill.DNS.Record,getQuestion()#org.xbill.DNS.TSIGRecord,getTSIG()#boolean,isSigned()#boolean,isVerified()#org.xbill.DNS.OPTRecord,getOPT()#int,getRcode()#org.xbill.DNS.Record[],getSectionArray(int)#org.xbill.DNS.RRset[],getSectionRRsets(int)#byte[],toWire()#byte[],toWire(int)#void,setTSIG(org.xbill.DNS.TSIG,int,org.xbill.DNS.TSIGRecord)#int,numBytes()#java.lang.String,sectionToString(int)#java.lang.String,toString()#java.lang.Object,clone()#void,#ExtendsOrImplements#()#
org.xbill.DNS.FormattedTime#java.lang.String,format(java.util.Date)#java.util.Date,parse(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.MXRecord#org.xbill.DNS.MXRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,int,org.xbill.DNS.Name)#org.xbill.DNS.Name,getTarget()#int,getPriority()#org.xbill.DNS.Name,getAdditionalName()#void,#ExtendsOrImplements#()#
org.xbill.DNS.ExtendedResolver.Resolution#org.xbill.DNS.ExtendedResolver.Resolution,CONSTRUCTOR(org.xbill.DNS.ExtendedResolver,org.xbill.DNS.Message)#void,send(int)#org.xbill.DNS.Message,start()#void,startAsync(org.xbill.DNS.ResolverListener)#void,receiveMessage(java.lang.Object,org.xbill.DNS.Message)#void,handleException(java.lang.Object,java.lang.Exception)#void,#ExtendsOrImplements#()#
org.xbill.DNS.NAPTRRecord#org.xbill.DNS.NAPTRRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,int,int,java.lang.String,java.lang.String,java.lang.String,org.xbill.DNS.Name)#int,getOrder()#int,getPreference()#java.lang.String,getFlags()#java.lang.String,getService()#java.lang.String,getRegexp()#org.xbill.DNS.Name,getReplacement()#org.xbill.DNS.Name,getAdditionalName()#void,#ExtendsOrImplements#()#
org.xbill.DNS.EmptyRecord#void,#ExtendsOrImplements#()#
org.xbill.DNS.Opcode#java.lang.String,string(int)#int,value(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.NSRecord#org.xbill.DNS.NSRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name)#org.xbill.DNS.Name,getTarget()#org.xbill.DNS.Name,getAdditionalName()#void,#ExtendsOrImplements#()#
org.xbill.DNS.Rcode#java.lang.String,string(int)#java.lang.String,TSIGstring(int)#int,value(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.TKEYRecord#org.xbill.DNS.TKEYRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name,java.util.Date,java.util.Date,int,int,byte[],byte)#java.lang.String,modeString()#org.xbill.DNS.Name,getAlgorithm()#java.util.Date,getTimeInception()#java.util.Date,getTimeExpire()#int,getMode()#int,getError()#byte[],getKey()#byte[],getOther()#void,#ExtendsOrImplements#()#
org.xbill.DNS.ZoneTransferIn.Delta#void,#ExtendsOrImplements#()#
org.xbill.DNS.Tokenizer#org.xbill.DNS.Tokenizer,CONSTRUCTOR(java.io.InputStream)#org.xbill.DNS.Tokenizer,CONSTRUCTOR(java.lang.String)#org.xbill.DNS.Tokenizer,CONSTRUCTOR(java.io.File)#org.xbill.DNS.Tokenizer.Token,get(boolean,boolean)#org.xbill.DNS.Tokenizer.Token,get()#void,unget()#java.lang.String,getString()#java.lang.String,getIdentifier()#long,getLong()#long,getUInt32()#int,getUInt16()#int,getUInt8()#long,getTTL()#long,getTTLLike()#org.xbill.DNS.Name,getName(org.xbill.DNS.Name)#java.net.InetAddress,getAddress(int)#void,getEOL()#byte[],getBase64(boolean)#byte[],getBase64()#byte[],getHex(boolean)#byte[],getHex()#org.xbill.DNS.TextParseException,exception(java.lang.String)#void,close()#void,finalize()#void,#ExtendsOrImplements#()#
org.xbill.DNS.SRVRecord#org.xbill.DNS.SRVRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,int,int,int,org.xbill.DNS.Name)#int,getPriority()#int,getWeight()#int,getPort()#org.xbill.DNS.Name,getTarget()#org.xbill.DNS.Name,getAdditionalName()#void,#ExtendsOrImplements#()#
org.xbill.DNS.security.KEYConverter#java.security.PublicKey,parseRecord(org.xbill.DNS.DNSKEYRecord)#java.security.PublicKey,parseRecord(org.xbill.DNS.KEYRecord)#org.xbill.DNS.KEYRecord,buildRecord(org.xbill.DNS.Name,int,long,int,int,java.security.PublicKey)#org.xbill.DNS.Record,buildRecord(org.xbill.DNS.Name,int,int,long,int,int,int,java.security.PublicKey)#void,#ExtendsOrImplements#()#
org.xbill.DNS.Lookup#void,refreshDefault()#org.xbill.DNS.Resolver,getDefaultResolver()#void,setDefaultResolver(org.xbill.DNS.Resolver)#org.xbill.DNS.Cache,getDefaultCache(int)#void,setDefaultCache(org.xbill.DNS.Cache,int)#org.xbill.DNS.Name[],getDefaultSearchPath()#void,setDefaultSearchPath(org.xbill.DNS.Name[])#void,setDefaultSearchPath(java.lang.String[])#org.xbill.DNS.Lookup,CONSTRUCTOR(org.xbill.DNS.Name,int,int)#org.xbill.DNS.Lookup,CONSTRUCTOR(org.xbill.DNS.Name,int)#org.xbill.DNS.Lookup,CONSTRUCTOR(org.xbill.DNS.Name)#org.xbill.DNS.Lookup,CONSTRUCTOR(java.lang.String,int,int)#org.xbill.DNS.Lookup,CONSTRUCTOR(java.lang.String,int)#org.xbill.DNS.Lookup,CONSTRUCTOR(java.lang.String)#void,setResolver(org.xbill.DNS.Resolver)#void,setSearchPath(org.xbill.DNS.Name[])#void,setSearchPath(java.lang.String[])#void,setCache(org.xbill.DNS.Cache)#void,setCredibility(int)#org.xbill.DNS.Record[],run()#org.xbill.DNS.Record[],getAnswers()#org.xbill.DNS.Name[],getAliases()#int,getResult()#java.lang.String,getErrorString()#void,#ExtendsOrImplements#()#
org.xbill.DNS.DNSKEYRecord.Protocol#void,#ExtendsOrImplements#()#
org.xbill.DNS.WKSRecord.Service#java.lang.String,string(int)#int,value(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.RRset#org.xbill.DNS.RRset,CONSTRUCTOR()#org.xbill.DNS.RRset,CONSTRUCTOR(org.xbill.DNS.Record)#org.xbill.DNS.RRset,CONSTRUCTOR(org.xbill.DNS.RRset)#void,addRR(org.xbill.DNS.Record)#void,deleteRR(org.xbill.DNS.Record)#void,clear()#java.util.Iterator,rrs(boolean)#java.util.Iterator,rrs()#java.util.Iterator,sigs()#int,size()#org.xbill.DNS.Name,getName()#int,getType()#int,getDClass()#long,getTTL()#org.xbill.DNS.Record,first()#java.lang.String,toString()#void,#ExtendsOrImplements#()#
org.xbill.DNS.Tokenizer.TokenizerException#org.xbill.DNS.Tokenizer.TokenizerException,CONSTRUCTOR(java.lang.String,int,java.lang.String)#java.lang.String,getBaseMessage()#void,#ExtendsOrImplements#()#
org.xbill.DNS.TextParseException#org.xbill.DNS.TextParseException,CONSTRUCTOR()#org.xbill.DNS.TextParseException,CONSTRUCTOR(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.SSHFPRecord.Algorithm#void,#ExtendsOrImplements#()#
org.xbill.DNS.SOARecord#org.xbill.DNS.SOARecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name,org.xbill.DNS.Name,long,long,long,long,long)#org.xbill.DNS.Name,getHost()#org.xbill.DNS.Name,getAdmin()#long,getSerial()#long,getRefresh()#long,getRetry()#long,getExpire()#long,getMinimum()#void,#ExtendsOrImplements#()#
org.xbill.DNS.security.DSAPubKey#org.xbill.DNS.security.DSAPubKey,CONSTRUCTOR(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)#java.math.BigInteger,getY()#java.security.interfaces.DSAParams,getParams()#java.lang.String,getAlgorithm()#java.lang.String,getFormat()#byte[],getEncoded()#void,#ExtendsOrImplements#()#
org.xbill.DNS.RelativeNameException#org.xbill.DNS.RelativeNameException,CONSTRUCTOR(org.xbill.DNS.Name)#org.xbill.DNS.RelativeNameException,CONSTRUCTOR(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.NXTRecord#org.xbill.DNS.NXTRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name,java.util.BitSet)#org.xbill.DNS.Name,getNext()#java.util.BitSet,getBitmap()#void,#ExtendsOrImplements#()#
org.xbill.DNS.A6Record#org.xbill.DNS.A6Record,CONSTRUCTOR(org.xbill.DNS.Name,int,long,int,java.net.InetAddress,org.xbill.DNS.Name)#int,getPrefixBits()#java.net.InetAddress,getSuffix()#org.xbill.DNS.Name,getPrefix()#void,#ExtendsOrImplements#()#
org.xbill.DNS.ResolveThread#org.xbill.DNS.ResolveThread,CONSTRUCTOR(org.xbill.DNS.Resolver,org.xbill.DNS.Message,java.lang.Object,org.xbill.DNS.ResolverListener)#void,run()#void,#ExtendsOrImplements#()#
org.xbill.DNS.TSIG#org.xbill.DNS.TSIG,CONSTRUCTOR(org.xbill.DNS.Name,org.xbill.DNS.Name,byte[])#org.xbill.DNS.TSIG,CONSTRUCTOR(org.xbill.DNS.Name,byte[])#org.xbill.DNS.TSIG,CONSTRUCTOR(org.xbill.DNS.Name,java.lang.String,java.lang.String)#org.xbill.DNS.TSIG,CONSTRUCTOR(java.lang.String,java.lang.String,java.lang.String)#org.xbill.DNS.TSIG,CONSTRUCTOR(java.lang.String,java.lang.String)#org.xbill.DNS.TSIG,fromString(java.lang.String)#org.xbill.DNS.TSIGRecord,generate(org.xbill.DNS.Message,byte[],int,org.xbill.DNS.TSIGRecord)#void,apply(org.xbill.DNS.Message,int,org.xbill.DNS.TSIGRecord)#void,apply(org.xbill.DNS.Message,org.xbill.DNS.TSIGRecord)#void,applyStream(org.xbill.DNS.Message,org.xbill.DNS.TSIGRecord,boolean)#byte,verify(org.xbill.DNS.Message,byte[],int,org.xbill.DNS.TSIGRecord)#int,verify(org.xbill.DNS.Message,byte[],org.xbill.DNS.TSIGRecord)#int,recordLength()#void,#ExtendsOrImplements#()#
org.xbill.DNS.security.DSAPubKey.SimpleDSAParams#org.xbill.DNS.security.DSAPubKey.SimpleDSAParams,CONSTRUCTOR(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)#java.math.BigInteger,getP()#java.math.BigInteger,getQ()#java.math.BigInteger,getG()#void,#ExtendsOrImplements#()#
org.xbill.DNS.IPSECKEYRecord.Gateway#void,#ExtendsOrImplements#()#
org.xbill.DNS.SIGRecord#org.xbill.DNS.SIGRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,int,int,long,java.util.Date,java.util.Date,int,org.xbill.DNS.Name,byte[])#void,#ExtendsOrImplements#()#
org.xbill.DNS.RPRecord#org.xbill.DNS.RPRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name,org.xbill.DNS.Name)#org.xbill.DNS.Name,getMailbox()#org.xbill.DNS.Name,getTextDomain()#void,#ExtendsOrImplements#()#
org.xbill.DNS.HINFORecord#org.xbill.DNS.HINFORecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,java.lang.String,java.lang.String)#java.lang.String,getCPU()#java.lang.String,getOS()#void,#ExtendsOrImplements#()#
org.xbill.DNS.MINFORecord#org.xbill.DNS.MINFORecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name,org.xbill.DNS.Name)#org.xbill.DNS.Name,getResponsibleAddress()#org.xbill.DNS.Name,getErrorAddress()#void,#ExtendsOrImplements#()#
org.xbill.DNS.Cache.NegativeElement#org.xbill.DNS.Cache.NegativeElement,CONSTRUCTOR(org.xbill.DNS.Name,int,org.xbill.DNS.SOARecord,int,long)#int,getType()#boolean,expired()#int,compareCredibility(int)#java.lang.String,toString()#void,#ExtendsOrImplements#()#
org.xbill.DNS.ResolverConfig#org.xbill.DNS.ResolverConfig,CONSTRUCTOR()#java.lang.String[],servers()#java.lang.String,server()#org.xbill.DNS.Name[],searchPath()#org.xbill.DNS.ResolverConfig,getCurrentConfig()#void,refresh()#void,#ExtendsOrImplements#()#
org.xbill.DNS.PTRRecord#org.xbill.DNS.PTRRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name)#org.xbill.DNS.Name,getTarget()#void,#ExtendsOrImplements#()#
org.xbill.DNS.RRSIGRecord#org.xbill.DNS.RRSIGRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,int,int,long,java.util.Date,java.util.Date,int,org.xbill.DNS.Name,byte[])#void,#ExtendsOrImplements#()#
org.xbill.DNS.KXRecord#org.xbill.DNS.KXRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,int,org.xbill.DNS.Name)#org.xbill.DNS.Name,getTarget()#int,getPreference()#org.xbill.DNS.Name,getAdditionalName()#void,#ExtendsOrImplements#()#
org.xbill.DNS.security.DNSSECVerifier#org.xbill.DNS.security.DNSSECVerifier,CONSTRUCTOR()#void,addTrustedKey(org.xbill.DNS.DNSKEYRecord)#void,addTrustedKey(org.xbill.DNS.Name,int,java.security.PublicKey)#int,verify(org.xbill.DNS.RRset,org.xbill.DNS.Cache)#void,#ExtendsOrImplements#()#
org.xbill.DNS.security.RSAPubKey#org.xbill.DNS.security.RSAPubKey,CONSTRUCTOR(java.math.BigInteger,java.math.BigInteger)#java.math.BigInteger,getModulus()#java.math.BigInteger,getPublicExponent()#java.lang.String,getAlgorithm()#java.lang.String,getFormat()#byte[],getEncoded()#void,#ExtendsOrImplements#()#
org.xbill.DNS.PXRecord#org.xbill.DNS.PXRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,int,org.xbill.DNS.Name,org.xbill.DNS.Name)#int,getPreference()#org.xbill.DNS.Name,getMap822()#org.xbill.DNS.Name,getMapX400()#void,#ExtendsOrImplements#()#
org.xbill.DNS.InvalidTypeException#org.xbill.DNS.InvalidTypeException,CONSTRUCTOR(int)#void,#ExtendsOrImplements#()#
org.xbill.DNS.ISDNRecord#org.xbill.DNS.ISDNRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,java.lang.String,java.lang.String)#java.lang.String,getAddress()#java.lang.String,getSubAddress()#void,#ExtendsOrImplements#()#
org.xbill.DNS.DClass.DClassMnemonic#org.xbill.DNS.DClass.DClassMnemonic,CONSTRUCTOR()#void,check(int)#void,#ExtendsOrImplements#()#
org.xbill.DNS.DNSSEC.Algorithm#java.lang.String,string(int)#int,value(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.security.DHPubKey#org.xbill.DNS.security.DHPubKey,CONSTRUCTOR(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)#java.math.BigInteger,getY()#javax.crypto.spec.DHParameterSpec,getParams()#java.lang.String,getAlgorithm()#java.lang.String,getFormat()#byte[],getEncoded()#java.lang.String,toString()#void,#ExtendsOrImplements#()#
org.xbill.DNS.Compression#org.xbill.DNS.Compression,CONSTRUCTOR()#void,add(int,org.xbill.DNS.Name)#int,get(org.xbill.DNS.Name)#void,#ExtendsOrImplements#()#
org.xbill.DNS.IPSECKEYRecord.Algorithm#void,#ExtendsOrImplements#()#
org.xbill.DNS.TCPClient#org.xbill.DNS.TCPClient,CONSTRUCTOR(long)#void,#ExtendsOrImplements#()#
org.xbill.DNS.Cache.CacheMap#boolean,removeEldestEntry(java.util.Map.Entry)#void,#ExtendsOrImplements#()#
org.xbill.DNS.DNSKEYRecord#org.xbill.DNS.DNSKEYRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,int,int,int,byte[])#void,#ExtendsOrImplements#()#
org.xbill.DNS.NSAPRecord#org.xbill.DNS.NSAPRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,java.lang.String)#java.lang.String,getAddress()#void,#ExtendsOrImplements#()#
org.xbill.DNS.Update#org.xbill.DNS.Update,CONSTRUCTOR(org.xbill.DNS.Name,int)#org.xbill.DNS.Update,CONSTRUCTOR(org.xbill.DNS.Name)#void,present(org.xbill.DNS.Name)#void,present(org.xbill.DNS.Name,int)#void,present(org.xbill.DNS.Name,int,java.lang.String)#void,present(org.xbill.DNS.Name,int,org.xbill.DNS.Tokenizer)#void,present(org.xbill.DNS.Record)#void,absent(org.xbill.DNS.Name)#void,absent(org.xbill.DNS.Name,int)#void,add(org.xbill.DNS.Name,int,long,java.lang.String)#void,add(org.xbill.DNS.Name,int,long,org.xbill.DNS.Tokenizer)#void,add(org.xbill.DNS.Record)#void,add(org.xbill.DNS.Record[])#void,add(org.xbill.DNS.RRset)#void,delete(org.xbill.DNS.Name)#void,delete(org.xbill.DNS.Name,int)#void,delete(org.xbill.DNS.Name,int,java.lang.String)#void,delete(org.xbill.DNS.Name,int,org.xbill.DNS.Tokenizer)#void,delete(org.xbill.DNS.Record)#void,delete(org.xbill.DNS.Record[])#void,delete(org.xbill.DNS.RRset)#void,replace(org.xbill.DNS.Name,int,long,java.lang.String)#void,replace(org.xbill.DNS.Name,int,long,org.xbill.DNS.Tokenizer)#void,replace(org.xbill.DNS.Record)#void,replace(org.xbill.DNS.Record[])#void,replace(org.xbill.DNS.RRset)#void,#ExtendsOrImplements#()#
org.xbill.DNS.APLRecord.Element#org.xbill.DNS.APLRecord.Element,CONSTRUCTOR(boolean,java.net.InetAddress,int)#java.lang.String,toString()#boolean,equals(java.lang.Object)#void,#ExtendsOrImplements#()#
org.xbill.DNS.X25Record#org.xbill.DNS.X25Record,CONSTRUCTOR(org.xbill.DNS.Name,int,long,java.lang.String)#java.lang.String,getAddress()#void,#ExtendsOrImplements#()#
org.xbill.DNS.security.SIG0Signer#org.xbill.DNS.security.SIG0Signer,CONSTRUCTOR(int,java.security.PrivateKey,org.xbill.DNS.Name,int)#org.xbill.DNS.security.SIG0Signer,CONSTRUCTOR(int,java.security.PrivateKey,org.xbill.DNS.Name,java.security.PublicKey)#void,apply(org.xbill.DNS.Message,byte[])#void,#ExtendsOrImplements#()#
org.xbill.DNS.Client#org.xbill.DNS.Client,CONSTRUCTOR(java.nio.channels.SelectableChannel,long)#void,blockUntil(java.nio.channels.SelectionKey,long)#void,verboseLog(java.lang.String,byte[])#void,#ExtendsOrImplements#()#
org.xbill.DNS.spi.DNSJavaNameService#org.xbill.DNS.spi.DNSJavaNameService,CONSTRUCTOR()#byte[][],lookupAllHostAddr(java.lang.String)#java.lang.String,getHostByAddr(byte[])#void,#ExtendsOrImplements#()#
org.xbill.DNS.ZoneTransferIn#org.xbill.DNS.ZoneTransferIn,newAXFR(org.xbill.DNS.Name,java.net.SocketAddress,org.xbill.DNS.TSIG)#org.xbill.DNS.ZoneTransferIn,newAXFR(org.xbill.DNS.Name,java.lang.String,int,org.xbill.DNS.TSIG)#org.xbill.DNS.ZoneTransferIn,newAXFR(org.xbill.DNS.Name,java.lang.String,org.xbill.DNS.TSIG)#org.xbill.DNS.ZoneTransferIn,newIXFR(org.xbill.DNS.Name,long,boolean,java.net.SocketAddress,org.xbill.DNS.TSIG)#org.xbill.DNS.ZoneTransferIn,newIXFR(org.xbill.DNS.Name,long,boolean,java.lang.String,int,org.xbill.DNS.TSIG)#org.xbill.DNS.ZoneTransferIn,newIXFR(org.xbill.DNS.Name,long,boolean,java.lang.String,org.xbill.DNS.TSIG)#org.xbill.DNS.Name,getName()#int,getType()#void,setTimeout(int)#void,setDClass(int)#void,setLocalAddress(java.net.SocketAddress)#java.util.List,run()#boolean,isAXFR()#java.util.List,getAXFR()#boolean,isIXFR()#java.util.List,getIXFR()#boolean,isCurrent()#void,#ExtendsOrImplements#()#
org.xbill.DNS.ExtendedResolver#org.xbill.DNS.ExtendedResolver,CONSTRUCTOR()#org.xbill.DNS.ExtendedResolver,CONSTRUCTOR(java.lang.String[])#org.xbill.DNS.ExtendedResolver,CONSTRUCTOR(org.xbill.DNS.Resolver[])#void,setPort(int)#void,setTCP(boolean)#void,setIgnoreTruncation(boolean)#void,setEDNS(int)#void,setEDNS(int,int,int,java.util.List)#void,setTSIGKey(org.xbill.DNS.TSIG)#void,setTimeout(int,int)#void,setTimeout(int)#org.xbill.DNS.Message,send(org.xbill.DNS.Message)#java.lang.Object,sendAsync(org.xbill.DNS.Message,org.xbill.DNS.ResolverListener)#org.xbill.DNS.Resolver,getResolver(int)#org.xbill.DNS.Resolver[],getResolvers()#void,addResolver(org.xbill.DNS.Resolver)#void,deleteResolver(org.xbill.DNS.Resolver)#void,setLoadBalance(boolean)#void,setRetries(int)#void,#ExtendsOrImplements#()#
org.xbill.DNS.Type.TypeMnemonic#org.xbill.DNS.Type.TypeMnemonic,CONSTRUCTOR()#void,add(int,java.lang.String,org.xbill.DNS.Record)#void,check(int)#org.xbill.DNS.Record,getProto(int)#void,#ExtendsOrImplements#()#
org.xbill.DNS.tests.primary#void,main(java.lang.String[])#void,#ExtendsOrImplements#()#
org.xbill.DNS.Type#java.lang.String,string(int)#int,value(java.lang.String,boolean)#int,value(java.lang.String)#boolean,isRR(int)#void,#ExtendsOrImplements#()#
org.xbill.DNS.APLRecord#org.xbill.DNS.APLRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,java.util.List)#java.util.List,getElements()#void,#ExtendsOrImplements#()#
org.xbill.DNS.Generator#boolean,supportedType(int)#org.xbill.DNS.Generator,CONSTRUCTOR(long,long,long,java.lang.String,int,int,long,java.lang.String,org.xbill.DNS.Name)#org.xbill.DNS.Record,nextRecord()#org.xbill.DNS.Record[],expand()#java.lang.String,toString()#void,#ExtendsOrImplements#()#
org.xbill.DNS.CERTRecord#org.xbill.DNS.CERTRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,int,int,int,byte[])#int,getCertType()#int,getKeyTag()#int,getAlgorithm()#byte[],getCert()#void,#ExtendsOrImplements#()#
org.xbill.DNS.SSHFPRecord#org.xbill.DNS.SSHFPRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,int,int,byte[])#int,getAlgorithm()#int,getDigestType()#byte[],getFingerPrint()#void,#ExtendsOrImplements#()#
org.xbill.DNS.Resolver#void,#ExtendsOrImplements#()#
org.xbill.DNS.DClass#java.lang.String,string(int)#int,value(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.SingleCompressedNameBase#org.xbill.DNS.SingleCompressedNameBase,CONSTRUCTOR()#org.xbill.DNS.SingleCompressedNameBase,CONSTRUCTOR(org.xbill.DNS.Name,int,int,long,org.xbill.DNS.Name,java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.AAAARecord#org.xbill.DNS.AAAARecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,java.net.InetAddress)#java.net.InetAddress,getAddress()#void,#ExtendsOrImplements#()#
org.xbill.DNS.SIGBase#org.xbill.DNS.SIGBase,CONSTRUCTOR()#org.xbill.DNS.SIGBase,CONSTRUCTOR(org.xbill.DNS.Name,int,int,long,int,int,long,java.util.Date,java.util.Date,int,org.xbill.DNS.Name,byte[])#int,getTypeCovered()#int,getAlgorithm()#int,getLabels()#long,getOrigTTL()#java.util.Date,getExpire()#java.util.Date,getTimeSigned()#int,getFootprint()#org.xbill.DNS.Name,getSigner()#byte[],getSignature()#void,#ExtendsOrImplements#()#
org.xbill.DNS.KEYRecord.Flags#int,value(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.Tokenizer.Token#java.lang.String,toString()#boolean,isString()#boolean,isEOL()#void,#ExtendsOrImplements#()#
org.xbill.DNS.DNSKEYRecord.Flags#void,#ExtendsOrImplements#()#
org.xbill.DNS.GPOSRecord#org.xbill.DNS.GPOSRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,double,double,double)#org.xbill.DNS.GPOSRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,java.lang.String,java.lang.String,java.lang.String)#java.lang.String,getLongitudeString()#double,getLongitude()#java.lang.String,getLatitudeString()#double,getLatitude()#java.lang.String,getAltitudeString()#double,getAltitude()#void,#ExtendsOrImplements#()#
org.xbill.DNS.KEYRecord.Protocol#java.lang.String,string(int)#int,value(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.CNAMERecord#org.xbill.DNS.CNAMERecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name)#org.xbill.DNS.Name,getTarget()#org.xbill.DNS.Name,getAlias()#void,#ExtendsOrImplements#()#
org.xbill.DNS.InvalidTTLException#org.xbill.DNS.InvalidTTLException,CONSTRUCTOR(long)#void,#ExtendsOrImplements#()#
org.xbill.DNS.NSAP_PTRRecord#org.xbill.DNS.NSAP_PTRRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name)#org.xbill.DNS.Name,getTarget()#void,#ExtendsOrImplements#()#
org.xbill.DNS.MDRecord#org.xbill.DNS.MDRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name)#org.xbill.DNS.Name,getMailAgent()#org.xbill.DNS.Name,getAdditionalName()#void,#ExtendsOrImplements#()#
org.xbill.DNS.WKSRecord#org.xbill.DNS.WKSRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,java.net.InetAddress,int,int[])#java.net.InetAddress,getAddress()#int,getProtocol()#int[],getServices()#void,#ExtendsOrImplements#()#
org.xbill.DNS.IPSECKEYRecord#org.xbill.DNS.IPSECKEYRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,int,int,int,java.lang.Object,byte[])#int,getPrecedence()#int,getGatewayType()#int,getAlgorithmType()#java.lang.Object,getGateway()#byte[],getKey()#void,#ExtendsOrImplements#()#
org.xbill.DNS.AFSDBRecord#org.xbill.DNS.AFSDBRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,int,org.xbill.DNS.Name)#int,getSubtype()#org.xbill.DNS.Name,getHost()#void,#ExtendsOrImplements#()#
org.xbill.DNS.NULLRecord#org.xbill.DNS.NULLRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,byte[])#byte[],getData()#void,#ExtendsOrImplements#()#
org.xbill.DNS.Cache.CacheRRset#org.xbill.DNS.Cache.CacheRRset,CONSTRUCTOR(org.xbill.DNS.Record,int,long)#org.xbill.DNS.Cache.CacheRRset,CONSTRUCTOR(org.xbill.DNS.RRset,int,long)#boolean,expired()#int,compareCredibility(int)#java.lang.String,toString()#void,#ExtendsOrImplements#()#
org.xbill.DNS.MBRecord#org.xbill.DNS.MBRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name)#org.xbill.DNS.Name,getMailbox()#org.xbill.DNS.Name,getAdditionalName()#void,#ExtendsOrImplements#()#
org.xbill.DNS.U16NameBase#org.xbill.DNS.U16NameBase,CONSTRUCTOR()#org.xbill.DNS.U16NameBase,CONSTRUCTOR(org.xbill.DNS.Name,int,int,long)#org.xbill.DNS.U16NameBase,CONSTRUCTOR(org.xbill.DNS.Name,int,int,long,int,java.lang.String,org.xbill.DNS.Name,java.lang.String)#int,getU16Field()#org.xbill.DNS.Name,getNameField()#void,#ExtendsOrImplements#()#
org.xbill.DNS.Verifier#void,#ExtendsOrImplements#()#
org.xbill.DNS.Mnemonic#org.xbill.DNS.Mnemonic,CONSTRUCTOR(java.lang.String,int)#void,setMaximum(int)#void,setPrefix(java.lang.String)#void,setNumericAllowed(boolean)#java.lang.Integer,toInteger(int)#void,check(int)#void,add(int,java.lang.String)#void,addAlias(int,java.lang.String)#void,addAll(org.xbill.DNS.Mnemonic)#java.lang.String,getText(int)#int,getValue(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.OPTRecord#org.xbill.DNS.OPTRecord,CONSTRUCTOR(int,int,int,int,java.util.List)#org.xbill.DNS.OPTRecord,CONSTRUCTOR(int,int,int,int)#org.xbill.DNS.OPTRecord,CONSTRUCTOR(int,int,int)#int,getPayloadSize()#int,getExtendedRcode()#int,getVersion()#int,getFlags()#java.util.List,getOptions()#java.util.List,getOptions(int)#void,#ExtendsOrImplements#()#
org.xbill.DNS.Cache.Element#boolean,expired()#int,compareCredibility(int)#int,getType()#void,#ExtendsOrImplements#()#
org.xbill.DNS.TTL#long,parse(java.lang.String,boolean)#long,parseTTL(java.lang.String)#java.lang.String,format(long)#void,#ExtendsOrImplements#()#
org.xbill.DNS.OPTRecord.Option#org.xbill.DNS.OPTRecord.Option,CONSTRUCTOR(int,byte[])#java.lang.String,toString()#void,#ExtendsOrImplements#()#
org.xbill.DNS.TXTRecord#org.xbill.DNS.TXTRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,java.util.List)#org.xbill.DNS.TXTRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.TXTBase#org.xbill.DNS.TXTBase,CONSTRUCTOR()#org.xbill.DNS.TXTBase,CONSTRUCTOR(org.xbill.DNS.Name,int,int,long)#org.xbill.DNS.TXTBase,CONSTRUCTOR(org.xbill.DNS.Name,int,int,long,java.util.List)#org.xbill.DNS.TXTBase,CONSTRUCTOR(org.xbill.DNS.Name,int,int,long,java.lang.String)#java.util.List,getStrings()#java.util.List,getStringsAsByteArrays()#void,#ExtendsOrImplements#()#
org.xbill.DNS.UDPClient#org.xbill.DNS.UDPClient,CONSTRUCTOR(long)#void,#ExtendsOrImplements#()#
org.xbill.DNS.spi.DNSJavaNameServiceDescriptor#sun.net.spi.nameservice.NameService,createNameService()#java.lang.String,getType()#java.lang.String,getProviderName()#void,#ExtendsOrImplements#()#
org.xbill.DNS.Credibility#void,#ExtendsOrImplements#()#
org.xbill.DNS.security.CERTConverter#java.security.cert.Certificate,parseRecord(org.xbill.DNS.CERTRecord)#org.xbill.DNS.CERTRecord,buildRecord(org.xbill.DNS.Name,int,long,java.security.cert.Certificate,int,int)#org.xbill.DNS.CERTRecord,buildRecord(org.xbill.DNS.Name,int,long,java.security.cert.Certificate)#void,#ExtendsOrImplements#()#
org.xbill.DNS.ARecord#org.xbill.DNS.ARecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,java.net.InetAddress)#java.net.InetAddress,getAddress()#void,#ExtendsOrImplements#()#
org.xbill.DNS.MRRecord#org.xbill.DNS.MRRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name)#org.xbill.DNS.Name,getNewName()#void,#ExtendsOrImplements#()#
org.xbill.DNS.DNSSEC#byte[],digestRRset(org.xbill.DNS.RRSIGRecord,org.xbill.DNS.RRset)#byte[],digestMessage(org.xbill.DNS.SIGRecord,org.xbill.DNS.Message,byte[])#void,#ExtendsOrImplements#()#
org.xbill.DNS.WKSRecord.Protocol#java.lang.String,string(int)#int,value(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.SSHFPRecord.Digest#void,#ExtendsOrImplements#()#
org.xbill.DNS.Master#org.xbill.DNS.Master,CONSTRUCTOR(java.lang.String,org.xbill.DNS.Name,long)#org.xbill.DNS.Master,CONSTRUCTOR(java.lang.String,org.xbill.DNS.Name)#org.xbill.DNS.Master,CONSTRUCTOR(java.lang.String)#org.xbill.DNS.Master,CONSTRUCTOR(java.io.InputStream,org.xbill.DNS.Name,long)#org.xbill.DNS.Master,CONSTRUCTOR(java.io.InputStream,org.xbill.DNS.Name)#org.xbill.DNS.Master,CONSTRUCTOR(java.io.InputStream)#org.xbill.DNS.Record,_nextRecord()#org.xbill.DNS.Record,nextRecord()#void,expandGenerate(boolean)#java.util.Iterator,generators()#void,finalize()#void,#ExtendsOrImplements#()#
org.xbill.DNS.Record#org.xbill.DNS.Record,CONSTRUCTOR()#org.xbill.DNS.Record,newRecord(org.xbill.DNS.Name,int,int,long,int,byte[])#org.xbill.DNS.Record,newRecord(org.xbill.DNS.Name,int,int,long,byte[])#org.xbill.DNS.Record,newRecord(org.xbill.DNS.Name,int,int,long)#org.xbill.DNS.Record,newRecord(org.xbill.DNS.Name,int,int)#org.xbill.DNS.Record,fromWire(byte[],int)#byte[],toWire(int)#byte[],toWireCanonical()#byte[],rdataToWireCanonical()#java.lang.String,rdataToString()#java.lang.String,toString()#byte[],byteArrayFromString(java.lang.String)#java.lang.String,byteArrayToString(byte[],boolean)#java.lang.String,unknownToString(byte[])#org.xbill.DNS.Record,fromString(org.xbill.DNS.Name,int,int,long,org.xbill.DNS.Tokenizer,org.xbill.DNS.Name)#org.xbill.DNS.Record,fromString(org.xbill.DNS.Name,int,int,long,java.lang.String,org.xbill.DNS.Name)#org.xbill.DNS.Name,getName()#int,getType()#int,getRRsetType()#int,getDClass()#long,getTTL()#boolean,sameRRset(org.xbill.DNS.Record)#boolean,equals(java.lang.Object)#int,hashCode()#org.xbill.DNS.Record,withName(org.xbill.DNS.Name)#int,compareTo(java.lang.Object)#org.xbill.DNS.Name,getAdditionalName()#void,#ExtendsOrImplements#()#
org.xbill.DNS.MFRecord#org.xbill.DNS.MFRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name)#org.xbill.DNS.Name,getMailAgent()#org.xbill.DNS.Name,getAdditionalName()#void,#ExtendsOrImplements#()#
org.xbill.DNS.tests.xfrin#void,main(java.lang.String[])#void,#ExtendsOrImplements#()#
org.xbill.DNS.SPFRecord#org.xbill.DNS.SPFRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,java.util.List)#org.xbill.DNS.SPFRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.ResolverListener#void,#ExtendsOrImplements#()#
org.xbill.DNS.TSIG.StreamVerifier#org.xbill.DNS.TSIG.StreamVerifier,CONSTRUCTOR(org.xbill.DNS.TSIG,org.xbill.DNS.TSIGRecord)#int,verify(org.xbill.DNS.Message,byte[])#void,#ExtendsOrImplements#()#
org.xbill.DNS.utils.HMAC#org.xbill.DNS.utils.HMAC,CONSTRUCTOR(java.security.MessageDigest,byte[])#org.xbill.DNS.utils.HMAC,CONSTRUCTOR(java.lang.String,byte[])#void,update(byte[],int,int)#void,update(byte[])#byte[],sign()#boolean,verify(byte[])#void,clear()#void,#ExtendsOrImplements#()#
org.xbill.DNS.Name#org.xbill.DNS.Name,CONSTRUCTOR(java.lang.String,org.xbill.DNS.Name)#org.xbill.DNS.Name,CONSTRUCTOR(java.lang.String)#org.xbill.DNS.Name,fromString(java.lang.String,org.xbill.DNS.Name)#org.xbill.DNS.Name,fromString(java.lang.String)#org.xbill.DNS.Name,fromConstantString(java.lang.String)#org.xbill.DNS.Name,CONSTRUCTOR(org.xbill.DNS.DNSInput)#org.xbill.DNS.Name,CONSTRUCTOR(byte[])#org.xbill.DNS.Name,CONSTRUCTOR(org.xbill.DNS.Name,int)#org.xbill.DNS.Name,concatenate(org.xbill.DNS.Name,org.xbill.DNS.Name)#org.xbill.DNS.Name,relativize(org.xbill.DNS.Name)#org.xbill.DNS.Name,wild(int)#org.xbill.DNS.Name,fromDNAME(org.xbill.DNS.DNAMERecord)#boolean,isWild()#boolean,isAbsolute()#short,length()#int,labels()#boolean,subdomain(org.xbill.DNS.Name)#java.lang.String,toString()#byte[],getLabel(int)#java.lang.String,getLabelString(int)#void,toWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression)#byte[],toWire()#void,toWireCanonical(org.xbill.DNS.DNSOutput)#byte[],toWireCanonical()#void,toWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean)#boolean,equals(java.lang.Object)#int,hashCode()#int,compareTo(java.lang.Object)#void,#ExtendsOrImplements#()#
org.xbill.DNS.Serial#int,compare(long,long)#long,increment(long)#void,#ExtendsOrImplements#()#
org.xbill.DNS.utils.hexdump#java.lang.String,dump(java.lang.String,byte[],int,int)#java.lang.String,dump(java.lang.String,byte[])#void,#ExtendsOrImplements#()#
org.xbill.DNS.KEYBase#org.xbill.DNS.KEYBase,CONSTRUCTOR()#org.xbill.DNS.KEYBase,CONSTRUCTOR(org.xbill.DNS.Name,int,int,long,int,int,int,byte[])#int,getFlags()#int,getProtocol()#int,getAlgorithm()#byte[],getKey()#int,getFootprint()#void,#ExtendsOrImplements#()#
org.xbill.DNS.Cache#org.xbill.DNS.Cache,CONSTRUCTOR(int)#org.xbill.DNS.Cache,CONSTRUCTOR()#org.xbill.DNS.Cache,CONSTRUCTOR(java.lang.String)#void,clearCache()#void,addRecord(org.xbill.DNS.Record,int,java.lang.Object)#void,addRRset(org.xbill.DNS.RRset,int)#void,addNegative(org.xbill.DNS.Name,int,org.xbill.DNS.SOARecord,int)#org.xbill.DNS.SetResponse,lookup(org.xbill.DNS.Name,int,int)#org.xbill.DNS.SetResponse,lookupRecords(org.xbill.DNS.Name,int,int)#org.xbill.DNS.RRset[],findRecords(org.xbill.DNS.Name,int)#org.xbill.DNS.RRset[],findAnyRecords(org.xbill.DNS.Name,int)#org.xbill.DNS.SetResponse,addMessage(org.xbill.DNS.Message)#void,flushSet(org.xbill.DNS.Name,int)#void,flushName(org.xbill.DNS.Name)#void,setMaxNCache(int)#int,getMaxNCache()#void,setMaxCache(int)#int,getMaxCache()#int,getSize()#int,getMaxEntries()#void,setMaxEntries(int)#int,getDClass()#java.lang.String,toString()#void,#ExtendsOrImplements#()#
org.xbill.DNS.DNSInput#org.xbill.DNS.DNSInput,CONSTRUCTOR(byte[])#int,current()#int,remaining()#void,setActive(int)#void,clearActive()#void,jump(int)#void,save()#void,restore()#int,readU8()#int,readU16()#long,readU32()#void,readByteArray(byte[],int,int)#byte[],readByteArray(int)#byte[],readByteArray()#byte[],readCountedString()#void,#ExtendsOrImplements#()#
org.xbill.DNS.UNKRecord#byte[],getData()#void,#ExtendsOrImplements#()#
org.xbill.DNS.Zone#org.xbill.DNS.Zone,CONSTRUCTOR(org.xbill.DNS.Name,java.lang.String)#org.xbill.DNS.Zone,CONSTRUCTOR(org.xbill.DNS.Name,org.xbill.DNS.Record[])#org.xbill.DNS.Zone,CONSTRUCTOR(org.xbill.DNS.ZoneTransferIn)#org.xbill.DNS.Zone,CONSTRUCTOR(org.xbill.DNS.Name,int,java.lang.String)#org.xbill.DNS.Name,getOrigin()#org.xbill.DNS.RRset,getNS()#org.xbill.DNS.SOARecord,getSOA()#int,getDClass()#org.xbill.DNS.SetResponse,findRecords(org.xbill.DNS.Name,int)#org.xbill.DNS.RRset,findExactMatch(org.xbill.DNS.Name,int)#void,addRRset(org.xbill.DNS.RRset)#void,addRecord(org.xbill.DNS.Record)#void,removeRecord(org.xbill.DNS.Record)#java.util.Iterator,iterator()#java.util.Iterator,AXFR()#java.lang.String,toMasterFile()#java.lang.String,toString()#void,#ExtendsOrImplements#()#
org.xbill.DNS.DNAMERecord#org.xbill.DNS.DNAMERecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name)#org.xbill.DNS.Name,getTarget()#org.xbill.DNS.Name,getAlias()#void,#ExtendsOrImplements#()#
org.xbill.DNS.MGRecord#org.xbill.DNS.MGRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name)#org.xbill.DNS.Name,getMailbox()#void,#ExtendsOrImplements#()#
org.xbill.DNS.utils.base16#java.lang.String,toString(byte[])#byte[],fromString(java.lang.String)#void,#ExtendsOrImplements#()#
org.xbill.DNS.RTRecord#org.xbill.DNS.RTRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,int,org.xbill.DNS.Name)#int,getPreference()#org.xbill.DNS.Name,getIntermediateHost()#void,#ExtendsOrImplements#()#
org.xbill.DNS.NSECRecord#org.xbill.DNS.NSECRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name,int[])#org.xbill.DNS.Name,getNext()#int[],getTypes()#boolean,hasType(int)#void,#ExtendsOrImplements#()#
org.xbill.DNS.SetResponse#boolean,isUnknown()#boolean,isNXDOMAIN()#boolean,isNXRRSET()#boolean,isDelegation()#boolean,isCNAME()#boolean,isDNAME()#boolean,isSuccessful()#org.xbill.DNS.RRset[],answers()#org.xbill.DNS.CNAMERecord,getCNAME()#org.xbill.DNS.DNAMERecord,getDNAME()#org.xbill.DNS.RRset,getNS()#java.lang.String,toString()#void,#ExtendsOrImplements#()#
org.xbill.DNS.DSRecord#org.xbill.DNS.DSRecord,CONSTRUCTOR(org.xbill.DNS.Name,int,long,int,int,int,byte[])#int,getAlgorithm()#int,getDigestID()#byte[],getDigest()#int,getFootprint()#void,#ExtendsOrImplements#()#
org.xbill.DNS.Address#int[],toArray(java.lang.String,int)#int[],toArray(java.lang.String)#byte[],toByteArray(java.lang.String,int)#boolean,isDottedQuad(java.lang.String)#java.lang.String,toDottedQuad(byte[])#java.lang.String,toDottedQuad(int[])#java.net.InetAddress,getByName(java.lang.String)#java.net.InetAddress[],getAllByName(java.lang.String)#java.net.InetAddress,getByAddress(java.lang.String)#java.net.InetAddress,getByAddress(java.lang.String,int)#java.lang.String,getHostName(java.net.InetAddress)#int,familyOf(java.net.InetAddress)#int,addressLength(int)#void,#ExtendsOrImplements#()#
org.xbill.DNS.WireParseException#org.xbill.DNS.WireParseException,CONSTRUCTOR()#org.xbill.DNS.WireParseException,CONSTRUCTOR(java.lang.String)#void,#ExtendsOrImplements#()#
