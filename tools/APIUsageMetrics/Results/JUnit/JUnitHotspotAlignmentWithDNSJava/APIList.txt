java.util.Arrays#sort(int[])#binarySearch(int[],int)#equals(byte[],byte[])#fill(byte[],byte)#equals(org.xbill.DNS.RRset[],org.xbill.DNS.RRset[])#equals(org.xbill.DNS.Record[],org.xbill.DNS.Record[])#
java.security.interfaces.DSAKey#getParams()#
java.util.LinkedList#CONSTRUCTOR()#CONSTRUCTOR(java.util.List)#
java.net.Socket#getInputStream()#getOutputStream()#getLocalAddress()#getLocalPort()#close()#
java.net.InetAddress#getByName(java.lang.String)#getLocalHost()#getHostAddress()#getAddress()#getByAddress(byte[])#getCanonicalHostName()#getHostName()#
java.io.PrintStream#print(java.lang.String)#println()#print(org.xbill.DNS.Name)#println(org.xbill.DNS.Record)#println(java.lang.String)#println(java.io.IOException)#println(org.xbill.DNS.ZoneTransferException)#println(org.xbill.DNS.Message)#close()#println(java.lang.Object)#println(org.xbill.DNS.Zone)#
java.util.GregorianCalendar#CONSTRUCTOR(java.util.TimeZone)#set(int,int,int,int,int,int)#getTime()#set(int,int)#setTimeInMillis(long)#
java.nio.channels.SelectableChannel#configureBlocking(boolean)#register(java.nio.channels.Selector,int)#close()#
java.util.Random#CONSTRUCTOR()#nextInt(int)#
java.io.FileWriter#CONSTRUCTOR(java.io.File)#write(java.lang.String)#close()#
java.nio.channels.SocketChannel#open()#
java.nio.channels.Selector#open()#close()#select(long)#selectNow()#
java.io.InputStreamReader#CONSTRUCTOR(java.io.FileInputStream)#CONSTRUCTOR(java.io.InputStream)#
java.util.ArrayList#CONSTRUCTOR()#CONSTRUCTOR(int)#clone()#add(org.xbill.DNS.APLRecord.Element)#add(java.lang.Object)#
java.util.TimeZone#getTimeZone(java.lang.String)#
java.io.IOException#getMessage()#
java.security.MessageDigest#reset()#getInstance(java.lang.String)#update(byte[],int,int)#update(byte[])#digest()#digest(byte[])#
java.security.NoSuchAlgorithmException#CONSTRUCTOR(java.lang.String)#
java.util.Map.Entry#getKey()#getValue()#
java.util.HashMap#CONSTRUCTOR()#put(java.lang.Integer,org.xbill.DNS.Record)#get(java.lang.Integer)#put(java.lang.String,java.lang.Integer)#put(java.lang.Integer,java.lang.String)#putAll(java.util.HashMap)#get(java.lang.String)#
java.io.BufferedReader#CONSTRUCTOR(java.io.InputStreamReader)#readLine()#close()#
java.io.ByteArrayInputStream#CONSTRUCTOR(byte[])#
java.util.Set#contains(org.xbill.DNS.Name)#add(org.xbill.DNS.Name)#
java.io.ByteArrayOutputStream#CONSTRUCTOR()#write(byte)#toByteArray()#write(char)#reset()#
java.io.DataInputStream#CONSTRUCTOR(java.io.InputStream)#readUnsignedShort()#readFully(byte[])#
java.security.cert.Certificate#getEncoded()#
java.util.Iterator#hasNext()#next()#
java.net.DatagramPacket#CONSTRUCTOR(byte[],int)#setLength(int)#getLength()#CONSTRUCTOR(byte[],int,java.net.InetAddress,int)#getAddress()#getPort()#setData(byte[])#setAddress(java.net.InetAddress)#setPort(int)#
java.net.DatagramSocket#CONSTRUCTOR(int,java.net.InetAddress)#receive(java.net.DatagramPacket)#send(java.net.DatagramPacket)#
java.util.StringTokenizer#CONSTRUCTOR(java.lang.String)#hasMoreTokens()#nextToken()#CONSTRUCTOR(java.lang.String,java.lang.String)#countTokens()#
java.net.SocketTimeoutException#CONSTRUCTOR()#
java.util.NoSuchElementException#CONSTRUCTOR()#
java.io.File#CONSTRUCTOR(java.lang.String)#getParent()#CONSTRUCTOR(java.lang.String,java.lang.String)#createTempFile(java.lang.String,java.lang.String)#delete()#
byte[]#clone()#
java.io.FileInputStream#CONSTRUCTOR(java.lang.String)#close()#
java.util.Date#CONSTRUCTOR()#getTime()#CONSTRUCTOR(long)#
java.text.DecimalFormat#CONSTRUCTOR()#setMinimumIntegerDigits(int)#format(int)#
java.net.InetSocketAddress#CONSTRUCTOR(java.net.InetAddress,int)#getAddress()#getPort()#
java.nio.channels.SelectionKey#selector()#
java.nio.channels.DatagramChannel#open()#
java.io.DataOutputStream#CONSTRUCTOR(java.io.OutputStream)#writeShort(int)#write(byte[])#CONSTRUCTOR(java.io.ByteArrayOutputStream)#writeByte(short)#writeByte(int)#
java.util.Collections#singletonList(java.lang.String)#unmodifiableList(java.util.List)#
java.math.BigInteger#bitLength()#CONSTRUCTOR(java.lang.String,int)#
java.net.UnknownHostException#CONSTRUCTOR(java.lang.String)#CONSTRUCTOR()#getMessage()#
java.security.SignatureException#CONSTRUCTOR(java.lang.String)#
java.util.Calendar#setTime(java.util.Date)#get(int)#set(int,int,int,int,int,int)#getTime()#
java.util.List#add(java.lang.Integer)#add(java.net.InetAddress)#size()#iterator()#add(java.io.BufferedReader)#add(java.io.InputStream)#get(int)#remove(int)#isEmpty()#add(org.xbill.DNS.Record)#remove(org.xbill.DNS.Record)#contains(org.xbill.DNS.Record)#toArray(org.xbill.DNS.Record[])#add(org.xbill.DNS.RRset)#toArray(org.xbill.DNS.RRset[])#set(int,org.xbill.DNS.Record)#clear()#add(byte[])#add(java.lang.String)#toArray(org.xbill.DNS.Resolver[])#toArray(org.xbill.DNS.Name[])#add(org.xbill.DNS.DNSKEYRecord)#
java.text.NumberFormat#setMaximumFractionDigits(int)#setGroupingUsed(boolean)#setMinimumIntegerDigits(int)#format(int)#
java.security.interfaces.DSAParams#getP()#
java.security.Signature#getInstance(java.lang.String)#initSign(java.security.PrivateKey)#update(byte[])#sign()#
java.util.Map#put(java.lang.Integer,org.xbill.DNS.Cache)#put(org.xbill.DNS.Name,org.xbill.DNS.Zone)#get(java.lang.Integer)#get(org.xbill.DNS.Name)#put(java.lang.String,java.lang.String)#remove(java.lang.String)#get(java.lang.String)#put(org.xbill.DNS.Name,java.util.List)#
java.net.ServerSocket#CONSTRUCTOR(int,int,java.net.InetAddress)#accept()#
java.util.HashSet#CONSTRUCTOR()#
java.io.BufferedInputStream#CONSTRUCTOR(java.io.ByteArrayInputStream)#
java.security.cert.CertificateFactory#getInstance(java.lang.String)#generateCertificate(java.io.ByteArrayInputStream)#
javax.crypto.spec.DHParameterSpec#CONSTRUCTOR(java.math.BigInteger,java.math.BigInteger)#getP()#getG()#
