net.n3.nanoxml.XMLUtil#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.PlacardScrollPaneLayout#org.jhotdraw.gui.PlacardScrollPaneLayout,CONSTRUCTOR()#void,layoutContainer(java.awt.Container)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.io.SVGFigureFactory#org.jhotdraw.draw.Figure,createRect(double,double,double,double,double,double,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.Figure,createCircle(double,double,double,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.Figure,createEllipse(double,double,double,double,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.Figure,createLine(double,double,double,double,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.Figure,createPolyline(java.awt.geom.Point2D.Double[],java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.Figure,createPolygon(java.awt.geom.Point2D.Double[],java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.Figure,createPath(org.jhotdraw.geom.BezierPath[],java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.CompositeFigure,createG(java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.Figure,createText(java.awt.geom.Point2D.Double[],double[],javax.swing.text.StyledDocument,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.Figure,createTextArea(double,double,double,double,javax.swing.text.StyledDocument,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.Figure,createImage(double,double,double,double,byte[],java.awt.image.BufferedImage,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.samples.svg.Gradient,createLinearGradient(double,double,double,double,double[],java.awt.Color[],double[],boolean,java.awt.geom.AffineTransform)#org.jhotdraw.samples.svg.Gradient,createRadialGradient(double,double,double,double,double,double[],java.awt.Color[],double[],boolean,java.awt.geom.AffineTransform)#void,#ExtendsOrImplements#()#
org.apache.batik.ext.awt.RadialGradientPaintContext#org.apache.batik.ext.awt.RadialGradientPaintContext,CONSTRUCTOR(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints,float,float,float,float,float,float[],java.awt.Color[],org.apache.batik.ext.awt.MultipleGradientPaint.CycleMethodEnum,org.apache.batik.ext.awt.MultipleGradientPaint.ColorSpaceEnum)#void,fillRaster(int,int,int,int,int,int,int)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.AboutAction#org.jhotdraw.app.action.AboutAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.GraphicalCompositeFigure.PresentationFigureHandler#void,figureRequestRemove(org.jhotdraw.draw.FigureEvent)#void,figureChanged(org.jhotdraw.draw.FigureEvent)#void,figureAreaInvalidated(org.jhotdraw.draw.FigureEvent)#void,undoableEditHappened(javax.swing.event.UndoableEditEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.QuadTreeDrawing.FigureHandler#void,undoableEditHappened(javax.swing.event.UndoableEditEvent)#void,figureAreaInvalidated(org.jhotdraw.draw.FigureEvent)#void,figureChanged(org.jhotdraw.draw.FigureEvent)#void,figureRequestRemove(org.jhotdraw.draw.FigureEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.AbstractDocumentOrientedApplication#void,launch(java.lang.Class<T>,java.lang.String[])#void,initAWT(java.lang.String[])#void,initialize(java.lang.String[])#void,initDefaults()#void,initMainFrame()#void,initRecentFiles()#void,initActionMap()#void,initLookAndFeel()#void,startup()#void,shutdown()#javax.swing.ActionMap,createActionMap()#javax.swing.Action,getAction(java.lang.Object)#org.jhotdraw.application.DocumentView,createView()#java.lang.Class,getViewClass()#void,initView(org.jhotdraw.application.DocumentView)#void,destroyView(org.jhotdraw.application.DocumentView)#java.util.LinkedList<javax.swing.JToolBar>,createToolBars(org.jhotdraw.application.DocumentView)#javax.swing.JMenuBar,createMenuBar(org.jhotdraw.application.DocumentView,java.util.List<javax.swing.Action>)#java.util.LinkedList<javax.swing.JMenu>,createMenus(org.jhotdraw.application.DocumentView)#javax.swing.JMenu,createFileMenu(org.jhotdraw.application.DocumentView)#void,updateOpenRecentMenu(javax.swing.JMenu)#javax.swing.JMenu,createEditMenu(org.jhotdraw.application.DocumentView)#javax.swing.JMenu,createViewMenu(org.jhotdraw.application.DocumentView)#javax.swing.JMenu,createWindowMenu(org.jhotdraw.application.DocumentView)#javax.swing.JMenu,createHelpMenu(org.jhotdraw.application.DocumentView)#void,add(org.jhotdraw.application.DocumentView)#void,remove(org.jhotdraw.application.DocumentView)#java.util.List<org.jhotdraw.application.DocumentView>,getViews()#void,show(org.jhotdraw.application.DocumentView)#void,hide(org.jhotdraw.application.DocumentView)#org.jhotdraw.application.DocumentView,getCurrentView()#boolean,isEnabled()#void,setEnabled(boolean)#boolean,isEditorShared()#java.util.List<java.io.File>,recentFiles()#void,clearRecentFiles()#void,addRecentFile(java.io.File)#void,addPalette(java.awt.Window)#void,removePalette(java.awt.Window)#void,updateName(org.jhotdraw.application.DocumentView)#application.ResourceMap,getResourceMap()#application.ResourceMap,getFrameworkResourceMap()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.AbstractLayouter#org.jhotdraw.geom.Insets2D.Double,getInsets(org.jhotdraw.draw.Figure)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.FigureLayerComparator#int,compare(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.pert.figures.TaskFigure#org.jhotdraw.samples.pert.figures.TaskFigure,CONSTRUCTOR()#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(int)#void,setName(java.lang.String)#java.lang.String,getName()#void,setDuration(int)#int,getDuration()#void,updateStartTime()#int,getStartTime()#org.jhotdraw.samples.pert.figures.TaskFigure,clone()#void,read(org.jhotdraw.xml.DOMInput)#void,write(org.jhotdraw.xml.DOMOutput)#int,getLayer()#java.util.Set<org.jhotdraw.samples.pert.figures.DependencyFigure>,getDependencies()#void,addDependency(org.jhotdraw.samples.pert.figures.DependencyFigure)#void,removeDependency(org.jhotdraw.samples.pert.figures.DependencyFigure)#java.util.List<org.jhotdraw.samples.pert.figures.TaskFigure>,getSuccessors()#java.util.List<org.jhotdraw.samples.pert.figures.TaskFigure>,getPredecessors()#boolean,isDependentOf(org.jhotdraw.samples.pert.figures.TaskFigure)#java.lang.String,toString()#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.ExportableProject#javax.swing.JFileChooser,getExportChooser()#void,export(java.io.File,javax.swing.filechooser.FileFilter,java.awt.Component)#void,#ExtendsOrImplements#()#
org.jhotdraw.xml.css.StyleManager#org.jhotdraw.xml.css.StyleManager,CONSTRUCTOR()#void,add(org.jhotdraw.xml.css.CSSRule)#void,applyStylesTo(org.w3c.dom.Element)#void,applyStylesTo(net.n3.nanoxml.IXMLElement)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ConnectionEndHandle#org.jhotdraw.draw.ConnectionEndHandle,CONSTRUCTOR(org.jhotdraw.draw.ConnectionFigure)#void,connect(org.jhotdraw.draw.Connector)#void,disconnect()#org.jhotdraw.draw.Connector,getTarget()#void,setLocation(java.awt.geom.Point2D.Double)#java.awt.geom.Point2D.Double,getLocation()#boolean,canConnect(org.jhotdraw.draw.Connector,org.jhotdraw.draw.Connector)#int,getBezierNodeIndex()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.EditorColorIcon#org.jhotdraw.draw.action.EditorColorIcon,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey<java.awt.Color>,java.net.URL,java.awt.Shape)#org.jhotdraw.draw.action.EditorColorIcon,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey<java.awt.Color>,java.awt.Image,java.awt.Shape)#void,paintIcon(java.awt.Component,java.awt.Graphics,int,int)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.Liner#void,lineout(org.jhotdraw.draw.ConnectionFigure)#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(org.jhotdraw.geom.BezierPath)#org.jhotdraw.draw.Liner,clone()#void,#ExtendsOrImplements#()#
org.jhotdraw.xml.css.CSSParser#void,parse(java.lang.String,org.jhotdraw.xml.css.StyleManager)#void,parse(java.io.Reader,org.jhotdraw.xml.css.StyleManager)#void,#ExtendsOrImplements#()#
net.n3.nanoxml.StdXMLBuilder#net.n3.nanoxml.StdXMLBuilder,CONSTRUCTOR()#net.n3.nanoxml.StdXMLBuilder,CONSTRUCTOR(net.n3.nanoxml.IXMLElement)#void,finalize()#void,startBuilding(java.lang.String,int)#void,newProcessingInstruction(java.lang.String,java.io.Reader)#void,startElement(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)#void,elementAttributesProcessed(java.lang.String,java.lang.String,java.lang.String)#void,endElement(java.lang.String,java.lang.String,java.lang.String)#void,addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#void,addPCData(java.io.Reader,java.lang.String,int)#java.lang.Object,getResult()#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.JDoubleAttributeSlider#org.jhotdraw.gui.JDoubleAttributeSlider,CONSTRUCTOR()#org.jhotdraw.gui.JDoubleAttributeSlider,CONSTRUCTOR(int,int,int,int)#org.jhotdraw.gui.JDoubleAttributeSlider,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey<java.lang.Double>)#void,setAttributeKey(org.jhotdraw.draw.AttributeKey<java.lang.Double>)#void,setEditor(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.DrawingEditor,getEditor()#org.jhotdraw.draw.DrawingView,getView()#void,setModel(javax.swing.BoundedRangeModel)#void,updateEnabledState()#void,setScaleFactor(double)#double,getScaleFactor()#void,updateSlider()#void,dispose()#void,#ExtendsOrImplements#()#
net.n3.nanoxml.IXMLEntityResolver#void,addInternalEntity(java.lang.String,java.lang.String)#void,addExternalEntity(java.lang.String,java.lang.String,java.lang.String)#java.io.Reader,getEntity(net.n3.nanoxml.IXMLReader,java.lang.String)#boolean,isExternalEntity(java.lang.String)#void,#ExtendsOrImplements#()#
org.jhotdraw.xml.XMLTransferable#org.jhotdraw.xml.XMLTransferable,CONSTRUCTOR(byte[],java.lang.String,java.lang.String)#void,lostOwnership(java.awt.datatransfer.Clipboard,java.awt.datatransfer.Transferable)#java.lang.Object,getTransferData(java.awt.datatransfer.DataFlavor)#java.awt.datatransfer.DataFlavor[],getTransferDataFlavors()#boolean,isDataFlavorSupported(java.awt.datatransfer.DataFlavor)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.figures.SVGRectFigure#org.jhotdraw.samples.svg.figures.SVGRectFigure,CONSTRUCTOR()#org.jhotdraw.samples.svg.figures.SVGRectFigure,CONSTRUCTOR(double,double,double,double)#org.jhotdraw.samples.svg.figures.SVGRectFigure,CONSTRUCTOR(double,double,double,double,double,double)#void,drawFill(java.awt.Graphics2D)#void,drawStroke(java.awt.Graphics2D)#double,getX()#double,getY()#double,getWidth()#double,getHeight()#double,getArcWidth()#double,getArcHeight()#java.awt.geom.Rectangle2D.Double,getBounds()#java.awt.geom.Rectangle2D.Double,getDrawingArea()#boolean,contains(java.awt.geom.Point2D.Double)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,transform(java.awt.geom.AffineTransform)#void,setArc(double,double)#void,setArc(org.jhotdraw.geom.Dimension2DDouble)#org.jhotdraw.geom.Dimension2DDouble,getArc()#void,restoreTransformTo(java.lang.Object)#java.lang.Object,getTransformRestoreData()#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(int)#boolean,canConnect()#org.jhotdraw.draw.Connector,findConnector(java.awt.geom.Point2D.Double,org.jhotdraw.draw.ConnectionFigure)#org.jhotdraw.draw.Connector,findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)#org.jhotdraw.samples.svg.figures.SVGRectFigure,clone()#boolean,isEmpty()#void,invalidate()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.pert.figures.TaskFigure.NameAdapter#org.jhotdraw.samples.pert.figures.TaskFigure.NameAdapter,CONSTRUCTOR(org.jhotdraw.samples.pert.figures.TaskFigure)#void,figureAttributeChanged(org.jhotdraw.draw.FigureEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.action.SplitAction#org.jhotdraw.samples.svg.action.SplitAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#boolean,canUngroup()#java.util.Collection<org.jhotdraw.draw.Figure>,ungroupFigures(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.CompositeFigure)#void,groupFigures(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.CompositeFigure,java.util.Collection<org.jhotdraw.draw.Figure>)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.AbstractDrawing#org.jhotdraw.draw.AbstractDrawing,CONSTRUCTOR()#void,addDrawingListener(org.jhotdraw.draw.DrawingListener)#void,removeDrawingListener(org.jhotdraw.draw.DrawingListener)#void,addUndoableEditListener(javax.swing.event.UndoableEditListener)#void,removeUndoableEditListener(javax.swing.event.UndoableEditListener)#void,addAll(java.util.Collection<org.jhotdraw.draw.Figure>)#void,addAll(int,java.util.Collection<org.jhotdraw.draw.Figure>)#void,clear()#int,getFigureCount()#void,removeAll(java.util.Collection<org.jhotdraw.draw.Figure>)#void,basicAddAll(int,java.util.Collection<org.jhotdraw.draw.Figure>)#void,basicRemoveAll(java.util.Collection<org.jhotdraw.draw.Figure>)#void,add(org.jhotdraw.draw.Figure)#void,add(int,org.jhotdraw.draw.Figure)#void,basicAdd(org.jhotdraw.draw.Figure)#void,remove(org.jhotdraw.draw.Figure)#void,fireAreaInvalidated(java.awt.geom.Rectangle2D.Double)#void,fireUndoableEditHappened(javax.swing.undo.UndoableEdit)#void,fireFigureAdded(org.jhotdraw.draw.Figure,int)#void,fireFigureRemoved(org.jhotdraw.draw.Figure,int)#java.awt.font.FontRenderContext,getFontRenderContext()#void,setFontRenderContext(java.awt.font.FontRenderContext)#void,read(org.jhotdraw.xml.DOMInput)#void,write(org.jhotdraw.xml.DOMOutput)#java.lang.Object,getLock()#void,setOutputFormats(java.util.List<org.jhotdraw.draw.OutputFormat>)#void,setInputFormats(java.util.List<org.jhotdraw.draw.InputFormat>)#java.util.List<org.jhotdraw.draw.InputFormat>,getInputFormats()#java.util.List<org.jhotdraw.draw.OutputFormat>,getOutputFormats()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ConnectionStartHandle#org.jhotdraw.draw.ConnectionStartHandle,CONSTRUCTOR(org.jhotdraw.draw.ConnectionFigure)#void,connect(org.jhotdraw.draw.Connector)#void,disconnect()#org.jhotdraw.draw.Connector,getTarget()#void,setLocation(java.awt.geom.Point2D.Double)#java.awt.geom.Point2D.Double,getLocation()#boolean,canConnect(org.jhotdraw.draw.Connector,org.jhotdraw.draw.Connector)#int,getBezierNodeIndex()#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.Arrangeable#void,setArrangement(org.jhotdraw.gui.Arrangeable.Arrangement)#org.jhotdraw.gui.Arrangeable.Arrangement,getArrangement()#void,addPropertyChangeListener(java.beans.PropertyChangeListener)#void,removePropertyChangeListener(java.beans.PropertyChangeListener)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.mini.SmartConnectionFigureSample#void,main(java.lang.String[])#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.MoveAction.North#org.jhotdraw.draw.action.MoveAction.North,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#void,#ExtendsOrImplements#()#
net.n3.nanoxml.XMLEntityResolver#net.n3.nanoxml.XMLEntityResolver,CONSTRUCTOR()#void,finalize()#void,addInternalEntity(java.lang.String,java.lang.String)#void,addExternalEntity(java.lang.String,java.lang.String,java.lang.String)#java.io.Reader,getEntity(net.n3.nanoxml.IXMLReader,java.lang.String)#boolean,isExternalEntity(java.lang.String)#java.io.Reader,openExternalEntity(net.n3.nanoxml.IXMLReader,java.lang.String,java.lang.String)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.DefaultDrawing.FigureHandler#void,undoableEditHappened(javax.swing.event.UndoableEditEvent)#void,figureAreaInvalidated(org.jhotdraw.draw.FigureEvent)#void,figureChanged(org.jhotdraw.draw.FigureEvent)#void,figureRequestRemove(org.jhotdraw.draw.FigureEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ChopRoundRectangleConnector#org.jhotdraw.draw.ChopRoundRectangleConnector,CONSTRUCTOR()#org.jhotdraw.draw.ChopRoundRectangleConnector,CONSTRUCTOR(org.jhotdraw.draw.Figure)#java.awt.geom.Point2D.Double,chop(org.jhotdraw.draw.Figure,java.awt.geom.Point2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.figures.SVGTextFigure#org.jhotdraw.samples.svg.figures.SVGTextFigure,CONSTRUCTOR()#org.jhotdraw.samples.svg.figures.SVGTextFigure,CONSTRUCTOR(java.lang.String)#void,drawText(java.awt.Graphics2D)#void,drawFill(java.awt.Graphics2D)#void,drawStroke(java.awt.Graphics2D)#void,setCoordinates(java.awt.geom.Point2D.Double[])#java.awt.geom.Point2D.Double[],getCoordinates()#void,setRotates(double[])#double[],getRotates()#java.awt.geom.Rectangle2D.Double,getBounds()#java.awt.geom.Rectangle2D.Double,getDrawingArea()#boolean,contains(java.awt.geom.Point2D.Double)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,transform(java.awt.geom.AffineTransform)#void,restoreTransformTo(java.lang.Object)#java.lang.Object,getTransformRestoreData()#java.lang.String,getText()#void,setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)#void,setText(java.lang.String)#boolean,isEditable()#void,setEditable(boolean)#int,getTextColumns()#java.awt.Font,getFont()#java.awt.Color,getTextColor()#java.awt.Color,getFillColor()#void,setFontSize(float)#float,getFontSize()#void,invalidate()#org.jhotdraw.geom.Dimension2DDouble,getPreferredSize()#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(int)#boolean,canConnect()#org.jhotdraw.draw.Connector,findConnector(java.awt.geom.Point2D.Double,org.jhotdraw.draw.ConnectionFigure)#org.jhotdraw.draw.Connector,findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)#org.jhotdraw.draw.Tool,getTool(java.awt.geom.Point2D.Double)#int,getTabSize()#org.jhotdraw.draw.TextHolderFigure,getLabelFor()#org.jhotdraw.geom.Insets2D.Double,getInsets()#org.jhotdraw.samples.svg.figures.SVGTextFigure,clone()#boolean,isEmpty()#boolean,isTextOverflow()#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.UndoAction#org.jhotdraw.app.action.UndoAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,updateEnabledState()#void,updateProject(org.jhotdraw.app.Project,org.jhotdraw.app.Project)#void,installProjectListeners(org.jhotdraw.app.Project)#void,uninstallProjectListeners(org.jhotdraw.app.Project)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.action.ViewSourceAction#org.jhotdraw.samples.svg.action.ViewSourceAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.DrawingListener#void,areaInvalidated(org.jhotdraw.draw.DrawingEvent)#void,figureAdded(org.jhotdraw.draw.DrawingEvent)#void,figureRemoved(org.jhotdraw.draw.DrawingEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.AbstractMDIApplication#org.jhotdraw.application.AbstractMDIApplication,CONSTRUCTOR()#javax.swing.ActionMap,createActionMap()#org.jhotdraw.gui.MDIDesktopPane,getDesktopPane()#void,initMainFrame()#void,initAWT(java.lang.String[])#void,add(org.jhotdraw.application.DocumentView)#void,show(org.jhotdraw.application.DocumentView)#void,hide(org.jhotdraw.application.DocumentView)#org.jhotdraw.application.DocumentView,getCurrentView()#void,setCurrentView(org.jhotdraw.application.DocumentView)#boolean,isEditorShared()#java.awt.Component,getComponent()#java.awt.Component,wrapDesktopPane(java.awt.Component,java.util.LinkedList<javax.swing.Action>)#javax.swing.JMenu,createFileMenu(org.jhotdraw.application.DocumentView)#javax.swing.JMenu,createWindowMenu(org.jhotdraw.application.DocumentView)#javax.swing.JMenu,createHelpMenu(org.jhotdraw.application.DocumentView)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.MoveAction#org.jhotdraw.draw.action.MoveAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,int,int)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.mini.StraightLineFigure#org.jhotdraw.samples.mini.StraightLineFigure,CONSTRUCTOR()#void,drawFill(java.awt.Graphics2D)#void,drawStroke(java.awt.Graphics2D)#void,transform(java.awt.geom.AffineTransform)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#java.awt.geom.Rectangle2D.Double,getBounds()#java.lang.Object,getTransformRestoreData()#void,restoreTransformTo(java.lang.Object)#boolean,contains(java.awt.geom.Point2D.Double)#org.jhotdraw.samples.mini.StraightLineFigure,clone()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.AlignAction.Vertical#org.jhotdraw.draw.action.AlignAction.Vertical,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.action.AlignAction.Vertical,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.util.ResourceBundleUtil)#void,alignFigures(java.util.Collection,java.awt.geom.Rectangle2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.geom.Insets2D#org.jhotdraw.geom.Insets2D,CONSTRUCTOR()#double,getTop()#double,getLeft()#double,getBottom()#double,getRight()#void,set(double,double,double,double)#void,set(org.jhotdraw.geom.Insets2D)#void,add(double,double,double,double)#void,add(org.jhotdraw.geom.Insets2D)#void,addTo(java.awt.geom.Rectangle2D)#void,subtract(double,double,double,double)#void,subtract(org.jhotdraw.geom.Insets2D)#void,subtractTo(java.awt.geom.Rectangle2D)#boolean,equals(java.lang.Object)#int,hashCode()#java.lang.Object,clone()#void,#ExtendsOrImplements#()#
org.jhotdraw.application.AbstractOSXApplication#org.jhotdraw.application.AbstractOSXApplication,CONSTRUCTOR()#void,initialize(java.lang.String[])#void,initAWT(java.lang.String[])#void,initLookAndFeel()#javax.swing.ActionMap,createActionMap()#void,initView(org.jhotdraw.application.DocumentView)#void,addPalette(java.awt.Window)#void,removePalette(java.awt.Window)#void,show(org.jhotdraw.application.DocumentView)#void,hide(org.jhotdraw.application.DocumentView)#javax.swing.JMenuBar,createMenuBar(org.jhotdraw.application.DocumentView)#javax.swing.JMenu,createWindowMenu(org.jhotdraw.application.DocumentView)#javax.swing.JMenu,createFileMenu(org.jhotdraw.application.DocumentView)#org.jhotdraw.application.DocumentView,getCurrentView()#void,setCurrentView(org.jhotdraw.application.DocumentView)#void,initScreenMenuBar()#void,initPalettes(java.util.LinkedList<javax.swing.Action>)#boolean,isEditorShared()#java.awt.Component,getComponent()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.LabeledLineConnectionFigure#org.jhotdraw.draw.LabeledLineConnectionFigure,CONSTRUCTOR()#void,draw(java.awt.Graphics2D)#void,transform(java.awt.geom.AffineTransform)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#java.awt.geom.Rectangle2D.Double,getBounds()#java.awt.geom.Rectangle2D.Double,getDrawingArea()#boolean,contains(java.awt.geom.Point2D.Double)#void,invalidateBounds()#void,setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)#org.jhotdraw.draw.Figure,findFigureInside(java.awt.geom.Point2D.Double)#void,updateConnection()#java.util.List<org.jhotdraw.draw.Figure>,getChildren()#int,getChildCount()#org.jhotdraw.draw.Figure,getChild(int)#void,set(int,org.jhotdraw.draw.Figure)#java.util.List<org.jhotdraw.draw.Figure>,getChildrenFrontToBack()#void,add(org.jhotdraw.draw.Figure)#void,add(int,org.jhotdraw.draw.Figure)#void,basicAdd(org.jhotdraw.draw.Figure)#void,basicAdd(int,org.jhotdraw.draw.Figure)#boolean,remove(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Figure,removeChild(int)#boolean,basicRemove(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Figure,basicRemoveChild(int)#void,removeAllChildren()#void,basicRemoveAllChildren()#org.jhotdraw.draw.Layouter,getLayouter()#void,setLayouter(org.jhotdraw.draw.Layouter)#void,layout()#void,invalidate()#void,validate()#void,addNotify(org.jhotdraw.draw.Drawing)#void,removeNotify(org.jhotdraw.draw.Drawing)#org.jhotdraw.draw.LabeledLineConnectionFigure,clone()#void,remap(java.util.HashMap<org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure>)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle#org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle,CONSTRUCTOR(org.jhotdraw.samples.svg.figures.SVGPathFigure)#org.jhotdraw.samples.svg.figures.SVGPathFigure,getOwner()#java.awt.Rectangle,basicGetBounds()#boolean,contains(java.awt.Point)#void,trackStart(java.awt.Point,int)#void,trackStep(java.awt.Point,java.awt.Point,int)#void,trackEnd(java.awt.Point,java.awt.Point,int)#void,draw(java.awt.Graphics2D)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.SVGAttributeKeys#java.awt.Paint,getFillPaint(org.jhotdraw.draw.Figure)#java.awt.Paint,getStrokePaint(org.jhotdraw.draw.Figure)#void,setDefaults(org.jhotdraw.draw.Figure)#double,getPerpendicularHitGrowth(org.jhotdraw.draw.Figure)#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.JDoubleAttributeField#org.jhotdraw.gui.JDoubleAttributeField,CONSTRUCTOR()#org.jhotdraw.gui.JDoubleAttributeField,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey<java.lang.Double>)#void,setAttributeKey(org.jhotdraw.draw.AttributeKey<java.lang.Double>)#void,setEditor(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.DrawingEditor,getEditor()#void,setView(org.jhotdraw.draw.DrawingView)#org.jhotdraw.draw.DrawingView,getView()#void,setScaleFactor(double)#double,getScaleFactor()#void,setMinimum(double)#double,getMinimum()#void,setMaximum(double)#double,getMaximum()#void,updateField(java.util.Set<org.jhotdraw.draw.Figure>)#void,dispose()#void,paintComponent(java.awt.Graphics)#org.jhotdraw.gui.JDoubleAttributeField,clone()#javax.swing.JComponent,getComponent()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.SelectionTool#org.jhotdraw.draw.SelectionTool,CONSTRUCTOR()#void,activate(org.jhotdraw.draw.DrawingEditor)#void,deactivate(org.jhotdraw.draw.DrawingEditor)#void,keyPressed(java.awt.event.KeyEvent)#void,keyReleased(java.awt.event.KeyEvent)#void,keyTyped(java.awt.event.KeyEvent)#void,mouseClicked(java.awt.event.MouseEvent)#void,mouseDragged(java.awt.event.MouseEvent)#void,mouseEntered(java.awt.event.MouseEvent)#void,mouseExited(java.awt.event.MouseEvent)#void,mouseMoved(java.awt.event.MouseEvent)#void,mouseReleased(java.awt.event.MouseEvent)#void,draw(java.awt.Graphics2D)#void,mousePressed(java.awt.event.MouseEvent)#void,setTracker(org.jhotdraw.draw.Tool)#org.jhotdraw.draw.Tool,createHandleTracker(org.jhotdraw.draw.Handle)#org.jhotdraw.draw.Tool,createDragTracker(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Tool,createAreaTracker()#void,toolStarted(org.jhotdraw.draw.ToolEvent)#void,toolDone(org.jhotdraw.draw.ToolEvent)#void,areaInvalidated(org.jhotdraw.draw.ToolEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.SaveAsAction#org.jhotdraw.application.action.SaveAsAction,CONSTRUCTOR()#void,#ExtendsOrImplements#()#
org.jhotdraw.xml.JavaxDOMOutput#org.jhotdraw.xml.JavaxDOMOutput,CONSTRUCTOR(org.jhotdraw.xml.DOMFactory)#void,reset()#void,save(java.io.OutputStream)#void,save(java.io.Writer)#void,openElement(java.lang.String)#void,closeElement()#void,addComment(java.lang.String)#void,addText(java.lang.String)#void,addAttribute(java.lang.String,java.lang.String)#void,addAttribute(java.lang.String,int)#void,addAttribute(java.lang.String,boolean)#void,addAttribute(java.lang.String,float)#void,addAttribute(java.lang.String,double)#void,writeObject(java.lang.Object)#void,addAttribute(java.lang.String,float,float)#void,addAttribute(java.lang.String,int,int)#void,addAttribute(java.lang.String,double,double)#void,addAttribute(java.lang.String,boolean,boolean)#void,addAttribute(java.lang.String,java.lang.String,java.lang.String)#java.lang.Object,getPrototype()#void,setDoctype(java.lang.String)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.ExportAction#org.jhotdraw.application.action.ExportAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,exportToFile(org.jhotdraw.application.action.ExportableDocumentView,java.io.File,javax.swing.filechooser.FileFilter,java.awt.Component)#void,fileExported(org.jhotdraw.application.action.ExportableDocumentView,java.io.File,java.lang.Object)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddyapplication.action.PreferencesAction#org.jhotdraw.samples.teddyapplication.action.PreferencesAction,CONSTRUCTOR()#application.ResourceMap,getResourceMap()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.GenericListener.DefaultInvoker#java.lang.Object,invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java.lang.Integer,proxyHashCode(java.lang.Object)#java.lang.Boolean,proxyEquals(java.lang.Object,java.lang.Object)#java.lang.String,proxyToString(java.lang.Object)#void,#ExtendsOrImplements#()#
org.jhotdraw.geom.Dimension2DDouble#org.jhotdraw.geom.Dimension2DDouble,CONSTRUCTOR()#org.jhotdraw.geom.Dimension2DDouble,CONSTRUCTOR(org.jhotdraw.geom.Dimension2DDouble)#org.jhotdraw.geom.Dimension2DDouble,CONSTRUCTOR(double,double)#double,getWidth()#double,getHeight()#void,setSize(double,double)#org.jhotdraw.geom.Dimension2DDouble,getSize()#void,setSize(org.jhotdraw.geom.Dimension2DDouble)#boolean,equals(java.lang.Object)#int,hashCode()#java.lang.String,toString()#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.JStringAttributeFieldBeanInfo#java.beans.BeanDescriptor,getBeanDescriptor()#java.beans.PropertyDescriptor[],getPropertyDescriptors()#java.beans.EventSetDescriptor[],getEventSetDescriptors()#java.beans.MethodDescriptor[],getMethodDescriptors()#int,getDefaultPropertyIndex()#int,getDefaultEventIndex()#java.awt.Image,getIcon(int)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.odg.ODGProject#org.jhotdraw.samples.odg.ODGProject,CONSTRUCTOR()#void,write(java.io.File)#void,read(java.io.File)#void,clear()#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.UndoAction#org.jhotdraw.application.action.UndoAction,CONSTRUCTOR()#void,updateEnabledState()#void,updateProject(org.jhotdraw.application.DocumentView,org.jhotdraw.application.DocumentView)#void,installProjectListeners(org.jhotdraw.application.DocumentView)#void,uninstallProjectListeners(org.jhotdraw.application.DocumentView)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.AbstractSDIApplication#void,remove(org.jhotdraw.application.DocumentView)#void,initAWT(java.lang.String[])#void,initLookAndFeel()#javax.swing.ActionMap,createActionMap()#void,show(org.jhotdraw.application.DocumentView)#java.awt.Component,wrapProjectComponent(org.jhotdraw.application.DocumentView)#void,hide(org.jhotdraw.application.DocumentView)#org.jhotdraw.application.DocumentView,getCurrentView()#void,setCurrentView(org.jhotdraw.application.DocumentView)#javax.swing.JMenu,createFileMenu(org.jhotdraw.application.DocumentView)#boolean,isEditorShared()#java.awt.Component,getComponent()#javax.swing.JMenu,createViewMenu(org.jhotdraw.application.DocumentView,java.util.List<javax.swing.Action>)#javax.swing.JMenu,createHelpMenu(org.jhotdraw.application.DocumentView)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.AbstractAttributedCompositeFigure#org.jhotdraw.draw.AbstractAttributedCompositeFigure,CONSTRUCTOR()#void,setAttributeEnabled(org.jhotdraw.draw.AttributeKey,boolean)#boolean,isAttributeEnabled(org.jhotdraw.draw.AttributeKey)#void,setAttributes(java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>,getAttributes()#void,setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)#void,setAttributeOnChildren(org.jhotdraw.draw.AttributeKey,java.lang.Object)#java.lang.Object,getAttribute(org.jhotdraw.draw.AttributeKey)#java.lang.Object,getAttributesRestoreData()#void,restoreAttributesTo(java.lang.Object)#void,drawFigure(java.awt.Graphics2D)#void,drawChildren(java.awt.Graphics2D)#java.awt.Stroke,getStroke()#double,getStrokeMiterLimitFactor()#java.awt.geom.Rectangle2D.Double,getFigureDrawBounds()#void,drawFill(java.awt.Graphics2D)#void,drawStroke(java.awt.Graphics2D)#void,drawText(java.awt.Graphics2D)#org.jhotdraw.draw.AbstractAttributedCompositeFigure,clone()#void,writeAttributes(org.jhotdraw.xml.DOMOutput)#void,readAttributes(org.jhotdraw.xml.DOMInput)#org.jhotdraw.draw.AttributeKey,getAttributeKey(java.lang.String)#void,applyAttributesTo(org.jhotdraw.draw.Figure)#void,write(org.jhotdraw.xml.DOMOutput)#void,read(org.jhotdraw.xml.DOMInput)#void,removeAttribute(org.jhotdraw.draw.AttributeKey)#boolean,hasAttribute(org.jhotdraw.draw.AttributeKey)#void,#ExtendsOrImplements#()#
org.jhotdraw.geom.Insets2D.Float#org.jhotdraw.geom.Insets2D.Float,CONSTRUCTOR()#org.jhotdraw.geom.Insets2D.Float,CONSTRUCTOR(float,float,float,float)#double,getTop()#double,getLeft()#double,getBottom()#double,getRight()#void,set(double,double,double,double)#void,set(float,float,float,float)#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.JDoubleAttributeSlider.ChangeHandler#void,stateChanged(javax.swing.event.ChangeEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.AbstractHandle#org.jhotdraw.draw.AbstractHandle,CONSTRUCTOR(org.jhotdraw.draw.Figure)#int,getHandlesize()#void,addHandleListener(org.jhotdraw.draw.HandleListener)#void,removeHandleListener(org.jhotdraw.draw.HandleListener)#org.jhotdraw.draw.Figure,getOwner()#void,setView(org.jhotdraw.draw.DrawingView)#org.jhotdraw.draw.DrawingView,getView()#void,fireAreaInvalidated(java.awt.Rectangle)#void,fireUndoableEditHappened(javax.swing.undo.UndoableEdit)#void,fireHandleRequestRemove(java.awt.Rectangle)#void,fireHandleRequestSecondaryHandles()#void,draw(java.awt.Graphics2D)#void,drawCircle(java.awt.Graphics2D,java.awt.Color,java.awt.Color)#void,drawRectangle(java.awt.Graphics2D,java.awt.Color,java.awt.Color)#void,drawDiamond(java.awt.Graphics2D,java.awt.Color,java.awt.Color)#boolean,contains(java.awt.Point)#void,invalidate()#void,dispose()#void,figureAreaInvalidated(org.jhotdraw.draw.FigureEvent)#void,figureAdded(org.jhotdraw.draw.FigureEvent)#void,figureRemoved(org.jhotdraw.draw.FigureEvent)#void,figureRequestRemove(org.jhotdraw.draw.FigureEvent)#void,figureChanged(org.jhotdraw.draw.FigureEvent)#java.awt.Cursor,getCursor()#boolean,isCombinableWith(org.jhotdraw.draw.Handle)#void,keyTyped(java.awt.event.KeyEvent)#void,keyReleased(java.awt.event.KeyEvent)#void,keyPressed(java.awt.event.KeyEvent)#java.awt.Rectangle,getBounds()#java.awt.Rectangle,getDrawingArea()#java.awt.Rectangle,basicGetBounds()#void,updateBounds()#void,trackDoubleClick(java.awt.Point,int)#void,figureAttributeChanged(org.jhotdraw.draw.FigureEvent)#void,viewTransformChanged()#java.util.Collection<org.jhotdraw.draw.Handle>,createSecondaryHandles()#java.lang.String,getToolTipText(java.awt.Point)#void,figureHandlesChanged(org.jhotdraw.draw.FigureEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.CreationTool#org.jhotdraw.draw.CreationTool,CONSTRUCTOR(java.lang.String)#org.jhotdraw.draw.CreationTool,CONSTRUCTOR(java.lang.String,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.CreationTool,CONSTRUCTOR(java.lang.String,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>,java.lang.String)#org.jhotdraw.draw.CreationTool,CONSTRUCTOR(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.CreationTool,CONSTRUCTOR(org.jhotdraw.draw.Figure,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.CreationTool,CONSTRUCTOR(org.jhotdraw.draw.Figure,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>,java.lang.String)#org.jhotdraw.draw.Figure,getPrototype()#void,activate(org.jhotdraw.draw.DrawingEditor)#void,deactivate(org.jhotdraw.draw.DrawingEditor)#void,mousePressed(java.awt.event.MouseEvent)#void,mouseDragged(java.awt.event.MouseEvent)#void,mouseReleased(java.awt.event.MouseEvent)#org.jhotdraw.draw.Figure,createFigure()#org.jhotdraw.draw.Figure,getCreatedFigure()#org.jhotdraw.draw.Figure,getAddedFigure()#void,creationFinished(org.jhotdraw.draw.Figure)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ResizeHandleKit.EastHandle#void,trackStepNormalized(java.awt.geom.Point2D.Double)#java.awt.Cursor,getCursor()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddyapplication.CharacterSetAccessory#org.jhotdraw.samples.teddyapplication.CharacterSetAccessory,CONSTRUCTOR()#void,fetchAvailableCharSets()#java.lang.String,getCharacterSet()#java.lang.String,getLineSeparator()#void,#ExtendsOrImplements#()#
org.jhotdraw.app.Application#void,launch(java.lang.String[])#void,configure(java.lang.String[])#void,init()#void,start()#void,stop()#org.jhotdraw.app.Project,createProject()#void,add(org.jhotdraw.app.Project)#void,remove(org.jhotdraw.app.Project)#void,show(org.jhotdraw.app.Project)#void,hide(org.jhotdraw.app.Project)#void,dispose(org.jhotdraw.app.Project)#java.util.Collection<org.jhotdraw.app.Project>,projects()#org.jhotdraw.app.Project,getCurrentProject()#boolean,isEnabled()#void,setEnabled(boolean)#void,addPropertyChangeListener(java.beans.PropertyChangeListener)#void,removePropertyChangeListener(java.beans.PropertyChangeListener)#java.lang.String,getName()#java.lang.String,getVersion()#java.lang.String,getCopyright()#void,setModel(org.jhotdraw.app.ApplicationModel)#org.jhotdraw.app.ApplicationModel,getModel()#boolean,isSharingToolsAmongProjects()#java.awt.Component,getComponent()#java.util.List<java.io.File>,recentFiles()#void,addRecentFile(java.io.File)#void,clearRecentFiles()#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.ToggleProjectPropertyAction#org.jhotdraw.application.action.ToggleProjectPropertyAction,CONSTRUCTOR(java.lang.String)#org.jhotdraw.application.action.ToggleProjectPropertyAction,CONSTRUCTOR(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Object)#void,actionPerformed(java.awt.event.ActionEvent)#void,installProjectListeners(org.jhotdraw.application.DocumentView)#void,uninstallProjectListeners(org.jhotdraw.application.DocumentView)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.AttributeKey#org.jhotdraw.draw.AttributeKey,CONSTRUCTOR(java.lang.String)#org.jhotdraw.draw.AttributeKey,CONSTRUCTOR(java.lang.String,T)#org.jhotdraw.draw.AttributeKey,CONSTRUCTOR(java.lang.String,T,boolean)#java.lang.String,getKey()#T,getDefaultValue()#T,getClone(org.jhotdraw.draw.Figure)#T,get(org.jhotdraw.draw.Figure)#T,get(java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#void,set(org.jhotdraw.draw.Figure,T)#void,basicSet(org.jhotdraw.draw.Figure,T)#javax.swing.undo.UndoableEdit,setUndoable(org.jhotdraw.draw.Figure,T,org.jhotdraw.util.ResourceBundleUtil)#void,setClone(org.jhotdraw.draw.Figure,T)#void,basicSetClone(org.jhotdraw.draw.Figure,T)#void,set(java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>,T)#void,setClone(java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>,T)#boolean,equals(java.lang.Object)#int,hashCode()#java.lang.String,toString()#boolean,isNullValueAllowed()#boolean,isAssignable(java.lang.Object)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.mini.EditorSample#void,main(java.lang.String[])#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.AbstractAttributedFigure#org.jhotdraw.draw.AbstractAttributedFigure,CONSTRUCTOR()#void,setAttributeEnabled(org.jhotdraw.draw.AttributeKey,boolean)#boolean,isAttributeEnabled(org.jhotdraw.draw.AttributeKey)#void,setAttributes(java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>,getAttributes()#java.lang.Object,getAttributesRestoreData()#void,restoreAttributesTo(java.lang.Object)#void,setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)#java.lang.Object,getAttribute(org.jhotdraw.draw.AttributeKey)#void,draw(java.awt.Graphics2D)#java.awt.Stroke,getStroke()#double,getStrokeMiterLimitFactor()#java.awt.geom.Rectangle2D.Double,getDrawingArea()#void,drawFill(java.awt.Graphics2D)#void,drawStroke(java.awt.Graphics2D)#void,drawText(java.awt.Graphics2D)#org.jhotdraw.draw.AbstractAttributedFigure,clone()#void,writeAttributes(org.jhotdraw.xml.DOMOutput)#void,readAttributes(org.jhotdraw.xml.DOMInput)#org.jhotdraw.draw.AttributeKey,getAttributeKey(java.lang.String)#void,applyAttributesTo(org.jhotdraw.draw.Figure)#void,write(org.jhotdraw.xml.DOMOutput)#void,read(org.jhotdraw.xml.DOMInput)#void,removeAttribute(org.jhotdraw.draw.AttributeKey)#boolean,hasAttribute(org.jhotdraw.draw.AttributeKey)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.LineConnectionFigure#org.jhotdraw.draw.LineConnectionFigure,CONSTRUCTOR()#void,transform(java.awt.geom.AffineTransform)#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(int)#boolean,canConnect()#void,updateConnection()#void,validate()#boolean,canConnect(org.jhotdraw.draw.Connector,org.jhotdraw.draw.Connector)#org.jhotdraw.draw.Connector,getEndConnector()#org.jhotdraw.draw.Figure,getEndFigure()#org.jhotdraw.draw.Connector,getStartConnector()#org.jhotdraw.draw.Figure,getStartFigure()#void,setEndConnector(org.jhotdraw.draw.Connector)#void,setStartConnector(org.jhotdraw.draw.Connector)#void,addNotify(org.jhotdraw.draw.Drawing)#void,removeNotify(org.jhotdraw.draw.Drawing)#void,handleDisconnect(org.jhotdraw.draw.Connector,org.jhotdraw.draw.Connector)#void,handleConnect(org.jhotdraw.draw.Connector,org.jhotdraw.draw.Connector)#org.jhotdraw.draw.LineConnectionFigure,clone()#void,remap(java.util.Map)#boolean,canConnect(org.jhotdraw.draw.Connector)#boolean,handleMouseClick(java.awt.geom.Point2D.Double,java.awt.event.MouseEvent,org.jhotdraw.draw.DrawingView)#void,readPoints(org.jhotdraw.xml.DOMInput)#void,read(org.jhotdraw.xml.DOMInput)#void,readLiner(org.jhotdraw.xml.DOMInput)#void,write(org.jhotdraw.xml.DOMOutput)#void,writeLiner(org.jhotdraw.xml.DOMOutput)#void,writePoints(org.jhotdraw.xml.DOMOutput)#void,setLiner(org.jhotdraw.draw.Liner)#void,setNode(int,org.jhotdraw.geom.BezierPath.Node)#void,lineout()#org.jhotdraw.geom.BezierPath,getBezierPath()#org.jhotdraw.draw.Liner,getLiner()#void,setStartPoint(java.awt.geom.Point2D.Double)#void,setPoint(int,java.awt.geom.Point2D.Double)#void,setEndPoint(java.awt.geom.Point2D.Double)#void,reverseConnection()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.Colors#java.awt.Color,shadow(java.awt.Color,int)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.FloatingTextField#org.jhotdraw.draw.FloatingTextField,CONSTRUCTOR()#void,createOverlay(org.jhotdraw.draw.DrawingView)#void,requestFocus()#void,createOverlay(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.TextHolderFigure)#java.awt.Insets,getInsets()#void,addActionListener(java.awt.event.ActionListener)#void,removeActionListener(java.awt.event.ActionListener)#void,setBounds(java.awt.Rectangle,java.lang.String)#java.lang.String,getText()#java.awt.Dimension,getPreferredSize(int)#void,endOverlay()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.SetBoundsEdit#org.jhotdraw.draw.SetBoundsEdit,CONSTRUCTOR(org.jhotdraw.draw.AbstractFigure,java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#java.lang.String,getPresentationName()#boolean,addEdit(javax.swing.undo.UndoableEdit)#boolean,replaceEdit(javax.swing.undo.UndoableEdit)#void,redo()#void,undo()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.AbstractTool#org.jhotdraw.draw.AbstractTool,CONSTRUCTOR()#void,addUndoableEditListener(javax.swing.event.UndoableEditListener)#void,removeUndoableEditListener(javax.swing.event.UndoableEditListener)#void,activate(org.jhotdraw.draw.DrawingEditor)#void,deactivate(org.jhotdraw.draw.DrawingEditor)#boolean,isActive()#org.jhotdraw.draw.DrawingView,getView()#org.jhotdraw.draw.DrawingEditor,getEditor()#org.jhotdraw.draw.Drawing,getDrawing()#java.awt.geom.Point2D.Double,viewToDrawing(java.awt.Point)#java.awt.geom.Point2D.Double,constrainPoint(java.awt.Point)#java.awt.geom.Point2D.Double,constrainPoint(java.awt.geom.Point2D.Double)#void,setInputMap(javax.swing.InputMap)#javax.swing.InputMap,getInputMap()#void,setActionMap(javax.swing.ActionMap)#javax.swing.ActionMap,getActionMap()#void,editDelete()#void,editCut()#void,editCopy()#void,editDuplicate()#void,editPaste()#void,keyReleased(java.awt.event.KeyEvent)#void,keyTyped(java.awt.event.KeyEvent)#void,keyPressed(java.awt.event.KeyEvent)#javax.swing.InputMap,createInputMap()#javax.swing.ActionMap,createActionMap()#void,mouseClicked(java.awt.event.MouseEvent)#void,mouseEntered(java.awt.event.MouseEvent)#void,mouseExited(java.awt.event.MouseEvent)#void,mouseMoved(java.awt.event.MouseEvent)#void,mousePressed(java.awt.event.MouseEvent)#void,mouseReleased(java.awt.event.MouseEvent)#void,addToolListener(org.jhotdraw.draw.ToolListener)#void,removeToolListener(org.jhotdraw.draw.ToolListener)#void,fireToolStarted(org.jhotdraw.draw.DrawingView)#void,fireToolDone()#void,fireAreaInvalidated(java.awt.geom.Rectangle2D.Double)#void,fireAreaInvalidated(java.awt.Rectangle)#void,draw(java.awt.Graphics2D)#void,updateCursor(org.jhotdraw.draw.DrawingView,java.awt.Point)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.BezierFigure#org.jhotdraw.draw.BezierFigure,CONSTRUCTOR()#org.jhotdraw.draw.BezierFigure,CONSTRUCTOR(boolean)#org.jhotdraw.draw.Connector,findConnector(java.awt.geom.Point2D.Double,org.jhotdraw.draw.ConnectionFigure)#org.jhotdraw.draw.Connector,findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)#void,drawStroke(java.awt.Graphics2D)#void,drawCaps(java.awt.Graphics2D)#void,drawFill(java.awt.Graphics2D)#boolean,contains(java.awt.geom.Point2D.Double)#boolean,canConnect()#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(int)#java.awt.geom.Rectangle2D.Double,getBounds()#java.awt.geom.Rectangle2D.Double,getDrawingArea()#void,validate()#org.jhotdraw.geom.BezierPath,getBezierPath()#void,setBezierPath(org.jhotdraw.geom.BezierPath)#java.awt.geom.Point2D.Double,getPointOnPath(float,double)#boolean,isClosed()#void,setClosed(boolean)#void,setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,transform(java.awt.geom.AffineTransform)#void,invalidate()#org.jhotdraw.geom.BezierPath,getCappedPath()#void,layout()#void,addNode(org.jhotdraw.geom.BezierPath.Node)#void,addNode(int,org.jhotdraw.geom.BezierPath.Node)#void,setNode(int,org.jhotdraw.geom.BezierPath.Node)#org.jhotdraw.geom.BezierPath.Node,getNode(int)#java.awt.geom.Point2D.Double,getPoint(int)#java.awt.geom.Point2D.Double,getPoint(int,int)#void,setPoint(int,java.awt.geom.Point2D.Double)#void,setPoint(int,int,java.awt.geom.Point2D.Double)#void,setStartPoint(java.awt.geom.Point2D.Double)#void,setEndPoint(java.awt.geom.Point2D.Double)#java.awt.geom.Point2D.Double,getStartPoint()#java.awt.geom.Point2D.Double,getEndPoint()#int,findNode(java.awt.geom.Point2D.Double)#int,findSegment(java.awt.geom.Point2D.Double)#boolean,joinSegments(java.awt.geom.Point2D.Double)#int,splitSegment(java.awt.geom.Point2D.Double)#org.jhotdraw.geom.BezierPath.Node,removeNode(int)#void,removeAllNodes()#int,getNodeCount()#org.jhotdraw.draw.BezierFigure,clone()#void,restoreTransformTo(java.lang.Object)#java.lang.Object,getTransformRestoreData()#java.awt.geom.Point2D.Double,chop(java.awt.geom.Point2D.Double)#java.awt.geom.Point2D.Double,getCenter()#java.awt.geom.Point2D.Double,getOutermostPoint()#int,joinSegments(java.awt.geom.Point2D.Double,float)#int,splitSegment(java.awt.geom.Point2D.Double,float)#boolean,handleMouseClick(java.awt.geom.Point2D.Double,java.awt.event.MouseEvent,org.jhotdraw.draw.DrawingView)#void,write(org.jhotdraw.xml.DOMOutput)#void,writePoints(org.jhotdraw.xml.DOMOutput)#void,read(org.jhotdraw.xml.DOMInput)#void,readPoints(org.jhotdraw.xml.DOMInput)#void,#ExtendsOrImplements#()#
net.n3.nanoxml.XMLParserFactory#net.n3.nanoxml.IXMLParser,createDefaultXMLParser()#net.n3.nanoxml.IXMLParser,createDefaultXMLParser(net.n3.nanoxml.IXMLBuilder)#net.n3.nanoxml.IXMLParser,createXMLParser(java.lang.String,net.n3.nanoxml.IXMLBuilder)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddy.Main#void,main(java.lang.String[])#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.ImageBevelBorder#org.jhotdraw.draw.action.ImageBevelBorder,CONSTRUCTOR(java.awt.Image,java.awt.Insets)#org.jhotdraw.draw.action.ImageBevelBorder,CONSTRUCTOR(java.awt.Image,java.awt.Insets,java.awt.Insets)#org.jhotdraw.draw.action.ImageBevelBorder,CONSTRUCTOR(java.awt.Image,java.awt.Insets,java.awt.Insets,boolean)#boolean,isBorderOpaque()#java.awt.Insets,getBorderInsets(java.awt.Component)#void,paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)#void,#ExtendsOrImplements#()#
net.n3.nanoxml.IXMLReader#char,read()#boolean,atEOFOfCurrentStream()#boolean,atEOF()#void,unread(char)#int,getLineNr()#java.io.Reader,openStream(java.lang.String,java.lang.String)#void,startNewStream(java.io.Reader)#void,startNewStream(java.io.Reader,boolean)#int,getStreamLevel()#void,setSystemID(java.lang.String)#void,setPublicID(java.lang.String)#java.lang.String,getSystemID()#java.lang.String,getPublicID()#void,#ExtendsOrImplements#()#
org.jhotdraw.io.ExtensionFileFilter#org.jhotdraw.io.ExtensionFileFilter,CONSTRUCTOR(java.lang.String,java.lang.String)#org.jhotdraw.io.ExtensionFileFilter,CONSTRUCTOR(java.lang.String,java.lang.String[])#java.util.Set<java.lang.String>,getExtensions()#boolean,accept(java.io.File)#java.io.File,makeAcceptable(java.io.File)#java.lang.String,getDescription()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddy.TeddyProject#org.jhotdraw.samples.teddy.TeddyProject,CONSTRUCTOR()#javax.swing.JTextPane,createEditor()#void,init()#void,setEnabled(boolean)#void,setStatusBarVisible(boolean)#boolean,isStatusBarVisible()#void,setLineWrap(boolean)#boolean,isLineWrap()#javax.swing.JFileChooser,getOpenChooser()#javax.swing.JFileChooser,getSaveChooser()#void,read(java.io.File)#void,read(java.io.File,java.lang.String)#void,write(java.io.File)#void,write(java.io.File,java.lang.String,java.lang.String)#void,clear()#javax.swing.text.StyledDocument,createDocument()#javax.swing.text.Document,getDocument()#void,select(int,int)#int,getSelectionStart()#int,getSelectionEnd()#int,getLineCount()#void,replaceRange(java.lang.String,int,int)#int,getLineOfOffset(int)#int,getLineStartOffset(int)#void,fireEdit(javax.swing.undo.UndoableEdit)#void,setLineNumbersVisible(boolean)#boolean,isLineNumbersVisible()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.VerticalGridLayout#org.jhotdraw.draw.action.VerticalGridLayout,CONSTRUCTOR()#org.jhotdraw.draw.action.VerticalGridLayout,CONSTRUCTOR(int,int)#org.jhotdraw.draw.action.VerticalGridLayout,CONSTRUCTOR(int,int,boolean)#org.jhotdraw.draw.action.VerticalGridLayout,CONSTRUCTOR(int,int,int,int)#org.jhotdraw.draw.action.VerticalGridLayout,CONSTRUCTOR(int,int,int,int,boolean)#int,getRows()#void,setRows(int)#void,setVertical(boolean)#boolean,isVertical()#int,getColumns()#void,setColumns(int)#int,getHgap()#void,setHgap(int)#int,getVgap()#void,setVgap(int)#void,addLayoutComponent(java.lang.String,java.awt.Component)#void,removeLayoutComponent(java.awt.Component)#java.awt.Dimension,preferredLayoutSize(java.awt.Container)#java.awt.Dimension,minimumLayoutSize(java.awt.Container)#void,layoutContainer(java.awt.Container)#java.lang.String,toString()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.BezierNodeEdit#org.jhotdraw.draw.BezierNodeEdit,CONSTRUCTOR(org.jhotdraw.draw.BezierFigure,int,org.jhotdraw.geom.BezierPath.Node,org.jhotdraw.geom.BezierPath.Node)#java.lang.String,getPresentationName()#void,redo()#void,undo()#boolean,addEdit(javax.swing.undo.UndoableEdit)#boolean,replaceEdit(javax.swing.undo.UndoableEdit)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.DefaultDrawingViewTransferHandler#org.jhotdraw.draw.DefaultDrawingViewTransferHandler,CONSTRUCTOR()#boolean,importData(javax.swing.JComponent,java.awt.datatransfer.Transferable)#int,getSourceActions(javax.swing.JComponent)#java.awt.datatransfer.Transferable,createTransferable(javax.swing.JComponent)#void,exportDone(javax.swing.JComponent,java.awt.datatransfer.Transferable,int)#void,exportAsDrag(javax.swing.JComponent,java.awt.event.InputEvent,int)#javax.swing.Icon,getVisualRepresentation(java.awt.datatransfer.Transferable)#boolean,canImport(javax.swing.JComponent,java.awt.datatransfer.DataFlavor[])#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.action.CombineAction#org.jhotdraw.samples.svg.action.CombineAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#boolean,canGroup()#java.util.Collection<org.jhotdraw.draw.Figure>,ungroupFigures(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.CompositeFigure)#void,groupFigures(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.CompositeFigure,java.util.Collection<org.jhotdraw.draw.Figure>)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.draw.DrawingPanel#org.jhotdraw.samples.draw.DrawingPanel,CONSTRUCTOR()#void,setDrawing(org.jhotdraw.draw.Drawing)#org.jhotdraw.draw.Drawing,getDrawing()#org.jhotdraw.draw.DrawingView,getView()#org.jhotdraw.draw.DrawingEditor,getEditor()#void,addDefaultCreationButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor,java.util.Collection<javax.swing.Action>,java.util.Collection<javax.swing.Action>)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddy.regex.MatchType#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.CopyAction#org.jhotdraw.app.action.CopyAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.draw.DrawLiveConnectApplet#void,init()#void,setData(java.lang.String)#java.lang.String,getData()#java.lang.String[][],getParameterInfo()#java.lang.String,getAppletInfo()#void,#ExtendsOrImplements#()#
org.jhotdraw.xml.DOMOutput#void,setDoctype(java.lang.String)#void,openElement(java.lang.String)#void,closeElement()#void,addComment(java.lang.String)#void,addText(java.lang.String)#void,addAttribute(java.lang.String,java.lang.String)#void,addAttribute(java.lang.String,java.lang.String,java.lang.String)#void,addAttribute(java.lang.String,int)#void,addAttribute(java.lang.String,int,int)#void,addAttribute(java.lang.String,boolean)#void,addAttribute(java.lang.String,boolean,boolean)#void,addAttribute(java.lang.String,float)#void,addAttribute(java.lang.String,float,float)#void,addAttribute(java.lang.String,double)#void,addAttribute(java.lang.String,double,double)#void,writeObject(java.lang.Object)#java.lang.Object,getPrototype()#void,#ExtendsOrImplements#()#
org.apache.batik.ext.awt.RadialGradientPaint#org.apache.batik.ext.awt.RadialGradientPaint,CONSTRUCTOR(float,float,float,float[],java.awt.Color[])#org.apache.batik.ext.awt.RadialGradientPaint,CONSTRUCTOR(java.awt.geom.Point2D,float,float[],java.awt.Color[])#org.apache.batik.ext.awt.RadialGradientPaint,CONSTRUCTOR(float,float,float,float,float,float[],java.awt.Color[])#org.apache.batik.ext.awt.RadialGradientPaint,CONSTRUCTOR(java.awt.geom.Point2D,float,java.awt.geom.Point2D,float[],java.awt.Color[])#org.apache.batik.ext.awt.RadialGradientPaint,CONSTRUCTOR(java.awt.geom.Point2D,float,java.awt.geom.Point2D,float[],java.awt.Color[],org.apache.batik.ext.awt.MultipleGradientPaint.CycleMethodEnum,org.apache.batik.ext.awt.MultipleGradientPaint.ColorSpaceEnum)#org.apache.batik.ext.awt.RadialGradientPaint,CONSTRUCTOR(java.awt.geom.Point2D,float,java.awt.geom.Point2D,float[],java.awt.Color[],org.apache.batik.ext.awt.MultipleGradientPaint.CycleMethodEnum,org.apache.batik.ext.awt.MultipleGradientPaint.ColorSpaceEnum,java.awt.geom.AffineTransform)#org.apache.batik.ext.awt.RadialGradientPaint,CONSTRUCTOR(java.awt.geom.Rectangle2D,float[],java.awt.Color[])#java.awt.PaintContext,createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)#java.awt.geom.Point2D,getCenterPoint()#java.awt.geom.Point2D,getFocusPoint()#float,getRadius()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.figures.SVGPathFigure#org.jhotdraw.samples.svg.figures.SVGPathFigure,CONSTRUCTOR()#void,draw(java.awt.Graphics2D)#void,drawFigure(java.awt.Graphics2D)#void,drawFill(java.awt.Graphics2D)#void,drawStroke(java.awt.Graphics2D)#void,invalidate()#java.awt.geom.GeneralPath,getPath()#java.awt.geom.Rectangle2D.Double,getDrawingArea()#void,write(org.jhotdraw.xml.DOMOutput)#void,read(org.jhotdraw.xml.DOMInput)#boolean,contains(java.awt.geom.Point2D.Double)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,transform(java.awt.geom.AffineTransform)#void,restoreTransformTo(java.lang.Object)#java.lang.Object,getTransformRestoreData()#void,setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)#void,setAttributeOnChildren(org.jhotdraw.draw.AttributeKey,java.lang.Object)#boolean,isEmpty()#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(int)#java.util.Collection<javax.swing.Action>,getActions(java.awt.geom.Point2D.Double)#boolean,canConnect()#org.jhotdraw.draw.Connector,findConnector(java.awt.geom.Point2D.Double,org.jhotdraw.draw.ConnectionFigure)#org.jhotdraw.draw.Connector,findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)#boolean,handleMouseClick(java.awt.geom.Point2D.Double,java.awt.event.MouseEvent,org.jhotdraw.draw.DrawingView)#void,add(int,org.jhotdraw.draw.Figure)#org.jhotdraw.samples.svg.figures.SVGBezierFigure,getChild(int)#org.jhotdraw.samples.svg.figures.SVGPathFigure,clone()#void,flattenTransform()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.UngroupAction#org.jhotdraw.draw.action.UngroupAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.action.UngroupAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.CompositeFigure)#void,updateEnabledState()#boolean,canUngroup()#void,actionPerformed(java.awt.event.ActionEvent)#java.util.Collection<org.jhotdraw.draw.Figure>,ungroupFigures(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.CompositeFigure)#void,groupFigures(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.CompositeFigure,java.util.Collection<org.jhotdraw.draw.Figure>)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.DefaultOSXApplication#org.jhotdraw.app.DefaultOSXApplication,CONSTRUCTOR()#void,init()#void,launch(java.lang.String[])#void,configure(java.lang.String[])#void,initLookAndFeel()#void,initApplicationActions()#void,initProjectActions(org.jhotdraw.app.Project)#void,addPalette(java.awt.Window)#void,removePalette(java.awt.Window)#void,show(org.jhotdraw.app.Project)#void,hide(org.jhotdraw.app.Project)#javax.swing.JMenuBar,createMenuBar(org.jhotdraw.app.Project)#javax.swing.JMenu,createWindowMenu(org.jhotdraw.app.Project)#javax.swing.JMenu,createFileMenu(org.jhotdraw.app.Project)#org.jhotdraw.app.Project,getCurrentProject()#void,setCurrentProject(org.jhotdraw.app.Project)#void,initScreenMenuBar()#void,initPalettes(java.util.LinkedList<javax.swing.Action>)#boolean,isSharingToolsAmongProjects()#java.awt.Component,getComponent()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.BezierNodeHandle#org.jhotdraw.draw.BezierNodeHandle,CONSTRUCTOR(org.jhotdraw.draw.BezierFigure,int)#org.jhotdraw.draw.BezierNodeHandle,CONSTRUCTOR(org.jhotdraw.draw.BezierFigure,int,org.jhotdraw.draw.Figure)#void,dispose()#void,draw(java.awt.Graphics2D)#org.jhotdraw.draw.BezierFigure,getOwner()#java.awt.Point,getLocation()#org.jhotdraw.geom.BezierPath.Node,getBezierNode()#java.awt.Rectangle,basicGetBounds()#org.jhotdraw.draw.Figure,getTransformOwner()#void,trackStart(java.awt.Point,int)#void,trackStep(java.awt.Point,java.awt.Point,int)#void,trackEnd(java.awt.Point,java.awt.Point,int)#boolean,isCombinableWith(org.jhotdraw.draw.Handle)#void,trackDoubleClick(java.awt.Point,int)#java.util.Collection<org.jhotdraw.draw.Handle>,createSecondaryHandles()#java.lang.String,getToolTipText(java.awt.Point)#void,#ExtendsOrImplements#()#
org.jhotdraw.geom.BezierPath.Node#org.jhotdraw.geom.BezierPath.Node,CONSTRUCTOR()#org.jhotdraw.geom.BezierPath.Node,CONSTRUCTOR(org.jhotdraw.geom.BezierPath.Node)#void,setTo(org.jhotdraw.geom.BezierPath.Node)#org.jhotdraw.geom.BezierPath.Node,CONSTRUCTOR(java.awt.geom.Point2D.Double)#org.jhotdraw.geom.BezierPath.Node,CONSTRUCTOR(int,java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#org.jhotdraw.geom.BezierPath.Node,CONSTRUCTOR(double,double)#org.jhotdraw.geom.BezierPath.Node,CONSTRUCTOR(int,double,double,double,double,double,double)#int,getMask()#void,setMask(int)#void,setControlPoint(int,java.awt.geom.Point2D.Double)#java.awt.geom.Point2D.Double,getControlPoint(int)#void,moveTo(java.awt.geom.Point2D.Double)#void,moveTo(double,double)#void,moveBy(double,double)#java.lang.Object,clone()#java.lang.String,toString()#int,hashCode()#boolean,equals(java.lang.Object)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ChopDiamondConnector#org.jhotdraw.draw.ChopDiamondConnector,CONSTRUCTOR()#org.jhotdraw.draw.ChopDiamondConnector,CONSTRUCTOR(org.jhotdraw.draw.Figure)#java.awt.geom.Point2D.Double,chop(org.jhotdraw.draw.Figure,java.awt.geom.Point2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.TransformEdit#org.jhotdraw.draw.TransformEdit,CONSTRUCTOR(org.jhotdraw.draw.Figure,java.awt.geom.AffineTransform)#org.jhotdraw.draw.TransformEdit,CONSTRUCTOR(java.util.Collection<org.jhotdraw.draw.Figure>,java.awt.geom.AffineTransform)#java.lang.String,getPresentationName()#boolean,addEdit(javax.swing.undo.UndoableEdit)#boolean,replaceEdit(javax.swing.undo.UndoableEdit)#void,redo()#void,undo()#java.lang.String,toString()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddyapplication.TeddyView.EditorPanel#void,setEditor(javax.swing.text.JTextComponent)#void,setLineWrap(boolean)#boolean,getLineWrap()#java.awt.Dimension,getPreferredScrollableViewportSize()#int,getScrollableUnitIncrement(java.awt.Rectangle,int,int)#int,getScrollableBlockIncrement(java.awt.Rectangle,int,int)#boolean,getScrollableTracksViewportWidth()#boolean,getScrollableTracksViewportHeight()#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.CutAction#org.jhotdraw.application.action.CutAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddyapplication.action.ToggleLineWrapAction#org.jhotdraw.samples.teddyapplication.action.ToggleLineWrapAction,CONSTRUCTOR()#application.ResourceMap,getResourceMap()#void,actionPerformed(java.awt.event.ActionEvent)#org.jhotdraw.samples.teddyapplication.TeddyView,getCurrentView()#void,updateProperty()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.FigureSelectionListener#void,selectionChanged(org.jhotdraw.draw.FigureSelectionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.draw.Main#void,main(java.lang.String[])#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.DelegationSelectionTool#org.jhotdraw.draw.DelegationSelectionTool,CONSTRUCTOR()#org.jhotdraw.draw.DelegationSelectionTool,CONSTRUCTOR(java.util.Collection<javax.swing.Action>,java.util.Collection<javax.swing.Action>)#void,setDrawingActions(java.util.Collection<javax.swing.Action>)#void,setFigureActions(java.util.Collection<javax.swing.Action>)#void,mousePressed(java.awt.event.MouseEvent)#void,mouseReleased(java.awt.event.MouseEvent)#void,mouseDragged(java.awt.event.MouseEvent)#void,mouseClicked(java.awt.event.MouseEvent)#void,handlePopupMenu(java.awt.event.MouseEvent)#void,showPopupMenu(org.jhotdraw.draw.Figure,java.awt.Point,java.awt.Component)#void,handleDoubleClick(java.awt.event.MouseEvent)#void,handleMultiClick(java.awt.event.MouseEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ResizeHandleKit#org.jhotdraw.draw.ResizeHandleKit,CONSTRUCTOR()#void,addCornerResizeHandles(org.jhotdraw.draw.Figure,java.util.Collection<org.jhotdraw.draw.Handle>)#void,addEdgeResizeHandles(org.jhotdraw.draw.Figure,java.util.Collection<org.jhotdraw.draw.Handle>)#void,addResizeHandles(org.jhotdraw.draw.Figure,java.util.Collection<org.jhotdraw.draw.Handle>)#org.jhotdraw.draw.Handle,south(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,southEast(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,southWest(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,north(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,northEast(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,northWest(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,east(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,west(org.jhotdraw.draw.Figure)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.SelectionColorIcon#org.jhotdraw.draw.action.SelectionColorIcon,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey<java.awt.Color>,java.net.URL,java.awt.Shape)#org.jhotdraw.draw.action.SelectionColorIcon,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey<java.awt.Color>,java.awt.Image,java.awt.Shape)#void,paintIcon(java.awt.Component,java.awt.Graphics,int,int)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.TransformHandleKit.SouthHandle#void,trackStepNormalized(java.awt.geom.Point2D.Double)#java.awt.Cursor,getCursor()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.SVGPropertiesPanel#org.jhotdraw.samples.svg.SVGPropertiesPanel,CONSTRUCTOR()#void,setEditor(org.jhotdraw.draw.DrawingEditor)#void,setView(org.jhotdraw.draw.DrawingView)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.ToggleVisibleAction#org.jhotdraw.app.action.ToggleVisibleAction,CONSTRUCTOR(java.awt.Component,java.lang.String)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.geom.QuadTree.QuadNode#org.jhotdraw.geom.QuadTree.QuadNode,CONSTRUCTOR(java.awt.geom.Rectangle2D.Double)#boolean,isLeaf()#void,remove(T)#void,add(T,java.awt.geom.Rectangle2D.Double)#void,split()#void,join()#void,findContains(java.awt.geom.Point2D.Double,java.util.HashSet<T>)#void,findIntersects(java.awt.geom.Rectangle2D.Double,java.util.HashSet<T>)#void,findInside(java.awt.geom.Rectangle2D.Double,java.util.HashSet<T>)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.draw.DrawFigureFactory#org.jhotdraw.samples.draw.DrawFigureFactory,CONSTRUCTOR()#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.DeleteAction#org.jhotdraw.application.action.DeleteAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,deleteNextChar(java.awt.event.ActionEvent,javax.swing.text.JTextComponent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.MoveConstrainedAction.East#org.jhotdraw.draw.action.MoveConstrainedAction.East,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.OSXPaletteHandler#org.jhotdraw.application.OSXPaletteHandler,CONSTRUCTOR(org.jhotdraw.application.AbstractOSXApplication)#void,add(java.awt.Window,org.jhotdraw.application.DocumentView)#void,remove(java.awt.Window,org.jhotdraw.application.DocumentView)#void,addPalette(java.awt.Window)#void,removePalette(java.awt.Window)#java.util.Set<java.awt.Window>,getPalettes()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.HandleTracker#org.jhotdraw.draw.HandleTracker,CONSTRUCTOR(org.jhotdraw.draw.Handle)#org.jhotdraw.draw.HandleTracker,CONSTRUCTOR(org.jhotdraw.draw.Handle,java.util.Collection<org.jhotdraw.draw.Handle>)#void,activate(org.jhotdraw.draw.DrawingEditor)#void,deactivate(org.jhotdraw.draw.DrawingEditor)#void,keyPressed(java.awt.event.KeyEvent)#void,keyReleased(java.awt.event.KeyEvent)#void,keyTyped(java.awt.event.KeyEvent)#void,mouseClicked(java.awt.event.MouseEvent)#void,mouseDragged(java.awt.event.MouseEvent)#void,mouseEntered(java.awt.event.MouseEvent)#void,mouseExited(java.awt.event.MouseEvent)#void,mouseMoved(java.awt.event.MouseEvent)#void,mousePressed(java.awt.event.MouseEvent)#void,mouseReleased(java.awt.event.MouseEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.AbstractConnector#org.jhotdraw.draw.AbstractConnector,CONSTRUCTOR()#org.jhotdraw.draw.AbstractConnector,CONSTRUCTOR(org.jhotdraw.draw.Figure)#void,setConnectToDecorator(boolean)#boolean,isConnectToDecorator()#org.jhotdraw.draw.Figure,getConnectorTarget(org.jhotdraw.draw.Figure)#boolean,contains(java.awt.geom.Point2D.Double)#java.awt.geom.Point2D.Double,findStart(org.jhotdraw.draw.ConnectionFigure)#java.awt.geom.Point2D.Double,findEnd(org.jhotdraw.draw.ConnectionFigure)#java.awt.geom.Point2D.Double,findPoint(org.jhotdraw.draw.ConnectionFigure)#org.jhotdraw.draw.Figure,getOwner()#void,setOwner(org.jhotdraw.draw.Figure)#java.lang.Object,clone()#void,updateStartLocation(java.awt.geom.Point2D.Double)#void,updateEndLocation(java.awt.geom.Point2D.Double)#java.awt.geom.Point2D.Double,getAnchor()#void,updateAnchor(java.awt.geom.Point2D.Double)#java.awt.geom.Rectangle2D.Double,getBounds()#void,read(org.jhotdraw.xml.DOMInput)#void,write(org.jhotdraw.xml.DOMOutput)#java.awt.geom.Rectangle2D.Double,getDrawingArea()#void,draw(java.awt.Graphics2D)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.AlignAction#org.jhotdraw.draw.action.AlignAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#void,updateEnabledState()#void,actionPerformed(java.awt.event.ActionEvent)#void,alignFigures(java.util.Collection,java.awt.geom.Rectangle2D.Double)#java.awt.geom.Rectangle2D.Double,getSelectionBounds()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.AbstractCompositeFigure.ChildHandler#void,figureRequestRemove(org.jhotdraw.draw.FigureEvent)#void,figureChanged(org.jhotdraw.draw.FigureEvent)#void,figureAreaInvalidated(org.jhotdraw.draw.FigureEvent)#void,undoableEditHappened(javax.swing.event.UndoableEditEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.GraphicalCompositeFigure#org.jhotdraw.draw.GraphicalCompositeFigure,CONSTRUCTOR()#org.jhotdraw.draw.GraphicalCompositeFigure,CONSTRUCTOR(org.jhotdraw.draw.Figure)#java.awt.geom.Rectangle2D.Double,getBounds()#boolean,contains(java.awt.geom.Point2D.Double)#void,addNotify(org.jhotdraw.draw.Drawing)#void,removeNotify(org.jhotdraw.draw.Drawing)#java.awt.geom.Rectangle2D.Double,getDrawingArea()#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,superBasicSetBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,basicSetPresentationFigureBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,transform(java.awt.geom.AffineTransform)#void,draw(java.awt.Graphics2D)#void,drawPresentationFigure(java.awt.Graphics2D)#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(int)#void,setPresentationFigure(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Figure,getPresentationFigure()#org.jhotdraw.draw.GraphicalCompositeFigure,clone()#void,remap(java.util.HashMap<org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure>)#void,setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)#void,setAttributeEnabled(org.jhotdraw.draw.AttributeKey,boolean)#java.lang.Object,getAttribute(org.jhotdraw.draw.AttributeKey)#void,applyAttributesTo(org.jhotdraw.draw.Figure)#void,writeAttributes(org.jhotdraw.xml.DOMOutput)#void,readAttributes(org.jhotdraw.xml.DOMInput)#void,read(org.jhotdraw.xml.DOMInput)#void,write(org.jhotdraw.xml.DOMOutput)#org.jhotdraw.draw.AttributeKey,getAttributeKey(java.lang.String)#java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>,getAttributes()#java.awt.geom.Point2D.Double,chop(java.awt.geom.Point2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.undo.CompositeEdit#void,setVerbose(boolean)#org.jhotdraw.undo.CompositeEdit,CONSTRUCTOR()#org.jhotdraw.undo.CompositeEdit,CONSTRUCTOR(boolean)#org.jhotdraw.undo.CompositeEdit,CONSTRUCTOR(java.lang.String)#org.jhotdraw.undo.CompositeEdit,CONSTRUCTOR(java.lang.String,boolean)#java.lang.String,getPresentationName()#java.lang.String,getUndoPresentationName()#java.lang.String,getRedoPresentationName()#boolean,addEdit(javax.swing.undo.UndoableEdit)#boolean,isSignificant()#void,setSignificant(boolean)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddy.action.ToggleStatusBarAction#org.jhotdraw.samples.teddy.action.ToggleStatusBarAction,CONSTRUCTOR(org.jhotdraw.app.Application)#org.jhotdraw.samples.teddy.TeddyProject,getCurrentProject()#void,updateProperty()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ResizeHandleKit.SouthEastHandle#void,trackStepNormalized(java.awt.geom.Point2D.Double)#java.awt.Cursor,getCursor()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.StickyRectangleConnector#org.jhotdraw.draw.StickyRectangleConnector,CONSTRUCTOR()#org.jhotdraw.draw.StickyRectangleConnector,CONSTRUCTOR(org.jhotdraw.draw.Figure)#void,draw(java.awt.Graphics2D)#void,setAngle(float)#double,getAngle()#org.jhotdraw.draw.StickyRectangleConnector,CONSTRUCTOR(org.jhotdraw.draw.Figure,java.awt.geom.Point2D.Double)#void,updateAnchor(java.awt.geom.Point2D.Double)#java.awt.geom.Point2D.Double,getAnchor()#java.awt.geom.Point2D.Double,chop(org.jhotdraw.draw.Figure,java.awt.geom.Point2D.Double)#java.lang.String,getParameters()#void,read(org.jhotdraw.xml.DOMInput)#void,write(org.jhotdraw.xml.DOMOutput)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddy.text.NumberedViewFactory#void,setLineNumbersVisible(boolean)#boolean,isLineNumbersVisible()#javax.swing.text.View,create(javax.swing.text.Element)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.mini.ConnectingFiguresSample#void,main(java.lang.String[])#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.CompositeTransformEdit#org.jhotdraw.draw.CompositeTransformEdit,CONSTRUCTOR(org.jhotdraw.draw.AbstractFigure,java.awt.geom.AffineTransform)#java.lang.String,getPresentationName()#boolean,addEdit(javax.swing.undo.UndoableEdit)#boolean,replaceEdit(javax.swing.undo.UndoableEdit)#void,redo()#void,undo()#boolean,isInProgress()#void,end()#boolean,canUndo()#boolean,canRedo()#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.JDoubleAttributeSlider.EditorEventHandler#void,propertyChange(java.beans.PropertyChangeEvent)#void,selectionChanged(org.jhotdraw.draw.FigureSelectionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.xml.JavaxDOMInput#javax.xml.parsers.DocumentBuilder,getBuilder()#org.jhotdraw.xml.JavaxDOMInput,CONSTRUCTOR(org.jhotdraw.xml.DOMFactory,java.io.InputStream)#org.jhotdraw.xml.JavaxDOMInput,CONSTRUCTOR(org.jhotdraw.xml.DOMFactory,java.io.Reader)#java.lang.String,getTagName()#java.lang.String,getAttribute(java.lang.String,java.lang.String)#java.lang.String,getText()#java.lang.String,getText(java.lang.String)#java.util.List<java.lang.String>,getInheritedAttribute(java.lang.String)#int,getAttribute(java.lang.String,int)#double,getAttribute(java.lang.String,double)#boolean,getAttribute(java.lang.String,boolean)#int,getElementCount()#int,getElementCount(java.lang.String)#void,openElement(int)#void,openElement(java.lang.String)#void,openElement(java.lang.String,int)#void,closeElement()#java.lang.Object,readObject()#java.lang.Object,readObject(int)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.SelectAllAction#org.jhotdraw.application.action.SelectAllAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ResizeHandleKit.ResizeHandle#java.lang.String,getToolTipText(java.awt.Point)#void,draw(java.awt.Graphics2D)#void,trackStart(java.awt.Point,int)#void,trackStep(java.awt.Point,java.awt.Point,int)#void,trackEnd(java.awt.Point,java.awt.Point,int)#void,trackStepNormalized(java.awt.geom.Point2D.Double)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.io.Base64.OutputStream#org.jhotdraw.io.Base64.OutputStream,CONSTRUCTOR(java.io.OutputStream)#org.jhotdraw.io.Base64.OutputStream,CONSTRUCTOR(java.io.OutputStream,int)#void,write(int)#void,write(byte[],int,int)#void,flushBase64()#void,close()#void,suspendEncoding()#void,resumeEncoding()#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.ExportAction#org.jhotdraw.app.action.ExportAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,actionPerformed(java.awt.event.ActionEvent)#void,exportToFile(org.jhotdraw.app.action.ExportableProject,java.io.File,javax.swing.filechooser.FileFilter,java.awt.Component)#void,fileExported(org.jhotdraw.app.action.ExportableProject,java.io.File,java.lang.Object)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.LineDecoration#void,draw(java.awt.Graphics2D,org.jhotdraw.draw.Figure,java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#double,getDecorationRadius(org.jhotdraw.draw.Figure)#java.awt.geom.Rectangle2D.Double,getDrawingArea(org.jhotdraw.draw.Figure,java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddyapplication.regex.MatchType#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.AbstractAttributedDecoratedFigure#void,draw(java.awt.Graphics2D)#void,drawFigure(java.awt.Graphics2D)#void,drawDecorator(java.awt.Graphics2D)#java.awt.geom.Rectangle2D.Double,getDrawingArea()#java.awt.geom.Rectangle2D.Double,getFigureDrawingArea()#void,setDecorator(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Figure,getDecorator()#void,updateDecoratorBounds()#boolean,contains(java.awt.geom.Point2D.Double)#boolean,figureContains(java.awt.geom.Point2D.Double)#void,read(org.jhotdraw.xml.DOMInput)#void,write(org.jhotdraw.xml.DOMOutput)#void,writeDecorator(org.jhotdraw.xml.DOMOutput)#void,readDecorator(org.jhotdraw.xml.DOMInput)#org.jhotdraw.draw.AbstractAttributedDecoratedFigure,clone()#void,#ExtendsOrImplements#()#
org.jhotdraw.geom.Insets2D.Double#org.jhotdraw.geom.Insets2D.Double,CONSTRUCTOR()#org.jhotdraw.geom.Insets2D.Double,CONSTRUCTOR(double,double,double,double)#double,getTop()#double,getLeft()#double,getBottom()#double,getRight()#void,set(double,double,double,double)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.HorizontalLayouter#java.awt.geom.Rectangle2D.Double,calculateLayout(org.jhotdraw.draw.CompositeFigure,java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#java.awt.geom.Rectangle2D.Double,layout(org.jhotdraw.draw.CompositeFigure,java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.TransformHandleKit.NorthEastHandle#void,trackStepNormalized(java.awt.geom.Point2D.Double)#java.awt.Cursor,getCursor()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.EllipseFigure#org.jhotdraw.draw.EllipseFigure,CONSTRUCTOR()#org.jhotdraw.draw.EllipseFigure,CONSTRUCTOR(double,double,double,double)#org.jhotdraw.draw.Connector,findConnector(java.awt.geom.Point2D.Double,org.jhotdraw.draw.ConnectionFigure)#org.jhotdraw.draw.Connector,findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)#java.awt.geom.Rectangle2D.Double,getBounds()#java.awt.geom.Rectangle2D.Double,getDrawingArea()#void,drawFill(java.awt.Graphics2D)#void,drawStroke(java.awt.Graphics2D)#boolean,contains(java.awt.geom.Point2D.Double)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,transform(java.awt.geom.AffineTransform)#org.jhotdraw.draw.EllipseFigure,clone()#void,restoreTransformTo(java.lang.Object)#java.lang.Object,getTransformRestoreData()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.GroupAction#org.jhotdraw.draw.action.GroupAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.action.GroupAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.CompositeFigure)#void,updateEnabledState()#boolean,canGroup()#void,actionPerformed(java.awt.event.ActionEvent)#java.util.Collection<org.jhotdraw.draw.Figure>,ungroupFigures(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.CompositeFigure)#void,groupFigures(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.CompositeFigure,java.util.Collection<org.jhotdraw.draw.Figure>)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.TransformHandleKit#org.jhotdraw.draw.TransformHandleKit,CONSTRUCTOR()#void,addCornerTransformHandles(org.jhotdraw.draw.Figure,java.util.Collection<org.jhotdraw.draw.Handle>)#void,addEdgeTransformHandles(org.jhotdraw.draw.Figure,java.util.Collection<org.jhotdraw.draw.Handle>)#void,addScaleMoveTransformHandles(org.jhotdraw.draw.Figure,java.util.Collection<org.jhotdraw.draw.Handle>)#void,addTransformHandles(org.jhotdraw.draw.Figure,java.util.Collection<org.jhotdraw.draw.Handle>)#org.jhotdraw.draw.Handle,south(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,southEast(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,southWest(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,north(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,northEast(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,northWest(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,east(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,west(org.jhotdraw.draw.Figure)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.VerticalLayouter#java.awt.geom.Rectangle2D.Double,calculateLayout(org.jhotdraw.draw.CompositeFigure,java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#java.awt.geom.Rectangle2D.Double,layout(org.jhotdraw.draw.CompositeFigure,java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.ButtonFactory#java.util.Collection<javax.swing.Action>,createDrawingActions(org.jhotdraw.draw.DrawingEditor)#java.util.Collection<javax.swing.Action>,createSelectionActions(org.jhotdraw.draw.DrawingEditor)#javax.swing.JToggleButton,addSelectionToolTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)#javax.swing.JToggleButton,addSelectionToolTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor,java.util.Collection<javax.swing.Action>,java.util.Collection<javax.swing.Action>)#javax.swing.JToggleButton,addToolTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.Tool,java.lang.String,org.jhotdraw.util.ResourceBundleUtil)#void,addZoomButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)#javax.swing.AbstractButton,createZoomButton(org.jhotdraw.draw.DrawingEditor)#javax.swing.AbstractButton,createZoomButton(org.jhotdraw.draw.DrawingView)#javax.swing.AbstractButton,createZoomButton(org.jhotdraw.draw.DrawingView,double[])#void,addAttributesButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)#void,addColorButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.gui.JPopupButton,createEditorColorButton(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.util.Map<java.lang.String,java.awt.Color>,int,java.lang.String,org.jhotdraw.util.ResourceBundleUtil)#org.jhotdraw.gui.JPopupButton,createEditorColorButton(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.util.Map<java.lang.String,java.awt.Color>,int,java.lang.String,org.jhotdraw.util.ResourceBundleUtil,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.gui.JPopupButton,createEditorColorButton(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.util.Map<java.lang.String,java.awt.Color>,int,java.lang.String,org.jhotdraw.util.ResourceBundleUtil,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>,java.awt.Shape)#org.jhotdraw.gui.JPopupButton,createSelectionColorButton(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.util.Map<java.lang.String,java.awt.Color>,int,java.lang.String,org.jhotdraw.util.ResourceBundleUtil)#org.jhotdraw.gui.JPopupButton,createSelectionColorButton(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.util.Map<java.lang.String,java.awt.Color>,int,java.lang.String,org.jhotdraw.util.ResourceBundleUtil,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.gui.JPopupButton,createSelectionColorButton(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.util.Map<java.lang.String,java.awt.Color>,int,java.lang.String,org.jhotdraw.util.ResourceBundleUtil,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>,java.awt.Shape)#void,addStrokeButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.gui.JPopupButton,createStrokeWidthButton(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.gui.JPopupButton,createStrokeWidthButton(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.util.ResourceBundleUtil)#org.jhotdraw.gui.JPopupButton,createStrokeWidthButton(org.jhotdraw.draw.DrawingEditor,double[])#org.jhotdraw.gui.JPopupButton,createStrokeWidthButton(org.jhotdraw.draw.DrawingEditor,double[],org.jhotdraw.util.ResourceBundleUtil)#org.jhotdraw.gui.JPopupButton,createStrokeDecorationButton(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.gui.JPopupButton,createStrokeDashesButton(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.gui.JPopupButton,createStrokeDashesButton(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.util.ResourceBundleUtil)#org.jhotdraw.gui.JPopupButton,createStrokeDashesButton(org.jhotdraw.draw.DrawingEditor,double[][])#org.jhotdraw.gui.JPopupButton,createStrokeDashesButton(org.jhotdraw.draw.DrawingEditor,double[][],org.jhotdraw.util.ResourceBundleUtil)#org.jhotdraw.gui.JPopupButton,createStrokeTypeButton(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.gui.JPopupButton,createStrokePlacementButton(org.jhotdraw.draw.DrawingEditor)#void,addFontButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.gui.JPopupButton,createFontButton(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.gui.JPopupButton,createFontButton(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.util.ResourceBundleUtil)#javax.swing.JButton,createFontStyleBoldButton(org.jhotdraw.draw.DrawingEditor)#javax.swing.JButton,createFontStyleBoldButton(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.util.ResourceBundleUtil)#javax.swing.JButton,createFontStyleItalicButton(org.jhotdraw.draw.DrawingEditor)#javax.swing.JButton,createFontStyleItalicButton(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.util.ResourceBundleUtil)#javax.swing.JButton,createFontStyleUnderlineButton(org.jhotdraw.draw.DrawingEditor)#javax.swing.JButton,createFontStyleUnderlineButton(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.util.ResourceBundleUtil)#void,addAlignmentButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)#javax.swing.AbstractButton,createToggleGridButton(org.jhotdraw.draw.DrawingEditor)#javax.swing.AbstractButton,createToggleGridButton(org.jhotdraw.draw.DrawingView)#org.jhotdraw.gui.JPopupButton,createStrokeCapButton(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.gui.JPopupButton,createStrokeCapButton(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.util.ResourceBundleUtil)#org.jhotdraw.gui.JPopupButton,createStrokeJoinButton(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.gui.JPopupButton,createStrokeJoinButton(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.util.ResourceBundleUtil)#javax.swing.JButton,createPickAttributesButton(org.jhotdraw.draw.DrawingEditor)#javax.swing.JButton,createApplyAttributesButton(org.jhotdraw.draw.DrawingEditor)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.FindAction#org.jhotdraw.app.action.FindAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.AboutAction#org.jhotdraw.application.action.AboutAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
net.n3.nanoxml.ValidatorPlugin#net.n3.nanoxml.ValidatorPlugin,CONSTRUCTOR()#void,finalize()#net.n3.nanoxml.IXMLValidator,getDelegate()#void,setDelegate(net.n3.nanoxml.IXMLValidator)#void,setParameterEntityResolver(net.n3.nanoxml.IXMLEntityResolver)#net.n3.nanoxml.IXMLEntityResolver,getParameterEntityResolver()#void,parseDTD(java.lang.String,net.n3.nanoxml.IXMLReader,net.n3.nanoxml.IXMLEntityResolver,boolean)#void,elementStarted(java.lang.String,java.lang.String,int)#void,elementEnded(java.lang.String,java.lang.String,int)#void,elementAttributesProcessed(java.lang.String,java.util.Properties,java.lang.String,int)#void,attributeAdded(java.lang.String,java.lang.String,java.lang.String,int)#void,PCDataAdded(java.lang.String,int)#void,missingElement(java.lang.String,int,java.lang.String,java.lang.String)#void,unexpectedElement(java.lang.String,int,java.lang.String,java.lang.String)#void,missingAttribute(java.lang.String,int,java.lang.String,java.lang.String)#void,unexpectedAttribute(java.lang.String,int,java.lang.String,java.lang.String)#void,invalidAttributeValue(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)#void,missingPCData(java.lang.String,int,java.lang.String)#void,unexpectedPCData(java.lang.String,int,java.lang.String)#void,validationError(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.FigureEvent#org.jhotdraw.draw.FigureEvent,CONSTRUCTOR(org.jhotdraw.draw.Figure,java.awt.geom.Rectangle2D.Double)#org.jhotdraw.draw.FigureEvent,CONSTRUCTOR(org.jhotdraw.draw.Figure,org.jhotdraw.draw.AttributeKey,java.lang.Object,java.lang.Object)#org.jhotdraw.draw.Figure,getFigure()#java.awt.geom.Rectangle2D.Double,getInvalidatedArea()#org.jhotdraw.draw.AttributeKey,getAttribute()#java.lang.Object,getOldValue()#java.lang.Object,getNewValue()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddy.JEditorArea#org.jhotdraw.samples.teddy.JEditorArea,CONSTRUCTOR()#javax.swing.text.StyledEditorKit,getStyledEditorKit()#void,setLineWrap(boolean)#boolean,getLineWrap()#boolean,getScrollableTracksViewportWidth()#void,rebuildView()#void,replaceRange(java.lang.String,int,int)#int,getLineOfOffset(int)#int,getLineStartOffset(int)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.HandleListener#void,areaInvalidated(org.jhotdraw.draw.HandleEvent)#void,handleRequestRemove(org.jhotdraw.draw.HandleEvent)#void,handleRequestSecondaryHandles(org.jhotdraw.draw.HandleEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.AlignAction.West#org.jhotdraw.draw.action.AlignAction.West,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.action.AlignAction.West,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.util.ResourceBundleUtil)#void,alignFigures(java.util.Collection,java.awt.geom.Rectangle2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ToolEvent#org.jhotdraw.draw.ToolEvent,CONSTRUCTOR(org.jhotdraw.draw.Tool,org.jhotdraw.draw.DrawingView,java.awt.Rectangle)#org.jhotdraw.draw.Tool,getTool()#org.jhotdraw.draw.DrawingView,getView()#java.awt.Rectangle,getInvalidatedArea()#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.MinimizeAction#org.jhotdraw.application.action.MinimizeAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.EditableComponent#void,delete()#void,duplicate()#void,selectAll()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddy.text.NumberedParagraphView#org.jhotdraw.samples.teddy.text.NumberedParagraphView,CONSTRUCTOR(javax.swing.text.Element,org.jhotdraw.samples.teddy.text.NumberedViewFactory)#short,getLeftInset()#void,paintChild(java.awt.Graphics,java.awt.Rectangle,int)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.DefaultAttributeAction#org.jhotdraw.draw.action.DefaultAttributeAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey)#org.jhotdraw.draw.action.DefaultAttributeAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.action.DefaultAttributeAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey[])#org.jhotdraw.draw.action.DefaultAttributeAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,javax.swing.Icon)#org.jhotdraw.draw.action.DefaultAttributeAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.lang.String)#org.jhotdraw.draw.action.DefaultAttributeAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.lang.String,javax.swing.Icon)#org.jhotdraw.draw.action.DefaultAttributeAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey[],java.lang.String,javax.swing.Icon)#org.jhotdraw.draw.action.DefaultAttributeAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey[],java.lang.String,javax.swing.Icon,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#void,actionPerformed(java.awt.event.ActionEvent)#void,changeAttribute()#void,selectionChanged(org.jhotdraw.draw.FigureSelectionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.AlignAction.East#org.jhotdraw.draw.action.AlignAction.East,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.action.AlignAction.East,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.util.ResourceBundleUtil)#void,alignFigures(java.util.Collection,java.awt.geom.Rectangle2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.util.prefs.PreferencesUtil#void,installFramePrefsHandler(java.util.prefs.Preferences,java.lang.String,java.awt.Window)#void,installPalettePrefsHandler(java.util.prefs.Preferences,java.lang.String,java.awt.Window)#void,installPalettePrefsHandler(java.util.prefs.Preferences,java.lang.String,java.awt.Window,int)#void,installInternalFramePrefsHandler(java.util.prefs.Preferences,java.lang.String,javax.swing.JInternalFrame,javax.swing.JDesktopPane)#void,installToolBarPrefsHandler(java.util.prefs.Preferences,java.lang.String,javax.swing.JToolBar)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.BidirectionalConnectionTool#org.jhotdraw.draw.BidirectionalConnectionTool,CONSTRUCTOR(org.jhotdraw.draw.ConnectionFigure)#org.jhotdraw.draw.BidirectionalConnectionTool,CONSTRUCTOR(org.jhotdraw.draw.ConnectionFigure,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#void,mouseMoved(java.awt.event.MouseEvent)#void,mousePressed(java.awt.event.MouseEvent)#void,mouseDragged(java.awt.event.MouseEvent)#void,mouseReleased(java.awt.event.MouseEvent)#void,activate(org.jhotdraw.draw.DrawingEditor)#void,deactivate(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.ConnectionFigure,createFigure()#org.jhotdraw.draw.Figure,findSource(java.awt.geom.Point2D.Double,org.jhotdraw.draw.Drawing)#org.jhotdraw.draw.Figure,findTarget(java.awt.geom.Point2D.Double,org.jhotdraw.draw.Drawing)#org.jhotdraw.draw.ConnectionFigure,findConnection(java.awt.geom.Point2D.Double,org.jhotdraw.draw.Drawing)#org.jhotdraw.draw.ConnectionFigure,getConnection()#void,trackConnectors(java.awt.event.MouseEvent)#void,draw(java.awt.Graphics2D)#org.jhotdraw.draw.Figure,findConnectionStart(java.awt.geom.Point2D.Double,org.jhotdraw.draw.Drawing)#org.jhotdraw.draw.Connector,getStartConnector()#org.jhotdraw.draw.Connector,getEndConnector()#org.jhotdraw.draw.Connector,getTargetConnector()#org.jhotdraw.draw.Figure,getTargetFigure()#org.jhotdraw.draw.Figure,getCreatedFigure()#void,figureAreaInvalidated(org.jhotdraw.draw.FigureEvent)#void,figureAdded(org.jhotdraw.draw.FigureEvent)#void,figureChanged(org.jhotdraw.draw.FigureEvent)#void,figureRemoved(org.jhotdraw.draw.FigureEvent)#void,figureRequestRemove(org.jhotdraw.draw.FigureEvent)#void,figureAttributeChanged(org.jhotdraw.draw.FigureEvent)#void,figureHandlesChanged(org.jhotdraw.draw.FigureEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.ClearAction#org.jhotdraw.app.action.ClearAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,doIt(org.jhotdraw.app.Project)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.ExportableDocumentView#javax.swing.JFileChooser,getExportChooser()#void,export(java.io.File,javax.swing.filechooser.FileFilter,java.awt.Component)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.LocatorConnector#org.jhotdraw.draw.LocatorConnector,CONSTRUCTOR()#org.jhotdraw.draw.LocatorConnector,CONSTRUCTOR(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Locator)#java.awt.geom.Point2D.Double,locate(org.jhotdraw.draw.ConnectionFigure)#boolean,contains(java.awt.geom.Point2D.Double)#java.awt.geom.Rectangle2D.Double,getBounds()#void,read(org.jhotdraw.xml.DOMInput)#void,write(org.jhotdraw.xml.DOMOutput)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.Tool#void,activate(org.jhotdraw.draw.DrawingEditor)#void,deactivate(org.jhotdraw.draw.DrawingEditor)#void,editDelete()#void,editCut()#void,editCopy()#void,editDuplicate()#void,editPaste()#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.JDoubleAttributeSliderBeanInfo#java.beans.BeanDescriptor,getBeanDescriptor()#java.beans.PropertyDescriptor[],getPropertyDescriptors()#java.beans.EventSetDescriptor[],getEventSetDescriptors()#java.beans.MethodDescriptor[],getMethodDescriptors()#int,getDefaultPropertyIndex()#int,getDefaultEventIndex()#java.awt.Image,getIcon(int)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ResizeHandleKit.NorthEastHandle#void,trackStepNormalized(java.awt.geom.Point2D.Double)#java.awt.Cursor,getCursor()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.GenericListener#java.lang.Object,create(java.lang.Class,java.lang.String,java.lang.Object,java.lang.String)#java.lang.Object,create(java.lang.reflect.Method,java.lang.Object,java.lang.reflect.Method)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle#org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle,CONSTRUCTOR(org.jhotdraw.draw.Figure)#void,draw(java.awt.Graphics2D)#java.awt.Rectangle,basicGetBounds()#void,trackStart(java.awt.Point,int)#void,trackStep(java.awt.Point,java.awt.Point,int)#void,trackEnd(java.awt.Point,java.awt.Point,int)#java.lang.String,getToolTipText(java.awt.Point)#void,#ExtendsOrImplements#()#
org.jhotdraw.xml.NanoXMLDOMOutput#org.jhotdraw.xml.NanoXMLDOMOutput,CONSTRUCTOR(org.jhotdraw.xml.DOMFactory)#void,save(java.io.OutputStream)#void,save(java.io.Writer)#void,print(java.io.PrintWriter)#void,openElement(java.lang.String)#void,closeElement()#void,addComment(java.lang.String)#void,addText(java.lang.String)#void,addAttribute(java.lang.String,java.lang.String)#void,addAttribute(java.lang.String,int)#void,addAttribute(java.lang.String,boolean)#void,addAttribute(java.lang.String,float)#void,addAttribute(java.lang.String,double)#void,writeObject(java.lang.Object)#void,addAttribute(java.lang.String,float,float)#void,addAttribute(java.lang.String,int,int)#void,addAttribute(java.lang.String,double,double)#void,addAttribute(java.lang.String,boolean,boolean)#void,addAttribute(java.lang.String,java.lang.String,java.lang.String)#java.lang.Object,getPrototype()#void,setDoctype(java.lang.String)#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.JStringAttributeField.EditorEventHandler#void,propertyChange(java.beans.PropertyChangeEvent)#void,selectionChanged(org.jhotdraw.draw.FigureSelectionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.mini.SelectionToolSample#org.jhotdraw.samples.mini.SelectionToolSample,CONSTRUCTOR()#void,main(java.lang.String[])#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.TransformHandleKit.EastHandle#void,trackStepNormalized(java.awt.geom.Point2D.Double)#java.awt.Cursor,getCursor()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.TextHolderFigure#boolean,isEditable()#java.awt.Font,getFont()#java.awt.Color,getTextColor()#java.awt.Color,getFillColor()#org.jhotdraw.draw.TextHolderFigure,getLabelFor()#int,getTabSize()#java.lang.String,getText()#void,setText(java.lang.String)#int,getTextColumns()#void,setFontSize(float)#float,getFontSize()#org.jhotdraw.geom.Insets2D.Double,getInsets()#boolean,isTextOverflow()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.TriangleFigure#org.jhotdraw.draw.TriangleFigure,CONSTRUCTOR()#org.jhotdraw.draw.TriangleFigure,CONSTRUCTOR(org.jhotdraw.draw.AttributeKeys.Orientation)#org.jhotdraw.draw.TriangleFigure,CONSTRUCTOR(double,double,double,double)#org.jhotdraw.draw.TriangleFigure,CONSTRUCTOR(double,double,double,double,org.jhotdraw.draw.AttributeKeys.Orientation)#org.jhotdraw.draw.Connector,findConnector(java.awt.geom.Point2D.Double,org.jhotdraw.draw.ConnectionFigure)#org.jhotdraw.draw.Connector,findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)#java.awt.geom.Rectangle2D.Double,getBounds()#void,drawFill(java.awt.Graphics2D)#void,drawStroke(java.awt.Graphics2D)#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(int)#org.jhotdraw.geom.BezierPath,getBezierPath()#boolean,contains(java.awt.geom.Point2D.Double)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#java.awt.geom.Rectangle2D.Double,getDrawingArea()#java.awt.geom.Point2D.Double,chop(java.awt.geom.Point2D.Double)#void,transform(java.awt.geom.AffineTransform)#org.jhotdraw.draw.TriangleFigure,clone()#void,restoreTransformTo(java.lang.Object)#java.lang.Object,getTransformRestoreData()#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.CloseAction#org.jhotdraw.application.action.CloseAction,CONSTRUCTOR()#void,doIt(org.jhotdraw.application.DocumentView)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.SlantedLiner#org.jhotdraw.draw.SlantedLiner,CONSTRUCTOR()#org.jhotdraw.draw.SlantedLiner,CONSTRUCTOR(double)#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(org.jhotdraw.geom.BezierPath)#void,lineout(org.jhotdraw.draw.ConnectionFigure)#void,read(org.jhotdraw.xml.DOMInput)#void,write(org.jhotdraw.xml.DOMOutput)#org.jhotdraw.draw.Liner,clone()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddy.CharacterSetAccessory#org.jhotdraw.samples.teddy.CharacterSetAccessory,CONSTRUCTOR()#void,fetchAvailableCharSets()#java.lang.String,getCharacterSet()#java.lang.String,getLineSeparator()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.DefaultDrawingEditor#org.jhotdraw.draw.DefaultDrawingEditor,CONSTRUCTOR()#void,setTool(org.jhotdraw.draw.Tool)#void,areaInvalidated(org.jhotdraw.draw.ToolEvent)#void,toolStarted(org.jhotdraw.draw.ToolEvent)#void,setActiveView(org.jhotdraw.draw.DrawingView)#void,toolDone(org.jhotdraw.draw.ToolEvent)#org.jhotdraw.draw.Tool,getTool()#org.jhotdraw.draw.DrawingView,getActiveView()#void,applyDefaultAttributesTo(org.jhotdraw.draw.Figure)#java.lang.Object,getDefaultAttribute(org.jhotdraw.draw.AttributeKey)#void,setDefaultAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)#void,remove(org.jhotdraw.draw.DrawingView)#void,add(org.jhotdraw.draw.DrawingView)#void,setCursor(java.awt.Cursor)#java.util.Collection<org.jhotdraw.draw.DrawingView>,getDrawingViews()#org.jhotdraw.draw.DrawingView,findView(java.awt.Container)#void,setEnabled(boolean)#boolean,isEnabled()#java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>,getDefaultAttributes()#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.datatransfer.ImageTransferable#org.jhotdraw.gui.datatransfer.ImageTransferable,CONSTRUCTOR(java.awt.Image)#boolean,isDataFlavorSupported(java.awt.datatransfer.DataFlavor)#java.lang.Object,getTransferData(java.awt.datatransfer.DataFlavor)#java.awt.datatransfer.DataFlavor[],getTransferDataFlavors()#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.ToggleToolBarAction#org.jhotdraw.app.action.ToggleToolBarAction,CONSTRUCTOR(javax.swing.JToolBar,java.lang.String)#void,putValue(java.lang.String,java.lang.Object)#void,setToolBar(javax.swing.JToolBar)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddyapplication.Main#void,main(java.lang.String[])#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.DefaultDrawingView#org.jhotdraw.draw.DefaultDrawingView,CONSTRUCTOR()#org.jhotdraw.draw.Drawing,getDrawing()#java.lang.String,getToolTipText(java.awt.event.MouseEvent)#void,setEmptyDrawingMessage(java.lang.String)#java.lang.String,getEmptyDrawingMessage()#void,paintComponent(java.awt.Graphics)#void,printComponent(java.awt.Graphics)#void,drawBackground(java.awt.Graphics2D)#void,drawGrid(java.awt.Graphics2D)#void,drawDrawing(java.awt.Graphics2D)#void,drawHandles(java.awt.Graphics2D)#void,drawTool(java.awt.Graphics2D)#void,setDrawing(org.jhotdraw.draw.Drawing)#void,repaint(java.awt.geom.Rectangle2D.Double)#void,areaInvalidated(org.jhotdraw.draw.DrawingEvent)#void,areaInvalidated(org.jhotdraw.draw.HandleEvent)#void,figureAdded(org.jhotdraw.draw.DrawingEvent)#void,figureRemoved(org.jhotdraw.draw.DrawingEvent)#void,invalidate()#void,addToSelection(org.jhotdraw.draw.Figure)#void,addToSelection(java.util.Collection<org.jhotdraw.draw.Figure>)#void,removeFromSelection(org.jhotdraw.draw.Figure)#void,toggleSelection(org.jhotdraw.draw.Figure)#void,setEnabled(boolean)#void,selectAll()#void,clearSelection()#boolean,isFigureSelected(org.jhotdraw.draw.Figure)#java.util.Set<org.jhotdraw.draw.Figure>,getSelectedFigures()#int,getSelectionCount()#org.jhotdraw.draw.Handle,findHandle(java.awt.Point)#java.util.Collection<org.jhotdraw.draw.Handle>,getCompatibleHandles(org.jhotdraw.draw.Handle)#org.jhotdraw.draw.Figure,findFigure(java.awt.Point)#java.util.Collection<org.jhotdraw.draw.Figure>,findFigures(java.awt.Rectangle)#java.util.Collection<org.jhotdraw.draw.Figure>,findFiguresWithin(java.awt.Rectangle)#void,repaintHandles()#void,addFigureSelectionListener(org.jhotdraw.draw.FigureSelectionListener)#void,removeFigureSelectionListener(org.jhotdraw.draw.FigureSelectionListener)#void,fireSelectionChanged(java.util.Set<org.jhotdraw.draw.Figure>,java.util.Set<org.jhotdraw.draw.Figure>)#void,handleRequestRemove(org.jhotdraw.draw.HandleEvent)#void,invalidateDimension()#org.jhotdraw.draw.Constrainer,getConstrainer()#void,setConstrainer(org.jhotdraw.draw.Constrainer)#java.awt.Dimension,getPreferredSize()#java.awt.geom.Rectangle2D.Double,getDrawingArea()#java.awt.Point,drawingToView(java.awt.geom.Point2D.Double)#java.awt.geom.Point2D.Double,viewToDrawing(java.awt.Point)#java.awt.Rectangle,drawingToView(java.awt.geom.Rectangle2D.Double)#java.awt.geom.Rectangle2D.Double,viewToDrawing(java.awt.Rectangle)#javax.swing.JComponent,getComponent()#double,getScaleFactor()#void,setScaleFactor(double)#void,fireViewTransformChanged()#void,setHandleDetailLevel(int)#int,getHandleDetailLevel()#void,handleRequestSecondaryHandles(org.jhotdraw.draw.HandleEvent)#java.awt.geom.AffineTransform,getDrawingToViewTransform()#void,delete()#void,duplicate()#void,removeNotify(org.jhotdraw.draw.DrawingEditor)#void,addNotify(org.jhotdraw.draw.DrawingEditor)#void,#ExtendsOrImplements#()#
net.n3.nanoxml.ContentReader#void,finalize()#int,read(char[],int,int)#void,close()#void,#ExtendsOrImplements#()#
org.jhotdraw.geom.QuadTree#org.jhotdraw.geom.QuadTree,CONSTRUCTOR()#org.jhotdraw.geom.QuadTree,CONSTRUCTOR(java.awt.geom.Rectangle2D.Double)#void,add(T,java.awt.geom.Rectangle2D.Double)#void,reorganize()#void,remove(T)#java.util.Collection<T>,findContains(java.awt.geom.Point2D.Double)#java.util.Collection<T>,findIntersects(java.awt.geom.Rectangle2D)#java.util.Collection<T>,findIntersects(java.awt.geom.Rectangle2D.Double)#java.util.Collection<T>,findInside(java.awt.geom.Rectangle2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.figures.SVGEllipseFigure#org.jhotdraw.samples.svg.figures.SVGEllipseFigure,CONSTRUCTOR()#org.jhotdraw.samples.svg.figures.SVGEllipseFigure,CONSTRUCTOR(double,double,double,double)#void,drawFill(java.awt.Graphics2D)#void,drawStroke(java.awt.Graphics2D)#double,getX()#double,getY()#double,getWidth()#double,getHeight()#java.awt.geom.Rectangle2D.Double,getBounds()#java.awt.geom.Rectangle2D.Double,getDrawingArea()#boolean,contains(java.awt.geom.Point2D.Double)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,transform(java.awt.geom.AffineTransform)#void,restoreTransformTo(java.lang.Object)#java.lang.Object,getTransformRestoreData()#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(int)#boolean,canConnect()#org.jhotdraw.draw.Connector,findConnector(java.awt.geom.Point2D.Double,org.jhotdraw.draw.ConnectionFigure)#org.jhotdraw.draw.Connector,findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)#org.jhotdraw.samples.svg.figures.SVGEllipseFigure,clone()#boolean,isEmpty()#void,invalidate()#void,#ExtendsOrImplements#()#
org.apache.batik.ext.awt.MultipleGradientPaintContext#org.apache.batik.ext.awt.MultipleGradientPaintContext,CONSTRUCTOR(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints,float[],java.awt.Color[],org.apache.batik.ext.awt.MultipleGradientPaint.CycleMethodEnum,org.apache.batik.ext.awt.MultipleGradientPaint.ColorSpaceEnum)#void,calculateGradientFractions(java.awt.Color[],java.awt.Color[])#int,indexIntoGradientsArrays(float)#int,indexGradientAntiAlias(float,float)#java.awt.image.Raster,getRaster(int,int,int,int)#void,fillRaster(int,int,int,int,int,int,int)#java.awt.image.WritableRaster,getCachedRaster(java.awt.image.ColorModel,int,int)#void,putCachedRaster(java.awt.image.ColorModel,java.awt.image.WritableRaster)#void,dispose()#java.awt.image.ColorModel,getColorModel()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.BezierLabelLocator#org.jhotdraw.draw.BezierLabelLocator,CONSTRUCTOR()#org.jhotdraw.draw.BezierLabelLocator,CONSTRUCTOR(double,double,double)#java.awt.geom.Point2D.Double,locate(org.jhotdraw.draw.Figure)#java.awt.geom.Point2D.Double,locate(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure)#java.awt.geom.Point2D.Double,getRelativePoint(org.jhotdraw.draw.BezierFigure)#java.awt.geom.Point2D.Double,getRelativeLabelPoint(org.jhotdraw.draw.BezierFigure,org.jhotdraw.draw.Figure)#void,read(org.jhotdraw.xml.DOMInput)#void,write(org.jhotdraw.xml.DOMOutput)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.FindAction#org.jhotdraw.application.action.FindAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.InputFormat#javax.swing.filechooser.FileFilter,getFileFilter()#javax.swing.JComponent,getInputFormatAccessory()#void,read(java.io.File,org.jhotdraw.draw.Drawing)#void,read(java.io.InputStream,org.jhotdraw.draw.Drawing)#boolean,isDataFlavorSupported(java.awt.datatransfer.DataFlavor)#java.util.List<org.jhotdraw.draw.Figure>,readFigures(java.awt.datatransfer.Transferable)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ConnectionTool#org.jhotdraw.draw.ConnectionTool,CONSTRUCTOR(org.jhotdraw.draw.ConnectionFigure)#org.jhotdraw.draw.ConnectionTool,CONSTRUCTOR(org.jhotdraw.draw.ConnectionFigure,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.ConnectionTool,CONSTRUCTOR(org.jhotdraw.draw.ConnectionFigure,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>,java.lang.String)#org.jhotdraw.draw.ConnectionTool,CONSTRUCTOR(java.lang.String)#org.jhotdraw.draw.ConnectionTool,CONSTRUCTOR(java.lang.String,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>,java.lang.String)#org.jhotdraw.draw.ConnectionFigure,getPrototype()#void,mouseMoved(java.awt.event.MouseEvent)#void,repaintConnectors(java.awt.event.MouseEvent)#void,mousePressed(java.awt.event.MouseEvent)#void,mouseDragged(java.awt.event.MouseEvent)#void,mouseReleased(java.awt.event.MouseEvent)#void,activate(org.jhotdraw.draw.DrawingEditor)#void,deactivate(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.ConnectionFigure,createFigure()#void,draw(java.awt.Graphics2D)#void,creationFinished(org.jhotdraw.draw.Figure)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.DefaultMDIApplication#org.jhotdraw.app.DefaultMDIApplication,CONSTRUCTOR()#void,initApplicationActions()#void,initProjectActions(org.jhotdraw.app.Project)#void,launch(java.lang.String[])#void,init()#void,configure(java.lang.String[])#void,initLookAndFeel()#void,show(org.jhotdraw.app.Project)#void,hide(org.jhotdraw.app.Project)#org.jhotdraw.app.Project,getCurrentProject()#void,setCurrentProject(org.jhotdraw.app.Project)#boolean,isSharingToolsAmongProjects()#java.awt.Component,getComponent()#java.awt.Component,wrapDesktopPane(java.awt.Component,java.util.LinkedList<javax.swing.Action>)#javax.swing.JMenuBar,createMenuBar()#javax.swing.JMenu,createFileMenu()#javax.swing.JMenu,createWindowMenu()#javax.swing.JMenu,createHelpMenu()#void,#ExtendsOrImplements#()#
org.jhotdraw.util.ResourceBundleUtil#org.jhotdraw.util.ResourceBundleUtil,CONSTRUCTOR(java.util.ResourceBundle)#java.util.ResourceBundle,getBundle()#java.lang.String,getString(java.lang.String)#java.lang.Integer,getInteger(java.lang.String)#javax.swing.ImageIcon,getImageIcon(java.lang.String,java.lang.Class)#char,getMnemonic(java.lang.String)#char,getMnem(java.lang.String)#java.lang.String,getTip(java.lang.String)#javax.swing.KeyStroke,getKeyStroke(java.lang.String)#javax.swing.KeyStroke,getAcc(java.lang.String)#java.lang.String,getFormatted(java.lang.String,java.lang.String)#java.lang.String,getFormatted(java.lang.String,java.lang.Object)#org.jhotdraw.util.ResourceBundleUtil,getLAFBundle(java.lang.String)#void,setBaseClass(java.lang.Class)#java.lang.Class,getBaseClass()#void,configureAction(javax.swing.Action,java.lang.String)#void,configureAction(javax.swing.Action,java.lang.String,java.lang.Class)#void,configureButton(javax.swing.AbstractButton,java.lang.String)#void,configureButton(javax.swing.AbstractButton,java.lang.String,java.lang.Class)#void,configureToolBarButton(javax.swing.AbstractButton,java.lang.String)#void,configureToolBarButton(javax.swing.AbstractButton,java.lang.String,java.lang.Class)#void,configureMenu(javax.swing.JMenuItem,java.lang.String)#javax.swing.JMenuItem,createMenuItem(javax.swing.Action,java.lang.String)#org.jhotdraw.util.ResourceBundleUtil,getLAFBundle(java.lang.String,java.util.Locale)#java.lang.String,toString()#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.JStringAttributeArea#org.jhotdraw.gui.JStringAttributeArea,CONSTRUCTOR()#org.jhotdraw.gui.JStringAttributeArea,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey<java.lang.String>)#void,setAttributeKey(org.jhotdraw.draw.AttributeKey<java.lang.String>)#void,setEditor(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.DrawingEditor,getEditor()#org.jhotdraw.draw.DrawingView,getView()#void,updateEnabledState()#void,updateField()#void,dispose()#void,paintComponent(java.awt.Graphics)#void,#ExtendsOrImplements#()#
org.jhotdraw.xml.DOMInput#java.lang.String,getTagName()#java.lang.String,getAttribute(java.lang.String,java.lang.String)#java.lang.String,getText()#java.lang.String,getText(java.lang.String)#int,getAttribute(java.lang.String,int)#double,getAttribute(java.lang.String,double)#boolean,getAttribute(java.lang.String,boolean)#java.util.List<java.lang.String>,getInheritedAttribute(java.lang.String)#int,getElementCount()#int,getElementCount(java.lang.String)#void,openElement(int)#void,openElement(java.lang.String)#void,openElement(java.lang.String,int)#void,closeElement()#java.lang.Object,readObject()#java.lang.Object,readObject(int)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.SVGConstants#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddy.action.FindAction#org.jhotdraw.samples.teddy.action.FindAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.undo.UndoRedoManager.UndoAction#org.jhotdraw.undo.UndoRedoManager.UndoAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.GroupFigure#org.jhotdraw.draw.GroupFigure,CONSTRUCTOR()#boolean,canConnect()#java.awt.geom.Point2D.Double,chop(java.awt.geom.Point2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.AbstractEditorAction#org.jhotdraw.draw.action.AbstractEditorAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#void,setEditor(org.jhotdraw.draw.DrawingEditor)#void,updateEnabledState()#org.jhotdraw.draw.DrawingEditor,getEditor()#org.jhotdraw.draw.DrawingView,getView()#org.jhotdraw.draw.Drawing,getDrawing()#void,fireUndoableEditHappened(javax.swing.undo.UndoableEdit)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.MoveAction.South#org.jhotdraw.draw.action.MoveAction.South,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.TransformHandleKit.SouthEastHandle#void,trackStepNormalized(java.awt.geom.Point2D.Double)#java.awt.Cursor,getCursor()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.AbstractLocator#org.jhotdraw.draw.AbstractLocator,CONSTRUCTOR()#java.awt.geom.Point2D.Double,locate(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.FigureListener#void,figureAreaInvalidated(org.jhotdraw.draw.FigureEvent)#void,figureAttributeChanged(org.jhotdraw.draw.FigureEvent)#void,figureHandlesChanged(org.jhotdraw.draw.FigureEvent)#void,figureChanged(org.jhotdraw.draw.FigureEvent)#void,figureAdded(org.jhotdraw.draw.FigureEvent)#void,figureRemoved(org.jhotdraw.draw.FigureEvent)#void,figureRequestRemove(org.jhotdraw.draw.FigureEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.util.prefs.ToolBarPrefsHandler#org.jhotdraw.util.prefs.ToolBarPrefsHandler,CONSTRUCTOR(javax.swing.JToolBar,java.lang.String,java.util.prefs.Preferences)#void,componentHidden(java.awt.event.ComponentEvent)#void,componentMoved(java.awt.event.ComponentEvent)#void,componentResized(java.awt.event.ComponentEvent)#void,componentShown(java.awt.event.ComponentEvent)#void,ancestorAdded(javax.swing.event.AncestorEvent)#void,ancestorMoved(javax.swing.event.AncestorEvent)#void,ancestorRemoved(javax.swing.event.AncestorEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.MoveConstrainedAction.South#org.jhotdraw.draw.action.MoveConstrainedAction.South,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.SVGDrawingPanel#org.jhotdraw.samples.svg.SVGDrawingPanel,CONSTRUCTOR()#void,setDrawing(org.jhotdraw.draw.Drawing)#org.jhotdraw.draw.Drawing,getDrawing()#org.jhotdraw.draw.DrawingView,getView()#org.jhotdraw.draw.DrawingEditor,getEditor()#java.util.Collection<javax.swing.Action>,createSelectionActions(org.jhotdraw.draw.DrawingEditor)#void,#ExtendsOrImplements#()#
org.jhotdraw.beans.AbstractBean#void,addPropertyChangeListener(java.beans.PropertyChangeListener)#void,addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)#void,removePropertyChangeListener(java.beans.PropertyChangeListener)#void,removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)#void,firePropertyChange(java.lang.String,boolean,boolean)#void,firePropertyChange(java.lang.String,int,int)#void,firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)#org.jhotdraw.beans.AbstractBean,clone()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.PaletteMenuItemUI#org.jhotdraw.draw.action.PaletteMenuItemUI,CONSTRUCTOR()#void,installDefaults()#java.awt.Dimension,getPreferredMenuItemSize(javax.swing.JComponent,javax.swing.Icon,javax.swing.Icon,int)#void,paint(java.awt.Graphics,javax.swing.JComponent)#void,#ExtendsOrImplements#()#
org.jhotdraw.geom.Bezier#void,main(java.lang.String[])#java.awt.geom.GeneralPath,fitCurve(java.awt.Polygon,double)#java.awt.geom.GeneralPath,fitCurve(java.awt.geom.Point2D.Double[],double)#org.jhotdraw.geom.BezierPath,fitBezierCurve(org.jhotdraw.geom.BezierPath,double)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.DefaultDrawing#org.jhotdraw.draw.DefaultDrawing,CONSTRUCTOR()#org.jhotdraw.draw.DefaultDrawing.FigureHandler,createFigureHandler()#int,indexOf(org.jhotdraw.draw.Figure)#void,basicAdd(int,org.jhotdraw.draw.Figure)#void,basicRemove(org.jhotdraw.draw.Figure)#void,draw(java.awt.Graphics2D)#void,draw(java.awt.Graphics2D,java.util.Collection<org.jhotdraw.draw.Figure>)#java.util.List<org.jhotdraw.draw.Figure>,sort(java.util.Collection<org.jhotdraw.draw.Figure>)#org.jhotdraw.draw.Figure,findFigure(java.awt.geom.Point2D.Double)#org.jhotdraw.draw.Figure,findFigureExcept(java.awt.geom.Point2D.Double,org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Figure,findFigureBehind(java.awt.geom.Point2D.Double,org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Figure,findFigureBehind(java.awt.geom.Point2D.Double,java.util.Collection<org.jhotdraw.draw.Figure>)#org.jhotdraw.draw.Figure,findFigureExcept(java.awt.geom.Point2D.Double,java.util.Collection<org.jhotdraw.draw.Figure>)#java.util.List<org.jhotdraw.draw.Figure>,findFigures(java.awt.geom.Rectangle2D.Double)#java.util.List<org.jhotdraw.draw.Figure>,findFiguresWithin(java.awt.geom.Rectangle2D.Double)#java.util.List<org.jhotdraw.draw.Figure>,getFigures()#org.jhotdraw.draw.Figure,findFigureInside(java.awt.geom.Point2D.Double)#java.util.List<org.jhotdraw.draw.Figure>,getFiguresFrontToBack()#void,bringToFront(org.jhotdraw.draw.Figure)#void,sendToBack(org.jhotdraw.draw.Figure)#boolean,contains(org.jhotdraw.draw.Figure)#void,setCanvasSize(org.jhotdraw.geom.Dimension2DDouble)#org.jhotdraw.geom.Dimension2DDouble,getCanvasSize()#void,#ExtendsOrImplements#()#
org.jhotdraw.xml.NanoXMLDOMInput#org.jhotdraw.xml.NanoXMLDOMInput,CONSTRUCTOR(org.jhotdraw.xml.DOMFactory,java.io.InputStream)#org.jhotdraw.xml.NanoXMLDOMInput,CONSTRUCTOR(org.jhotdraw.xml.DOMFactory,java.io.Reader)#java.lang.String,getTagName()#java.lang.String,getAttribute(java.lang.String,java.lang.String)#java.util.List<java.lang.String>,getInheritedAttribute(java.lang.String)#java.lang.String,getText()#java.lang.String,getText(java.lang.String)#int,getAttribute(java.lang.String,int)#double,getAttribute(java.lang.String,double)#boolean,getAttribute(java.lang.String,boolean)#int,getElementCount()#int,getElementCount(java.lang.String)#void,openElement(int)#void,openElement(java.lang.String)#void,openElement(java.lang.String,int)#void,closeElement()#java.lang.Object,readObject()#java.lang.Object,readObject(int)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.DuplicateAction#org.jhotdraw.app.action.DuplicateAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.DefaultDrawingViewBeanInfo#java.beans.BeanDescriptor,getBeanDescriptor()#java.beans.PropertyDescriptor[],getPropertyDescriptors()#java.beans.EventSetDescriptor[],getEventSetDescriptors()#java.beans.MethodDescriptor[],getMethodDescriptors()#int,getDefaultPropertyIndex()#int,getDefaultEventIndex()#java.awt.Image,getIcon(int)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.OSXDropOnDockAction#org.jhotdraw.app.action.OSXDropOnDockAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ListFigure#org.jhotdraw.draw.ListFigure,CONSTRUCTOR()#org.jhotdraw.draw.ListFigure,CONSTRUCTOR(org.jhotdraw.draw.Figure)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.FontSizeLocator#org.jhotdraw.draw.FontSizeLocator,CONSTRUCTOR()#java.awt.geom.Point2D.Double,locate(org.jhotdraw.draw.Figure)#java.awt.geom.Point2D.Double,locate(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddy.TeddyProject.EditorPanel#void,setEditor(javax.swing.text.JTextComponent)#void,setLineWrap(boolean)#boolean,getLineWrap()#java.awt.Dimension,getPreferredScrollableViewportSize()#int,getScrollableUnitIncrement(java.awt.Rectangle,int,int)#int,getScrollableBlockIncrement(java.awt.Rectangle,int,int)#boolean,getScrollableTracksViewportWidth()#boolean,getScrollableTracksViewportHeight()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddyapplication.action.ToggleLineNumbersAction#org.jhotdraw.samples.teddyapplication.action.ToggleLineNumbersAction,CONSTRUCTOR()#application.ResourceMap,getResourceMap()#org.jhotdraw.samples.teddyapplication.TeddyView,getCurrentView()#void,actionPerformed(java.awt.event.ActionEvent)#void,updateProperty()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.odg.io.ODGFigureFactory#org.jhotdraw.samples.odg.io.ODGFigureFactory,CONSTRUCTOR()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.draw.DrawLiveConnectApplet.FormListener#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ImageFigure#org.jhotdraw.draw.ImageFigure,CONSTRUCTOR()#org.jhotdraw.draw.ImageFigure,CONSTRUCTOR(double,double,double,double)#void,drawFigure(java.awt.Graphics2D)#void,drawFill(java.awt.Graphics2D)#void,drawImage(java.awt.Graphics2D)#void,drawStroke(java.awt.Graphics2D)#java.awt.geom.Rectangle2D.Double,getBounds()#java.awt.geom.Rectangle2D.Double,getFigureDrawingArea()#boolean,figureContains(java.awt.geom.Point2D.Double)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,transform(java.awt.geom.AffineTransform)#void,restoreTransformTo(java.lang.Object)#java.lang.Object,getTransformRestoreData()#java.util.Collection<javax.swing.Action>,getActions(java.awt.geom.Point2D.Double)#org.jhotdraw.draw.Connector,findConnector(java.awt.geom.Point2D.Double,org.jhotdraw.draw.ConnectionFigure)#org.jhotdraw.draw.Connector,findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)#org.jhotdraw.draw.ImageFigure,clone()#void,read(org.jhotdraw.xml.DOMInput)#void,write(org.jhotdraw.xml.DOMOutput)#void,setImage(byte[],java.awt.image.BufferedImage)#void,setImageData(byte[])#void,setBufferedImage(java.awt.image.BufferedImage)#java.awt.image.BufferedImage,getBufferedImage()#byte[],getImageData()#void,loadImage(java.io.File)#void,loadImage(java.io.InputStream)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.SVGApplet#java.lang.String,getParameter(java.lang.String)#java.lang.String,getVersion()#void,init()#void,setData(java.lang.String)#java.lang.String,getData()#java.lang.String[][],getParameterInfo()#java.lang.String,getAppletInfo()#void,mainx(java.lang.String[])#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.LineDecorationIcon#org.jhotdraw.draw.action.LineDecorationIcon,CONSTRUCTOR(org.jhotdraw.draw.LineDecoration,boolean)#int,getIconHeight()#int,getIconWidth()#void,paintIcon(java.awt.Component,java.awt.Graphics,int,int)#void,#ExtendsOrImplements#()#
org.jhotdraw.xml.DOMFactory#java.lang.String,getName(org.jhotdraw.xml.DOMStorable)#java.lang.Object,create(java.lang.String)#java.lang.String,getEnumName(java.lang.Enum)#java.lang.String,getEnumValue(java.lang.Enum)#java.lang.Enum,createEnum(java.lang.String,java.lang.String)#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.AttributeField#javax.swing.JComponent,getComponent()#void,updateField(java.util.Set<org.jhotdraw.draw.Figure>)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.DrawingPageable#org.jhotdraw.draw.DrawingPageable,CONSTRUCTOR(org.jhotdraw.draw.Drawing)#int,getNumberOfPages()#java.awt.print.PageFormat,getPageFormat(int)#java.awt.print.Printable,getPrintable(int)#int,printPage(java.awt.Graphics,java.awt.print.PageFormat,int)#void,setRenderingHints(java.awt.Graphics2D)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.DrawingView#org.jhotdraw.draw.Drawing,getDrawing()#void,setDrawing(org.jhotdraw.draw.Drawing)#void,setCursor(java.awt.Cursor)#boolean,isFigureSelected(org.jhotdraw.draw.Figure)#void,addToSelection(org.jhotdraw.draw.Figure)#void,addToSelection(java.util.Collection<org.jhotdraw.draw.Figure>)#void,removeFromSelection(org.jhotdraw.draw.Figure)#void,toggleSelection(org.jhotdraw.draw.Figure)#void,clearSelection()#void,selectAll()#java.util.Set<org.jhotdraw.draw.Figure>,getSelectedFigures()#int,getSelectionCount()#org.jhotdraw.draw.Handle,findHandle(java.awt.Point)#java.util.Collection<org.jhotdraw.draw.Handle>,getCompatibleHandles(org.jhotdraw.draw.Handle)#org.jhotdraw.draw.Figure,findFigure(java.awt.Point)#java.util.Collection<org.jhotdraw.draw.Figure>,findFigures(java.awt.Rectangle)#java.util.Collection<org.jhotdraw.draw.Figure>,findFiguresWithin(java.awt.Rectangle)#void,addNotify(org.jhotdraw.draw.DrawingEditor)#void,removeNotify(org.jhotdraw.draw.DrawingEditor)#void,addFigureSelectionListener(org.jhotdraw.draw.FigureSelectionListener)#void,removeFigureSelectionListener(org.jhotdraw.draw.FigureSelectionListener)#void,requestFocus()#java.awt.Point,drawingToView(java.awt.geom.Point2D.Double)#java.awt.geom.Point2D.Double,viewToDrawing(java.awt.Point)#java.awt.Rectangle,drawingToView(java.awt.geom.Rectangle2D.Double)#java.awt.geom.Rectangle2D.Double,viewToDrawing(java.awt.Rectangle)#org.jhotdraw.draw.Constrainer,getConstrainer()#javax.swing.JComponent,getComponent()#java.awt.geom.AffineTransform,getDrawingToViewTransform()#double,getScaleFactor()#void,setScaleFactor(double)#void,setHandleDetailLevel(int)#int,getHandleDetailLevel()#void,setEnabled(boolean)#boolean,isEnabled()#void,addPropertyChangeListener(java.beans.PropertyChangeListener)#void,removePropertyChangeListener(java.beans.PropertyChangeListener)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.MoveAction.East#org.jhotdraw.draw.action.MoveAction.East,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.figures.SVGTextAreaFigure#org.jhotdraw.samples.svg.figures.SVGTextAreaFigure,CONSTRUCTOR()#org.jhotdraw.samples.svg.figures.SVGTextAreaFigure,CONSTRUCTOR(java.lang.String)#void,drawText(java.awt.Graphics2D)#void,drawFill(java.awt.Graphics2D)#void,drawStroke(java.awt.Graphics2D)#java.awt.geom.Rectangle2D.Double,getBounds()#java.awt.geom.Rectangle2D.Double,getDrawingArea()#boolean,contains(java.awt.geom.Point2D.Double)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,transform(java.awt.geom.AffineTransform)#void,restoreTransformTo(java.lang.Object)#java.lang.Object,getTransformRestoreData()#java.lang.String,getText()#int,getTextColumns()#void,setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)#void,setText(java.lang.String)#org.jhotdraw.geom.Insets2D.Double,getInsets()#int,getTabSize()#org.jhotdraw.draw.TextHolderFigure,getLabelFor()#java.awt.Font,getFont()#java.awt.Color,getTextColor()#java.awt.Color,getFillColor()#void,setFontSize(float)#float,getFontSize()#boolean,isEditable()#void,setEditable(boolean)#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(int)#org.jhotdraw.draw.Tool,getTool(java.awt.geom.Point2D.Double)#boolean,canConnect()#org.jhotdraw.draw.Connector,findConnector(java.awt.geom.Point2D.Double,org.jhotdraw.draw.ConnectionFigure)#org.jhotdraw.draw.Connector,findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)#boolean,isEmpty()#void,invalidate()#boolean,isTextOverflow()#org.jhotdraw.samples.svg.figures.SVGTextAreaFigure,clone()#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.MinimizeAction#org.jhotdraw.app.action.MinimizeAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.OpenRecentAction#org.jhotdraw.app.action.OpenRecentAction,CONSTRUCTOR(org.jhotdraw.app.Application,java.io.File)#void,actionPerformed(java.awt.event.ActionEvent)#void,openFile(org.jhotdraw.app.Project)#void,fileOpened(org.jhotdraw.app.Project,java.io.File,java.lang.Object)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddyapplication.text.NumberedEditorKit#javax.swing.text.ViewFactory,getViewFactory()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.LabeledLineConnectionFigure.ChildHandler#void,figureRequestRemove(org.jhotdraw.draw.FigureEvent)#void,figureChanged(org.jhotdraw.draw.FigureEvent)#void,figureAreaInvalidated(org.jhotdraw.draw.FigureEvent)#void,undoableEditHappened(javax.swing.event.UndoableEditEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.net.NetPanel#org.jhotdraw.samples.net.NetPanel,CONSTRUCTOR()#void,setDrawing(org.jhotdraw.draw.Drawing)#org.jhotdraw.draw.Drawing,getDrawing()#org.jhotdraw.draw.DrawingView,getView()#org.jhotdraw.draw.DrawingEditor,getEditor()#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.OSXDropOnDockAction#org.jhotdraw.application.action.OSXDropOnDockAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddyapplication.io.LFWriter#org.jhotdraw.samples.teddyapplication.io.LFWriter,CONSTRUCTOR(java.io.Writer)#java.lang.String,getLineSeparator()#void,setLineSeparator(java.lang.String)#void,write(int)#void,write(char,int,int)#void,write(java.lang.String,int,int)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.PasteAction#org.jhotdraw.application.action.PasteAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory#org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory,CONSTRUCTOR()#org.jhotdraw.draw.Figure,createRect(double,double,double,double,double,double,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.Figure,createCircle(double,double,double,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.Figure,createEllipse(double,double,double,double,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.Figure,createLine(double,double,double,double,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.Figure,createPolyline(java.awt.geom.Point2D.Double[],java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.Figure,createPolygon(java.awt.geom.Point2D.Double[],java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.Figure,createPath(org.jhotdraw.geom.BezierPath[],java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.CompositeFigure,createG(java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.Figure,createImage(double,double,double,double,byte[],java.awt.image.BufferedImage,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.Figure,createTextArea(double,double,double,double,javax.swing.text.StyledDocument,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.draw.Figure,createText(java.awt.geom.Point2D.Double[],double[],javax.swing.text.StyledDocument,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#org.jhotdraw.samples.svg.Gradient,createRadialGradient(double,double,double,double,double,double[],java.awt.Color[],double[],boolean,java.awt.geom.AffineTransform)#org.jhotdraw.samples.svg.Gradient,createLinearGradient(double,double,double,double,double[],java.awt.Color[],double[],boolean,java.awt.geom.AffineTransform)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.TransformHandleKit.NorthWestHandle#void,trackStepNormalized(java.awt.geom.Point2D.Double)#java.awt.Cursor,getCursor()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddyapplication.text.NumberedViewFactory#void,setLineNumbersVisible(boolean)#boolean,isLineNumbersVisible()#javax.swing.text.View,create(javax.swing.text.Element)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.ToggleToolBarAction#org.jhotdraw.application.action.ToggleToolBarAction,CONSTRUCTOR(javax.swing.JToolBar,java.lang.String)#void,putValue(java.lang.String,java.lang.Object)#void,setToolBar(javax.swing.JToolBar)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.StrokeIcon#org.jhotdraw.draw.action.StrokeIcon,CONSTRUCTOR(java.awt.Stroke)#int,getIconHeight()#int,getIconWidth()#void,paintIcon(java.awt.Component,java.awt.Graphics,int,int)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.figures.SVGGroupFigure#org.jhotdraw.samples.svg.figures.SVGGroupFigure,CONSTRUCTOR()#void,setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)#java.lang.Object,getAttribute(org.jhotdraw.draw.AttributeKey)#java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>,getAttributes()#void,setAttributes(java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#void,draw(java.awt.Graphics2D)#java.util.LinkedList<org.jhotdraw.draw.Handle>,createHandles(int)#void,write(org.jhotdraw.xml.DOMOutput)#void,read(org.jhotdraw.xml.DOMInput)#boolean,isEmpty()#java.lang.String,toString()#org.jhotdraw.samples.svg.figures.SVGGroupFigure,clone()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.AlignAction.North#org.jhotdraw.draw.action.AlignAction.North,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.action.AlignAction.North,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.util.ResourceBundleUtil)#void,alignFigures(java.util.Collection,java.awt.geom.Rectangle2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.FontSizeHandle#org.jhotdraw.draw.FontSizeHandle,CONSTRUCTOR(org.jhotdraw.draw.TextHolderFigure)#org.jhotdraw.draw.FontSizeHandle,CONSTRUCTOR(org.jhotdraw.draw.TextHolderFigure,org.jhotdraw.draw.Locator)#void,draw(java.awt.Graphics2D)#java.awt.Cursor,getCursor()#java.awt.Rectangle,basicGetBounds()#void,trackStart(java.awt.Point,int)#void,trackStep(java.awt.Point,java.awt.Point,int)#void,trackEnd(java.awt.Point,java.awt.Point,int)#java.lang.String,getToolTipText(java.awt.Point)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.BezierPointLocator#org.jhotdraw.draw.BezierPointLocator,CONSTRUCTOR(int)#org.jhotdraw.draw.BezierPointLocator,CONSTRUCTOR(int,int)#java.awt.geom.Point2D.Double,locate(org.jhotdraw.draw.Figure)#void,write(org.jhotdraw.xml.DOMOutput)#void,read(org.jhotdraw.xml.DOMInput)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.BezierTool#org.jhotdraw.draw.BezierTool,CONSTRUCTOR(org.jhotdraw.draw.BezierFigure)#org.jhotdraw.draw.BezierTool,CONSTRUCTOR(org.jhotdraw.draw.BezierFigure,java.util.Map)#org.jhotdraw.draw.BezierTool,CONSTRUCTOR(org.jhotdraw.draw.BezierFigure,java.util.Map,java.lang.String)#java.lang.String,getPresentationName()#void,activate(org.jhotdraw.draw.DrawingEditor)#void,deactivate(org.jhotdraw.draw.DrawingEditor)#void,mousePressed(java.awt.event.MouseEvent)#org.jhotdraw.draw.BezierFigure,createFigure()#org.jhotdraw.draw.Figure,getCreatedFigure()#org.jhotdraw.draw.Figure,getAddedFigure()#void,addPointToFigure(java.awt.geom.Point2D.Double)#void,mouseClicked(java.awt.event.MouseEvent)#void,fireUndoEvent(org.jhotdraw.draw.Figure)#void,mouseReleased(java.awt.event.MouseEvent)#void,finishCreation(org.jhotdraw.draw.BezierFigure)#void,mouseDragged(java.awt.event.MouseEvent)#void,mouseMoved(java.awt.event.MouseEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.SaveAsAction#org.jhotdraw.app.action.SaveAsAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.Main#void,main(java.lang.String[])#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.AbstractProjectAction#org.jhotdraw.app.action.AbstractProjectAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,updateProject(org.jhotdraw.app.Project,org.jhotdraw.app.Project)#void,setPropertyName(java.lang.String)#java.lang.String,getPropertyName()#void,updateProperty()#void,installProjectListeners(org.jhotdraw.app.Project)#void,uninstallProjectListeners(org.jhotdraw.app.Project)#void,updateEnabled(boolean,boolean)#org.jhotdraw.app.Application,getApplication()#org.jhotdraw.app.Project,getCurrentProject()#boolean,isEnabled()#void,setEnabled(boolean)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.AlignAction.South#org.jhotdraw.draw.action.AlignAction.South,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.action.AlignAction.South,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.util.ResourceBundleUtil)#void,alignFigures(java.util.Collection,java.awt.geom.Rectangle2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.OSXTogglePaletteAction#org.jhotdraw.application.action.OSXTogglePaletteAction,CONSTRUCTOR(java.awt.Window,java.lang.String)#void,putValue(java.lang.String,java.lang.Object)#void,setPalette(java.awt.Window)#void,actionPerformed(java.awt.event.ActionEvent)#org.jhotdraw.application.AbstractOSXApplication,getApplication()#void,#ExtendsOrImplements#()#
net.n3.nanoxml.XMLValidationException#net.n3.nanoxml.XMLValidationException,CONSTRUCTOR(int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#void,finalize()#java.lang.String,getElementName()#java.lang.String,getAttributeName()#java.lang.String,getAttributeValue()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.net.Main#void,main(java.lang.String[])#void,#ExtendsOrImplements#()#
org.jhotdraw.geom.Geom#boolean,lineContainsPoint(int,int,int,int,int,int)#boolean,lineContainsPoint(int,int,int,int,int,int,double)#boolean,lineContainsPoint(double,double,double,double,double,double,double)#int,direction(int,int,int,int)#int,direction(double,double,double,double)#int,outcode(java.awt.Rectangle,java.awt.Rectangle)#int,outcode(java.awt.geom.Rectangle2D.Double,java.awt.geom.Rectangle2D.Double)#java.awt.Point,south(java.awt.Rectangle)#java.awt.geom.Point2D.Double,south(java.awt.geom.Rectangle2D.Double)#java.awt.Point,center(java.awt.Rectangle)#java.awt.geom.Point2D.Double,center(java.awt.geom.Rectangle2D.Double)#java.awt.geom.Point2D.Double,chop(java.awt.Shape,java.awt.geom.Point2D.Double)#java.awt.Point,west(java.awt.Rectangle)#java.awt.geom.Point2D.Double,west(java.awt.geom.Rectangle2D.Double)#java.awt.Point,east(java.awt.Rectangle)#java.awt.geom.Point2D.Double,east(java.awt.geom.Rectangle2D.Double)#java.awt.Point,north(java.awt.Rectangle)#java.awt.geom.Point2D.Double,north(java.awt.geom.Rectangle2D.Double)#int,range(int,int,int)#double,range(double,double,double)#long,length2(int,int,int,int)#long,length(int,int,int,int)#double,length2(double,double,double,double)#double,length(double,double,double,double)#double,length(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#java.awt.geom.Point2D.Double,cap(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double,double)#double,pointToAngle(java.awt.Rectangle,java.awt.Point)#double,pointToAngle(java.awt.geom.Rectangle2D.Double,java.awt.geom.Point2D.Double)#double,angle(double,double,double,double)#java.awt.Point,angleToPoint(java.awt.Rectangle,double)#java.awt.geom.Point2D.Double,angleToPoint(java.awt.geom.Rectangle2D.Double,double)#java.awt.Point,polarToPoint(double,double,double)#java.awt.geom.Point2D.Double,polarToPoint2D(double,double,double)#java.awt.Point,ovalAngleToPoint(java.awt.Rectangle,double)#java.awt.geom.Point2D.Double,ovalAngleToPoint(java.awt.geom.Rectangle2D.Double,double)#java.awt.Point,intersect(int,int,int,int,int,int,int,int)#java.awt.geom.Point2D.Double,intersect(double,double,double,double,double,double,double,double)#java.awt.geom.Point2D.Double,intersect(double,double,double,double,double,double,double,double,double)#double,distanceFromLine(int,int,int,int,int,int)#void,grow(java.awt.geom.Rectangle2D.Double,double,double)#void,#ExtendsOrImplements#()#
net.n3.nanoxml.XMLWriter#net.n3.nanoxml.XMLWriter,CONSTRUCTOR(java.io.Writer)#net.n3.nanoxml.XMLWriter,CONSTRUCTOR(java.io.OutputStream)#void,finalize()#void,write(net.n3.nanoxml.IXMLElement)#void,write(net.n3.nanoxml.IXMLElement,boolean)#void,write(net.n3.nanoxml.IXMLElement,boolean,int)#void,write(net.n3.nanoxml.IXMLElement,boolean,int,boolean)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ResizeHandleKit.WestHandle#void,trackStepNormalized(java.awt.geom.Point2D.Double)#java.awt.Cursor,getCursor()#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.LoadAction#org.jhotdraw.app.action.LoadAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,doIt(org.jhotdraw.app.Project)#void,openFile(org.jhotdraw.app.Project,javax.swing.JFileChooser)#void,fileOpened(org.jhotdraw.app.Project,java.io.File,java.lang.Object)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.RadialGradient#org.jhotdraw.samples.svg.RadialGradient,CONSTRUCTOR()#org.jhotdraw.samples.svg.RadialGradient,CONSTRUCTOR(double,double,double,double,double,double[],java.awt.Color[],double[],boolean,java.awt.geom.AffineTransform)#void,setGradientCircle(double,double,double)#void,setStops(double[],java.awt.Color[],double[])#void,setRelativeToFigureBounds(boolean)#void,makeRelativeToFigureBounds(org.jhotdraw.draw.Figure)#java.awt.Paint,getPaint(org.jhotdraw.draw.Figure,double)#double,getCX()#double,getCY()#double,getFX()#double,getFY()#double,getR()#double[],getStopOffsets()#java.awt.Color[],getStopColors()#double[],getStopOpacities()#boolean,isRelativeToFigureBounds()#void,setTransform(java.awt.geom.AffineTransform)#java.awt.geom.AffineTransform,getTransform()#void,transform(java.awt.geom.AffineTransform)#java.lang.Object,clone()#int,hashCode()#boolean,equals(java.lang.Object)#boolean,equals(org.jhotdraw.samples.svg.RadialGradient)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.AbstractFigure#org.jhotdraw.draw.AbstractFigure,CONSTRUCTOR()#void,addFigureListener(org.jhotdraw.draw.FigureListener)#void,removeFigureListener(org.jhotdraw.draw.FigureListener)#void,addNotify(org.jhotdraw.draw.Drawing)#void,removeNotify(org.jhotdraw.draw.Drawing)#org.jhotdraw.draw.Drawing,getDrawing()#java.lang.Object,getLock()#void,fireAreaInvalidated()#void,fireAreaInvalidated(java.awt.geom.Rectangle2D.Double)#void,fireFigureRequestRemove()#void,fireFigureAdded()#void,fireFigureRemoved()#void,fireFigureChanged()#void,fireFigureChanged(java.awt.geom.Rectangle2D.Double)#void,fireFigureChanged(org.jhotdraw.draw.FigureEvent)#void,fireAttributeChanged(org.jhotdraw.draw.AttributeKey,java.lang.Object,java.lang.Object)#void,fireFigureHandlesChanged()#void,fireUndoableEditHappened(javax.swing.undo.UndoableEdit)#org.jhotdraw.draw.AbstractFigure,clone()#org.jhotdraw.draw.AbstractFigure,basicClone(java.util.HashMap<org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure>)#void,remap(java.util.HashMap<org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure>)#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(int)#java.awt.Cursor,getCursor(java.awt.geom.Point2D.Double)#void,setBounds(java.awt.geom.Rectangle2D.Double)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#boolean,canConnect()#void,invalidate()#boolean,isChanging()#int,getChangingDepth()#void,willChange()#void,validate()#void,changed()#org.jhotdraw.draw.Connector,findConnector(java.awt.geom.Point2D.Double,org.jhotdraw.draw.ConnectionFigure)#boolean,includes(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Figure,findFigureInside(java.awt.geom.Point2D.Double)#org.jhotdraw.draw.Connector,findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)#java.util.Collection<javax.swing.Action>,getActions(java.awt.geom.Point2D.Double)#org.jhotdraw.draw.Tool,getTool(java.awt.geom.Point2D.Double)#boolean,handleMouseClick(java.awt.geom.Point2D.Double,java.awt.event.MouseEvent,org.jhotdraw.draw.DrawingView)#boolean,handleDrop(java.awt.geom.Point2D.Double,java.util.Collection<org.jhotdraw.draw.Figure>,org.jhotdraw.draw.DrawingView)#java.awt.geom.Point2D.Double,getEndPoint()#java.awt.geom.Point2D.Double,getStartPoint()#org.jhotdraw.geom.Dimension2DDouble,getPreferredSize()#void,remap(java.util.Map)#boolean,isInteractive()#void,setInteractive(boolean)#boolean,isVisible()#void,setVisible(boolean)#java.util.Collection<org.jhotdraw.draw.Figure>,getDecomposition()#java.awt.font.FontRenderContext,getFontRenderContext()#void,requestRemove()#int,getLayer()#java.lang.String,getToolTipText(java.awt.geom.Point2D.Double)#java.lang.String,toString()#java.util.Collection<org.jhotdraw.draw.Connector>,getConnectors(org.jhotdraw.draw.ConnectionFigure)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.DocumentOrientedApplication#void,initialize(java.lang.String[])#void,startup()#void,shutdown()#org.jhotdraw.application.DocumentView,createView()#void,add(org.jhotdraw.application.DocumentView)#void,remove(org.jhotdraw.application.DocumentView)#void,show(org.jhotdraw.application.DocumentView)#void,hide(org.jhotdraw.application.DocumentView)#java.util.Collection<org.jhotdraw.application.DocumentView>,getViews()#org.jhotdraw.application.DocumentView,getCurrentView()#boolean,isEnabled()#void,setEnabled(boolean)#void,addPropertyChangeListener(java.beans.PropertyChangeListener)#void,removePropertyChangeListener(java.beans.PropertyChangeListener)#boolean,isEditorShared()#java.awt.Component,getComponent()#java.util.List<java.io.File>,recentFiles()#void,addRecentFile(java.io.File)#void,clearRecentFiles()#void,addPalette(java.awt.Window)#void,removePalette(java.awt.Window)#javax.swing.Action,getAction(java.lang.Object)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.EditableComponent#void,delete()#void,duplicate()#void,selectAll()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.io.SVGInputFormat#org.jhotdraw.samples.svg.io.SVGInputFormat,CONSTRUCTOR()#org.jhotdraw.samples.svg.io.SVGInputFormat,CONSTRUCTOR(org.jhotdraw.samples.svg.io.SVGFigureFactory)#java.util.LinkedList<org.jhotdraw.draw.Figure>,readFigures(java.io.InputStream)#java.lang.String[],toCommaSeparatedArray(java.lang.String)#java.lang.String[],toWSOrCommaSeparatedArray(java.lang.String)#java.awt.geom.AffineTransform,toTransform(net.n3.nanoxml.IXMLElement,java.lang.String)#javax.swing.filechooser.FileFilter,getFileFilter()#javax.swing.JComponent,getInputFormatAccessory()#void,read(java.io.File,org.jhotdraw.draw.Drawing)#void,read(java.io.InputStream,org.jhotdraw.draw.Drawing)#boolean,isDataFlavorSupported(java.awt.datatransfer.DataFlavor)#java.util.LinkedList<org.jhotdraw.draw.Figure>,readFigures(java.awt.datatransfer.Transferable)#void,#ExtendsOrImplements#()#
net.n3.nanoxml.IXMLElement#net.n3.nanoxml.IXMLElement,createPCDataElement()#net.n3.nanoxml.IXMLElement,createElement(java.lang.String)#net.n3.nanoxml.IXMLElement,createElement(java.lang.String,java.lang.String,int)#net.n3.nanoxml.IXMLElement,createElement(java.lang.String,java.lang.String)#net.n3.nanoxml.IXMLElement,createElement(java.lang.String,java.lang.String,java.lang.String,int)#net.n3.nanoxml.IXMLElement,getParent()#java.lang.String,getFullName()#java.lang.String,getName()#java.lang.String,getNamespace()#void,setName(java.lang.String)#void,setName(java.lang.String,java.lang.String)#void,addChild(net.n3.nanoxml.IXMLElement)#void,removeChild(net.n3.nanoxml.IXMLElement)#void,removeChildAtIndex(int)#java.util.Iterator<net.n3.nanoxml.IXMLElement>,iterateChildren()#boolean,isLeaf()#boolean,hasChildren()#int,getChildrenCount()#java.util.ArrayList<net.n3.nanoxml.IXMLElement>,getChildren()#net.n3.nanoxml.IXMLElement,getChildAtIndex(int)#net.n3.nanoxml.IXMLElement,getFirstChildNamed(java.lang.String)#net.n3.nanoxml.IXMLElement,getFirstChildNamed(java.lang.String,java.lang.String)#java.util.ArrayList<net.n3.nanoxml.IXMLElement>,getChildrenNamed(java.lang.String)#java.util.ArrayList<net.n3.nanoxml.IXMLElement>,getChildrenNamed(java.lang.String,java.lang.String)#int,getAttributeCount()#java.lang.String,getAttribute(java.lang.String)#java.lang.String,getAttribute(java.lang.String,java.lang.String)#java.lang.String,getAttribute(java.lang.String,java.lang.String,java.lang.String)#int,getAttribute(java.lang.String,int)#int,getAttribute(java.lang.String,java.lang.String,int)#java.lang.Object,getAttribute(java.lang.String,java.lang.String,java.util.Map,java.lang.String)#double,getDoubleAttribute(java.lang.String,java.lang.String,double)#java.lang.String,getAttributeType(java.lang.String)#java.lang.String,getAttributeNamespace(java.lang.String)#java.lang.String,getAttributeType(java.lang.String,java.lang.String)#void,setAttribute(java.lang.String,java.lang.String)#void,setAttribute(java.lang.String,java.lang.String,java.lang.String)#void,removeAttribute(java.lang.String)#void,removeAttribute(java.lang.String,java.lang.String)#java.util.Iterator<java.lang.String>,iterateAttributeNames()#boolean,hasAttribute(java.lang.String)#boolean,hasAttribute(java.lang.String,java.lang.String)#java.util.Properties,getAttributes()#java.util.Properties,getAttributesInNamespace(java.lang.String)#java.lang.String,getSystemID()#int,getLineNr()#java.lang.String,getContent()#void,setContent(java.lang.String)#boolean,equals(java.lang.Object)#boolean,equalsXMLElement(net.n3.nanoxml.IXMLElement)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.SVGApplicationModel#org.jhotdraw.samples.svg.SVGApplicationModel,CONSTRUCTOR()#org.jhotdraw.draw.DefaultDrawingEditor,getSharedEditor()#void,initProject(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#void,initApplication(org.jhotdraw.app.Application)#java.util.List<javax.swing.JToolBar>,createToolBars(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#java.util.Collection<javax.swing.Action>,createDrawingActions(org.jhotdraw.draw.DrawingEditor)#java.util.Collection<javax.swing.Action>,createSelectionActions(org.jhotdraw.draw.DrawingEditor)#java.util.List<javax.swing.JMenu>,createMenus(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.LocatorHandle#org.jhotdraw.draw.LocatorHandle,CONSTRUCTOR(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Locator)#java.awt.geom.Point2D.Double,getLocationOnDrawing()#java.awt.Point,getLocation()#java.awt.Rectangle,basicGetBounds()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ResizeHandleKit.SouthWestHandle#void,trackStepNormalized(java.awt.geom.Point2D.Double)#java.awt.Cursor,getCursor()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.AttributeToggler#org.jhotdraw.draw.action.AttributeToggler,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.lang.Object,java.lang.Object)#org.jhotdraw.draw.action.AttributeToggler,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.lang.Object,java.lang.Object,javax.swing.Action)#org.jhotdraw.draw.DrawingView,getView()#org.jhotdraw.draw.DrawingEditor,getEditor()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.AbstractSelectedAction#org.jhotdraw.draw.action.AbstractSelectedAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#void,updateEnabledState()#void,dispose()#void,setEditor(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.DrawingEditor,getEditor()#org.jhotdraw.draw.DrawingView,getView()#org.jhotdraw.draw.Drawing,getDrawing()#void,fireUndoableEditHappened(javax.swing.undo.UndoableEdit)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddy.FindDialog#org.jhotdraw.samples.teddy.FindDialog,CONSTRUCTOR(org.jhotdraw.app.Application)#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.JPopupButton.FormListener#void,mouseClicked(java.awt.event.MouseEvent)#void,mouseEntered(java.awt.event.MouseEvent)#void,mouseExited(java.awt.event.MouseEvent)#void,mousePressed(java.awt.event.MouseEvent)#void,mouseReleased(java.awt.event.MouseEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ResizeHandleKit.NorthHandle#void,trackStepNormalized(java.awt.geom.Point2D.Double)#java.awt.Cursor,getCursor()#void,#ExtendsOrImplements#()#
org.jhotdraw.geom.Shapes#boolean,outlineContains(java.awt.Shape,java.awt.geom.Point2D.Double,double)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.ToggleGridAction#org.jhotdraw.draw.action.ToggleGridAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.action.ToggleGridAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.Constrainer,org.jhotdraw.draw.Constrainer)#org.jhotdraw.draw.action.ToggleGridAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.Constrainer,org.jhotdraw.draw.Constrainer)#org.jhotdraw.draw.Constrainer,getOnConstrainer()#org.jhotdraw.draw.Constrainer,getOffConstrainer()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.io.SVGInputFormat.Viewport#java.lang.String,toString()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.draw.DrawProject#org.jhotdraw.samples.draw.DrawProject,CONSTRUCTOR()#void,init()#org.jhotdraw.draw.Drawing,createDrawing()#org.jhotdraw.draw.DrawingEditor,getEditor()#void,setEditor(org.jhotdraw.draw.DrawingEditor)#java.awt.print.Pageable,createPageable()#void,setHasUnsavedChanges(boolean)#void,write(java.io.File)#void,read(java.io.File)#void,setDrawingEditor(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.DrawingEditor,getDrawingEditor()#void,clear()#javax.swing.JFileChooser,createOpenChooser()#javax.swing.JFileChooser,createSaveChooser()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.TextOverflowHandle#org.jhotdraw.draw.TextOverflowHandle,CONSTRUCTOR(org.jhotdraw.draw.TextHolderFigure)#org.jhotdraw.draw.TextHolderFigure,getOwner()#void,draw(java.awt.Graphics2D)#java.awt.Rectangle,basicGetBounds()#void,trackStart(java.awt.Point,int)#void,trackStep(java.awt.Point,java.awt.Point,int)#void,trackEnd(java.awt.Point,java.awt.Point,int)#java.lang.String,getToolTipText(java.awt.Point)#void,#ExtendsOrImplements#()#
org.jhotdraw.xml.css.CSSRule#org.jhotdraw.xml.css.CSSRule,CONSTRUCTOR(java.lang.String,java.lang.String)#org.jhotdraw.xml.css.CSSRule,CONSTRUCTOR(java.lang.String,java.lang.String,java.lang.String)#org.jhotdraw.xml.css.CSSRule,CONSTRUCTOR(java.lang.String,java.util.Map<java.lang.String,java.lang.String>)#void,setSelector(java.lang.String)#boolean,matches(org.w3c.dom.Element)#boolean,matches(net.n3.nanoxml.IXMLElement)#void,apply(org.w3c.dom.Element)#void,apply(net.n3.nanoxml.IXMLElement)#java.lang.String,toString()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.io.SVGOutputFormat#org.jhotdraw.samples.svg.io.SVGOutputFormat,CONSTRUCTOR()#javax.swing.filechooser.FileFilter,getFileFilter()#javax.swing.JComponent,getOutputFormatAccessory()#void,setPrettyPrint(boolean)#boolean,isPrettyPrint()#void,writeElement(net.n3.nanoxml.IXMLElement,org.jhotdraw.draw.Figure)#void,writeCircleElement(net.n3.nanoxml.IXMLElement,org.jhotdraw.samples.svg.figures.SVGEllipseFigure)#net.n3.nanoxml.IXMLElement,createCircle(net.n3.nanoxml.IXMLElement,double,double,double,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#net.n3.nanoxml.IXMLElement,createG(net.n3.nanoxml.IXMLElement,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#net.n3.nanoxml.IXMLElement,createLinearGradient(net.n3.nanoxml.IXMLElement,double,double,double,double,double[],java.awt.Color[],double[],boolean,java.awt.geom.AffineTransform)#net.n3.nanoxml.IXMLElement,createRadialGradient(net.n3.nanoxml.IXMLElement,double,double,double,double,double,double[],java.awt.Color[],double[],boolean,java.awt.geom.AffineTransform)#void,writeEllipseElement(net.n3.nanoxml.IXMLElement,org.jhotdraw.samples.svg.figures.SVGEllipseFigure)#net.n3.nanoxml.IXMLElement,createEllipse(net.n3.nanoxml.IXMLElement,double,double,double,double,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#void,writeGElement(net.n3.nanoxml.IXMLElement,org.jhotdraw.samples.svg.figures.SVGGroupFigure)#void,writeImageElement(net.n3.nanoxml.IXMLElement,org.jhotdraw.samples.svg.figures.SVGImageFigure)#net.n3.nanoxml.IXMLElement,createImage(net.n3.nanoxml.IXMLElement,double,double,double,double,byte[],java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#void,writePathElement(net.n3.nanoxml.IXMLElement,org.jhotdraw.samples.svg.figures.SVGPathFigure)#net.n3.nanoxml.IXMLElement,createPath(net.n3.nanoxml.IXMLElement,org.jhotdraw.geom.BezierPath[],java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#void,writePolygonElement(net.n3.nanoxml.IXMLElement,org.jhotdraw.samples.svg.figures.SVGPathFigure)#net.n3.nanoxml.IXMLElement,createPolygon(net.n3.nanoxml.IXMLElement,java.awt.geom.Point2D.Double[],java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#void,writePolylineElement(net.n3.nanoxml.IXMLElement,org.jhotdraw.samples.svg.figures.SVGPathFigure)#net.n3.nanoxml.IXMLElement,createPolyline(net.n3.nanoxml.IXMLElement,java.awt.geom.Point2D.Double[],java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#void,writeLineElement(net.n3.nanoxml.IXMLElement,org.jhotdraw.samples.svg.figures.SVGPathFigure)#net.n3.nanoxml.IXMLElement,createLine(net.n3.nanoxml.IXMLElement,double,double,double,double,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#void,writeRectElement(net.n3.nanoxml.IXMLElement,org.jhotdraw.samples.svg.figures.SVGRectFigure)#net.n3.nanoxml.IXMLElement,createRect(net.n3.nanoxml.IXMLElement,double,double,double,double,double,double,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#void,writeTextElement(net.n3.nanoxml.IXMLElement,org.jhotdraw.samples.svg.figures.SVGTextFigure)#net.n3.nanoxml.IXMLElement,createText(net.n3.nanoxml.IXMLElement,java.awt.geom.Point2D.Double[],double[],javax.swing.text.StyledDocument,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#void,writeTextAreaElement(net.n3.nanoxml.IXMLElement,org.jhotdraw.samples.svg.figures.SVGTextAreaFigure)#net.n3.nanoxml.IXMLElement,createTextArea(net.n3.nanoxml.IXMLElement,double,double,double,double,javax.swing.text.StyledDocument,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#void,writeShapeAttributes(net.n3.nanoxml.IXMLElement,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#void,writeOpacityAttribute(net.n3.nanoxml.IXMLElement,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#void,writeTransformAttribute(net.n3.nanoxml.IXMLElement,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#void,writeAttribute(net.n3.nanoxml.IXMLElement,java.lang.String,java.lang.String,java.lang.String)#void,writeAttribute(net.n3.nanoxml.IXMLElement,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#void,writeAttribute(net.n3.nanoxml.IXMLElement,java.lang.String,double,double)#void,writeAttribute(net.n3.nanoxml.IXMLElement,java.lang.String,java.lang.String,double,double)#java.lang.String,toPath(org.jhotdraw.geom.BezierPath[])#java.lang.String,toNumber(double)#java.lang.String,toPoints(java.awt.geom.Point2D.Double[])#java.lang.String,toTransform(java.awt.geom.AffineTransform)#java.lang.String,toColor(java.awt.Color)#java.lang.String,getFileExtension()#void,write(java.io.File,org.jhotdraw.draw.Drawing)#void,write(java.io.OutputStream,org.jhotdraw.draw.Drawing)#void,write(java.io.OutputStream,java.util.List<org.jhotdraw.draw.Figure>)#java.lang.String,getId(net.n3.nanoxml.IXMLElement)#java.awt.datatransfer.Transferable,createTransferable(java.util.List<org.jhotdraw.draw.Figure>,double)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.LoadRecentAction#org.jhotdraw.application.action.LoadRecentAction,CONSTRUCTOR(java.io.File)#void,doIt(org.jhotdraw.application.DocumentView)#void,fileOpened(org.jhotdraw.application.DocumentView,java.io.File,java.lang.Object)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.SelectAreaTracker#org.jhotdraw.draw.SelectAreaTracker,CONSTRUCTOR()#void,mousePressed(java.awt.event.MouseEvent)#void,mouseReleased(java.awt.event.MouseEvent)#void,mouseDragged(java.awt.event.MouseEvent)#void,mouseMoved(java.awt.event.MouseEvent)#void,draw(java.awt.Graphics2D)#void,#ExtendsOrImplements#()#
org.jhotdraw.io.Base64.InputStream#org.jhotdraw.io.Base64.InputStream,CONSTRUCTOR(java.io.InputStream)#org.jhotdraw.io.Base64.InputStream,CONSTRUCTOR(java.io.InputStream,int)#int,read()#int,read(byte[],int,int)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.ToggleVisibleAction#org.jhotdraw.application.action.ToggleVisibleAction,CONSTRUCTOR(java.awt.Component,java.lang.String)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
net.n3.nanoxml.PIReader#void,finalize()#int,read(char[],int,int)#void,close()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.TransformHandleKit.WestHandle#void,trackStepNormalized(java.awt.geom.Point2D.Double)#java.awt.Cursor,getCursor()#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.RedoAction#org.jhotdraw.application.action.RedoAction,CONSTRUCTOR()#void,updateEnabledState()#void,updateProject(org.jhotdraw.application.DocumentView,org.jhotdraw.application.DocumentView)#void,installProjectListeners(org.jhotdraw.application.DocumentView)#void,uninstallProjectListeners(org.jhotdraw.application.DocumentView)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.MyMnemonicText#void,configure(java.lang.Object,java.lang.String)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.pert.figures.TaskFigure.DurationAdapter#org.jhotdraw.samples.pert.figures.TaskFigure.DurationAdapter,CONSTRUCTOR(org.jhotdraw.samples.pert.figures.TaskFigure)#void,figureAttributeChanged(org.jhotdraw.draw.FigureEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.RoundRectangleRadiusHandle#org.jhotdraw.draw.RoundRectangleRadiusHandle,CONSTRUCTOR(org.jhotdraw.draw.Figure)#void,draw(java.awt.Graphics2D)#java.awt.Rectangle,basicGetBounds()#void,trackStart(java.awt.Point,int)#void,trackStep(java.awt.Point,java.awt.Point,int)#void,trackEnd(java.awt.Point,java.awt.Point,int)#java.lang.String,getToolTipText(java.awt.Point)#void,#ExtendsOrImplements#()#
org.jhotdraw.util.LocaleUtil#org.jhotdraw.util.LocaleUtil,CONSTRUCTOR()#void,setDefault(java.util.Locale)#java.util.Locale,getDefault()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddyapplication.PreferencesDialog#org.jhotdraw.samples.teddyapplication.PreferencesDialog,CONSTRUCTOR(java.awt.Frame,boolean)#org.jhotdraw.samples.teddyapplication.PreferencesDialog,CONSTRUCTOR()#void,main(java.lang.String)#void,#ExtendsOrImplements#()#
net.n3.nanoxml.XMLParseException#net.n3.nanoxml.XMLParseException,CONSTRUCTOR(java.lang.String)#net.n3.nanoxml.XMLParseException,CONSTRUCTOR(java.lang.String,int,java.lang.String)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.net.figures.NodeFigure#org.jhotdraw.samples.net.figures.NodeFigure,CONSTRUCTOR()#java.util.Collection,getConnectors(org.jhotdraw.draw.ConnectionFigure)#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(int)#java.awt.geom.Rectangle2D.Double,getFigureDrawingArea()#org.jhotdraw.draw.Connector,findConnector(java.awt.geom.Point2D.Double,org.jhotdraw.draw.ConnectionFigure)#org.jhotdraw.draw.Connector,findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)#org.jhotdraw.samples.net.figures.NodeFigure,clone()#int,getLayer()#void,writeDecorator(org.jhotdraw.xml.DOMOutput)#void,readDecorator(org.jhotdraw.xml.DOMInput)#void,setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.draw.DrawApplicationModel#org.jhotdraw.samples.draw.DrawApplicationModel,CONSTRUCTOR()#org.jhotdraw.draw.DefaultDrawingEditor,getSharedEditor()#void,initProject(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#java.util.List<javax.swing.JToolBar>,createToolBars(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#void,addDefaultCreationButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor,java.util.Collection<javax.swing.Action>,java.util.Collection<javax.swing.Action>)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.GeometryEdit#org.jhotdraw.draw.GeometryEdit,CONSTRUCTOR(org.jhotdraw.draw.Figure,java.lang.Object,java.lang.Object)#java.lang.String,getPresentationName()#void,undo()#void,redo()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.LineFigure#org.jhotdraw.draw.LineFigure,CONSTRUCTOR()#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(int)#boolean,canConnect()#boolean,handleMouseClick(java.awt.geom.Point2D.Double,java.awt.event.MouseEvent,org.jhotdraw.draw.DrawingView)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ImageTool#org.jhotdraw.draw.ImageTool,CONSTRUCTOR(org.jhotdraw.draw.ImageHolderFigure)#org.jhotdraw.draw.ImageTool,CONSTRUCTOR(org.jhotdraw.draw.ImageHolderFigure,java.util.Map)#void,creationFinished(org.jhotdraw.draw.Figure)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.MoveConstrainedAction#org.jhotdraw.draw.action.MoveConstrainedAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.Direction)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddyapplication.TeddySDIApplication#org.jhotdraw.samples.teddyapplication.TeddySDIApplication,CONSTRUCTOR()#java.lang.Class,getViewClass()#javax.swing.ActionMap,createActionMap()#java.util.LinkedList<javax.swing.JToolBar>,createToolBars(org.jhotdraw.application.DocumentView)#javax.swing.JMenu,createViewMenu(org.jhotdraw.application.DocumentView)#javax.swing.JMenu,createEditMenu(org.jhotdraw.application.DocumentView)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.SelectAllAction#org.jhotdraw.app.action.SelectAllAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.odg.ODGApplicationModel#org.jhotdraw.samples.odg.ODGApplicationModel,CONSTRUCTOR()#java.util.LinkedList<javax.swing.JToolBar>,createToolBars(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.ApplicationModel#java.lang.String,getName()#java.lang.String,getVersion()#java.lang.String,getCopyright()#org.jhotdraw.application.DocumentView,createProject()#void,initProject(org.jhotdraw.application.DocumentOrientedApplication,org.jhotdraw.application.DocumentView)#void,initApplication(org.jhotdraw.application.DocumentOrientedApplication)#void,putAction(java.lang.String,javax.swing.Action)#javax.swing.Action,getAction(java.lang.String)#java.util.List<javax.swing.JToolBar>,createToolBars(org.jhotdraw.application.DocumentOrientedApplication,org.jhotdraw.application.DocumentView)#java.util.List<javax.swing.JMenu>,createMenus(org.jhotdraw.application.DocumentOrientedApplication,org.jhotdraw.application.DocumentView)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.CloseAction#org.jhotdraw.app.action.CloseAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,doIt(org.jhotdraw.app.Project)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.ZoomAction#org.jhotdraw.draw.action.ZoomAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,double,javax.swing.AbstractButton)#org.jhotdraw.draw.action.ZoomAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingView,double,javax.swing.AbstractButton)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.util.Methods#java.lang.Object,invoke(java.lang.Object,java.lang.String)#java.lang.Object,invoke(java.lang.Object,java.lang.String,java.lang.String)#java.lang.Object,invokeStatic(java.lang.Class,java.lang.String)#java.lang.Object,invokeStatic(java.lang.String,java.lang.String)#java.lang.Object,invokeStatic(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Object[])#java.lang.Object,invokeStatic(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Object[])#java.lang.Object,invokeStatic(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object)#int,invokeGetter(java.lang.Object,java.lang.String,int)#long,invokeGetter(java.lang.Object,java.lang.String,long)#boolean,invokeGetter(java.lang.Object,java.lang.String,boolean)#java.lang.Object,invokeGetter(java.lang.Object,java.lang.String,java.lang.Object)#boolean,invokeStaticGetter(java.lang.Class,java.lang.String,boolean)#java.lang.Object,invoke(java.lang.Object,java.lang.String,boolean)#java.lang.Object,invoke(java.lang.Object,java.lang.String,int)#java.lang.Object,invoke(java.lang.Object,java.lang.String,float)#java.lang.Object,invoke(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Object)#java.lang.Object,invoke(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object)#void,invokeIfExists(java.lang.Object,java.lang.String)#void,invokeIfExists(java.lang.Object,java.lang.String,float)#void,invokeIfExists(java.lang.Object,java.lang.String,boolean)#void,invokeIfExists(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Object)#void,invokeIfExistsWithEnum(java.lang.Object,java.lang.String,java.lang.String,java.lang.String)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.PasteAction#org.jhotdraw.app.action.PasteAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.LinearGradient#org.jhotdraw.samples.svg.LinearGradient,CONSTRUCTOR()#org.jhotdraw.samples.svg.LinearGradient,CONSTRUCTOR(double,double,double,double,double[],java.awt.Color[],double[],boolean,java.awt.geom.AffineTransform)#void,setGradientVector(double,double,double,double)#void,setStops(double[],java.awt.Color[],double[])#void,setRelativeToFigureBounds(boolean)#boolean,isRelativeToFigureBounds()#double,getX1()#double,getY1()#double,getX2()#double,getY2()#double[],getStopOffsets()#java.awt.Color[],getStopColors()#double[],getStopOpacities()#java.awt.geom.AffineTransform,getTransform()#java.awt.Paint,getPaint(org.jhotdraw.draw.Figure,double)#java.lang.String,toString()#void,setTransform(java.awt.geom.AffineTransform)#void,transform(java.awt.geom.AffineTransform)#java.lang.Object,clone()#void,makeRelativeToFigureBounds(org.jhotdraw.draw.Figure)#int,hashCode()#boolean,equals(java.lang.Object)#boolean,equals(org.jhotdraw.samples.svg.LinearGradient)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.Constrainer#java.awt.geom.Point2D.Double,constrainPoint(java.awt.geom.Point2D.Double)#java.awt.geom.Point2D.Double,constrainPoint(java.awt.geom.Point2D.Double,org.jhotdraw.draw.Direction)#boolean,isVisible()#void,draw(java.awt.Graphics2D,org.jhotdraw.draw.DrawingView)#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.JPopupButton#org.jhotdraw.gui.JPopupButton,CONSTRUCTOR()#void,setItemFont(java.awt.Font)#void,setAction(javax.swing.Action,java.awt.Rectangle)#int,getColumnCount()#void,setColumnCount(int,boolean)#javax.swing.AbstractButton,add(javax.swing.Action)#void,add(javax.swing.JMenu)#void,add(javax.swing.JComponent)#void,add(javax.swing.JMenuItem)#void,addSeparator()#void,setPopupMenu(javax.swing.JPopupMenu)#javax.swing.JPopupMenu,getPopupMenu()#void,#ExtendsOrImplements#()#
org.jhotdraw.util.ReversedList#org.jhotdraw.util.ReversedList,CONSTRUCTOR(java.util.List<T>)#T,get(int)#int,size()#void,#ExtendsOrImplements#()#
org.apache.batik.ext.awt.LinearGradientPaint#org.apache.batik.ext.awt.LinearGradientPaint,CONSTRUCTOR(float,float,float,float,float[],java.awt.Color[])#org.apache.batik.ext.awt.LinearGradientPaint,CONSTRUCTOR(float,float,float,float,float[],java.awt.Color[],org.apache.batik.ext.awt.MultipleGradientPaint.CycleMethodEnum)#org.apache.batik.ext.awt.LinearGradientPaint,CONSTRUCTOR(java.awt.geom.Point2D,java.awt.geom.Point2D,float[],java.awt.Color[])#org.apache.batik.ext.awt.LinearGradientPaint,CONSTRUCTOR(java.awt.geom.Point2D,java.awt.geom.Point2D,float[],java.awt.Color[],org.apache.batik.ext.awt.MultipleGradientPaint.CycleMethodEnum,org.apache.batik.ext.awt.MultipleGradientPaint.ColorSpaceEnum)#org.apache.batik.ext.awt.LinearGradientPaint,CONSTRUCTOR(java.awt.geom.Point2D,java.awt.geom.Point2D,float[],java.awt.Color[],org.apache.batik.ext.awt.MultipleGradientPaint.CycleMethodEnum,org.apache.batik.ext.awt.MultipleGradientPaint.ColorSpaceEnum,java.awt.geom.AffineTransform)#java.awt.PaintContext,createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)#java.awt.geom.Point2D,getStartPoint()#java.awt.geom.Point2D,getEndPoint()#void,#ExtendsOrImplements#()#
org.apache.batik.ext.awt.MultipleGradientPaint.ColorSpaceEnum#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.Gradient#java.awt.Paint,getPaint(org.jhotdraw.draw.Figure,double)#boolean,isRelativeToFigureBounds()#void,transform(java.awt.geom.AffineTransform)#java.lang.Object,clone()#void,makeRelativeToFigureBounds(org.jhotdraw.draw.Figure)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ArrowTip#org.jhotdraw.draw.ArrowTip,CONSTRUCTOR()#org.jhotdraw.draw.ArrowTip,CONSTRUCTOR(double,double,double)#org.jhotdraw.draw.ArrowTip,CONSTRUCTOR(double,double,double,boolean,boolean,boolean)#java.awt.geom.GeneralPath,getDecoratorPath(org.jhotdraw.draw.Figure)#double,getDecoratorPathRadius(org.jhotdraw.draw.Figure)#void,read(org.jhotdraw.xml.DOMInput)#void,write(org.jhotdraw.xml.DOMOutput)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddyapplication.regex.Matcher#org.jhotdraw.samples.teddyapplication.regex.Matcher,CONSTRUCTOR(javax.swing.text.Document,java.lang.String)#org.jhotdraw.samples.teddyapplication.regex.Matcher,CONSTRUCTOR(javax.swing.text.Document,java.lang.String,boolean,org.jhotdraw.samples.teddyapplication.regex.MatchType)#java.lang.String,getFindString()#boolean,isMatchCase()#org.jhotdraw.samples.teddyapplication.regex.MatchType,getMatchType()#void,setStartIndex(int)#int,findNext(int)#int,findNext()#int,findPrevious(int)#int,findPrevious()#void,reset()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.BorderRectangleFigure#org.jhotdraw.draw.BorderRectangleFigure,CONSTRUCTOR(javax.swing.border.Border)#void,drawFigure(java.awt.Graphics2D)#void,#ExtendsOrImplements#()#
org.jhotdraw.geom.BezierPath#org.jhotdraw.geom.BezierPath,CONSTRUCTOR()#void,add(java.awt.geom.Point2D.Double)#void,addPoint(double,double)#void,add(int,java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,set(int,int,java.awt.geom.Point2D.Double)#java.awt.geom.Point2D.Double,get(int,int)#void,invalidatePath()#void,validatePath()#java.awt.geom.GeneralPath,toGeneralPath()#boolean,contains(java.awt.geom.Point2D)#boolean,outlineContains(java.awt.geom.Point2D.Double,double)#boolean,intersects(java.awt.geom.Rectangle2D)#java.awt.geom.PathIterator,getPathIterator(java.awt.geom.AffineTransform)#java.awt.geom.PathIterator,getPathIterator(java.awt.geom.AffineTransform,double)#boolean,contains(java.awt.geom.Rectangle2D)#boolean,intersects(double,double,double,double)#java.awt.geom.Rectangle2D.Double,getBounds2D()#java.awt.Rectangle,getBounds()#boolean,contains(double,double,double,double)#boolean,contains(double,double)#void,setClosed(boolean)#boolean,isClosed()#org.jhotdraw.geom.BezierPath,clone()#void,transform(java.awt.geom.AffineTransform)#void,setTo(org.jhotdraw.geom.BezierPath)#java.awt.geom.Point2D.Double,getCenter()#java.awt.geom.Point2D.Double,chop(java.awt.geom.Point2D.Double)#int,indexOfOutermostNode()#java.awt.geom.Point2D.Double,getPointOnPath(double,double)#double,getLengthOfPath(double)#double,getRelativePositionOnPath(java.awt.geom.Point2D.Double,double)#int,findSegment(java.awt.geom.Point2D.Double,float)#int,joinSegments(java.awt.geom.Point2D.Double,float)#int,splitSegment(java.awt.geom.Point2D.Double,float)#void,moveTo(double,double)#void,lineTo(double,double)#void,quadTo(double,double,double,double)#void,curveTo(double,double,double,double,double,double)#void,arcTo(double,double,double,boolean,boolean,double,double)#java.awt.geom.Point2D.Double[],toPolygonArray()#void,setWindingRule(int)#int,getWindingRule()#void,#ExtendsOrImplements#()#
org.jhotdraw.app.ApplicationModel#java.lang.String,getName()#java.lang.String,getVersion()#java.lang.String,getCopyright()#org.jhotdraw.app.Project,createProject()#void,initProject(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#void,initApplication(org.jhotdraw.app.Application)#void,putAction(java.lang.String,javax.swing.Action)#javax.swing.Action,getAction(java.lang.String)#java.util.List<javax.swing.JToolBar>,createToolBars(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#java.util.List<javax.swing.JMenu>,createMenus(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.SVGDrawingPanelBeanInfo#java.beans.BeanDescriptor,getBeanDescriptor()#java.beans.PropertyDescriptor[],getPropertyDescriptors()#java.beans.EventSetDescriptor[],getEventSetDescriptors()#java.beans.MethodDescriptor[],getMethodDescriptors()#int,getDefaultPropertyIndex()#int,getDefaultEventIndex()#java.awt.Image,getIcon(int)#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.datatransfer.InputStreamTransferable#org.jhotdraw.gui.datatransfer.InputStreamTransferable,CONSTRUCTOR(java.awt.datatransfer.DataFlavor,byte[])#org.jhotdraw.gui.datatransfer.InputStreamTransferable,CONSTRUCTOR(java.awt.datatransfer.DataFlavor[],byte[])#java.awt.datatransfer.DataFlavor[],getTransferDataFlavors()#boolean,isDataFlavorSupported(java.awt.datatransfer.DataFlavor)#java.lang.Object,getTransferData(java.awt.datatransfer.DataFlavor)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.figures.SVGBezierFigure#org.jhotdraw.samples.svg.figures.SVGBezierFigure,CONSTRUCTOR()#org.jhotdraw.samples.svg.figures.SVGBezierFigure,CONSTRUCTOR(boolean)#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(org.jhotdraw.samples.svg.figures.SVGPathFigure,int)#boolean,handleMouseClick(java.awt.geom.Point2D.Double,java.awt.event.MouseEvent,org.jhotdraw.draw.DrawingView)#void,transform(java.awt.geom.AffineTransform)#java.awt.geom.Rectangle2D.Double,getDrawingArea()#void,flattenTransform()#void,invalidate()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.HandleMulticaster#org.jhotdraw.draw.HandleMulticaster,CONSTRUCTOR(org.jhotdraw.draw.Handle)#org.jhotdraw.draw.HandleMulticaster,CONSTRUCTOR(java.util.Collection<org.jhotdraw.draw.Handle>)#void,draw(java.awt.Graphics2D)#void,keyPressed(java.awt.event.KeyEvent)#void,keyReleased(java.awt.event.KeyEvent)#void,keyTyped(java.awt.event.KeyEvent)#void,trackEnd(java.awt.Point,java.awt.Point,int,org.jhotdraw.draw.DrawingView)#void,trackStart(java.awt.Point,int,org.jhotdraw.draw.DrawingView)#void,trackDoubleClick(java.awt.Point,int,org.jhotdraw.draw.DrawingView)#void,trackStep(java.awt.Point,java.awt.Point,int,org.jhotdraw.draw.DrawingView)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.DefaultSDIApplication#org.jhotdraw.app.DefaultSDIApplication,CONSTRUCTOR()#void,launch(java.lang.String[])#void,init()#void,remove(org.jhotdraw.app.Project)#void,configure(java.lang.String[])#void,initLookAndFeel()#void,initApplicationActions()#void,initProjectActions(org.jhotdraw.app.Project)#void,show(org.jhotdraw.app.Project)#java.awt.Component,wrapProjectComponent(org.jhotdraw.app.Project)#void,hide(org.jhotdraw.app.Project)#void,dispose(org.jhotdraw.app.Project)#org.jhotdraw.app.Project,getCurrentProject()#void,setCurrentProject(org.jhotdraw.app.Project)#javax.swing.JMenuBar,createMenuBar(org.jhotdraw.app.Project,java.util.List<javax.swing.Action>)#javax.swing.JMenu,createFileMenu(org.jhotdraw.app.Project)#boolean,isSharingToolsAmongProjects()#java.awt.Component,getComponent()#javax.swing.JMenu,createViewMenu(org.jhotdraw.app.Project,java.util.List<javax.swing.Action>)#javax.swing.JMenu,createHelpMenu(org.jhotdraw.app.Project)#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.JPopupButtonBeanInfo#java.beans.BeanDescriptor,getBeanDescriptor()#java.beans.PropertyDescriptor[],getPropertyDescriptors()#java.beans.EventSetDescriptor[],getEventSetDescriptors()#java.beans.MethodDescriptor[],getMethodDescriptors()#int,getDefaultPropertyIndex()#int,getDefaultEventIndex()#java.awt.Image,getIcon(int)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.TextAreaTool#org.jhotdraw.draw.TextAreaTool,CONSTRUCTOR(org.jhotdraw.draw.TextHolderFigure)#org.jhotdraw.draw.TextAreaTool,CONSTRUCTOR(org.jhotdraw.draw.TextHolderFigure,java.util.Map)#void,setRubberbandColor(java.awt.Color)#void,deactivate(org.jhotdraw.draw.DrawingEditor)#void,mousePressed(java.awt.event.MouseEvent)#void,creationFinished(org.jhotdraw.draw.Figure)#void,draw(java.awt.Graphics2D)#void,beginEdit(org.jhotdraw.draw.TextHolderFigure)#void,endEdit()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.figures.SVGImageFigure#org.jhotdraw.samples.svg.figures.SVGImageFigure,CONSTRUCTOR()#org.jhotdraw.samples.svg.figures.SVGImageFigure,CONSTRUCTOR(double,double,double,double)#void,draw(java.awt.Graphics2D)#void,drawFill(java.awt.Graphics2D)#void,drawStroke(java.awt.Graphics2D)#double,getX()#double,getY()#double,getWidth()#double,getHeight()#java.awt.geom.Rectangle2D.Double,getBounds()#java.awt.geom.Rectangle2D.Double,getDrawingArea()#boolean,contains(java.awt.geom.Point2D.Double)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,transform(java.awt.geom.AffineTransform)#void,restoreTransformTo(java.lang.Object)#java.lang.Object,getTransformRestoreData()#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(int)#java.util.Collection<javax.swing.Action>,getActions(java.awt.geom.Point2D.Double)#boolean,canConnect()#org.jhotdraw.draw.Connector,findConnector(java.awt.geom.Point2D.Double,org.jhotdraw.draw.ConnectionFigure)#org.jhotdraw.draw.Connector,findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)#org.jhotdraw.samples.svg.figures.SVGImageFigure,clone()#boolean,isEmpty()#void,invalidate()#void,setImage(byte[],java.awt.image.BufferedImage)#void,setImageData(byte[])#void,setBufferedImage(java.awt.image.BufferedImage)#java.awt.image.BufferedImage,getBufferedImage()#byte[],getImageData()#void,loadImage(java.io.File)#void,loadImage(java.io.InputStream)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.net.NetApplet#java.lang.String,getParameter(java.lang.String)#java.lang.String,getVersion()#void,init()#void,setData(java.lang.String)#java.lang.String,getData()#java.lang.String[][],getParameterInfo()#java.lang.String,getAppletInfo()#void,main(java.lang.String[])#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.LoadAction#org.jhotdraw.application.action.LoadAction,CONSTRUCTOR()#void,doIt(org.jhotdraw.application.DocumentView)#void,openFile(org.jhotdraw.application.DocumentView,javax.swing.JFileChooser)#void,fileOpened(org.jhotdraw.application.DocumentView,java.io.File,java.lang.Object)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.AbstractApplication#org.jhotdraw.app.AbstractApplication,CONSTRUCTOR()#void,init()#void,start()#org.jhotdraw.app.Project,createProject()#void,setModel(org.jhotdraw.app.ApplicationModel)#org.jhotdraw.app.ApplicationModel,getModel()#org.jhotdraw.app.Project,basicCreateProject()#java.lang.String,getName()#java.lang.String,getVersion()#java.lang.String,getCopyright()#void,initProjectActions(org.jhotdraw.app.Project)#void,stop()#void,remove(org.jhotdraw.app.Project)#void,add(org.jhotdraw.app.Project)#void,dispose(org.jhotdraw.app.Project)#java.util.Collection<org.jhotdraw.app.Project>,projects()#boolean,isEnabled()#void,setEnabled(boolean)#java.awt.Container,createContainer()#void,launch(java.lang.String[])#void,initLabels()#void,configure(java.lang.String[])#java.util.List<java.io.File>,recentFiles()#void,clearRecentFiles()#void,addRecentFile(java.io.File)#void,#ExtendsOrImplements#()#
org.jhotdraw.geom.GrowStroke#org.jhotdraw.geom.GrowStroke,CONSTRUCTOR(float,float)#java.awt.Shape,createStrokedShape(java.awt.Shape)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.FloatingTextArea#org.jhotdraw.draw.FloatingTextArea,CONSTRUCTOR()#void,createOverlay(org.jhotdraw.draw.DrawingView)#void,requestFocus()#void,createOverlay(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.TextHolderFigure)#void,setBounds(java.awt.geom.Rectangle2D.Double,java.lang.String)#java.lang.String,getText()#java.awt.Dimension,getPreferredSize(int)#void,endOverlay()#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.ToggleProjectPropertyAction#org.jhotdraw.app.action.ToggleProjectPropertyAction,CONSTRUCTOR(org.jhotdraw.app.Application,java.lang.String)#org.jhotdraw.app.action.ToggleProjectPropertyAction,CONSTRUCTOR(org.jhotdraw.app.Application,java.lang.String,java.lang.Class,java.lang.Object,java.lang.Object)#void,actionPerformed(java.awt.event.ActionEvent)#void,installProjectListeners(org.jhotdraw.app.Project)#void,uninstallProjectListeners(org.jhotdraw.app.Project)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.CutAction#org.jhotdraw.app.action.CutAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.xml.DefaultDOMFactory#org.jhotdraw.xml.DefaultDOMFactory,CONSTRUCTOR()#void,addStorableClass(java.lang.String,java.lang.Class)#void,addStorable(java.lang.String,org.jhotdraw.xml.DOMStorable)#void,addEnumClass(java.lang.String,java.lang.Class)#void,addEnum(java.lang.String,java.lang.Enum)#java.lang.Object,create(java.lang.String)#java.lang.String,getName(org.jhotdraw.xml.DOMStorable)#java.lang.String,getEnumName(java.lang.Enum)#java.lang.String,getEnumValue(java.lang.Enum)#java.lang.Enum,createEnum(java.lang.String,java.lang.String)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddy.regex.Matcher#org.jhotdraw.samples.teddy.regex.Matcher,CONSTRUCTOR(javax.swing.text.Document,java.lang.String)#org.jhotdraw.samples.teddy.regex.Matcher,CONSTRUCTOR(javax.swing.text.Document,java.lang.String,boolean,org.jhotdraw.samples.teddy.regex.MatchType)#java.lang.String,getFindString()#boolean,isMatchCase()#org.jhotdraw.samples.teddy.regex.MatchType,getMatchType()#void,setStartIndex(int)#int,findNext(int)#int,findNext()#int,findPrevious(int)#int,findPrevious()#void,reset()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.draw.DrawingPanelBeanInfo#java.beans.BeanDescriptor,getBeanDescriptor()#java.beans.PropertyDescriptor[],getPropertyDescriptors()#java.beans.EventSetDescriptor[],getEventSetDescriptors()#java.beans.MethodDescriptor[],getMethodDescriptors()#int,getDefaultPropertyIndex()#int,getDefaultEventIndex()#java.awt.Image,getIcon(int)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.NullHandle#org.jhotdraw.draw.NullHandle,CONSTRUCTOR(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Locator)#java.awt.Cursor,getCursor()#void,trackStart(java.awt.Point,int)#void,trackStep(java.awt.Point,java.awt.Point,int)#void,trackEnd(java.awt.Point,java.awt.Point,int)#void,addLeadHandles(org.jhotdraw.draw.Figure,java.util.Collection<org.jhotdraw.draw.Handle>)#void,draw(java.awt.Graphics2D)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ElbowLiner#org.jhotdraw.draw.ElbowLiner,CONSTRUCTOR()#org.jhotdraw.draw.ElbowLiner,CONSTRUCTOR(double)#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(org.jhotdraw.geom.BezierPath)#void,lineout(org.jhotdraw.draw.ConnectionFigure)#void,read(org.jhotdraw.xml.DOMInput)#void,write(org.jhotdraw.xml.DOMOutput)#org.jhotdraw.draw.Liner,clone()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.MoveConstrainedAction.North#org.jhotdraw.draw.action.MoveConstrainedAction.North,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.MoveAction.West#org.jhotdraw.draw.action.MoveAction.West,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.pert.PertApplicationModel.ToolButtonListener#org.jhotdraw.samples.pert.PertApplicationModel.ToolButtonListener,CONSTRUCTOR(org.jhotdraw.draw.Tool,org.jhotdraw.draw.DrawingEditor)#void,itemStateChanged(java.awt.event.ItemEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.Worker#void,run()#java.lang.Object,construct()#void,finished(java.lang.Object)#java.lang.Object,getValue()#void,start()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.DiamondFigure#org.jhotdraw.draw.DiamondFigure,CONSTRUCTOR()#org.jhotdraw.draw.DiamondFigure,CONSTRUCTOR(double,double,double,double)#void,drawFill(java.awt.Graphics2D)#void,drawStroke(java.awt.Graphics2D)#java.awt.geom.Rectangle2D.Double,getBounds()#java.awt.geom.Rectangle2D.Double,getDrawingArea()#boolean,contains(java.awt.geom.Point2D.Double)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,transform(java.awt.geom.AffineTransform)#void,restoreTransformTo(java.lang.Object)#java.lang.Object,getTransformRestoreData()#org.jhotdraw.draw.Connector,findConnector(java.awt.geom.Point2D.Double,org.jhotdraw.draw.ConnectionFigure)#org.jhotdraw.draw.Connector,findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)#org.jhotdraw.draw.DiamondFigure,clone()#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.PrintAction#org.jhotdraw.app.action.PrintAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,actionPerformed(java.awt.event.ActionEvent)#void,printJava2D()#void,printJava2DAlternative()#void,printQuartz()#void,#ExtendsOrImplements#()#
org.jhotdraw.application.DocumentView#javax.swing.JComponent,getComponent()#void,setName(java.lang.String)#java.lang.String,getName()#void,init()#void,destroy()#void,start()#void,stop()#boolean,isEnabled()#void,setEnabled(boolean)#void,execute(java.lang.Runnable)#javax.swing.Action,getAction(java.lang.String)#void,putAction(java.lang.String,javax.swing.Action)#void,addPropertyChangeListener(java.beans.PropertyChangeListener)#void,removePropertyChangeListener(java.beans.PropertyChangeListener)#java.io.File,getFile()#void,setFile(java.io.File)#void,clear()#void,write(java.io.File)#void,read(java.io.File)#javax.swing.JFileChooser,getOpenChooser()#javax.swing.JFileChooser,getSaveChooser()#boolean,isModified()#void,setModified(boolean)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.ColorIcon#org.jhotdraw.draw.action.ColorIcon,CONSTRUCTOR(java.awt.Color)#int,getIconHeight()#int,getIconWidth()#void,paintIcon(java.awt.Component,java.awt.Graphics,int,int)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.DrawingEditorProxy#org.jhotdraw.draw.action.DrawingEditorProxy,CONSTRUCTOR()#void,setTarget(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.DrawingEditor,getTarget()#void,add(org.jhotdraw.draw.DrawingView)#void,remove(org.jhotdraw.draw.DrawingView)#java.util.Collection<org.jhotdraw.draw.DrawingView>,getDrawingViews()#org.jhotdraw.draw.DrawingView,getActiveView()#void,setActiveView(org.jhotdraw.draw.DrawingView)#org.jhotdraw.draw.DrawingView,getFocusedView()#void,setTool(org.jhotdraw.draw.Tool)#org.jhotdraw.draw.Tool,getTool()#void,setCursor(java.awt.Cursor)#org.jhotdraw.draw.DrawingView,findView(java.awt.Container)#void,setDefaultAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)#java.lang.Object,getDefaultAttribute(org.jhotdraw.draw.AttributeKey)#void,applyDefaultAttributesTo(org.jhotdraw.draw.Figure)#java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>,getDefaultAttributes()#void,setEnabled(boolean)#boolean,isEnabled()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.HandleEvent#org.jhotdraw.draw.HandleEvent,CONSTRUCTOR(org.jhotdraw.draw.Handle,java.awt.Rectangle)#org.jhotdraw.draw.Handle,getHandle()#java.awt.Rectangle,getInvalidatedArea()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ConnectorHandle#org.jhotdraw.draw.ConnectorHandle,CONSTRUCTOR(org.jhotdraw.draw.Connector,org.jhotdraw.draw.ConnectionFigure)#java.awt.geom.Point2D.Double,getLocationOnDrawing()#java.awt.Point,getLocation()#void,draw(java.awt.Graphics2D)#void,trackStart(java.awt.Point,int)#void,trackStep(java.awt.Point,java.awt.Point,int)#void,trackEnd(java.awt.Point,java.awt.Point,int)#org.jhotdraw.draw.ConnectionFigure,createConnection()#void,setConnection(org.jhotdraw.draw.ConnectionFigure)#org.jhotdraw.draw.ConnectionFigure,getConnection()#org.jhotdraw.draw.Figure,getTargetFigure()#void,setTargetFigure(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Connector,findConnectableConnector(org.jhotdraw.draw.Figure,java.awt.geom.Point2D.Double)#java.awt.Rectangle,basicGetBounds()#boolean,isCombinableWith(org.jhotdraw.draw.Handle)#void,repaintConnectors()#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.ExitAction#org.jhotdraw.app.action.ExitAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,actionPerformed(java.awt.event.ActionEvent)#void,saveChanges()#void,reviewChanges()#void,saveChangesAndReviewNext()#void,reviewNext()#void,saveToFile(java.io.File)#void,saveToFileAndReviewNext(java.io.File)#void,fileSaved(org.jhotdraw.app.Project,java.io.File,java.lang.Object)#void,fileSavedAndReviewNext(org.jhotdraw.app.Project,java.io.File,java.lang.Object)#void,doExit()#void,#ExtendsOrImplements#()#
org.jhotdraw.application.DefaultApplicationModel#org.jhotdraw.application.DefaultApplicationModel,CONSTRUCTOR()#void,setName(java.lang.String)#java.lang.String,getName()#void,setVersion(java.lang.String)#java.lang.String,getVersion()#void,setCopyright(java.lang.String)#java.lang.String,getCopyright()#void,setProjectClassName(java.lang.String)#void,setProjectClass(java.lang.Class)#java.lang.Class,getProjectClass()#org.jhotdraw.application.DocumentView,createProject()#java.util.List<javax.swing.JToolBar>,createToolBars(org.jhotdraw.application.DocumentOrientedApplication,org.jhotdraw.application.DocumentView)#java.util.List<javax.swing.JMenu>,createMenus(org.jhotdraw.application.DocumentOrientedApplication,org.jhotdraw.application.DocumentView)#javax.swing.JMenu,createEditMenu(org.jhotdraw.application.DocumentOrientedApplication,org.jhotdraw.application.DocumentView)#void,initProject(org.jhotdraw.application.DocumentOrientedApplication,org.jhotdraw.application.DocumentView)#void,initApplication(org.jhotdraw.application.DocumentOrientedApplication)#javax.swing.Action,getAction(java.lang.String)#void,putAction(java.lang.String,javax.swing.Action)#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.AttributeFieldEventHandler#org.jhotdraw.gui.AttributeFieldEventHandler,CONSTRUCTOR(org.jhotdraw.gui.AttributeField)#void,propertyChange(java.beans.PropertyChangeEvent)#void,selectionChanged(org.jhotdraw.draw.FigureSelectionEvent)#void,updateFieldEnabledState()#void,updateField()#java.util.Set<org.jhotdraw.draw.Figure>,getCurrentSelection()#void,figureAreaInvalidated(org.jhotdraw.draw.FigureEvent)#void,figureAttributeChanged(org.jhotdraw.draw.FigureEvent)#void,figureHandlesChanged(org.jhotdraw.draw.FigureEvent)#void,figureChanged(org.jhotdraw.draw.FigureEvent)#void,figureAdded(org.jhotdraw.draw.FigureEvent)#void,figureRemoved(org.jhotdraw.draw.FigureEvent)#void,figureRequestRemove(org.jhotdraw.draw.FigureEvent)#void,setEditor(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.DrawingEditor,getEditor()#void,setView(org.jhotdraw.draw.DrawingView)#org.jhotdraw.draw.DrawingView,getView()#org.jhotdraw.draw.DrawingView,getCurrentView()#void,dispose()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.BezierControlPointHandle#org.jhotdraw.draw.BezierControlPointHandle,CONSTRUCTOR(org.jhotdraw.draw.BezierFigure,int,int)#org.jhotdraw.draw.BezierControlPointHandle,CONSTRUCTOR(org.jhotdraw.draw.BezierFigure,int,int,org.jhotdraw.draw.Figure)#void,dispose()#org.jhotdraw.draw.BezierFigure,getBezierFigure()#org.jhotdraw.draw.Figure,getTransformOwner()#java.awt.Point,getLocation()#org.jhotdraw.geom.BezierPath.Node,getBezierNode()#void,draw(java.awt.Graphics2D)#java.awt.Rectangle,basicGetBounds()#void,trackStart(java.awt.Point,int)#void,trackStep(java.awt.Point,java.awt.Point,int)#void,trackEnd(java.awt.Point,java.awt.Point,int)#boolean,isCombinableWith(org.jhotdraw.draw.Handle)#java.lang.String,getToolTipText(java.awt.Point)#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.event.SheetListener#void,optionSelected(org.jhotdraw.gui.event.SheetEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ImageOutputFormat#org.jhotdraw.draw.ImageOutputFormat,CONSTRUCTOR()#org.jhotdraw.draw.ImageOutputFormat,CONSTRUCTOR(java.lang.String,java.lang.String,java.lang.String,int)#javax.swing.filechooser.FileFilter,getFileFilter()#java.lang.String,getFileExtension()#javax.swing.JComponent,getOutputFormatAccessory()#void,write(java.io.File,org.jhotdraw.draw.Drawing)#void,write(java.io.OutputStream,org.jhotdraw.draw.Drawing)#void,write(java.io.OutputStream,org.jhotdraw.draw.Drawing,java.awt.geom.AffineTransform,java.awt.Dimension)#java.awt.datatransfer.Transferable,createTransferable(java.util.List<org.jhotdraw.draw.Figure>,double)#void,write(java.io.OutputStream,java.util.List<org.jhotdraw.draw.Figure>)#void,write(java.io.OutputStream,java.util.List<org.jhotdraw.draw.Figure>,java.awt.geom.AffineTransform,java.awt.Dimension)#java.awt.image.BufferedImage,toImage(java.util.List<org.jhotdraw.draw.Figure>,double)#java.awt.image.BufferedImage,toImage(java.util.List<org.jhotdraw.draw.Figure>,java.awt.geom.AffineTransform,java.awt.Dimension)#void,setRenderingHints(java.awt.Graphics2D)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.GridConstrainer#org.jhotdraw.draw.GridConstrainer,CONSTRUCTOR(double,double)#double,getWidth()#double,getHeight()#java.awt.geom.Point2D.Double,constrainPoint(java.awt.geom.Point2D.Double)#java.awt.geom.Point2D.Double,constrainPoint(java.awt.geom.Point2D.Double,org.jhotdraw.draw.Direction)#java.lang.String,toString()#boolean,isVisible()#void,draw(java.awt.Graphics2D,org.jhotdraw.draw.DrawingView)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.odg.Main#org.jhotdraw.samples.odg.Main,CONSTRUCTOR()#void,main(java.lang.String[])#void,#ExtendsOrImplements#()#
net.n3.nanoxml.IXMLValidator#void,setParameterEntityResolver(net.n3.nanoxml.IXMLEntityResolver)#net.n3.nanoxml.IXMLEntityResolver,getParameterEntityResolver()#void,parseDTD(java.lang.String,net.n3.nanoxml.IXMLReader,net.n3.nanoxml.IXMLEntityResolver,boolean)#void,elementStarted(java.lang.String,java.lang.String,int)#void,elementEnded(java.lang.String,java.lang.String,int)#void,attributeAdded(java.lang.String,java.lang.String,java.lang.String,int)#void,elementAttributesProcessed(java.lang.String,java.util.Properties,java.lang.String,int)#void,PCDataAdded(java.lang.String,int)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.OpenRecentAction#org.jhotdraw.application.action.OpenRecentAction,CONSTRUCTOR(java.io.File)#void,actionPerformed(java.awt.event.ActionEvent)#void,openFile(org.jhotdraw.application.DocumentView)#void,fileOpened(org.jhotdraw.application.DocumentView,java.io.File,java.lang.Object)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.mini.MultiEditorSample#void,main(java.lang.String[])#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.Connector#java.awt.geom.Point2D.Double,findStart(org.jhotdraw.draw.ConnectionFigure)#java.awt.geom.Point2D.Double,findEnd(org.jhotdraw.draw.ConnectionFigure)#org.jhotdraw.draw.Figure,getOwner()#java.awt.geom.Point2D.Double,getAnchor()#java.awt.geom.Rectangle2D.Double,getBounds()#void,updateAnchor(java.awt.geom.Point2D.Double)#boolean,contains(java.awt.geom.Point2D.Double)#java.lang.Object,clone()#java.awt.geom.Rectangle2D.Double,getDrawingArea()#void,draw(java.awt.Graphics2D)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.AlignAction.Horizontal#org.jhotdraw.draw.action.AlignAction.Horizontal,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.action.AlignAction.Horizontal,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.util.ResourceBundleUtil)#void,alignFigures(java.util.Collection,java.awt.geom.Rectangle2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.ExitAction#org.jhotdraw.application.action.ExitAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,saveChanges()#void,reviewChanges()#void,saveChangesAndReviewNext()#void,reviewNext()#void,saveToFile(java.io.File)#void,saveToFileAndReviewNext(java.io.File)#void,fileSaved(org.jhotdraw.application.DocumentView,java.io.File,java.lang.Object)#void,fileSavedAndReviewNext(org.jhotdraw.application.DocumentView,java.io.File,java.lang.Object)#void,doExit()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.BezierOutlineHandle#org.jhotdraw.draw.BezierOutlineHandle,CONSTRUCTOR(org.jhotdraw.draw.BezierFigure)#org.jhotdraw.draw.BezierFigure,getOwner()#java.awt.Rectangle,basicGetBounds()#boolean,contains(java.awt.Point)#void,trackStart(java.awt.Point,int)#void,trackStep(java.awt.Point,java.awt.Point,int)#void,trackEnd(java.awt.Point,java.awt.Point,int)#void,draw(java.awt.Graphics2D)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.OpenAction#org.jhotdraw.app.action.OpenAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,actionPerformed(java.awt.event.ActionEvent)#void,openFile(javax.swing.JFileChooser,org.jhotdraw.app.Project)#void,fileOpened(org.jhotdraw.app.Project,java.io.File,java.lang.Object)#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.PlacardScrollPaneLayout.UIResource#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.pert.Main#void,main(java.lang.String[])#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.TransformHandleKit.NorthHandle#void,trackStepNormalized(java.awt.geom.Point2D.Double)#java.awt.Cursor,getCursor()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ImageHolderFigure#void,loadImage(java.io.File)#void,loadImage(java.io.InputStream)#java.awt.image.BufferedImage,getBufferedImage()#void,setBufferedImage(java.awt.image.BufferedImage)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ConnectionFigure#void,setStartConnector(org.jhotdraw.draw.Connector)#org.jhotdraw.draw.Connector,getStartConnector()#void,setEndConnector(org.jhotdraw.draw.Connector)#org.jhotdraw.draw.Connector,getEndConnector()#void,updateConnection()#boolean,canConnect(org.jhotdraw.draw.Connector,org.jhotdraw.draw.Connector)#boolean,canConnect(org.jhotdraw.draw.Connector)#void,setStartPoint(java.awt.geom.Point2D.Double)#void,setEndPoint(java.awt.geom.Point2D.Double)#void,setPoint(int,java.awt.geom.Point2D.Double)#int,getNodeCount()#java.awt.geom.Point2D.Double,getPoint(int)#org.jhotdraw.geom.BezierPath.Node,getNode(int)#void,setNode(int,org.jhotdraw.geom.BezierPath.Node)#java.awt.geom.Point2D.Double,getStartPoint()#java.awt.geom.Point2D.Double,getEndPoint()#org.jhotdraw.draw.Figure,getStartFigure()#org.jhotdraw.draw.Figure,getEndFigure()#org.jhotdraw.draw.Liner,getLiner()#void,setLiner(org.jhotdraw.draw.Liner)#void,lineout()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.Handle#org.jhotdraw.draw.Figure,getOwner()#void,setView(org.jhotdraw.draw.DrawingView)#void,addHandleListener(org.jhotdraw.draw.HandleListener)#boolean,contains(java.awt.Point)#void,draw(java.awt.Graphics2D)#void,invalidate()#void,dispose()#java.awt.Cursor,getCursor()#boolean,isCombinableWith(org.jhotdraw.draw.Handle)#void,trackStart(java.awt.Point,int)#void,trackStep(java.awt.Point,java.awt.Point,int)#void,trackEnd(java.awt.Point,java.awt.Point,int)#void,trackDoubleClick(java.awt.Point,int)#void,viewTransformChanged()#java.util.Collection<org.jhotdraw.draw.Handle>,createSecondaryHandles()#java.lang.String,getToolTipText(java.awt.Point)#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.JStringAttributeField#org.jhotdraw.gui.JStringAttributeField,CONSTRUCTOR()#org.jhotdraw.gui.JStringAttributeField,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey<java.lang.String>)#void,setAttributeKey(org.jhotdraw.draw.AttributeKey<java.lang.String>)#void,setEditor(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.DrawingEditor,getEditor()#org.jhotdraw.draw.DrawingView,getView()#void,updateEnabledState()#void,updateField()#void,dispose()#void,paintComponent(java.awt.Graphics)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.Figure#void,draw(java.awt.Graphics2D)#int,getLayer()#boolean,isVisible()#void,setVisible(boolean)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#java.awt.geom.Point2D.Double,getStartPoint()#java.awt.geom.Point2D.Double,getEndPoint()#java.awt.geom.Rectangle2D.Double,getBounds()#java.awt.geom.Rectangle2D.Double,getDrawingArea()#org.jhotdraw.geom.Dimension2DDouble,getPreferredSize()#java.lang.Object,getTransformRestoreData()#void,restoreTransformTo(java.lang.Object)#void,transform(java.awt.geom.AffineTransform)#void,setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)#java.lang.Object,getAttribute(org.jhotdraw.draw.AttributeKey)#java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>,getAttributes()#java.lang.Object,getAttributesRestoreData()#void,restoreAttributesTo(java.lang.Object)#boolean,isInteractive()#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(int)#java.awt.Cursor,getCursor(java.awt.geom.Point2D.Double)#java.util.Collection<javax.swing.Action>,getActions(java.awt.geom.Point2D.Double)#org.jhotdraw.draw.Tool,getTool(java.awt.geom.Point2D.Double)#java.lang.String,getToolTipText(java.awt.geom.Point2D.Double)#boolean,canConnect()#org.jhotdraw.draw.Connector,findConnector(java.awt.geom.Point2D.Double,org.jhotdraw.draw.ConnectionFigure)#org.jhotdraw.draw.Connector,findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)#java.util.Collection<org.jhotdraw.draw.Connector>,getConnectors(org.jhotdraw.draw.ConnectionFigure)#boolean,includes(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Figure,findFigureInside(java.awt.geom.Point2D.Double)#java.util.Collection<org.jhotdraw.draw.Figure>,getDecomposition()#void,remap(java.util.Map<org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure>)#void,addNotify(org.jhotdraw.draw.Drawing)#void,removeNotify(org.jhotdraw.draw.Drawing)#void,willChange()#void,changed()#void,invalidate()#void,requestRemove()#boolean,handleDrop(java.awt.geom.Point2D.Double,java.util.Collection<org.jhotdraw.draw.Figure>,org.jhotdraw.draw.DrawingView)#boolean,handleMouseClick(java.awt.geom.Point2D.Double,java.awt.event.MouseEvent,org.jhotdraw.draw.DrawingView)#void,addFigureListener(org.jhotdraw.draw.FigureListener)#void,removeFigureListener(org.jhotdraw.draw.FigureListener)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.TextTool#org.jhotdraw.draw.TextTool,CONSTRUCTOR(org.jhotdraw.draw.TextHolderFigure)#org.jhotdraw.draw.TextTool,CONSTRUCTOR(org.jhotdraw.draw.TextHolderFigure,java.util.Map)#void,deactivate(org.jhotdraw.draw.DrawingEditor)#void,mousePressed(java.awt.event.MouseEvent)#void,mouseDragged(java.awt.event.MouseEvent)#void,beginEdit(org.jhotdraw.draw.TextHolderFigure)#void,mouseReleased(java.awt.event.MouseEvent)#void,endEdit()#void,actionPerformed(java.awt.event.ActionEvent)#void,creationFinished(org.jhotdraw.draw.Figure)#void,#ExtendsOrImplements#()#
org.jhotdraw.undo.UndoRedoManager.RedoAction#org.jhotdraw.undo.UndoRedoManager.RedoAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.BezierScaleHandle#org.jhotdraw.draw.BezierScaleHandle,CONSTRUCTOR(org.jhotdraw.draw.BezierFigure)#boolean,isCombinableWith(org.jhotdraw.draw.Handle)#void,draw(java.awt.Graphics2D)#java.awt.Rectangle,basicGetBounds()#java.awt.Point,getLocation()#void,trackStart(java.awt.Point,int)#void,trackStep(java.awt.Point,java.awt.Point,int)#void,trackEnd(java.awt.Point,java.awt.Point,int)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.RoundRectangleFigure#org.jhotdraw.draw.RoundRectangleFigure,CONSTRUCTOR()#org.jhotdraw.draw.RoundRectangleFigure,CONSTRUCTOR(double,double,double,double)#void,drawFill(java.awt.Graphics2D)#void,drawStroke(java.awt.Graphics2D)#java.awt.geom.Rectangle2D.Double,getBounds()#java.awt.geom.Rectangle2D.Double,getDrawingArea()#double,getArcWidth()#double,getArcHeight()#void,setArc(double,double)#boolean,contains(java.awt.geom.Point2D.Double)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,transform(java.awt.geom.AffineTransform)#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(int)#void,restoreTransformTo(java.lang.Object)#java.lang.Object,getTransformRestoreData()#org.jhotdraw.draw.Connector,findConnector(java.awt.geom.Point2D.Double,org.jhotdraw.draw.ConnectionFigure)#org.jhotdraw.draw.Connector,findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)#org.jhotdraw.draw.RoundRectangleFigure,clone()#void,read(org.jhotdraw.xml.DOMInput)#void,write(org.jhotdraw.xml.DOMOutput)#void,#ExtendsOrImplements#()#
net.n3.nanoxml.XMLException#net.n3.nanoxml.XMLException,CONSTRUCTOR(java.lang.String)#net.n3.nanoxml.XMLException,CONSTRUCTOR(java.lang.Exception)#net.n3.nanoxml.XMLException,CONSTRUCTOR(java.lang.String,int,java.lang.Exception)#net.n3.nanoxml.XMLException,CONSTRUCTOR(java.lang.String,int,java.lang.String)#net.n3.nanoxml.XMLException,CONSTRUCTOR(java.lang.String,int,java.lang.Exception,java.lang.String,boolean)#void,finalize()#java.lang.String,getSystemID()#int,getLineNr()#java.lang.Exception,getException()#void,printStackTrace(java.io.PrintWriter)#void,printStackTrace(java.io.PrintStream)#void,printStackTrace()#java.lang.String,toString()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ChopRectangleConnector#org.jhotdraw.draw.ChopRectangleConnector,CONSTRUCTOR()#org.jhotdraw.draw.ChopRectangleConnector,CONSTRUCTOR(org.jhotdraw.draw.Figure)#java.awt.geom.Point2D.Double,findStart(org.jhotdraw.draw.ConnectionFigure)#java.awt.geom.Point2D.Double,findEnd(org.jhotdraw.draw.ConnectionFigure)#java.awt.geom.Point2D.Double,chop(org.jhotdraw.draw.Figure,java.awt.geom.Point2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.LocatorLayouter#org.jhotdraw.draw.LocatorLayouter,CONSTRUCTOR()#java.awt.geom.Rectangle2D.Double,calculateLayout(org.jhotdraw.draw.CompositeFigure,java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#java.awt.geom.Rectangle2D.Double,layout(org.jhotdraw.draw.CompositeFigure,java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ResizeHandleKit.SouthHandle#void,trackStepNormalized(java.awt.geom.Point2D.Double)#java.awt.Cursor,getCursor()#void,#ExtendsOrImplements#()#
org.apache.batik.ext.awt.MultipleGradientPaint#org.apache.batik.ext.awt.MultipleGradientPaint,CONSTRUCTOR(float[],java.awt.Color[],org.apache.batik.ext.awt.MultipleGradientPaint.CycleMethodEnum,org.apache.batik.ext.awt.MultipleGradientPaint.ColorSpaceEnum,java.awt.geom.AffineTransform)#java.awt.Color[],getColors()#float[],getFractions()#int,getTransparency()#org.apache.batik.ext.awt.MultipleGradientPaint.CycleMethodEnum,getCycleMethod()#org.apache.batik.ext.awt.MultipleGradientPaint.ColorSpaceEnum,getColorSpace()#java.awt.geom.AffineTransform,getTransform()#void,#ExtendsOrImplements#()#
net.n3.nanoxml.IXMLParser#void,setReader(net.n3.nanoxml.IXMLReader)#net.n3.nanoxml.IXMLReader,getReader()#void,setBuilder(net.n3.nanoxml.IXMLBuilder)#net.n3.nanoxml.IXMLBuilder,getBuilder()#void,setValidator(net.n3.nanoxml.IXMLValidator)#net.n3.nanoxml.IXMLValidator,getValidator()#void,setResolver(net.n3.nanoxml.IXMLEntityResolver)#net.n3.nanoxml.IXMLEntityResolver,getResolver()#java.lang.Object,parse()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.RectangleFigure#org.jhotdraw.draw.RectangleFigure,CONSTRUCTOR()#org.jhotdraw.draw.RectangleFigure,CONSTRUCTOR(double,double,double,double)#void,drawFill(java.awt.Graphics2D)#void,drawStroke(java.awt.Graphics2D)#java.awt.geom.Rectangle2D.Double,getBounds()#java.awt.geom.Rectangle2D.Double,getDrawingArea()#boolean,contains(java.awt.geom.Point2D.Double)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,transform(java.awt.geom.AffineTransform)#void,restoreTransformTo(java.lang.Object)#java.lang.Object,getTransformRestoreData()#org.jhotdraw.draw.RectangleFigure,clone()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.DrawingEditor#org.jhotdraw.draw.DrawingView,findView(java.awt.Container)#void,setDefaultAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)#java.lang.Object,getDefaultAttribute(org.jhotdraw.draw.AttributeKey)#void,applyDefaultAttributesTo(org.jhotdraw.draw.Figure)#java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>,getDefaultAttributes()#void,setEnabled(boolean)#boolean,isEnabled()#void,addPropertyChangeListener(java.beans.PropertyChangeListener)#void,removePropertyChangeListener(java.beans.PropertyChangeListener)#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.JDoubleAttributeFieldBeanInfo#java.beans.BeanDescriptor,getBeanDescriptor()#java.beans.PropertyDescriptor[],getPropertyDescriptors()#java.beans.EventSetDescriptor[],getEventSetDescriptors()#java.beans.MethodDescriptor[],getMethodDescriptors()#int,getDefaultPropertyIndex()#int,getDefaultEventIndex()#java.awt.Image,getIcon(int)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.AbstractProject#org.jhotdraw.app.AbstractProject,CONSTRUCTOR()#void,init()#void,setApplication(org.jhotdraw.app.Application)#org.jhotdraw.app.Application,getApplication()#javax.swing.JComponent,getComponent()#java.io.File,getFile()#void,setFile(java.io.File)#javax.swing.JFileChooser,getOpenChooser()#javax.swing.JFileChooser,createOpenChooser()#javax.swing.JFileChooser,getSaveChooser()#javax.swing.JFileChooser,createSaveChooser()#boolean,hasUnsavedChanges()#void,setHasUnsavedChanges(boolean)#void,dispose()#javax.swing.Action,getAction(java.lang.String)#void,putAction(java.lang.String,javax.swing.Action)#void,execute(java.lang.Runnable)#void,setMultipleOpenId(int)#int,getMultipleOpenId()#void,setShowing(boolean)#boolean,isShowing()#void,markChangesAsSaved()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ImageInputFormat#org.jhotdraw.draw.ImageInputFormat,CONSTRUCTOR(org.jhotdraw.draw.ImageHolderFigure)#org.jhotdraw.draw.ImageInputFormat,CONSTRUCTOR(org.jhotdraw.draw.ImageHolderFigure,java.lang.String,java.lang.String,java.lang.String,int)#javax.swing.filechooser.FileFilter,getFileFilter()#java.lang.String,getFileExtension()#javax.swing.JComponent,getInputFormatAccessory()#void,read(java.io.File,org.jhotdraw.draw.Drawing)#void,read(java.io.InputStream,org.jhotdraw.draw.Drawing)#org.jhotdraw.draw.ImageHolderFigure,createImageHolder(java.io.InputStream)#boolean,isDataFlavorSupported(java.awt.datatransfer.DataFlavor)#java.util.List<org.jhotdraw.draw.Figure>,readFigures(java.awt.datatransfer.Transferable)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.CompositeFigure#void,add(org.jhotdraw.draw.Figure)#void,add(int,org.jhotdraw.draw.Figure)#void,basicAdd(org.jhotdraw.draw.Figure)#void,basicAdd(int,org.jhotdraw.draw.Figure)#boolean,remove(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Figure,removeChild(int)#void,removeAllChildren()#boolean,basicRemove(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Figure,basicRemoveChild(int)#void,basicRemoveAllChildren()#java.util.List<org.jhotdraw.draw.Figure>,getChildren()#int,getChildCount()#org.jhotdraw.draw.Figure,getChild(int)#org.jhotdraw.draw.Layouter,getLayouter()#void,layout()#void,setLayouter(org.jhotdraw.draw.Layouter)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.odg.figures.ODGFigure#boolean,isEmpty()#void,#ExtendsOrImplements#()#
net.n3.nanoxml.XMLElement#net.n3.nanoxml.XMLElement,CONSTRUCTOR()#net.n3.nanoxml.XMLElement,CONSTRUCTOR(java.lang.String)#net.n3.nanoxml.XMLElement,CONSTRUCTOR(java.lang.String,java.lang.String,int)#net.n3.nanoxml.XMLElement,CONSTRUCTOR(java.lang.String,java.lang.String)#net.n3.nanoxml.XMLElement,CONSTRUCTOR(java.lang.String,java.lang.String,java.lang.String,int)#net.n3.nanoxml.IXMLElement,createPCDataElement()#net.n3.nanoxml.IXMLElement,createElement(java.lang.String)#net.n3.nanoxml.IXMLElement,createElement(java.lang.String,java.lang.String,int)#net.n3.nanoxml.IXMLElement,createElement(java.lang.String,java.lang.String)#net.n3.nanoxml.IXMLElement,createElement(java.lang.String,java.lang.String,java.lang.String,int)#void,finalize()#net.n3.nanoxml.IXMLElement,getParent()#java.lang.String,getFullName()#java.lang.String,getName()#java.lang.String,getNamespace()#void,setName(java.lang.String)#void,setName(java.lang.String,java.lang.String)#void,addChild(net.n3.nanoxml.IXMLElement)#void,insertChild(net.n3.nanoxml.IXMLElement,int)#void,removeChild(net.n3.nanoxml.IXMLElement)#void,removeChildAtIndex(int)#java.util.Iterator,iterateChildren()#boolean,isLeaf()#boolean,hasChildren()#int,getChildrenCount()#java.util.ArrayList,getChildren()#net.n3.nanoxml.IXMLElement,getChildAtIndex(int)#net.n3.nanoxml.IXMLElement,getFirstChildNamed(java.lang.String)#net.n3.nanoxml.IXMLElement,getFirstChildNamed(java.lang.String,java.lang.String)#java.util.ArrayList,getChildrenNamed(java.lang.String)#java.util.ArrayList,getChildrenNamed(java.lang.String,java.lang.String)#int,getAttributeCount()#java.lang.String,getAttribute(java.lang.String)#java.lang.String,getAttribute(java.lang.String,java.lang.String)#java.lang.String,getAttribute(java.lang.String,java.lang.String,java.lang.String)#double,getDoubleAttribute(java.lang.String,java.lang.String,double)#int,getAttribute(java.lang.String,int)#int,getAttribute(java.lang.String,java.lang.String,int)#java.lang.Object,getAttribute(java.lang.String,java.lang.String,java.util.Map,java.lang.String)#java.lang.String,getAttributeType(java.lang.String)#java.lang.String,getAttributeNamespace(java.lang.String)#java.lang.String,getAttributeType(java.lang.String,java.lang.String)#void,setAttribute(java.lang.String,java.lang.String)#void,setAttribute(java.lang.String,java.lang.String,java.lang.String)#void,removeAttribute(java.lang.String)#void,removeAttribute(java.lang.String,java.lang.String)#java.util.Iterator,iterateAttributeNames()#boolean,hasAttribute(java.lang.String)#boolean,hasAttribute(java.lang.String,java.lang.String)#java.util.Properties,getAttributes()#java.util.Properties,getAttributesInNamespace(java.lang.String)#java.lang.String,getSystemID()#int,getLineNr()#java.lang.String,getContent()#void,setContent(java.lang.String)#boolean,equals(java.lang.Object)#boolean,equalsXMLElement(net.n3.nanoxml.IXMLElement)#java.lang.String,toString()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.AttributeAction#org.jhotdraw.draw.action.AttributeAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.lang.Object)#org.jhotdraw.draw.action.AttributeAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.lang.Object,javax.swing.Icon)#org.jhotdraw.draw.action.AttributeAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.lang.Object,java.lang.String)#org.jhotdraw.draw.action.AttributeAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.lang.Object,java.lang.String,javax.swing.Icon)#org.jhotdraw.draw.action.AttributeAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.lang.Object,java.lang.String,javax.swing.Icon,javax.swing.Action)#org.jhotdraw.draw.action.AttributeAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>,java.lang.String,javax.swing.Icon)#void,actionPerformed(java.awt.event.ActionEvent)#void,updateEnabledState()#void,#ExtendsOrImplements#()#
net.n3.nanoxml.NonValidator#net.n3.nanoxml.NonValidator,CONSTRUCTOR()#void,finalize()#void,setParameterEntityResolver(net.n3.nanoxml.IXMLEntityResolver)#net.n3.nanoxml.IXMLEntityResolver,getParameterEntityResolver()#void,parseDTD(java.lang.String,net.n3.nanoxml.IXMLReader,net.n3.nanoxml.IXMLEntityResolver,boolean)#void,processElement(net.n3.nanoxml.IXMLReader,net.n3.nanoxml.IXMLEntityResolver)#void,processConditionalSection(net.n3.nanoxml.IXMLReader,net.n3.nanoxml.IXMLEntityResolver)#void,processIgnoreSection(net.n3.nanoxml.IXMLReader,net.n3.nanoxml.IXMLEntityResolver)#void,processAttList(net.n3.nanoxml.IXMLReader,net.n3.nanoxml.IXMLEntityResolver)#void,processEntity(net.n3.nanoxml.IXMLReader,net.n3.nanoxml.IXMLEntityResolver)#void,elementStarted(java.lang.String,java.lang.String,int)#void,elementEnded(java.lang.String,java.lang.String,int)#void,elementAttributesProcessed(java.lang.String,java.util.Properties,java.lang.String,int)#void,attributeAdded(java.lang.String,java.lang.String,java.lang.String,int)#void,PCDataAdded(java.lang.String,int)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddyapplication.text.NumberedParagraphView#org.jhotdraw.samples.teddyapplication.text.NumberedParagraphView,CONSTRUCTOR(javax.swing.text.Element,org.jhotdraw.samples.teddyapplication.text.NumberedViewFactory)#short,getLeftInset()#void,paintChild(java.awt.Graphics,java.awt.Rectangle,int)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.TextAreaFigure#org.jhotdraw.draw.TextAreaFigure,CONSTRUCTOR()#org.jhotdraw.draw.TextAreaFigure,CONSTRUCTOR(java.lang.String)#void,drawText(java.awt.Graphics2D)#void,drawFill(java.awt.Graphics2D)#void,drawStroke(java.awt.Graphics2D)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,transform(java.awt.geom.AffineTransform)#boolean,figureContains(java.awt.geom.Point2D.Double)#java.awt.geom.Rectangle2D.Double,getBounds()#void,restoreTransformTo(java.lang.Object)#java.lang.Object,getTransformRestoreData()#java.lang.String,getText()#org.jhotdraw.geom.Insets2D.Double,getInsets()#int,getTabSize()#void,setText(java.lang.String)#int,getTextColumns()#java.awt.Font,getFont()#java.awt.Color,getTextColor()#java.awt.Color,getFillColor()#void,setFontSize(float)#float,getFontSize()#boolean,isEditable()#void,setEditable(boolean)#org.jhotdraw.draw.Tool,getTool(java.awt.geom.Point2D.Double)#org.jhotdraw.draw.TextHolderFigure,getLabelFor()#org.jhotdraw.draw.TextAreaFigure,clone()#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(int)#void,readBounds(org.jhotdraw.xml.DOMInput)#void,writeBounds(org.jhotdraw.xml.DOMOutput)#void,read(org.jhotdraw.xml.DOMInput)#void,write(org.jhotdraw.xml.DOMOutput)#void,invalidate()#boolean,isTextOverflow()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.TransformHandleKit.SouthWestHandle#void,trackStepNormalized(java.awt.geom.Point2D.Double)#java.awt.Cursor,getCursor()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.RestoreDataEdit#org.jhotdraw.draw.RestoreDataEdit,CONSTRUCTOR(org.jhotdraw.draw.Figure,java.lang.Object)#java.lang.String,getPresentationName()#boolean,addEdit(javax.swing.undo.UndoableEdit)#boolean,replaceEdit(javax.swing.undo.UndoableEdit)#void,redo()#void,undo()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.pert.figures.DependencyFigure#org.jhotdraw.samples.pert.figures.DependencyFigure,CONSTRUCTOR()#boolean,canConnect(org.jhotdraw.draw.Connector,org.jhotdraw.draw.Connector)#boolean,canConnect(org.jhotdraw.draw.Connector)#void,handleDisconnect(org.jhotdraw.draw.Connector,org.jhotdraw.draw.Connector)#void,handleConnect(org.jhotdraw.draw.Connector,org.jhotdraw.draw.Connector)#org.jhotdraw.samples.pert.figures.DependencyFigure,clone()#int,getLayer()#void,removeNotify(org.jhotdraw.draw.Drawing)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.RedoAction#org.jhotdraw.app.action.RedoAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,updateEnabledState()#void,updateProject(org.jhotdraw.app.Project,org.jhotdraw.app.Project)#void,installProjectListeners(org.jhotdraw.app.Project)#void,uninstallProjectListeners(org.jhotdraw.app.Project)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.xml.DOMStorable#void,write(org.jhotdraw.xml.DOMOutput)#void,read(org.jhotdraw.xml.DOMInput)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.ClearAction#org.jhotdraw.application.action.ClearAction,CONSTRUCTOR()#void,doIt(org.jhotdraw.application.DocumentView)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.AbstractLineDecoration#org.jhotdraw.draw.AbstractLineDecoration,CONSTRUCTOR(boolean,boolean,boolean)#boolean,isFilled()#boolean,isStroked()#boolean,isSolid()#void,draw(java.awt.Graphics2D,org.jhotdraw.draw.Figure,java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#java.awt.geom.Rectangle2D.Double,getDrawingArea(org.jhotdraw.draw.Figure,java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#double,getDecorationRadius(org.jhotdraw.draw.Figure)#void,setFilled(boolean)#void,setStroked(boolean)#void,setSolid(boolean)#java.awt.geom.GeneralPath,getDecoratorPath(org.jhotdraw.draw.Figure)#double,getDecoratorPathRadius(org.jhotdraw.draw.Figure)#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.JPopupButton.ActionPropertyHandler#void,propertyChange(java.beans.PropertyChangeEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.net.NetApplicationModel#org.jhotdraw.samples.net.NetApplicationModel,CONSTRUCTOR()#void,initApplication(org.jhotdraw.app.Application)#org.jhotdraw.draw.DefaultDrawingEditor,getSharedEditor()#void,initProject(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#java.util.List<javax.swing.JToolBar>,createToolBars(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#java.util.List<javax.swing.JMenu>,createMenus(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#void,#ExtendsOrImplements#()#
org.jhotdraw.undo.UndoRedoManager#org.jhotdraw.util.ResourceBundleUtil,getLabels()#org.jhotdraw.undo.UndoRedoManager,CONSTRUCTOR()#void,setLocale(java.util.Locale)#void,discardAllEdits()#void,setHasSignificantEdits(boolean)#boolean,hasSignificantEdits()#boolean,addEdit(javax.swing.undo.UndoableEdit)#javax.swing.Action,getUndoAction()#javax.swing.Action,getRedoAction()#void,undo()#void,redo()#void,undoOrRedo()#void,addPropertyChangeListener(java.beans.PropertyChangeListener)#void,addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)#void,removePropertyChangeListener(java.beans.PropertyChangeListener)#void,removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)#void,firePropertyChange(java.lang.String,boolean,boolean)#void,firePropertyChange(java.lang.String,int,int)#void,firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.SVGProject#org.jhotdraw.samples.svg.SVGProject,CONSTRUCTOR()#void,init()#org.jhotdraw.draw.Drawing,createDrawing()#java.awt.print.Pageable,createPageable()#org.jhotdraw.draw.DrawingEditor,getEditor()#void,setEditor(org.jhotdraw.draw.DrawingEditor)#void,setHasUnsavedChanges(boolean)#void,write(java.io.File)#void,read(java.io.File)#org.jhotdraw.draw.DrawingEditor,getDrawingEditor()#org.jhotdraw.draw.Drawing,getDrawing()#void,setEnabled(boolean)#void,setPropertiesPanelVisible(boolean)#boolean,isPropertiesPanelVisible()#void,clear()#javax.swing.JFileChooser,createOpenChooser()#javax.swing.JFileChooser,createSaveChooser()#javax.swing.JFileChooser,createExportChooser()#javax.swing.JFileChooser,getExportChooser()#void,export(java.io.File,javax.swing.filechooser.FileFilter,java.awt.Component)#void,setGridVisible(boolean)#boolean,isGridVisible()#double,getScaleFactor()#void,setScaleFactor(double)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.DefaultApplicationModel#org.jhotdraw.app.DefaultApplicationModel,CONSTRUCTOR()#void,setName(java.lang.String)#java.lang.String,getName()#void,setVersion(java.lang.String)#java.lang.String,getVersion()#void,setCopyright(java.lang.String)#java.lang.String,getCopyright()#void,setProjectClassName(java.lang.String)#void,setProjectClass(java.lang.Class)#java.lang.Class,getProjectClass()#org.jhotdraw.app.Project,createProject()#java.util.List<javax.swing.JToolBar>,createToolBars(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#java.util.List<javax.swing.JMenu>,createMenus(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#javax.swing.JMenu,createEditMenu(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#void,initProject(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#void,initApplication(org.jhotdraw.app.Application)#javax.swing.Action,getAction(java.lang.String)#void,putAction(java.lang.String,javax.swing.Action)#void,#ExtendsOrImplements#()#
net.n3.nanoxml.IXMLBuilder#void,startBuilding(java.lang.String,int)#void,newProcessingInstruction(java.lang.String,java.io.Reader)#void,startElement(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)#void,addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#void,elementAttributesProcessed(java.lang.String,java.lang.String,java.lang.String)#void,endElement(java.lang.String,java.lang.String,java.lang.String)#void,addPCData(java.io.Reader,java.lang.String,int)#java.lang.Object,getResult()#void,#ExtendsOrImplements#()#
org.jhotdraw.geom.BezierPathIterator#org.jhotdraw.geom.BezierPathIterator,CONSTRUCTOR(org.jhotdraw.geom.BezierPath)#org.jhotdraw.geom.BezierPathIterator,CONSTRUCTOR(org.jhotdraw.geom.BezierPath,java.awt.geom.AffineTransform)#int,getWindingRule()#boolean,isDone()#void,next()#int,currentSegment(float[])#int,currentSegment(double[])#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.NewAction#org.jhotdraw.app.action.NewAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.JStringAttributeAreaBeanInfo#java.beans.BeanDescriptor,getBeanDescriptor()#java.beans.PropertyDescriptor[],getPropertyDescriptors()#java.beans.EventSetDescriptor[],getEventSetDescriptors()#java.beans.MethodDescriptor[],getMethodDescriptors()#int,getDefaultPropertyIndex()#int,getDefaultEventIndex()#java.awt.Image,getIcon(int)#void,#ExtendsOrImplements#()#
org.apache.batik.ext.awt.MultipleGradientPaint.CycleMethodEnum#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddy.io.LFWriter#org.jhotdraw.samples.teddy.io.LFWriter,CONSTRUCTOR(java.io.Writer)#java.lang.String,getLineSeparator()#void,setLineSeparator(java.lang.String)#void,write(int)#void,write(char,int,int)#void,write(java.lang.String,int,int)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.net.NetProject#org.jhotdraw.samples.net.NetProject,CONSTRUCTOR()#void,init()#org.jhotdraw.draw.Drawing,createDrawing()#java.awt.print.Pageable,createPageable()#org.jhotdraw.draw.DrawingEditor,getEditor()#void,setEditor(org.jhotdraw.draw.DrawingEditor)#void,setGridVisible(boolean)#boolean,isGridVisible()#double,getScaleFactor()#void,setScaleFactor(double)#void,setHasUnsavedChanges(boolean)#void,write(java.io.File)#void,read(java.io.File)#void,setDrawingEditor(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.DrawingEditor,getDrawingEditor()#void,clear()#javax.swing.JFileChooser,createOpenChooser()#javax.swing.JFileChooser,createSaveChooser()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddy.TeddyApplicationModel#org.jhotdraw.samples.teddy.TeddyApplicationModel,CONSTRUCTOR()#void,initApplication(org.jhotdraw.app.Application)#void,initProject(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#java.util.List<javax.swing.JMenu>,createMenus(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.pert.PertFactory#org.jhotdraw.samples.pert.PertFactory,CONSTRUCTOR()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.OutputFormat#javax.swing.filechooser.FileFilter,getFileFilter()#java.lang.String,getFileExtension()#javax.swing.JComponent,getOutputFormatAccessory()#void,write(java.io.File,org.jhotdraw.draw.Drawing)#void,write(java.io.OutputStream,org.jhotdraw.draw.Drawing)#java.awt.datatransfer.Transferable,createTransferable(java.util.List<org.jhotdraw.draw.Figure>,double)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.MoveToBackAction#org.jhotdraw.draw.action.MoveToBackAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#void,actionPerformed(java.awt.event.ActionEvent)#void,sendToBack(org.jhotdraw.draw.DrawingView,java.util.Collection)#void,#ExtendsOrImplements#()#
org.apache.batik.ext.awt.LinearGradientPaintContext#org.apache.batik.ext.awt.LinearGradientPaintContext,CONSTRUCTOR(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints,java.awt.geom.Point2D,java.awt.geom.Point2D,float[],java.awt.Color[],org.apache.batik.ext.awt.MultipleGradientPaint.CycleMethodEnum,org.apache.batik.ext.awt.MultipleGradientPaint.ColorSpaceEnum)#void,fillHardNoCycle(int[],int,int,int,int,int,int)#void,fillSimpleNoCycle(int[],int,int,int,int,int,int)#void,fillSimpleRepeat(int[],int,int,int,int,int,int)#void,fillSimpleReflect(int[],int,int,int,int,int,int)#void,fillRaster(int[],int,int,int,int,int,int)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.Actions#void,configureJCheckBoxMenuItem(javax.swing.JCheckBoxMenuItem,javax.swing.Action)#void,unconfigureJCheckBoxMenuItem(javax.swing.JCheckBoxMenuItem,javax.swing.Action)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.BoundsOutlineHandle#org.jhotdraw.draw.BoundsOutlineHandle,CONSTRUCTOR(org.jhotdraw.draw.Figure)#java.awt.Rectangle,basicGetBounds()#boolean,contains(java.awt.Point)#void,trackStart(java.awt.Point,int)#void,trackStep(java.awt.Point,java.awt.Point,int)#void,trackEnd(java.awt.Point,java.awt.Point,int)#void,draw(java.awt.Graphics2D)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.ProjectPropertyAction#org.jhotdraw.app.action.ProjectPropertyAction,CONSTRUCTOR(org.jhotdraw.app.Application,java.lang.String,java.lang.Object)#org.jhotdraw.app.action.ProjectPropertyAction,CONSTRUCTOR(org.jhotdraw.app.Application,java.lang.String,java.lang.Class,java.lang.Object)#void,actionPerformed(java.awt.event.ActionEvent)#void,installProjectListeners(org.jhotdraw.app.Project)#void,uninstallProjectListeners(org.jhotdraw.app.Project)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ToolListener#void,areaInvalidated(org.jhotdraw.draw.ToolEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.io.StreamPosTokenizer#org.jhotdraw.io.StreamPosTokenizer,CONSTRUCTOR(java.io.Reader)#void,resetSyntax()#void,wordChars(int,int)#void,whitespaceChars(int,int)#void,ordinaryChars(int,int)#void,ordinaryChar(int)#void,commentChar(int)#void,quoteChar(int)#void,parseNumbers()#void,parsePlusAsNumber()#void,parseHexNumbers()#void,parseExponents()#void,eolIsSignificant(boolean)#void,slashStarComments(boolean)#void,slashSlashComments(boolean)#void,lowerCaseMode(boolean)#int,nextToken()#void,setSlashStarTokens(java.lang.String,java.lang.String)#void,setSlashSlashToken(java.lang.String)#void,pushBack()#int,lineno()#int,getStartPosition()#void,setStartPosition(int)#int,getEndPosition()#void,consumeGreedy(java.lang.String)#java.lang.String,toString()#void,#ExtendsOrImplements#()#
net.n3.nanoxml.StdXMLReader#net.n3.nanoxml.IXMLReader,stringReader(java.lang.String)#net.n3.nanoxml.IXMLReader,fileReader(java.lang.String)#net.n3.nanoxml.StdXMLReader,CONSTRUCTOR(java.lang.String,java.lang.String)#net.n3.nanoxml.StdXMLReader,CONSTRUCTOR(java.io.Reader)#void,finalize()#java.lang.String,getEncoding(java.lang.String)#java.io.Reader,stream2reader(java.io.InputStream,java.lang.StringBuffer)#net.n3.nanoxml.StdXMLReader,CONSTRUCTOR(java.io.InputStream)#char,read()#boolean,atEOFOfCurrentStream()#boolean,atEOF()#void,unread(char)#java.io.Reader,openStream(java.lang.String,java.lang.String)#void,startNewStream(java.io.Reader)#void,startNewStream(java.io.Reader,boolean)#int,getStreamLevel()#int,getLineNr()#void,setSystemID(java.lang.String)#void,setPublicID(java.lang.String)#java.lang.String,getSystemID()#java.lang.String,getPublicID()#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.OSXTogglePaletteAction#org.jhotdraw.app.action.OSXTogglePaletteAction,CONSTRUCTOR(org.jhotdraw.app.DefaultOSXApplication,java.awt.Window,java.lang.String)#void,putValue(java.lang.String,java.lang.Object)#void,setPalette(java.awt.Window)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.ApplyAttributesAction#org.jhotdraw.draw.action.ApplyAttributesAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#void,setExcludedAttributes(java.util.Set<org.jhotdraw.draw.AttributeKey>)#void,actionPerformed(java.awt.event.ActionEvent)#void,applyAttributes()#void,selectionChanged(org.jhotdraw.draw.FigureSelectionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.CloseHandle#org.jhotdraw.draw.CloseHandle,CONSTRUCTOR(org.jhotdraw.draw.Figure)#int,getHandlesize()#void,draw(java.awt.Graphics2D)#java.awt.Cursor,getCursor()#void,trackEnd(java.awt.Point,java.awt.Point,int)#void,trackStart(java.awt.Point,int)#void,trackStep(java.awt.Point,java.awt.Point,int)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.AbstractDocumentView#org.jhotdraw.application.AbstractDocumentView,CONSTRUCTOR()#void,init()#org.jhotdraw.application.DocumentOrientedApplication,getApplication()#javax.swing.JComponent,getComponent()#java.io.File,getFile()#void,setFile(java.io.File)#javax.swing.JFileChooser,getOpenChooser()#javax.swing.JFileChooser,createOpenChooser()#javax.swing.JFileChooser,getSaveChooser()#javax.swing.JFileChooser,createSaveChooser()#boolean,isModified()#void,destroy()#javax.swing.Action,getAction(java.lang.String)#void,putAction(java.lang.String,javax.swing.Action)#void,execute(java.lang.Runnable)#void,setName(java.lang.String)#void,setModified(boolean)#void,start()#void,stop()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddyapplication.action.ToggleStatusBarAction#org.jhotdraw.samples.teddyapplication.action.ToggleStatusBarAction,CONSTRUCTOR()#application.ResourceMap,getResourceMap()#org.jhotdraw.samples.teddyapplication.TeddyView,getCurrentView()#void,updateProperty()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.FocusAction#org.jhotdraw.application.action.FocusAction,CONSTRUCTOR(org.jhotdraw.application.DocumentView)#java.lang.Object,getValue(java.lang.String)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.Actions#void,configureJCheckBoxMenuItem(javax.swing.JCheckBoxMenuItem,javax.swing.Action)#void,unconfigureJCheckBoxMenuItem(javax.swing.JCheckBoxMenuItem,javax.swing.Action)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.Locator#java.awt.geom.Point2D.Double,locate(org.jhotdraw.draw.Figure)#java.awt.geom.Point2D.Double,locate(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.MoveHandle#org.jhotdraw.draw.MoveHandle,CONSTRUCTOR(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Locator)#void,addMoveHandles(org.jhotdraw.draw.Figure,java.util.Collection<org.jhotdraw.draw.Handle>)#void,draw(java.awt.Graphics2D)#void,trackStart(java.awt.Point,int)#void,trackStep(java.awt.Point,java.awt.Point,int)#void,trackEnd(java.awt.Point,java.awt.Point,int)#org.jhotdraw.draw.Handle,south(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,southEast(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,southWest(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,north(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,northEast(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,northWest(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,east(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Handle,west(org.jhotdraw.draw.Figure)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddyapplication.FindDialog#org.jhotdraw.samples.teddyapplication.FindDialog,CONSTRUCTOR()#org.jhotdraw.application.DocumentOrientedApplication,getApplication()#org.jhotdraw.samples.teddyapplication.TeddyView,getProject()#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.PropertyAction#org.jhotdraw.application.action.PropertyAction,CONSTRUCTOR(java.lang.String,java.lang.Object)#org.jhotdraw.application.action.PropertyAction,CONSTRUCTOR(java.lang.String,java.lang.Class,java.lang.Object)#void,actionPerformed(java.awt.event.ActionEvent)#void,installProjectListeners(org.jhotdraw.application.DocumentView)#void,uninstallProjectListeners(org.jhotdraw.application.DocumentView)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.pert.PertApplet#java.lang.String,getParameter(java.lang.String)#java.lang.String,getVersion()#void,init()#void,setData(java.lang.String)#java.lang.String,getData()#java.lang.String[][],getParameterInfo()#java.lang.String,getAppletInfo()#void,main(java.lang.String[])#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.LoadRecentAction#org.jhotdraw.app.action.LoadRecentAction,CONSTRUCTOR(org.jhotdraw.app.Application,java.io.File)#void,doIt(org.jhotdraw.app.Project)#void,fileOpened(org.jhotdraw.app.Project,java.io.File,java.lang.Object)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.SaveAction#org.jhotdraw.app.action.SaveAction,CONSTRUCTOR(org.jhotdraw.app.Application)#org.jhotdraw.app.action.SaveAction,CONSTRUCTOR(org.jhotdraw.app.Application,boolean)#void,actionPerformed(java.awt.event.ActionEvent)#void,saveToFile(org.jhotdraw.app.Project,java.io.File)#void,fileSaved(org.jhotdraw.app.Project,java.io.File,java.lang.Object)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.DOMStorableInputOutputFormat#org.jhotdraw.draw.DOMStorableInputOutputFormat,CONSTRUCTOR(org.jhotdraw.xml.DOMFactory)#org.jhotdraw.draw.DOMStorableInputOutputFormat,CONSTRUCTOR(org.jhotdraw.xml.DOMFactory,java.lang.String,java.lang.String,java.lang.String)#javax.swing.filechooser.FileFilter,getFileFilter()#javax.swing.JComponent,getOutputFormatAccessory()#javax.swing.JComponent,getInputFormatAccessory()#void,read(java.net.URL,java.io.InputStream,org.jhotdraw.draw.Drawing,java.util.LinkedList<org.jhotdraw.draw.Figure>)#java.lang.String,getFileExtension()#void,write(java.io.File,org.jhotdraw.draw.Drawing)#void,write(java.io.OutputStream,org.jhotdraw.draw.Drawing)#void,read(java.io.File,org.jhotdraw.draw.Drawing)#void,read(java.io.InputStream,org.jhotdraw.draw.Drawing)#boolean,isDataFlavorSupported(java.awt.datatransfer.DataFlavor)#java.util.List<org.jhotdraw.draw.Figure>,readFigures(java.awt.datatransfer.Transferable)#java.awt.datatransfer.Transferable,createTransferable(java.util.List<org.jhotdraw.draw.Figure>,double)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.pert.figures.SeparatorLineFigure#org.jhotdraw.samples.pert.figures.SeparatorLineFigure,CONSTRUCTOR()#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#org.jhotdraw.geom.Dimension2DDouble,getPreferredSize()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.io.SVGElementFactory#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.DecoratedFigure#void,setDecorator(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Figure,getDecorator()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.io.ImageMapOutputFormat#org.jhotdraw.samples.svg.io.ImageMapOutputFormat,CONSTRUCTOR()#javax.swing.filechooser.FileFilter,getFileFilter()#java.lang.String,getFileExtension()#javax.swing.JComponent,getOutputFormatAccessory()#void,write(java.io.File,org.jhotdraw.draw.Drawing)#void,write(java.io.OutputStream,org.jhotdraw.draw.Drawing)#void,write(java.io.OutputStream,org.jhotdraw.draw.Drawing,java.awt.geom.AffineTransform,java.awt.Dimension)#void,write(java.io.OutputStream,java.util.List<org.jhotdraw.draw.Figure>,java.awt.geom.AffineTransform,java.awt.Dimension)#void,write(java.io.OutputStream,java.util.List<org.jhotdraw.draw.Figure>)#java.awt.datatransfer.Transferable,createTransferable(java.util.List<org.jhotdraw.draw.Figure>,double)#void,writeElement(net.n3.nanoxml.IXMLElement,org.jhotdraw.draw.Figure)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddy.text.NumberedEditorKit#javax.swing.text.ViewFactory,getViewFactory()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.GeneralPathTip#org.jhotdraw.draw.GeneralPathTip,CONSTRUCTOR(java.awt.geom.GeneralPath,double)#org.jhotdraw.draw.GeneralPathTip,CONSTRUCTOR(java.awt.geom.GeneralPath,double,boolean,boolean,boolean)#java.awt.geom.GeneralPath,getDecoratorPath(org.jhotdraw.draw.Figure)#double,getDecoratorPathRadius(org.jhotdraw.draw.Figure)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddyapplication.action.FindAction#org.jhotdraw.samples.teddyapplication.action.FindAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.SelectionColorChooserAction#org.jhotdraw.draw.action.SelectionColorChooserAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey<java.awt.Color>)#org.jhotdraw.draw.action.SelectionColorChooserAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey<java.awt.Color>,javax.swing.Icon)#org.jhotdraw.draw.action.SelectionColorChooserAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey<java.awt.Color>,java.lang.String)#org.jhotdraw.draw.action.SelectionColorChooserAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey<java.awt.Color>,java.lang.String,javax.swing.Icon)#org.jhotdraw.draw.action.SelectionColorChooserAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey<java.awt.Color>,java.lang.String,javax.swing.Icon,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#java.awt.Color,getInitialColor()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.LineConnectionFigure.ConnectionHandler#void,figureRemoved(org.jhotdraw.draw.FigureEvent)#void,figureChanged(org.jhotdraw.draw.FigureEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.DuplicateAction#org.jhotdraw.application.action.DuplicateAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.figures.SVGFigure#boolean,isEmpty()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.DragTracker#org.jhotdraw.draw.DragTracker,CONSTRUCTOR(org.jhotdraw.draw.Figure)#void,mouseMoved(java.awt.event.MouseEvent)#void,mousePressed(java.awt.event.MouseEvent)#void,mouseDragged(java.awt.event.MouseEvent)#void,mouseReleased(java.awt.event.MouseEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.JSheet#org.jhotdraw.gui.JSheet,CONSTRUCTOR(java.awt.Frame)#org.jhotdraw.gui.JSheet,CONSTRUCTOR(java.awt.Dialog)#boolean,isShowAsSheet()#void,installSheet()#void,uninstallSheet()#void,addNotify()#void,setAnimated(boolean)#boolean,isAnimated()#void,dispose()#void,hide0()#void,show0()#void,hide()#void,show()#void,requestUserAttention()#void,addSheetListener(org.jhotdraw.gui.event.SheetListener)#void,removeSheetListener(org.jhotdraw.gui.event.SheetListener)#void,fireOptionSelected(javax.swing.JOptionPane)#void,fireOptionSelected(javax.swing.JOptionPane,int,java.lang.Object,java.lang.Object)#void,fireOptionSelected(javax.swing.JFileChooser,int)#void,showSheet(javax.swing.JOptionPane,java.awt.Component,org.jhotdraw.gui.event.SheetListener)#void,showConfirmSheet(java.awt.Component,java.lang.Object,org.jhotdraw.gui.event.SheetListener)#void,showConfirmSheet(java.awt.Component,java.lang.Object,int,org.jhotdraw.gui.event.SheetListener)#void,showConfirmSheet(java.awt.Component,java.lang.Object,int,int,org.jhotdraw.gui.event.SheetListener)#void,showConfirmSheet(java.awt.Component,java.lang.Object,int,int,javax.swing.Icon,org.jhotdraw.gui.event.SheetListener)#void,showInputSheet(java.awt.Component,java.lang.Object,org.jhotdraw.gui.event.SheetListener)#void,showInputSheet(java.awt.Component,java.lang.Object,java.lang.Object,org.jhotdraw.gui.event.SheetListener)#void,showInputSheet(java.awt.Component,java.lang.Object,int,org.jhotdraw.gui.event.SheetListener)#void,showInputSheet(java.awt.Component,java.lang.Object,int,javax.swing.Icon,java.lang.Object[],java.lang.Object,org.jhotdraw.gui.event.SheetListener)#void,showMessageSheet(java.awt.Component,java.lang.Object)#void,showMessageSheet(java.awt.Component,java.lang.Object,org.jhotdraw.gui.event.SheetListener)#void,showMessageSheet(java.awt.Component,java.lang.Object,int)#void,showMessageSheet(java.awt.Component,java.lang.Object,int,org.jhotdraw.gui.event.SheetListener)#void,showMessageSheet(java.awt.Component,java.lang.Object,int,javax.swing.Icon,org.jhotdraw.gui.event.SheetListener)#void,showOptionSheet(java.awt.Component,java.lang.Object,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object,org.jhotdraw.gui.event.SheetListener)#void,showSaveSheet(javax.swing.JFileChooser,java.awt.Component,org.jhotdraw.gui.event.SheetListener)#void,showOpenSheet(javax.swing.JFileChooser,java.awt.Component,org.jhotdraw.gui.event.SheetListener)#void,showSheet(javax.swing.JFileChooser,java.awt.Component,java.lang.String,org.jhotdraw.gui.event.SheetListener)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.MaximizeAction#org.jhotdraw.app.action.MaximizeAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.pert.PertPanel#org.jhotdraw.samples.pert.PertPanel,CONSTRUCTOR()#void,setDrawing(org.jhotdraw.draw.Drawing)#org.jhotdraw.draw.Drawing,getDrawing()#org.jhotdraw.draw.DrawingView,getView()#org.jhotdraw.draw.DrawingEditor,getEditor()#void,#ExtendsOrImplements#()#
org.jhotdraw.app.OSXPaletteHandler#org.jhotdraw.app.OSXPaletteHandler,CONSTRUCTOR(org.jhotdraw.app.DefaultOSXApplication)#void,add(java.awt.Window,org.jhotdraw.app.Project)#void,remove(java.awt.Window,org.jhotdraw.app.Project)#void,addPalette(java.awt.Window)#void,removePalette(java.awt.Window)#java.util.Set<java.awt.Window>,getPalettes()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.ButtonFactory.ToolButtonListener#org.jhotdraw.draw.action.ButtonFactory.ToolButtonListener,CONSTRUCTOR(org.jhotdraw.draw.Tool,org.jhotdraw.draw.DrawingEditor)#void,itemStateChanged(java.awt.event.ItemEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.FocusAction#org.jhotdraw.app.action.FocusAction,CONSTRUCTOR(org.jhotdraw.app.Project)#java.lang.Object,getValue(java.lang.String)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.pert.PertProject#org.jhotdraw.samples.pert.PertProject,CONSTRUCTOR()#void,init()#org.jhotdraw.draw.Drawing,createDrawing()#java.awt.print.Pageable,createPageable()#org.jhotdraw.draw.DrawingEditor,getEditor()#void,setEditor(org.jhotdraw.draw.DrawingEditor)#void,setGridVisible(boolean)#boolean,isGridVisible()#double,getScaleFactor()#void,setScaleFactor(double)#void,setHasUnsavedChanges(boolean)#void,write(java.io.File)#void,read(java.io.File)#void,setDrawingEditor(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.DrawingEditor,getDrawingEditor()#void,clear()#javax.swing.JFileChooser,createOpenChooser()#javax.swing.JFileChooser,createSaveChooser()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.TransformHandleKit.TransformHandle#java.lang.String,getToolTipText(java.awt.Point)#java.awt.geom.Rectangle2D.Double,getTransformedBounds()#void,trackStart(java.awt.Point,int)#void,trackStep(java.awt.Point,java.awt.Point,int)#void,trackEnd(java.awt.Point,java.awt.Point,int)#void,trackStepNormalized(java.awt.geom.Point2D.Double)#void,transform(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.NewAction#org.jhotdraw.application.action.NewAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.EditorColorChooserAction#org.jhotdraw.draw.action.EditorColorChooserAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey<java.awt.Color>)#org.jhotdraw.draw.action.EditorColorChooserAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey<java.awt.Color>,javax.swing.Icon)#org.jhotdraw.draw.action.EditorColorChooserAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey<java.awt.Color>,java.lang.String)#org.jhotdraw.draw.action.EditorColorChooserAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey<java.awt.Color>,java.lang.String,javax.swing.Icon)#org.jhotdraw.draw.action.EditorColorChooserAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey<java.awt.Color>,java.lang.String,javax.swing.Icon,java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>)#void,actionPerformed(java.awt.event.ActionEvent)#void,changeAttribute(java.awt.Color)#void,selectionChanged(org.jhotdraw.draw.FigureSelectionEvent)#java.awt.Color,getInitialColor()#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.MaximizeAction#org.jhotdraw.application.action.MaximizeAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.RelativeDecoratorLocator#org.jhotdraw.draw.RelativeDecoratorLocator,CONSTRUCTOR()#org.jhotdraw.draw.RelativeDecoratorLocator,CONSTRUCTOR(double,double)#org.jhotdraw.draw.RelativeDecoratorLocator,CONSTRUCTOR(double,double,boolean)#java.awt.geom.Point2D.Double,locate(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Locator,east()#org.jhotdraw.draw.Locator,north()#org.jhotdraw.draw.Locator,west()#org.jhotdraw.draw.Locator,northEast()#org.jhotdraw.draw.Locator,northWest()#org.jhotdraw.draw.Locator,south()#org.jhotdraw.draw.Locator,southEast()#org.jhotdraw.draw.Locator,southWest()#org.jhotdraw.draw.Locator,center()#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.AbstractSaveBeforeAction#org.jhotdraw.application.action.AbstractSaveBeforeAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,saveChanges(org.jhotdraw.application.DocumentView)#void,saveToFile(org.jhotdraw.application.DocumentView,java.io.File)#void,fileSaved(org.jhotdraw.application.DocumentView,java.io.File,java.lang.Object)#void,doIt(org.jhotdraw.application.DocumentView)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.ArrangeAction#org.jhotdraw.application.action.ArrangeAction,CONSTRUCTOR(org.jhotdraw.gui.Arrangeable,org.jhotdraw.gui.Arrangeable.Arrangement)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.AbstractViewAction#org.jhotdraw.draw.action.AbstractViewAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.action.AbstractViewAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingView)#void,setEditor(org.jhotdraw.draw.DrawingEditor)#org.jhotdraw.draw.DrawingView,getView()#org.jhotdraw.draw.Drawing,getDrawing()#void,fireUndoableEditHappened(javax.swing.undo.UndoableEdit)#void,viewChanged()#void,updateEnabledState()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.QuadTreeDrawing#org.jhotdraw.draw.QuadTreeDrawing,CONSTRUCTOR()#org.jhotdraw.draw.QuadTreeDrawing.FigureHandler,createFigureHandler()#int,indexOf(org.jhotdraw.draw.Figure)#void,basicAdd(int,org.jhotdraw.draw.Figure)#void,basicRemove(org.jhotdraw.draw.Figure)#void,draw(java.awt.Graphics2D)#java.util.List<org.jhotdraw.draw.Figure>,sort(java.util.Collection<org.jhotdraw.draw.Figure>)#void,draw(java.awt.Graphics2D,java.util.Collection<org.jhotdraw.draw.Figure>)#java.util.List<org.jhotdraw.draw.Figure>,getFigures(java.awt.geom.Rectangle2D.Double)#java.util.List<org.jhotdraw.draw.Figure>,getFigures()#org.jhotdraw.draw.Figure,findFigureInside(java.awt.geom.Point2D.Double)#java.util.List<org.jhotdraw.draw.Figure>,getFiguresFrontToBack()#org.jhotdraw.draw.Figure,findFigure(java.awt.geom.Point2D.Double)#org.jhotdraw.draw.Figure,findFigureExcept(java.awt.geom.Point2D.Double,org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Figure,findFigureExcept(java.awt.geom.Point2D.Double,java.util.Collection)#org.jhotdraw.draw.Figure,findFigureBehind(java.awt.geom.Point2D.Double,org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Figure,findFigureBehind(java.awt.geom.Point2D.Double,java.util.Collection<org.jhotdraw.draw.Figure>)#java.util.List<org.jhotdraw.draw.Figure>,findFigures(java.awt.geom.Rectangle2D.Double)#java.util.List<org.jhotdraw.draw.Figure>,findFiguresWithin(java.awt.geom.Rectangle2D.Double)#void,bringToFront(org.jhotdraw.draw.Figure)#void,sendToBack(org.jhotdraw.draw.Figure)#boolean,contains(org.jhotdraw.draw.Figure)#void,setCanvasSize(org.jhotdraw.geom.Dimension2DDouble)#org.jhotdraw.geom.Dimension2DDouble,getCanvasSize()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.AttributeKeys#double,getStrokeTotalWidth(org.jhotdraw.draw.Figure)#double,getStrokeTotalMiterLimit(org.jhotdraw.draw.Figure)#java.awt.Stroke,getStroke(org.jhotdraw.draw.Figure)#java.awt.Font,getFont(org.jhotdraw.draw.Figure)#int,getFontStyle(org.jhotdraw.draw.Figure)#double,getPerpendicularFillGrowth(org.jhotdraw.draw.Figure)#double,getPerpendicularDrawGrowth(org.jhotdraw.draw.Figure)#double,getPerpendicularHitGrowth(org.jhotdraw.draw.Figure)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.MoveToFrontAction#org.jhotdraw.draw.action.MoveToFrontAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#void,actionPerformed(java.awt.event.ActionEvent)#void,bringToFront(org.jhotdraw.draw.DrawingView,java.util.Collection<org.jhotdraw.draw.Figure>)#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.MDIDesktopPane#org.jhotdraw.gui.MDIDesktopPane,CONSTRUCTOR()#void,setArrangement(org.jhotdraw.gui.Arrangeable.Arrangement)#org.jhotdraw.gui.Arrangeable.Arrangement,getArrangement()#void,tileFramesVertically()#void,arrangeFramesVertically()#void,arrangeFramesHorizontally()#void,setAllSize(java.awt.Dimension)#void,setAllSize(int,int)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.pert.PertApplicationModel#org.jhotdraw.samples.pert.PertApplicationModel,CONSTRUCTOR()#void,initApplication(org.jhotdraw.app.Application)#org.jhotdraw.draw.DefaultDrawingEditor,getSharedEditor()#void,initProject(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#java.util.List<javax.swing.JToolBar>,createToolBars(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#java.util.List<javax.swing.JMenu>,createMenus(org.jhotdraw.app.Application,org.jhotdraw.app.Project)#void,#ExtendsOrImplements#()#
org.jhotdraw.undo.NonUndoableEdit#org.jhotdraw.undo.NonUndoableEdit,CONSTRUCTOR()#boolean,canUndo()#boolean,canRedo()#void,#ExtendsOrImplements#()#
net.n3.nanoxml.StdXMLParser#net.n3.nanoxml.StdXMLParser,CONSTRUCTOR()#void,finalize()#void,setBuilder(net.n3.nanoxml.IXMLBuilder)#net.n3.nanoxml.IXMLBuilder,getBuilder()#void,setValidator(net.n3.nanoxml.IXMLValidator)#net.n3.nanoxml.IXMLValidator,getValidator()#void,setResolver(net.n3.nanoxml.IXMLEntityResolver)#net.n3.nanoxml.IXMLEntityResolver,getResolver()#void,setReader(net.n3.nanoxml.IXMLReader)#net.n3.nanoxml.IXMLReader,getReader()#java.lang.Object,parse()#void,scanData()#void,scanSomeTag(boolean,java.lang.String,java.util.Properties)#void,processPI()#void,processSpecialTag(boolean)#void,processCDATA()#void,processDocType()#void,processElement(java.lang.String,java.util.Properties)#void,processAttribute(java.util.Vector,java.util.Vector,java.util.Vector)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.PathTool#org.jhotdraw.samples.svg.PathTool,CONSTRUCTOR(org.jhotdraw.samples.svg.figures.SVGPathFigure,org.jhotdraw.samples.svg.figures.SVGBezierFigure)#org.jhotdraw.samples.svg.PathTool,CONSTRUCTOR(org.jhotdraw.samples.svg.figures.SVGPathFigure,org.jhotdraw.samples.svg.figures.SVGBezierFigure,java.util.Map)#org.jhotdraw.samples.svg.figures.SVGPathFigure,createPath()#void,finishCreation(org.jhotdraw.draw.BezierFigure)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.LabelFigure#org.jhotdraw.draw.LabelFigure,CONSTRUCTOR()#org.jhotdraw.draw.LabelFigure,CONSTRUCTOR(java.lang.String)#void,setLabelFor(org.jhotdraw.draw.TextHolderFigure)#org.jhotdraw.draw.TextHolderFigure,getLabelFor()#org.jhotdraw.draw.Tool,getTool(java.awt.geom.Point2D.Double)#void,figureAreaInvalidated(org.jhotdraw.draw.FigureEvent)#void,figureAttributeChanged(org.jhotdraw.draw.FigureEvent)#void,figureAdded(org.jhotdraw.draw.FigureEvent)#void,figureChanged(org.jhotdraw.draw.FigureEvent)#void,figureRemoved(org.jhotdraw.draw.FigureEvent)#void,figureRequestRemove(org.jhotdraw.draw.FigureEvent)#void,remap(java.util.HashMap)#void,figureHandlesChanged(org.jhotdraw.draw.FigureEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.odg.ODGConstants#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.AbstractApplicationAction#org.jhotdraw.application.action.AbstractApplicationAction,CONSTRUCTOR()#void,installApplicationListeners(org.jhotdraw.application.DocumentOrientedApplication)#void,uninstallApplicationListeners(org.jhotdraw.application.DocumentOrientedApplication)#org.jhotdraw.application.DocumentOrientedApplication,getApplication()#application.ResourceMap,getResourceMap()#void,updateApplicationEnabled()#boolean,isEnabled()#void,setEnabled(boolean)#void,initActionProperties(java.lang.String)#void,initActionProperties(application.ResourceMap,java.lang.String)#application.ResourceMap,getFrameworkResourceMap()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.net.NetFactory#org.jhotdraw.samples.net.NetFactory,CONSTRUCTOR()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.RotateHandle#org.jhotdraw.draw.RotateHandle,CONSTRUCTOR(org.jhotdraw.draw.Figure)#boolean,isCombinableWith(org.jhotdraw.draw.Handle)#java.lang.String,getToolTipText(java.awt.Point)#void,draw(java.awt.Graphics2D)#java.awt.Rectangle,basicGetBounds()#java.awt.Point,getLocation()#java.awt.geom.Rectangle2D.Double,getTransformedBounds()#void,trackStart(java.awt.Point,int)#void,trackStep(java.awt.Point,java.awt.Point,int)#void,trackEnd(java.awt.Point,java.awt.Point,int)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.mini.SmartConnectionFigureSample.SmartConnectionFigure#org.jhotdraw.samples.mini.SmartConnectionFigureSample.SmartConnectionFigure,CONSTRUCTOR()#void,handleConnect(org.jhotdraw.draw.Connector,org.jhotdraw.draw.Connector)#void,handleDisconnect(org.jhotdraw.draw.Connector,org.jhotdraw.draw.Connector)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.Project#org.jhotdraw.app.Application,getApplication()#void,setApplication(org.jhotdraw.app.Application)#javax.swing.JComponent,getComponent()#java.io.File,getFile()#void,setFile(java.io.File)#boolean,isEnabled()#void,setEnabled(boolean)#void,write(java.io.File)#void,read(java.io.File)#void,clear()#javax.swing.JFileChooser,getOpenChooser()#javax.swing.JFileChooser,getSaveChooser()#boolean,hasUnsavedChanges()#void,markChangesAsSaved()#void,execute(java.lang.Runnable)#void,init()#void,dispose()#javax.swing.Action,getAction(java.lang.String)#void,putAction(java.lang.String,javax.swing.Action)#void,addPropertyChangeListener(java.beans.PropertyChangeListener)#void,removePropertyChangeListener(java.beans.PropertyChangeListener)#void,setMultipleOpenId(int)#int,getMultipleOpenId()#boolean,isShowing()#void,setShowing(boolean)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.Options#org.jhotdraw.draw.Options,CONSTRUCTOR()#boolean,isFractionalMetrics()#boolean,isTextAntialiased()#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.JStringAttributeArea.EditorEventHandler#void,propertyChange(java.beans.PropertyChangeEvent)#void,selectionChanged(org.jhotdraw.draw.FigureSelectionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.SVGPropertiesPanelBeanInfo#java.beans.BeanDescriptor,getBeanDescriptor()#java.beans.PropertyDescriptor[],getPropertyDescriptors()#java.beans.EventSetDescriptor[],getEventSetDescriptors()#java.beans.MethodDescriptor[],getMethodDescriptors()#int,getDefaultPropertyIndex()#int,getDefaultEventIndex()#java.awt.Image,getIcon(int)#void,#ExtendsOrImplements#()#
org.apache.batik.ext.awt.image.GraphicsUtil#java.awt.image.ColorModel,makeLinear_sRGBCM(boolean)#java.awt.image.BufferedImage,makeLinearBufferedImage(int,int,boolean)#java.awt.image.WritableRaster,copyRaster(java.awt.image.Raster)#java.awt.image.WritableRaster,copyRaster(java.awt.image.Raster,int,int)#java.awt.image.WritableRaster,makeRasterWritable(java.awt.image.Raster)#java.awt.image.WritableRaster,makeRasterWritable(java.awt.image.Raster,int,int)#java.awt.image.ColorModel,coerceColorModel(java.awt.image.ColorModel,boolean)#java.awt.image.ColorModel,coerceData(java.awt.image.WritableRaster,java.awt.image.ColorModel,boolean)#void,multiplyAlpha(java.awt.image.WritableRaster)#void,divideAlpha(java.awt.image.WritableRaster)#boolean,is_INT_PACK_Data(java.awt.image.SampleModel,boolean)#boolean,is_BYTE_COMP_Data(java.awt.image.SampleModel)#void,divide_INT_PACK_Data(java.awt.image.WritableRaster)#void,mult_INT_PACK_Data(java.awt.image.WritableRaster)#void,divide_BYTE_COMP_Data(java.awt.image.WritableRaster)#void,mult_BYTE_COMP_Data(java.awt.image.WritableRaster)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.FigureSelectionEvent#org.jhotdraw.draw.FigureSelectionEvent,CONSTRUCTOR(org.jhotdraw.draw.DrawingView,java.util.Set<org.jhotdraw.draw.Figure>,java.util.Set<org.jhotdraw.draw.Figure>)#org.jhotdraw.draw.DrawingView,getView()#java.util.Set<org.jhotdraw.draw.Figure>,getOldSelection()#java.util.Set<org.jhotdraw.draw.Figure>,getNewSelection()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.Drawing#void,clear()#void,add(org.jhotdraw.draw.Figure)#void,add(int,org.jhotdraw.draw.Figure)#void,addAll(java.util.Collection<org.jhotdraw.draw.Figure>)#void,addAll(int,java.util.Collection<org.jhotdraw.draw.Figure>)#void,remove(org.jhotdraw.draw.Figure)#void,removeAll(java.util.Collection<org.jhotdraw.draw.Figure>)#void,basicRemove(org.jhotdraw.draw.Figure)#void,basicRemoveAll(java.util.Collection<org.jhotdraw.draw.Figure>)#void,basicAdd(org.jhotdraw.draw.Figure)#void,basicAdd(int,org.jhotdraw.draw.Figure)#int,indexOf(org.jhotdraw.draw.Figure)#void,basicAddAll(int,java.util.Collection<org.jhotdraw.draw.Figure>)#java.util.List<org.jhotdraw.draw.Figure>,findFigures(java.awt.geom.Rectangle2D.Double)#java.util.List<org.jhotdraw.draw.Figure>,findFiguresWithin(java.awt.geom.Rectangle2D.Double)#java.util.List<org.jhotdraw.draw.Figure>,getFigures()#int,getFigureCount()#java.util.List<org.jhotdraw.draw.Figure>,getFiguresFrontToBack()#org.jhotdraw.draw.Figure,findFigureInside(java.awt.geom.Point2D.Double)#void,sendToBack(org.jhotdraw.draw.Figure)#void,bringToFront(org.jhotdraw.draw.Figure)#java.util.List<org.jhotdraw.draw.Figure>,sort(java.util.Collection<org.jhotdraw.draw.Figure>)#void,addUndoableEditListener(javax.swing.event.UndoableEditListener)#void,removeUndoableEditListener(javax.swing.event.UndoableEditListener)#void,fireUndoableEditHappened(javax.swing.undo.UndoableEdit)#java.awt.font.FontRenderContext,getFontRenderContext()#void,setFontRenderContext(java.awt.font.FontRenderContext)#java.lang.Object,getLock()#void,setInputFormats(java.util.List<org.jhotdraw.draw.InputFormat>)#java.util.List<org.jhotdraw.draw.InputFormat>,getInputFormats()#void,setOutputFormats(java.util.List<org.jhotdraw.draw.OutputFormat>)#java.util.List<org.jhotdraw.draw.OutputFormat>,getOutputFormats()#void,setCanvasSize(org.jhotdraw.geom.Dimension2DDouble)#org.jhotdraw.geom.Dimension2DDouble,getCanvasSize()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.TriangleRotationHandler#org.jhotdraw.draw.TriangleRotationHandler,CONSTRUCTOR(org.jhotdraw.draw.TriangleFigure)#boolean,isCombinableWith(org.jhotdraw.draw.Handle)#java.awt.Rectangle,basicGetBounds()#void,trackStart(java.awt.Point,int)#void,trackStep(java.awt.Point,java.awt.Point,int)#void,draw(java.awt.Graphics2D)#void,trackEnd(java.awt.Point,java.awt.Point,int)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.AbstractDocumentViewAction#org.jhotdraw.application.action.AbstractDocumentViewAction,CONSTRUCTOR()#void,updateProject(org.jhotdraw.application.DocumentView,org.jhotdraw.application.DocumentView)#void,setPropertyName(java.lang.String)#java.lang.String,getPropertyName()#void,updateProperty()#void,installProjectListeners(org.jhotdraw.application.DocumentView)#void,uninstallProjectListeners(org.jhotdraw.application.DocumentView)#void,updateEnabled(boolean,boolean)#org.jhotdraw.application.DocumentView,getCurrentView()#boolean,isEnabled()#void,setEnabled(boolean)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.ArrangeAction#org.jhotdraw.app.action.ArrangeAction,CONSTRUCTOR(org.jhotdraw.gui.Arrangeable,org.jhotdraw.gui.Arrangeable.Arrangement)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.io.SVGZInputFormat#org.jhotdraw.samples.svg.io.SVGZInputFormat,CONSTRUCTOR()#javax.swing.filechooser.FileFilter,getFileFilter()#void,read(java.io.InputStream,org.jhotdraw.draw.Drawing)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.Layouter#java.awt.geom.Rectangle2D.Double,calculateLayout(org.jhotdraw.draw.CompositeFigure,java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#java.awt.geom.Rectangle2D.Double,layout(org.jhotdraw.draw.CompositeFigure,java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ChopTriangleConnector#org.jhotdraw.draw.ChopTriangleConnector,CONSTRUCTOR()#org.jhotdraw.draw.ChopTriangleConnector,CONSTRUCTOR(org.jhotdraw.draw.TriangleFigure)#java.awt.geom.Point2D.Double,chop(org.jhotdraw.draw.Figure,java.awt.geom.Point2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ResizeHandleKit.NorthWestHandle#void,trackStepNormalized(java.awt.geom.Point2D.Double)#java.awt.Cursor,getCursor()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ChopBezierConnector#org.jhotdraw.draw.ChopBezierConnector,CONSTRUCTOR()#org.jhotdraw.draw.ChopBezierConnector,CONSTRUCTOR(org.jhotdraw.draw.BezierFigure)#java.awt.geom.Point2D.Double,chop(org.jhotdraw.draw.Figure,java.awt.geom.Point2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.AbstractCompositeFigure#org.jhotdraw.draw.AbstractCompositeFigure,CONSTRUCTOR()#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(int)#void,add(org.jhotdraw.draw.Figure)#void,add(int,org.jhotdraw.draw.Figure)#void,addAll(java.util.Collection<org.jhotdraw.draw.Figure>)#void,basicAdd(org.jhotdraw.draw.Figure)#void,basicAdd(int,org.jhotdraw.draw.Figure)#void,basicAddAll(java.util.Collection<org.jhotdraw.draw.Figure>)#void,addNotify(org.jhotdraw.draw.Drawing)#void,removeNotify(org.jhotdraw.draw.Drawing)#boolean,remove(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Figure,removeChild(int)#boolean,basicRemove(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Figure,basicRemoveChild(int)#void,removeAllChildren()#void,basicRemoveAllChildren()#void,sendToBack(org.jhotdraw.draw.Figure)#void,sendToFront(org.jhotdraw.draw.Figure)#void,transform(java.awt.geom.AffineTransform)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#java.util.List<org.jhotdraw.draw.Figure>,getChildren()#int,getChildCount()#org.jhotdraw.draw.Figure,getChild(int)#java.util.List<org.jhotdraw.draw.Figure>,getChildrenFrontToBack()#void,setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)#java.lang.Object,getAttribute(org.jhotdraw.draw.AttributeKey)#java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object>,getAttributes()#java.lang.Object,getAttributesRestoreData()#void,restoreAttributesTo(java.lang.Object)#boolean,contains(java.awt.geom.Point2D.Double)#org.jhotdraw.draw.Figure,findFigureInside(java.awt.geom.Point2D.Double)#org.jhotdraw.draw.Figure,findChild(java.awt.geom.Point2D.Double)#int,findChildIndex(java.awt.geom.Point2D.Double)#org.jhotdraw.draw.Layouter,getLayouter()#void,layout()#void,setLayouter(org.jhotdraw.draw.Layouter)#org.jhotdraw.geom.Dimension2DDouble,getPreferredSize()#java.awt.geom.Rectangle2D.Double,getDrawingArea()#java.awt.geom.Rectangle2D.Double,getBounds()#void,draw(java.awt.Graphics2D)#org.jhotdraw.draw.AbstractCompositeFigure,clone()#void,invalidateBounds()#java.util.Collection<org.jhotdraw.draw.Figure>,getDecomposition()#void,read(org.jhotdraw.xml.DOMInput)#void,write(org.jhotdraw.xml.DOMOutput)#void,restoreTransformTo(java.lang.Object)#java.lang.Object,getTransformRestoreData()#void,willChange()#void,changed()#void,invalidate()#void,validate()#void,removeAttribute(org.jhotdraw.draw.AttributeKey)#boolean,hasAttribute(org.jhotdraw.draw.AttributeKey)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.MoveConstrainedAction.West#org.jhotdraw.draw.action.MoveConstrainedAction.West,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.PickAttributesAction#org.jhotdraw.draw.action.PickAttributesAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#void,setExcludedAttributes(java.util.Set<org.jhotdraw.draw.AttributeKey>)#void,actionPerformed(java.awt.event.ActionEvent)#void,pickAttributes()#void,selectionChanged(org.jhotdraw.draw.FigureSelectionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.DefaultAppletApplication#org.jhotdraw.app.DefaultAppletApplication,CONSTRUCTOR(javax.swing.JApplet)#void,show(org.jhotdraw.app.Project)#void,hide(org.jhotdraw.app.Project)#org.jhotdraw.app.Project,getCurrentProject()#boolean,isSharingToolsAmongProjects()#java.awt.Component,getComponent()#void,initProjectActions(org.jhotdraw.app.Project)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.draw.DrawApplet#java.lang.String,getParameter(java.lang.String)#java.lang.String,getVersion()#void,init()#void,setData(java.lang.String)#java.lang.String,getData()#java.lang.String[][],getParameterInfo()#java.lang.String,getAppletInfo()#void,main(java.lang.String[])#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction#org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction,CONSTRUCTOR(org.jhotdraw.app.Application)#org.jhotdraw.samples.teddy.TeddyProject,getCurrentProject()#void,actionPerformed(java.awt.event.ActionEvent)#void,updateProperty()#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.OpenAction#org.jhotdraw.application.action.OpenAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,openFile(javax.swing.JFileChooser,org.jhotdraw.application.DocumentView)#void,fileOpened(org.jhotdraw.application.DocumentView,java.io.File,java.lang.Object)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.ClearRecentFilesAction#org.jhotdraw.application.action.ClearRecentFilesAction,CONSTRUCTOR()#void,installApplicationListeners(org.jhotdraw.application.DocumentOrientedApplication)#void,uninstallApplicationListeners(org.jhotdraw.application.DocumentOrientedApplication)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddy.action.ToggleLineWrapAction#org.jhotdraw.samples.teddy.action.ToggleLineWrapAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,actionPerformed(java.awt.event.ActionEvent)#org.jhotdraw.samples.teddy.TeddyProject,getCurrentProject()#void,updateProperty()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.odg.io.ODGInputFormat#org.jhotdraw.samples.odg.io.ODGInputFormat,CONSTRUCTOR()#javax.swing.filechooser.FileFilter,getFileFilter()#javax.swing.JComponent,getInputFormatAccessory()#void,read(java.io.File,org.jhotdraw.draw.Drawing)#void,read(java.io.InputStream,org.jhotdraw.draw.Drawing)#boolean,isDataFlavorSupported(java.awt.datatransfer.DataFlavor)#java.util.List<org.jhotdraw.draw.Figure>,readFigures(java.awt.datatransfer.Transferable)#java.util.LinkedList<org.jhotdraw.draw.Figure>,readFigures(java.io.InputStream)#java.util.LinkedList<org.jhotdraw.draw.Figure>,readFiguresFromDocumentContent(java.io.InputStream)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.TextInputFormat#org.jhotdraw.draw.TextInputFormat,CONSTRUCTOR(org.jhotdraw.draw.TextHolderFigure)#org.jhotdraw.draw.TextInputFormat,CONSTRUCTOR(org.jhotdraw.draw.TextHolderFigure,java.lang.String,java.lang.String,java.lang.String,boolean)#javax.swing.filechooser.FileFilter,getFileFilter()#java.lang.String,getFileExtension()#javax.swing.JComponent,getInputFormatAccessory()#void,read(java.io.File,org.jhotdraw.draw.Drawing)#void,read(java.io.InputStream,org.jhotdraw.draw.Drawing)#java.util.LinkedList<org.jhotdraw.draw.Figure>,createTextHolderFigures(java.io.InputStream)#boolean,isDataFlavorSupported(java.awt.datatransfer.DataFlavor)#java.util.List<org.jhotdraw.draw.Figure>,readFigures(java.awt.datatransfer.Transferable)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.action.TogglePropertiesPanelAction#org.jhotdraw.samples.svg.action.TogglePropertiesPanelAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,updateProperty()#org.jhotdraw.samples.svg.SVGProject,getCurrentProject()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
net.n3.nanoxml.XMLAttribute#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.io.SVGZOutputFormat#org.jhotdraw.samples.svg.io.SVGZOutputFormat,CONSTRUCTOR()#java.lang.String,getFileExtension()#javax.swing.filechooser.FileFilter,getFileFilter()#void,write(java.io.OutputStream,org.jhotdraw.draw.Drawing)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.ClearRecentFilesAction#org.jhotdraw.app.action.ClearRecentFilesAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,installApplicationListeners(org.jhotdraw.app.Application)#void,uninstallApplicationListeners(org.jhotdraw.app.Application)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.PrintAction#org.jhotdraw.application.action.PrintAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,printJava2D()#void,printJava2DAlternative()#void,printQuartz()#void,#ExtendsOrImplements#()#
org.jhotdraw.geom.DoubleStroke#org.jhotdraw.geom.DoubleStroke,CONSTRUCTOR(float,float)#org.jhotdraw.geom.DoubleStroke,CONSTRUCTOR(float,float,int,int,float,float[],float)#java.awt.Shape,createStrokedShape(java.awt.Shape)#void,traceStroke(org.jhotdraw.geom.BezierPath,java.awt.geom.GeneralPath,java.awt.geom.GeneralPath)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.net.NetApplicationModel.ToolButtonListener#org.jhotdraw.samples.net.NetApplicationModel.ToolButtonListener,CONSTRUCTOR(org.jhotdraw.draw.Tool,org.jhotdraw.draw.DrawingEditor)#void,itemStateChanged(java.awt.event.ItemEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.figures.SVGAttributedFigure#org.jhotdraw.samples.svg.figures.SVGAttributedFigure,CONSTRUCTOR()#void,draw(java.awt.Graphics2D)#void,drawFigure(java.awt.Graphics2D)#void,setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)#java.util.Collection<javax.swing.Action>,getActions(java.awt.geom.Point2D.Double)#void,write(org.jhotdraw.xml.DOMOutput)#void,read(org.jhotdraw.xml.DOMInput)#void,#ExtendsOrImplements#()#
org.jhotdraw.io.Base64#java.lang.String,encodeObject(java.io.Serializable)#java.lang.String,encodeObject(java.io.Serializable,int)#java.lang.String,encodeBytes(byte[])#java.lang.String,encodeBytes(byte[],int)#java.lang.String,encodeBytes(byte[],int,int)#java.lang.String,encodeBytes(byte[],int,int,int)#byte[],decode(byte[],int,int)#byte[],decode(java.lang.String)#java.lang.Object,decodeToObject(java.lang.String)#boolean,encodeToFile(byte[],java.lang.String)#boolean,decodeToFile(java.lang.String,java.lang.String)#byte[],decodeFromFile(java.lang.String)#java.lang.String,encodeFromFile(java.lang.String)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.RelativeLocator#org.jhotdraw.draw.RelativeLocator,CONSTRUCTOR()#org.jhotdraw.draw.RelativeLocator,CONSTRUCTOR(double,double)#org.jhotdraw.draw.RelativeLocator,CONSTRUCTOR(double,double,boolean)#java.awt.geom.Point2D.Double,locate(org.jhotdraw.draw.Figure)#org.jhotdraw.draw.Locator,east()#org.jhotdraw.draw.Locator,east(boolean)#org.jhotdraw.draw.Locator,north()#org.jhotdraw.draw.Locator,north(boolean)#org.jhotdraw.draw.Locator,west()#org.jhotdraw.draw.Locator,west(boolean)#org.jhotdraw.draw.Locator,northEast()#org.jhotdraw.draw.Locator,northEast(boolean)#org.jhotdraw.draw.Locator,northWest()#org.jhotdraw.draw.Locator,northWest(boolean)#org.jhotdraw.draw.Locator,south()#org.jhotdraw.draw.Locator,south(boolean)#org.jhotdraw.draw.Locator,southEast()#org.jhotdraw.draw.Locator,southEast(boolean)#org.jhotdraw.draw.Locator,southWest()#org.jhotdraw.draw.Locator,southWest(boolean)#org.jhotdraw.draw.Locator,center()#org.jhotdraw.draw.Locator,center(boolean)#void,write(org.jhotdraw.xml.DOMOutput)#void,read(org.jhotdraw.xml.DOMInput)#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.mini.LabeledLineConnectionFigureSample#org.jhotdraw.samples.mini.LabeledLineConnectionFigureSample,CONSTRUCTOR()#void,main(java.lang.String[])#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddyapplication.JEditorArea#org.jhotdraw.samples.teddyapplication.JEditorArea,CONSTRUCTOR()#javax.swing.text.StyledEditorKit,getStyledEditorKit()#void,setLineWrap(boolean)#boolean,getLineWrap()#boolean,getScrollableTracksViewportWidth()#void,rebuildView()#void,replaceRange(java.lang.String,int,int)#int,getLineOfOffset(int)#int,getLineStartOffset(int)#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.datatransfer.CompositeTransferable#org.jhotdraw.gui.datatransfer.CompositeTransferable,CONSTRUCTOR()#void,add(java.awt.datatransfer.Transferable)#java.lang.Object,getTransferData(java.awt.datatransfer.DataFlavor)#java.awt.datatransfer.DataFlavor[],getTransferDataFlavors()#boolean,isDataFlavorSupported(java.awt.datatransfer.DataFlavor)#void,lostOwnership(java.awt.datatransfer.Clipboard,java.awt.datatransfer.Transferable)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.FigureAdapter#void,figureAreaInvalidated(org.jhotdraw.draw.FigureEvent)#void,figureAttributeChanged(org.jhotdraw.draw.FigureEvent)#void,figureAdded(org.jhotdraw.draw.FigureEvent)#void,figureChanged(org.jhotdraw.draw.FigureEvent)#void,figureRemoved(org.jhotdraw.draw.FigureEvent)#void,figureRequestRemove(org.jhotdraw.draw.FigureEvent)#void,figureHandlesChanged(org.jhotdraw.draw.FigureEvent)#void,#ExtendsOrImplements#()#
net.n3.nanoxml.CDATAReader#void,finalize()#int,read(char[],int,int)#void,close()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.AbstractSelectedAction.EventHandler#void,propertyChange(java.beans.PropertyChangeEvent)#void,selectionChanged(org.jhotdraw.draw.FigureSelectionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.ZoomEditorAction#org.jhotdraw.draw.action.ZoomEditorAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,double,javax.swing.AbstractButton)#org.jhotdraw.draw.action.ZoomEditorAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor,double,javax.swing.AbstractButton,boolean)#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.AbstractApplicationAction#org.jhotdraw.app.action.AbstractApplicationAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,installApplicationListeners(org.jhotdraw.app.Application)#void,uninstallApplicationListeners(org.jhotdraw.app.Application)#org.jhotdraw.app.Application,getApplication()#void,updateApplicationEnabled()#boolean,isEnabled()#void,setEnabled(boolean)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.DrawingEvent#org.jhotdraw.draw.DrawingEvent,CONSTRUCTOR(org.jhotdraw.draw.Drawing,org.jhotdraw.draw.Figure,java.awt.geom.Rectangle2D.Double)#org.jhotdraw.draw.DrawingEvent,CONSTRUCTOR(org.jhotdraw.draw.Drawing,org.jhotdraw.draw.Figure,java.awt.geom.Rectangle2D.Double,int)#org.jhotdraw.draw.Drawing,getDrawing()#org.jhotdraw.draw.Figure,getFigure()#java.awt.geom.Rectangle2D.Double,getInvalidatedArea()#int,getIndex()#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.AbstractSaveBeforeAction#org.jhotdraw.app.action.AbstractSaveBeforeAction,CONSTRUCTOR(org.jhotdraw.app.Application)#void,actionPerformed(java.awt.event.ActionEvent)#void,saveChanges(org.jhotdraw.app.Project)#void,saveToFile(org.jhotdraw.app.Project,java.io.File)#void,fileSaved(org.jhotdraw.app.Project,java.io.File,java.lang.Object)#void,doIt(org.jhotdraw.app.Project)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.AttributeChangeEdit#org.jhotdraw.draw.AttributeChangeEdit,CONSTRUCTOR(org.jhotdraw.draw.Figure,org.jhotdraw.draw.AttributeKey,java.lang.Object,java.lang.Object)#java.lang.String,getPresentationName()#void,redo()#void,undo()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.svg.SVGDrawing#org.jhotdraw.samples.svg.SVGDrawing,CONSTRUCTOR()#void,setTitle(java.lang.String)#java.lang.String,getTitle()#void,setDescription(java.lang.String)#java.lang.String,getDescription()#void,read(org.jhotdraw.xml.DOMInput)#void,readAttributes(org.jhotdraw.xml.DOMInput)#void,write(org.jhotdraw.xml.DOMOutput)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.TextFigure#org.jhotdraw.draw.TextFigure,CONSTRUCTOR()#org.jhotdraw.draw.TextFigure,CONSTRUCTOR(java.lang.String)#void,drawStroke(java.awt.Graphics2D)#void,drawFill(java.awt.Graphics2D)#void,drawText(java.awt.Graphics2D)#void,transform(java.awt.geom.AffineTransform)#void,setBounds(java.awt.geom.Point2D.Double,java.awt.geom.Point2D.Double)#boolean,figureContains(java.awt.geom.Point2D.Double)#java.awt.font.TextLayout,getTextLayout()#java.awt.geom.Rectangle2D.Double,getBounds()#org.jhotdraw.geom.Dimension2DDouble,getPreferredSize()#java.awt.geom.Rectangle2D.Double,getFigureDrawingArea()#void,restoreTransformTo(java.lang.Object)#java.lang.Object,getTransformRestoreData()#java.lang.String,getText()#void,setText(java.lang.String)#int,getTextColumns()#int,getTabSize()#org.jhotdraw.draw.TextHolderFigure,getLabelFor()#org.jhotdraw.geom.Insets2D.Double,getInsets()#java.awt.Font,getFont()#java.awt.Color,getTextColor()#java.awt.Color,getFillColor()#void,setFontSize(float)#float,getFontSize()#boolean,isEditable()#void,setEditable(boolean)#java.util.Collection<org.jhotdraw.draw.Handle>,createHandles(int)#org.jhotdraw.draw.Tool,getTool(java.awt.geom.Point2D.Double)#void,invalidate()#void,validate()#void,read(org.jhotdraw.xml.DOMInput)#void,write(org.jhotdraw.xml.DOMOutput)#org.jhotdraw.draw.TextFigure,clone()#boolean,isTextOverflow()#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.event.SheetEvent#org.jhotdraw.gui.event.SheetEvent,CONSTRUCTOR(org.jhotdraw.gui.JSheet)#org.jhotdraw.gui.event.SheetEvent,CONSTRUCTOR(org.jhotdraw.gui.JSheet,javax.swing.JFileChooser,int,java.lang.Object)#org.jhotdraw.gui.event.SheetEvent,CONSTRUCTOR(org.jhotdraw.gui.JSheet,javax.swing.JOptionPane,int,java.lang.Object,java.lang.Object)#javax.swing.JComponent,getPane()#javax.swing.JFileChooser,getFileChooser()#javax.swing.JOptionPane,getOptionPane()#int,getOption()#java.lang.Object,getValue()#java.lang.Object,getInputValue()#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.CopyAction#org.jhotdraw.application.action.CopyAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
net.n3.nanoxml.StdXMLReader.StackedReader#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.action.SelectSameAction#org.jhotdraw.draw.action.SelectSameAction,CONSTRUCTOR(org.jhotdraw.draw.DrawingEditor)#void,actionPerformed(java.awt.event.ActionEvent)#void,selectSame()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddyapplication.TeddyView#void,main(java.lang.String[])#org.jhotdraw.samples.teddyapplication.TeddyView,CONSTRUCTOR()#javax.swing.JTextPane,createEditor()#void,init()#void,setEnabled(boolean)#void,setStatusBarVisible(boolean)#boolean,isStatusBarVisible()#void,setLineWrap(boolean)#boolean,isLineWrap()#javax.swing.JFileChooser,getOpenChooser()#javax.swing.JFileChooser,getSaveChooser()#void,read(java.io.File)#void,read(java.io.File,java.lang.String)#void,write(java.io.File)#void,write(java.io.File,java.lang.String,java.lang.String)#void,clear()#javax.swing.text.StyledDocument,createDocument()#javax.swing.text.Document,getDocument()#void,select(int,int)#int,getSelectionStart()#int,getSelectionEnd()#int,getLineCount()#void,replaceRange(java.lang.String,int,int)#int,getLineOfOffset(int)#int,getLineStartOffset(int)#void,fireEdit(javax.swing.undo.UndoableEdit)#void,setLineNumbersVisible(boolean)#boolean,isLineNumbersVisible()#void,#ExtendsOrImplements#()#
org.jhotdraw.gui.MDIDesktopManager#org.jhotdraw.gui.MDIDesktopManager,CONSTRUCTOR(org.jhotdraw.gui.MDIDesktopPane)#void,endResizingFrame(javax.swing.JComponent)#void,endDraggingFrame(javax.swing.JComponent)#void,setNormalSize()#javax.swing.JScrollPane,getScrollPane()#void,resizeDesktop()#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.ChopEllipseConnector#org.jhotdraw.draw.ChopEllipseConnector,CONSTRUCTOR()#org.jhotdraw.draw.ChopEllipseConnector,CONSTRUCTOR(org.jhotdraw.draw.Figure)#java.awt.geom.Point2D.Double,chop(org.jhotdraw.draw.Figure,java.awt.geom.Point2D.Double)#void,#ExtendsOrImplements#()#
org.jhotdraw.draw.AbstractConnectionHandle#org.jhotdraw.draw.AbstractConnectionHandle,CONSTRUCTOR(org.jhotdraw.draw.ConnectionFigure)#org.jhotdraw.draw.ConnectionFigure,getOwner()#boolean,isCombinableWith(org.jhotdraw.draw.Handle)#org.jhotdraw.draw.Connector,getTarget()#void,disconnect()#void,connect(org.jhotdraw.draw.Connector)#void,setLocation(java.awt.geom.Point2D.Double)#java.awt.geom.Point2D.Double,getLocation()#org.jhotdraw.draw.Connector,getSource()#void,trackStart(java.awt.Point,int)#void,trackStep(java.awt.Point,java.awt.Point,int)#void,trackEnd(java.awt.Point,java.awt.Point,int)#boolean,canConnect(org.jhotdraw.draw.Connector,org.jhotdraw.draw.Connector)#org.jhotdraw.draw.Connector,findConnector(java.awt.geom.Point2D.Double,org.jhotdraw.draw.Figure,org.jhotdraw.draw.ConnectionFigure)#void,draw(java.awt.Graphics2D)#void,setPotentialTarget(org.jhotdraw.draw.Connector)#java.awt.Rectangle,basicGetBounds()#org.jhotdraw.draw.BezierFigure,getBezierFigure()#int,getBezierNodeIndex()#java.util.Collection<org.jhotdraw.draw.Handle>,createSecondaryHandles()#org.jhotdraw.geom.BezierPath.Node,getBezierNode()#java.lang.String,getToolTipText(java.awt.Point)#void,repaintConnectors()#void,#ExtendsOrImplements#()#
org.jhotdraw.samples.teddyapplication.TeddyMDIApplication#org.jhotdraw.samples.teddyapplication.TeddyMDIApplication,CONSTRUCTOR()#java.lang.Class,getViewClass()#javax.swing.ActionMap,createActionMap()#java.util.LinkedList<javax.swing.JToolBar>,createToolBars(org.jhotdraw.application.DocumentView)#javax.swing.JMenu,createEditMenu(org.jhotdraw.application.DocumentView)#javax.swing.JMenu,createViewMenu(org.jhotdraw.application.DocumentView)#void,#ExtendsOrImplements#()#
org.jhotdraw.app.action.DeleteAction#org.jhotdraw.app.action.DeleteAction,CONSTRUCTOR()#void,actionPerformed(java.awt.event.ActionEvent)#void,deleteNextChar(java.awt.event.ActionEvent)#void,#ExtendsOrImplements#()#
org.jhotdraw.application.action.SaveAction#org.jhotdraw.application.action.SaveAction,CONSTRUCTOR()#org.jhotdraw.application.action.SaveAction,CONSTRUCTOR(boolean)#void,actionPerformed(java.awt.event.ActionEvent)#void,saveToFile(org.jhotdraw.application.DocumentView,java.io.File)#void,fileSaved(org.jhotdraw.application.DocumentView,java.io.File,java.lang.Object)#void,#ExtendsOrImplements#()#
